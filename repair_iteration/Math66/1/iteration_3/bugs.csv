bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    -    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	155	None	replace
2	[BUG]  [BUGGY]  if(d  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(d  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(d  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    -    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	155	None	replace
3	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    -    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	155	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  x  *  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  x  *  m;	  d    =    m    /    q;    d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    timeout    	compilable	  [FE]  AssertionError  	62	5	replace
5	[BUG]  [BUGGY]  d  =  x  *  m;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  x  *  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  x  *  m;	  d    =    m    /    q;    d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    timeout    	compilable	  [FE]  AssertionError  	62	5	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  m  /  tol1;	  d    =    m    /    q;    d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    timeout    	compilable	  [FE]  AssertionError  	62	5	replace
7	[BUG]  [BUGGY]  d  =  m  /  tol1;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  m  /  tol1;	  d    =    m    /    q;    d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    timeout    	compilable	  [FE]  AssertionError  	62	5	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  t;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  m  *  t;	  d    =    m    /    q;    d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    timeout    	compilable	  [FE]  AssertionError  	62	5	replace
9	[BUG]  [BUGGY]  d  =  m  *  t;  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  t;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  m  *  t;	  d    =    m    /    q;    d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    timeout    	compilable	  [FE]  AssertionError  	62	5	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(r  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(r  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	76	5	replace
11	[BUG]  [BUGGY]  if(r  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(r  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(r  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	76	5	replace
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  %  q;  d  =  d  /  q;  d  =  d  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        d        /        q;        d    =    d    %    q;    d  =  d  /  q;  d  =  d  %  q;	  	compilable	  [FE]  AssertionError  	143	4	add
13	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  %  q;  d  =  d  /  q;  d  =  d  %  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  %  q;  d  =  d  /  q;  d  =  d  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    %    q;    d  =  d  /  q;  d  =  d  %  q;	  	compilable	  [FE]  AssertionError  	143	4	add
14	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  %  q;  int  d  =  d  /  q;  d  =  d  %  q;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  %  q;  int  d  =  d  /  q;  d  =  d  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    %    q;    int  d  =  d  /  q;  d  =  d  %  q;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	143	None	add
15	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  %  q;  d  =  d  /  q;  d  =  d  %  q);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  %  q;  d  =  d  /  q;  d  =  d  %  q);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    %    q;    d  =  d  /  q;  d  =  d  %  q);	  	non-compiled	[CE]  ';'  expected	143	None	add
16	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  %  q;  d  =  d  /  q;  d  =  d  %)  q;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  %  q;  d  =  d  /  q;  d  =  d  %)  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    %    q;    d  =  d  /  q;  d  =  d  %)  q;	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  tol1  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    tol1    +    d;    }    d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  tol1  +  d;  }	  	compilable	  [FE]  AssertionError  	196	4	add
18	[BUG]  [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  tol1  +  d;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  tol1  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    tol1    +    d;    }    d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  tol1  +  d;  }	  	compilable	  [FE]  AssertionError  	196	4	add
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }  d  =  q  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    tol1    +    d;    }    d  =  q  /  p;	  	compilable	  [FE]  AssertionError  	196	4	add
20	[BUG]  [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }  d  =  q  /  p;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }  d  =  q  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    tol1    +    d;    }    d  =  q  /  p;	  	compilable	  [FE]  AssertionError  	196	4	add
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  tol1  +  d;  }  else  {  d  =  tol1  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    tol1    +    d;    }    d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  tol1  +  d;  }  else  {  d  =  tol1  +  d;  }	  	compilable	  [FE]  AssertionError  	196	4	add
22	[BUG]  [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  tol1  +  d;  }  else  {  d  =  tol1  +  d;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  tol1  +  d;  }  else  {  d  =  tol1  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    tol1    +    d;    }    d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  tol1  +  d;  }  else  {  d  =  tol1  +  d;  }	  	compilable	  [FE]  AssertionError  	196	4	add
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  tol1  +  d;  }  else  {  d  =  tol2  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    tol1    +    d;    }    d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  tol1  +  d;  }  else  {  d  =  tol2  +  d;  }	  	compilable	  [FE]  AssertionError  	196	4	add
24	[BUG]  [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  tol1  +  d;  }  else  {  d  =  tol2  +  d;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  tol1  +  d;  }  else  {  d  =  tol2  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    tol1    +    d;    }    d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  tol1  +  d;  }  else  {  d  =  tol2  +  d;  }	  	compilable	  [FE]  AssertionError  	196	4	add
25	[BUG]  [BUGGY]  If(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  If(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	If(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    If(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	non-compiled	[CE]  ';'  expected	78	None	replace
26	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  *  q  +  1;	  d    =    p    *    q;    d    =    p    *    q;    	compilable	  [FE]  AssertionError  	41	5	replace
27	[BUG]  [BUGGY]  d  =  p  *  q  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  q  +  1;	  d    =    p    *    q;    d    =    p    *    q;    	compilable	  [FE]  AssertionError  	41	5	replace
28	[BUG]  [BUGGY]  d  =  p  *  l;  [CE]  cannot  find  symbol  l  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  l;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  l;	  d    =    p    *    q;    d    =    p    *    q;    	non-compiled	[CE]  cannot  find  symbol  l	41	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  p  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    p    /    p;    }    d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  p  /  p;  }	  	compilable	  [FE]  AssertionError  	193	4	add
30	[BUG]  [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  p  /  p;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  p  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    p    /    p;    }    d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  p  /  p;  }	  	compilable	  [FE]  AssertionError  	193	4	add
31	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  p  /  p;  }  else  {  d  =  p  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    p    /    p;    }    d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  p  /  p;  }  else  {  d  =  p  /  p;  }	  	compilable	  [FE]  AssertionError  	193	4	add
32	[BUG]  [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  p  /  p;  }  else  {  d  =  p  /  p;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  p  /  p;  }  else  {  d  =  p  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    p    /    p;    }    d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  p  /  p;  }  else  {  d  =  p  /  p;  }	  	compilable	  [FE]  AssertionError  	193	4	add
33	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  d  =  q  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    p    /    p;    }    d  =  q  /  p;	  	compilable	  [FE]  AssertionError  	193	4	add
34	[BUG]  [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  d  =  q  /  p;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  d  =  q  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    p    /    p;    }    d  =  q  /  p;	  	compilable	  [FE]  AssertionError  	193	4	add
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  a  /  r;	  d    =    a    /    q;    	compilable	  [FE]  AssertionError  	123	5	replace
36	[BUG]  [BUGGY]  d  =  a  /  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  a  /  r;	  d    =    a    /    q;    	compilable	  [FE]  AssertionError  	123	5	replace
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  a  *  q;	  d    =    a    /    q;    	compilable	  [FE]  AssertionError  	123	5	replace
38	[BUG]  [BUGGY]  d  =  a  *  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  a  *  q;	  d    =    a    /    q;    	compilable	  [FE]  AssertionError  	123	5	replace
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  q  /  a;	  d    =    a    /    q;    	compilable	  [FE]  AssertionError  	123	5	replace
40	[BUG]  [BUGGY]  d  =  q  /  a;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  q  /  a;	  d    =    a    /    q;    	compilable	  [FE]  AssertionError  	123	5	replace
41	[BUG]  [BUGGY]  if(p  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	replace
42	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  m)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  m)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  m)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
43	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  *  p;	  d    =    q    /    p;    if    (q    /    p    >    a)    {    if(x    >    a)    {    d    =    q    /    p;    }    	compilable	  [FE]  AssertionError  	195	5	replace
44	[BUG]  [BUGGY]  d  =  d  *  p;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  *  p;	  d    =    q    /    p;    if    (q    /    p    >    a)    {    if(x    >    a)    {    d    =    q    /    p;    }    	compilable	  [FE]  AssertionError  	195	5	replace
45	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  x;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  r  *  x;	  d    =    r    /    q;    d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    y)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	compilable	  [FE]  AssertionError  	32	5	replace
46	[BUG]  [BUGGY]  d  =  r  *  x;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  x;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  r  *  x;	  d    =    r    /    q;    d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    y)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	compilable	  [FE]  AssertionError  	32	5	replace
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  x  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  x  /  r;	  d    =    r    /    q;    d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    y)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	compilable	  [FE]  AssertionError  	32	5	replace
48	[BUG]  [BUGGY]  d  =  x  /  r;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  x  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  x  /  r;	  d    =    r    /    q;    d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    y)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	compilable	  [FE]  AssertionError  	32	5	replace
49	[BUG]  [BUGGY]  if(p  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	replace
50	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
51	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  =  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  =  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  =  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    =    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
52	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  d  <  =  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  d  <  =  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  d  <  =  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    =    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
53	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  =  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  =  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  =  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    =    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
54	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  d)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  d)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  d)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    -    d)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	156	None	replace
55	[BUG]  [BUGGY]  if(d  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(d  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(d  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  p)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    -    d)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	156	None	replace
56	[BUG]  [BUGGY]  if(p  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  d)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  d)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  d)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    -    d)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	156	None	replace
57	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  %  q;	  d    =    d    /    q;    d    =    d    %    q;    	compilable	  [FE]  AssertionError  	144	5	replace
58	[BUG]  [BUGGY]  d  =  d  %  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  %  q;	  d    =    d    /    q;    d    =    d    %    q;    	compilable	  [FE]  AssertionError  	144	5	replace
59	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  r  +  1;  d  =  p  /  r  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    /    r    +    1;    d  =  p  /  r  +  1;	  	compilable	  [FE]  AssertionError  	19	4	add
60	[BUG]  [BUGGY]  d  =  p  /  r  +  1;  d  =  p  /  r  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  r  +  1;  d  =  p  /  r  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r    +    1;    d  =  p  /  r  +  1;	  	compilable	  [FE]  AssertionError  	19	4	add
61	[BUG]  [BUGGY]  d  =  p  /  r  +  1;  d  =  p  /  r  +  1;  }  else  if(i  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  cannot  find  symbol  i  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  r  +  1;  d  =  p  /  r  +  1;  }  else  if(i  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r    +    1;    d  =  p  /  r  +  1;  }  else  if(i  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  cannot  find  symbol  i	19	None	add
62	[BUG]  [BUGGY]  d  =  p  /  r  +  1;  d  =  p  /  r  +  1;  }  else  if(i  >  a  &&  p  <  q  *  (b  -  x)&&  p  <  Math.abs(0.5  *  q  *  r))  {  [CE]  cannot  find  symbol  i  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  r  +  1;  d  =  p  /  r  +  1;  }  else  if(i  >  a  &&  p  <  q  *  (b  -  x)&&  p  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r    +    1;    d  =  p  /  r  +  1;  }  else  if(i  >  a  &&  p  <  q  *  (b  -  x)&&  p  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  cannot  find  symbol  i	19	None	add
63	[BUG]  [BUGGY]  d  =  p  /  r  +  1;  d  =  p  /  r  +  1;  }  else  if(i  >  a  &&  p  <  q  *  (b  -  x)&&  p  <  0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  r  +  1;  d  =  p  /  r  +  1;  }  else  if(i  >  a  &&  p  <  q  *  (b  -  x)&&  p  <  0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r    +    1;    d  =  p  /  r  +  1;  }  else  if(i  >  a  &&  p  <  q  *  (b  -  x)&&  p  <  0.5  *  q  *  r))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
64	[BUG]  [BUGGY]  d  =  p  /  r  +  1;  d  =  p  /  r  +  1;  }  else  if(i  >  a  &&  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  cannot  find  symbol  i  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  r  +  1;  d  =  p  /  r  +  1;  }  else  if(i  >  a  &&  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r    +    1;    d  =  p  /  r  +  1;  }  else  if(i  >  a  &&  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  cannot  find  symbol  i	19	None	add
65	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  r;  d  =  d  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    r;    d  =  d  /  r;	  	compilable	  [FE]  AssertionError  	94	4	add
66	[BUG]  [BUGGY]  d  =  d  /  r;  d  =  d  /  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  r;  d  =  d  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    r;    d  =  d  /  r;	  	compilable	  [FE]  AssertionError  	94	4	add
67	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  r;  d  =  d  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    r;    d  =  d  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	94	6	add
68	[BUG]  [BUGGY]  d  =  d  /  r;  d  =  d  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  r;  d  =  d  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    r;    d  =  d  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	94	6	add
69	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  r;  d  =  d  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    r;    d  =  d  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	94	6	add
70	[BUG]  [BUGGY]  d  =  d  /  r;  d  =  d  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  r;  d  =  d  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    r;    d  =  d  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	94	6	add
71	[BUG]  [BUGGY]  d  =  d  /  r;  d  =  d  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  y)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  cannot  find  symbol  y  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  r;  d  =  d  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  y)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    r;    d  =  d  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  y)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  cannot  find  symbol  y	94	None	add
72	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  r;  d  =  d  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    r;    d  =  d  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	94	6	add
73	[BUG]  [BUGGY]  d  =  d  /  r;  d  =  d  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  r;  d  =  d  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    r;    d  =  d  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	94	6	add
74	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  d  =  r  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    r    *    q;    d  =  r  *  q;	  	compilable	  [FE]  AssertionError  	26	4	add
75	[BUG]  [BUGGY]  d  =  r  *  q;  d  =  r  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  d  =  r  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    *    q;    d  =  r  *  q;	  	compilable	  [FE]  AssertionError  	26	4	add
76	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  d  =  r  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    r    *    q;    d  =  r  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	26	5	add
77	[BUG]  [BUGGY]  d  =  r  *  q;  d  =  r  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  d  =  r  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    *    q;    d  =  r  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	26	5	add
78	[BUG]  [BUGGY]  d  =  r  *  q;  d  =  r  *  q;  }  else  if(p  >  a  *  (l  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  cannot  find  symbol  l  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  d  =  r  *  q;  }  else  if(p  >  a  *  (l  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    *    q;    d  =  r  *  q;  }  else  if(p  >  a  *  (l  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  cannot  find  symbol  l	26	None	add
79	[BUG]  [BUGGY]  d  =  r  *  q;  d  =  r  *  q;  }  else  if(p  >  a  *  (l  lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  d  =  r  *  q;  }  else  if(p  >  a  *  (l  lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    *    q;    d  =  r  *  q;  }  else  if(p  >  a  *  (l  lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  ')'  expected	26	None	add
80	[BUG]  [BUGGY]  d  =  r  *  q;  d  =  r  *  q;  }  else  if(p  >  a  *  (l  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  [CE]  cannot  find  symbol  l  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  d  =  r  *  q;  }  else  if(p  >  a  *  (l  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    *    q;    d  =  r  *  q;  }  else  if(p  >  a  *  (l  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {	  	non-compiled	[CE]  cannot  find  symbol  l	26	None	add
81	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    1)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	190	5	replace
82	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    1)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	190	5	replace
83	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    1)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	190	5	replace
84	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    1)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	190	5	replace
85	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  1)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    1)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	190	5	replace
86	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  1)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    1)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	190	5	replace
87	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(b    -    x)&&    p    <    a    *(lo    -    x)&&    Math.abs(p    -    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	140	None	replace
88	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(b    -    x)&&    p    <    a    *(lo    -    x)&&    Math.abs(p    -    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	140	None	replace
89	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  <  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	72	5	replace
90	[BUG]  [BUGGY]  if(x  <  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	72	5	replace
91	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(p  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	72	5	replace
92	[BUG]  [BUGGY]  if(p  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	72	5	replace
93	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  >=  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	72	5	replace
94	[BUG]  [BUGGY]  if(x  >=  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	72	5	replace
95	[BUG]  [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  <  r  *  (b  -  x)&&  Math.abs(m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  <  r  *  (b  -  x)&&  Math.abs(m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  ||  p  <  a  ||  p  <  r  *  (b  -  x)&&  Math.abs(m)  <  Math.abs(0.5  *  q  *  r))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)&&    Math.abs(m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
96	[BUG]  [BUGGY]  if(x  <  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(m)  <  Math.abs(0.5  *  q  *  r))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)&&    Math.abs(m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
97	[BUG]  [BUGGY]  if(p  >=  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >=  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >=  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >=    a    *(l    lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ')'  expected	152	None	replace
98	[BUG]  [BUGGY]  if(p  >=  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >=  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >=  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >=    a    *(l    lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	152	None	replace
99	[BUG]  [BUGGY]  if(x  >=  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >=    a    *(l    lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	152	None	replace
100	[BUG]  [BUGGY]  d  =  d  /  p;  dev  =  d  /  q;  [CE]  cannot  find  symbol  dev  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  p;  dev  =  d  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  p;  dev  =  d  /  q;	  d    =    d    /    q;    dev    =    d    /    q;    	non-compiled	[CE]  cannot  find  symbol  dev	145	None	replace
101	[BUG]  [BUGGY]  d  =  d  /  r;  dev  =  d  /  q;  [CE]  cannot  find  symbol  dev  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  r;  dev  =  d  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  r;  dev  =  d  /  q;	  d    =    d    /    q;    dev    =    d    /    q;    	non-compiled	[CE]  cannot  find  symbol  dev	145	None	replace
102	[BUG]  [BUGGY]  d  =  d  /  m;  dev  =  d  /  q;  [CE]  cannot  find  symbol  dev  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  m;  dev  =  d  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  m;  dev  =  d  /  q;	  d    =    d    /    q;    dev    =    d    /    q;    	non-compiled	[CE]  cannot  find  symbol  dev	145	None	replace
103	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  q  %  p;  d  =  q  /  p;  d  =  q  %  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        d    =    q    %    p;    d  =  q  /  p;  d  =  q  %  p;	  	compilable	  [FE]  AssertionError  	132	4	add
104	[BUG]  [BUGGY]  d    =    q    /    p;    d  =  q  %  p;  d  =  q  /  p;  d  =  q  %  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  q  %  p;  d  =  q  /  p;  d  =  q  %  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        d    =    q    %    p;    d  =  q  /  p;  d  =  q  %  p;	  	compilable	  [FE]  AssertionError  	132	4	add
105	[BUG]  [BUGGY]  d    =    q    /    p;    d  =  q  %  p;  d  =  q  /  p;  d  =  q  %  p  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  q  %  p;  d  =  q  /  p;  d  =  q  %  p  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        d    =    q    %    p;    d  =  q  /  p;  d  =  q  %  p	  	non-compiled	[CE]  ';'  expected	132	None	add
106	[BUG]  [BUGGY]  d    =    q    /    p;    d  =  q  %  p;  int  d  =  q  /  p;  d  =  q  %  p;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  q  %  p;  int  d  =  q  /  p;  d  =  q  %  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        d    =    q    %    p;    int  d  =  q  /  p;  d  =  q  %  p;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	132	None	add
107	[BUG]  [BUGGY]  d    =    q    /    p;    d  =  q  %  p;  d  =  q  /  p;  d  =  q  %  p);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  q  %  p;  d  =  q  /  p;  d  =  q  %  p);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        d    =    q    %    p;    d  =  q  /  p;  d  =  q  %  p);	  	non-compiled	[CE]  ';'  expected	132	None	add
108	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  d  =  m  /  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        m        /        q;        d    =    m    /    q;    d  =  m  /  q;  d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	56	4	add
109	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  d  =  m  /  q;  d  =  m  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  d  =  m  /  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q;    d  =  m  /  q;  d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	56	4	add
110	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  d  =  m  *  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        m        /        q;        d    =    m    /    q;    d  =  m  *  q;  d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	56	4	add
111	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  d  =  m  *  q;  d  =  m  /  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  d  =  m  *  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q;    d  =  m  *  q;  d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	56	4	add
112	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  d  =  a  /  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        m        /        q;        d    =    m    /    q;    d  =  a  /  q;  d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	56	4	add
113	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  d  =  a  /  q;  d  =  m  /  q;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  d  =  a  /  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q;    d  =  a  /  q;  d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	56	4	add
114	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  d  =  p  /  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        m        /        q;        d    =    m    /    q;    d  =  p  /  q;  d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	56	4	add
115	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  d  =  p  /  q;  d  =  m  /  q;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  d  =  p  /  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q;    d  =  p  /  q;  d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	56	4	add
116	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  r;  d  =  q  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    /    r;    d  =  q  /  r;	  	compilable	  [FE]  AssertionError  	107	4	add
117	[BUG]  [BUGGY]  d  =  q  /  r;  d  =  q  /  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  r;  d  =  q  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    r;    d  =  q  /  r;	  	compilable	  [FE]  AssertionError  	107	4	add
118	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  r;  d  =  q  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    /    r;    d  =  q  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	107	5	add
119	[BUG]  [BUGGY]  d  =  q  /  r;  d  =  q  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  r;  d  =  q  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    r;    d  =  q  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	107	5	add
120	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  r;  d  =  q  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    /    r;    d  =  q  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	107	5	add
121	[BUG]  [BUGGY]  d  =  q  /  r;  d  =  q  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  r;  d  =  q  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    r;    d  =  q  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	107	5	add
122	[BUG]  [BUGGY]  d  =  q  /  r;  d  =  q  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  y)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  cannot  find  symbol  y  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  r;  d  =  q  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  y)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    r;    d  =  q  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  y)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  cannot  find  symbol  y	107	None	add
123	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  r;  d  =  q  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    /    r;    d  =  q  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	107	5	add
124	[BUG]  [BUGGY]  d  =  q  /  r;  d  =  q  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  r;  d  =  q  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    r;    d  =  q  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	107	5	add
125	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2;  d  =  d  /  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    2;    d  =  d  /  2;	  	compilable	  [FE]  AssertionError  	98	4	add
126	[BUG]  [BUGGY]  d  =  d  /  2;  d  =  d  /  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2;  d  =  d  /  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    2;    d  =  d  /  2;	  	compilable	  [FE]  AssertionError  	98	4	add
127	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2;  d  =  d  /  2;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    2;    d  =  d  /  2;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	98	4	add
128	[BUG]  [BUGGY]  d  =  d  /  2;  d  =  d  /  2;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2;  d  =  d  /  2;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    2;    d  =  d  /  2;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	98	4	add
129	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2;  d  =  d  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    2;    d  =  d  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	98	4	add
130	[BUG]  [BUGGY]  d  =  d  /  2;  d  =  d  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2;  d  =  d  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    2;    d  =  d  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	98	4	add
131	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2;  d  =  d  /  2;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  +  d)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    2;    d  =  d  /  2;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  +  d)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	98	4	add
132	[BUG]  [BUGGY]  d  =  d  /  2;  d  =  d  /  2;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  +  d)  <  Math.abs(0.5  *  q  *  r))  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2;  d  =  d  /  2;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  +  d)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    2;    d  =  d  /  2;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  +  d)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	98	4	add
133	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2;  d  =  d  /  2;  }  else  if(x  >  a  *  (lo  -  x)||  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    2;    d  =  d  /  2;  }  else  if(x  >  a  *  (lo  -  x)||  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	98	7	add
134	[BUG]  [BUGGY]  d  =  d  /  2;  d  =  d  /  2;  }  else  if(x  >  a  *  (lo  -  x)||  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2;  d  =  d  /  2;  }  else  if(x  >  a  *  (lo  -  x)||  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    2;    d  =  d  /  2;  }  else  if(x  >  a  *  (lo  -  x)||  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	98	7	add
135	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  *  r;	  d    =    d    *    q;    	compilable	  [FE]  AssertionError  	97	5	replace
136	[BUG]  [BUGGY]  d  =  d  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  *  r;	  d    =    d    *    q;    	compilable	  [FE]  AssertionError  	97	5	replace
137	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  *  q  +  1;	  d    =    d    *    q;    	compilable	  [FE]  AssertionError  	97	5	replace
138	[BUG]  [BUGGY]  d  =  d  *  q  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  *  q  +  1;	  d    =    d    *    q;    	compilable	  [FE]  AssertionError  	97	5	replace
139	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  x  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  x  *  r;	  d    =    r    /    q;    d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    timeout    	compilable	  [FE]  AssertionError  	36	5	replace
140	[BUG]  [BUGGY]  d  =  x  *  r;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  x  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  x  *  r;	  d    =    r    /    q;    d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    timeout    	compilable	  [FE]  AssertionError  	36	5	replace
141	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        if    (r    /    q    >    a)    {    d    =    r    /    q;    }    d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }	  	compilable	  [FE]  AssertionError  	202	4	add
142	[BUG]  [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        if    (r    /    q    >    a)    {    d    =    r    /    q;    }    d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }	  	compilable	  [FE]  AssertionError  	202	4	add
143	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        if    (r    /    q    >    a)    {    d    =    r    /    q;    }    if  (r  /  q  >  a)  {  d  =  r  /  q;  }	  	compilable	  [FE]  AssertionError  	202	4	add
144	[BUG]  [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        if    (r    /    q    >    a)    {    d    =    r    /    q;    }    if  (r  /  q  >  a)  {  d  =  r  /  q;  }	  	compilable	  [FE]  AssertionError  	202	4	add
145	[BUG]  [BUGGY]  int  d  =  r  /  q;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  r  /  q;	  d    =    r    /    q;    int    d    =    r    /    q;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	146	None	replace
146	[BUG]  [BUGGY]  int  d  =  r  *  q;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  r  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  r  *  q;	  d    =    r    /    q;    int    d    =    r    /    q;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	146	None	replace
147	[BUG]  [BUGGY]  int  d  =  p  /  q;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  p  /  q;	  d    =    r    /    q;    int    d    =    r    /    q;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	146	None	replace
148	[BUG]  [BUGGY]  int  d  =  r  /  q  +  1;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  r  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  r  /  q  +  1;	  d    =    r    /    q;    int    d    =    r    /    q;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	146	None	replace
149	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  w  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  w  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  w  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    b    *(w    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	38	None	replace
150	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  p;  d  =  d  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    p;    d  =  d  /  p;	  	compilable	  [FE]  AssertionError  	13	4	add
151	[BUG]  [BUGGY]  d  =  d  /  p;  d  =  d  /  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  p;  d  =  d  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    p;    d  =  d  /  p;	  	compilable	  [FE]  AssertionError  	13	4	add
152	[BUG]  [BUGGY]  d  =  d  /  p;  d  =  d  /  p;  }  else  if(isMinim)  {  d  =  d  /  p;  }  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  p;  d  =  d  /  p;  }  else  if(isMinim)  {  d  =  d  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    p;    d  =  d  /  p;  }  else  if(isMinim)  {  d  =  d  /  p;  }	  	non-compiled	[CE]  'else'  without  'if'	13	None	add
153	[BUG]  [BUGGY]  d  =  d  /  p;  d  =  d  /  p;  }  else  if(x  >  a)  {  d  =  d  /  p;  }  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  p;  d  =  d  /  p;  }  else  if(x  >  a)  {  d  =  d  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    p;    d  =  d  /  p;  }  else  if(x  >  a)  {  d  =  d  /  p;  }	  	non-compiled	[CE]  'else'  without  'if'	13	None	add
154	[BUG]  [BUGGY]  d  =  d  /  p;  d  =  d  /  p;  }  else  if(l  >  a)  {  d  =  d  /  p;  }  [CE]  'else'  without  'if'  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  p;  d  =  d  /  p;  }  else  if(l  >  a)  {  d  =  d  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    p;    d  =  d  /  p;  }  else  if(l  >  a)  {  d  =  d  /  p;  }	  	non-compiled	[CE]  'else'  without  'if'	13	None	add
155	[BUG]  [BUGGY]  d  =  d  /  p;  d  =  d  /  p;  }  else  if(isMinim)  {  d  =  tol1  /  p;  }  [CE]  'else'  without  'if'  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  p;  d  =  d  /  p;  }  else  if(isMinim)  {  d  =  tol1  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    p;    d  =  d  /  p;  }  else  if(isMinim)  {  d  =  tol1  /  p;  }	  	non-compiled	[CE]  'else'  without  'if'	13	None	add
156	[BUG]  [BUGGY]  if(r  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(r  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(r  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	77	None	replace
157	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	77	None	replace
158	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  q  *  r;	  d    =    r    *    q;    	compilable	  [FE]  AssertionError  	27	5	replace
159	[BUG]  [BUGGY]  d  =  q  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  q  *  r;	  d    =    r    *    q;    	compilable	  [FE]  AssertionError  	27	5	replace
160	[BUG]  [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	66	None	replace
161	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  m  *  r;	  d    =    m    /    q;    d    =    m    *    q;    	compilable	  [FE]  AssertionError  	106	4	replace
162	[BUG]  [BUGGY]  d  =  m  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  m  *  r;	  d    =    m    /    q;    d    =    m    *    q;    	compilable	  [FE]  AssertionError  	106	4	replace
163	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p    -    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	183	None	replace
164	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p    -    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	183	None	replace
165	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  b  *(t  -  x)&&  Math.abs(p  -  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  b  *(t  -  x)&&  Math.abs(p  -  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  b  *(t  -  x)&&  Math.abs(p  -  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p    -    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	183	None	replace
166	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol1  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  tol1  +  d;	  d    =    q    /    p;    if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    tol1    +    d;    }    	compilable	  [FE]  AssertionError  	197	5	replace
167	[BUG]  [BUGGY]  d  =  tol1  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol1  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  tol1  +  d;	  d    =    q    /    p;    if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    tol1    +    d;    }    	compilable	  [FE]  AssertionError  	197	5	replace
168	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol1  +  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  tol1  +  p;	  d    =    q    /    p;    if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    tol1    +    d;    }    	compilable	  [FE]  AssertionError  	197	5	replace
169	[BUG]  [BUGGY]  d  =  tol1  +  p;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol1  +  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  tol1  +  p;	  d    =    q    /    p;    if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    tol1    +    d;    }    	compilable	  [FE]  AssertionError  	197	5	replace
170	[BUG]  [BUGGY]  timeout  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol2  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  tol2  +  d;	  d    =    q    /    p;    if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    tol1    +    d;    }    	compilable	timeout	197	1	replace
171	[BUG]  [BUGGY]  d  =  tol2  +  d;  timeout  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol2  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  tol2  +  d;	  d    =    q    /    p;    if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    tol1    +    d;    }    	compilable	timeout	197	1	replace
172	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol1  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  tol1  *  p;	  d    =    q    /    p;    if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    tol1    +    d;    }    	compilable	  [FE]  AssertionError  	197	4	replace
173	[BUG]  [BUGGY]  d  =  tol1  *  p;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol1  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  tol1  *  p;	  d    =    q    /    p;    if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    tol1    +    d;    }    	compilable	  [FE]  AssertionError  	197	4	replace
174	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	                if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	167	4	add
175	[BUG]  [BUGGY]          if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	167	4	add
176	[BUG]  [BUGGY]          if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	167	None	add
177	[BUG]  [BUGGY]          if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  If(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  If(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    If(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  ';'  expected	167	None	add
178	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  d))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	                if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  d))  {  }	  	compilable	  [FE]  AssertionError  	167	4	add
179	[BUG]  [BUGGY]          if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  d))  {  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  d))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  d))  {  }	  	compilable	  [FE]  AssertionError  	167	4	add
180	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  m;	  d    =    p    /    r;    d    =    p    /    r;    }    else    if(isMinim)    {    d    =    p    /    r;    }    	compilable	  [FE]  AssertionError  	81	5	replace
181	[BUG]  [BUGGY]  d  =  p  /  m;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  m;	  d    =    p    /    r;    d    =    p    /    r;    }    else    if(isMinim)    {    d    =    p    /    r;    }    	compilable	  [FE]  AssertionError  	81	5	replace
182	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  d;  d  =  p  *  q;  d  =  p  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        *        q;        d    =    p    *    q    +    d;    d  =  p  *  q;  d  =  p  *  q  +  d;	  	compilable	  [FE]  AssertionError  	111	4	add
183	[BUG]  [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  d;  d  =  p  *  q;  d  =  p  *  q  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  d;  d  =  p  *  q;  d  =  p  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        d    =    p    *    q    +    d;    d  =  p  *  q;  d  =  p  *  q  +  d;	  	compilable	  [FE]  AssertionError  	111	4	add
184	[BUG]  [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  d;  int  d  =  p  *  q;  d  =  p  *  q  +  d;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  d;  int  d  =  p  *  q;  d  =  p  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        d    =    p    *    q    +    d;    int  d  =  p  *  q;  d  =  p  *  q  +  d;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	111	None	add
185	[BUG]  [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  d;  d  =  p  *  q;  d  =  p  *  q  +  d);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  d;  d  =  p  *  q;  d  =  p  *  q  +  d);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        d    =    p    *    q    +    d;    d  =  p  *  q;  d  =  p  *  q  +  d);	  	non-compiled	[CE]  ';'  expected	111	None	add
186	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  /  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  /  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  /  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p    +    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	65	None	replace
187	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p    +    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	65	None	replace
188	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  p;	  d    =    q    /    p;    d    =    q    /    p;    }    else    if(isMinim)    {    d    =    q    /    p;    }    	compilable	  [FE]  AssertionError  	52	5	replace
189	[BUG]  [BUGGY]  d  =  p  /  p;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  p;	  d    =    q    /    p;    d    =    q    /    p;    }    else    if(isMinim)    {    d    =    q    /    p;    }    	compilable	  [FE]  AssertionError  	52	5	replace
190	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  *  r  +  d;	  d    =    p    *    q;    d    =    p    *    q    +    d;    	compilable	  [FE]  AssertionError  	112	6	replace
191	[BUG]  [BUGGY]  d  =  p  *  r  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  r  +  d;	  d    =    p    *    q;    d    =    p    *    q    +    d;    	compilable	  [FE]  AssertionError  	112	6	replace
192	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  q  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  *  q  *  r;	  d    =    p    *    q;    d    =    p    *    q    +    d;    	compilable	  [FE]  AssertionError  	112	5	replace
193	[BUG]  [BUGGY]  d  =  p  *  q  *  r;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  q  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  q  *  r;	  d    =    p    *    q;    d    =    p    *    q    +    d;    	compilable	  [FE]  AssertionError  	112	5	replace
194	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  *  q  +  d;	  d    =    p    *    q;    d    =    p    *    q    +    d;    	compilable	  [FE]  AssertionError  	112	5	replace
195	[BUG]  [BUGGY]  d  =  p  *  q  +  d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  q  +  d;	  d    =    p    *    q;    d    =    p    *    q    +    d;    	compilable	  [FE]  AssertionError  	112	5	replace
196	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }	  d    =    q    /    p;    if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    p    /    p;    }    	compilable	  [FE]  AssertionError  	194	5	replace
197	[BUG]  [BUGGY]  if(p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }	  d    =    q    /    p;    if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    p    /    p;    }    	compilable	  [FE]  AssertionError  	194	5	replace
198	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a)  {  d  =  p  /  p;  }  else  {  d  =  p  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(p  >  a)  {  d  =  p  /  p;  }  else  {  d  =  p  /  p;  }	  d    =    q    /    p;    if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    p    /    p;    }    	compilable	  [FE]  AssertionError  	194	5	replace
199	[BUG]  [BUGGY]  if(p  >  a)  {  d  =  p  /  p;  }  else  {  d  =  p  /  p;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a)  {  d  =  p  /  p;  }  else  {  d  =  p  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a)  {  d  =  p  /  p;  }  else  {  d  =  p  /  p;  }	  d    =    q    /    p;    if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    p    /    p;    }    	compilable	  [FE]  AssertionError  	194	5	replace
200	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a)  {  d  =  q  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(p  >  a)  {  d  =  q  /  p;  }	  d    =    q    /    p;    if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    p    /    p;    }    	compilable	  [FE]  AssertionError  	194	5	replace
201	[BUG]  [BUGGY]  if(p  >  a)  {  d  =  q  /  p;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a)  {  d  =  q  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a)  {  d  =  q  /  p;  }	  d    =    q    /    p;    if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    p    /    p;    }    	compilable	  [FE]  AssertionError  	194	5	replace
202	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
203	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
204	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r;  d  =  p  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    *    r;    d  =  p  *  r;	  	compilable	  [FE]  AssertionError  	17	4	add
205	[BUG]  [BUGGY]  d  =  p  *  r;  d  =  p  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r;  d  =  p  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    *    r;    d  =  p  *  r;	  	compilable	  [FE]  AssertionError  	17	4	add
206	[BUG]  [BUGGY]  d  =  p  *  r;  d  =  p  *  r;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  p  *  r;  }  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r;  d  =  p  *  r;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  p  *  r;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    *    r;    d  =  p  *  r;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  p  *  r;  }	  	non-compiled	[CE]  'else'  without  'if'	17	None	add
207	[BUG]  [BUGGY]  d  =  p  *  r;  d  =  p  *  r;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  tol1;  }  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r;  d  =  p  *  r;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  tol1;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    *    r;    d  =  p  *  r;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  tol1;  }	  	non-compiled	[CE]  'else'  without  'if'	17	None	add
208	[BUG]  [BUGGY]  d  =  p  *  r;  d  =  p  *  r;  }  else  if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  tol1;  }  [CE]  'else'  without  'if'  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r;  d  =  p  *  r;  }  else  if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  tol1;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    *    r;    d  =  p  *  r;  }  else  if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  tol1;  }	  	non-compiled	[CE]  'else'  without  'if'	17	None	add
209	[BUG]  [BUGGY]  d  =  p  *  r;  d  =  p  *  r;  }  else  if(i  >  a  -  x)  {  d  =  p  *  r;  }  [CE]  'else'  without  'if'  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r;  d  =  p  *  r;  }  else  if(i  >  a  -  x)  {  d  =  p  *  r;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    *    r;    d  =  p  *  r;  }  else  if(i  >  a  -  x)  {  d  =  p  *  r;  }	  	non-compiled	[CE]  'else'  without  'if'	17	None	add
210	[BUG]  [BUGGY]  if(p  >  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(l    lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	replace
211	[BUG]  [BUGGY]  if(p  <  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  <  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  <  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(l    lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	replace
212	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }	  	compilable	  [FE]  AssertionError  	191	4	add
213	[BUG]  [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }	  	compilable	  [FE]  AssertionError  	191	4	add
214	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    if  (q  /  p  >  a)  {  d  =  q  /  p;  }	  	compilable	  [FE]  AssertionError  	191	4	add
215	[BUG]  [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    if  (q  /  p  >  a)  {  d  =  q  /  p;  }	  	compilable	  [FE]  AssertionError  	191	4	add
216	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q  +  d;  d  =  m  /  q;  d  =  m  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        m        /        q;        d    =    m    /    q    +    d;    d  =  m  /  q;  d  =  m  /  q  +  d;	  	compilable	  [FE]  AssertionError  	103	4	add
217	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q  +  d;  d  =  m  /  q;  d  =  m  /  q  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q  +  d;  d  =  m  /  q;  d  =  m  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q    +    d;    d  =  m  /  q;  d  =  m  /  q  +  d;	  	compilable	  [FE]  AssertionError  	103	4	add
218	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q  +  d;  d  =  m  *  q;  d  =  m  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        m        /        q;        d    =    m    /    q    +    d;    d  =  m  *  q;  d  =  m  /  q  +  d;	  	compilable	  [FE]  AssertionError  	103	4	add
219	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q  +  d;  d  =  m  *  q;  d  =  m  /  q  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q  +  d;  d  =  m  *  q;  d  =  m  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q    +    d;    d  =  m  *  q;  d  =  m  /  q  +  d;	  	compilable	  [FE]  AssertionError  	103	4	add
220	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q  +  d;  d  =  m  /  q;  d  =  m  /  q  +  d);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q  +  d;  d  =  m  /  q;  d  =  m  /  q  +  d);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q    +    d;    d  =  m  /  q;  d  =  m  /  q  +  d);	  	non-compiled	[CE]  ';'  expected	103	None	add
221	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q  +  d;  d  =  m  /  q;  d  =  m  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        m        /        q;        d    =    m    /    q    +    d;    d  =  m  /  q;  d  =  m  *  q  +  d;	  	compilable	  [FE]  AssertionError  	103	4	add
222	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q  +  d;  d  =  m  /  q;  d  =  m  *  q  +  d;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q  +  d;  d  =  m  /  q;  d  =  m  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q    +    d;    d  =  m  /  q;  d  =  m  *  q  +  d;	  	compilable	  [FE]  AssertionError  	103	4	add
223	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  r  *  p;	  d    =    r    /    p;    	compilable	  [FE]  AssertionError  	12	5	replace
224	[BUG]  [BUGGY]  d  =  r  *  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  r  *  p;	  d    =    r    /    p;    	compilable	  [FE]  AssertionError  	12	5	replace
225	[BUG]  [BUGGY]  if(p  <  a  *(lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  <  a  *(lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  <  a  *(lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
226	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
227	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  b  *(t  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  b  *(t  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  b  *(t  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
228	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
229	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  =  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  =  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  =  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    =    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
230	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  =  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  =  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(lo  -  x)&&  p  <  =  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    =    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
231	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    r)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
232	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  r)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  r)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  r)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    r)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
233	[BUG]  [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  <  r  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  tol  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  <  r  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  tol  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  ||  p  <  a  ||  p  <  r  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  tol  *  r))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    tol    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
234	[BUG]  [BUGGY]  if(x  <  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  tol  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  tol  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  tol  *  r))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    tol    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
235	[BUG]  [BUGGY]  if(d  >  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  tol  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(d  >  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  tol  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(d  >  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  tol  *  r))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    tol    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
236	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        *        q;        if    (p    >    a    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	169	4	add
237	[BUG]  [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        if    (p    >    a    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	169	4	add
238	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  if(p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        *        q;        if    (p    >    a    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    if(p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	169	4	add
239	[BUG]  [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  if(p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  if(p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        if    (p    >    a    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    if(p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	169	4	add
240	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        *        q;        if    (p    >    a    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	169	4	add
241	[BUG]  [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        if    (p    >    a    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	169	4	add
242	[BUG]  [BUGGY]  if(x  <  a  *(l  lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(l  lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(l  lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(l    lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ')'  expected	120	None	replace
243	[BUG]  [BUGGY]  if(p  >  a  *(l  lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(l  lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(l  lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(l    lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ')'  expected	120	None	replace
244	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x    >    a    *(lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	117	4	add
245	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	117	4	add
246	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	117	None	add
247	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  If(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  If(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    If(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  ';'  expected	117	None	add
248	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    /    r;    r  =  p  /  r;  d  =  p  /  r;  r  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        /        r;        r    =    p    /    r;    d  =  p  /  r;  r  =  p  /  r;	  	compilable	  [FE]  AssertionError  	136	4	add
249	[BUG]  [BUGGY]  d    =    p    /    r;    r  =  p  /  r;  d  =  p  /  r;  r  =  p  /  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    /    r;    r  =  p  /  r;  d  =  p  /  r;  r  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        /        r;        r    =    p    /    r;    d  =  p  /  r;  r  =  p  /  r;	  	compilable	  [FE]  AssertionError  	136	4	add
250	[BUG]  [BUGGY]  d    =    p    /    r;    r  =  p  /  r;  int  d  =  p  /  r;  r  =  p  /  r;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    /    r;    r  =  p  /  r;  int  d  =  p  /  r;  r  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        /        r;        r    =    p    /    r;    int  d  =  p  /  r;  r  =  p  /  r;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	136	None	add
251	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    /    r;    r  =  p  /  r;  d  =  p  /  r;  r  =  p  %  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        /        r;        r    =    p    /    r;    d  =  p  /  r;  r  =  p  %  r;	  	compilable	  [FE]  AssertionError  	136	4	add
252	[BUG]  [BUGGY]  d    =    p    /    r;    r  =  p  /  r;  d  =  p  /  r;  r  =  p  %  r;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    /    r;    r  =  p  /  r;  d  =  p  /  r;  r  =  p  %  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        /        r;        r    =    p    /    r;    d  =  p  /  r;  r  =  p  %  r;	  	compilable	  [FE]  AssertionError  	136	4	add
253	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    /    r;    r  =  p  /  r;  d  =  p  *  r;  r  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        /        r;        r    =    p    /    r;    d  =  p  *  r;  r  =  p  /  r;	  	compilable	  [FE]  AssertionError  	136	4	add
254	[BUG]  [BUGGY]  d    =    p    /    r;    r  =  p  /  r;  d  =  p  *  r;  r  =  p  /  r;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    /    r;    r  =  p  /  r;  d  =  p  *  r;  r  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        /        r;        r    =    p    /    r;    d  =  p  *  r;  r  =  p  /  r;	  	compilable	  [FE]  AssertionError  	136	4	add
255	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  p;  d  =  r  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    r    /    p;    d  =  r  /  p;	  	compilable	  [FE]  AssertionError  	11	4	add
256	[BUG]  [BUGGY]  d  =  r  /  p;  d  =  r  /  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  p;  d  =  r  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    /    p;    d  =  r  /  p;	  	compilable	  [FE]  AssertionError  	11	4	add
257	[BUG]  [BUGGY]  d  =  r  /  p;  d  =  r  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  p;  d  =  r  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    /    p;    d  =  r  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	add
258	[BUG]  [BUGGY]  d  =  r  /  p;  d  =  r  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r)  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  p;  d  =  r  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r)  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    /    p;    d  =  r  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r)	  	non-compiled	[CE]  ')'  expected	11	None	add
259	[BUG]  [BUGGY]  d  =  r  /  p;  d  =  r  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  p  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  p;  d  =  r  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  p  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    /    p;    d  =  r  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  p  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	add
260	[BUG]  [BUGGY]  d  =  r  /  p;  d  =  r  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  p;  d  =  r  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    /    p;    d  =  r  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	add
261	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	165	4	add
262	[BUG]  [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	165	4	add
263	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	165	4	add
264	[BUG]  [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	165	4	add
265	[BUG]  [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	165	None	add
266	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	165	4	add
267	[BUG]  [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	165	4	add
268	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  ==  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  ==  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	165	4	add
269	[BUG]  [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  ==  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  ==  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  ==  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	165	4	add
270	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol1  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  tol1  +  m;	  d    =    p    *    q;    d    =    p    *    q;    }    else    if(isMinim)    {    d    =    tol1    +    d;    }    	compilable	  [FE]  AssertionError  	45	5	replace
271	[BUG]  [BUGGY]  d  =  tol1  +  m;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol1  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  tol1  +  m;	  d    =    p    *    q;    d    =    p    *    q;    }    else    if(isMinim)    {    d    =    tol1    +    d;    }    	compilable	  [FE]  AssertionError  	45	5	replace
272	[BUG]  [BUGGY]  int  d  =  p  *  q;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  p  *  q;	  d    =    p    *    q;    int    d    =    p    *    q;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	110	None	replace
273	[BUG]  [BUGGY]  int  d  =  p  *  r;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  p  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  p  *  r;	  d    =    p    *    q;    int    d    =    p    *    q;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	110	None	replace
274	[BUG]  [BUGGY]  int  d  =  p  *  q  +  1;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  p  *  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  p  *  q  +  1;	  d    =    p    *    q;    int    d    =    p    *    q;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	110	None	replace
275	[BUG]  [BUGGY]  int  d  =  p  *  m;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  p  *  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  p  *  m;	  d    =    p    *    q;    int    d    =    p    *    q;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	110	None	replace
276	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  x;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  *  x;	  d    =    p    *    q;    if    (p    >    a    *    q)    {    d    =    p    *    q;    }    	compilable	  [FE]  AssertionError  	174	6	replace
277	[BUG]  [BUGGY]  d  =  p  *  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  x;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  x;	  d    =    p    *    q;    if    (p    >    a    *    q)    {    d    =    p    *    q;    }    	compilable	  [FE]  AssertionError  	174	6	replace
278	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  *  r  +  a;	  d    =    p    *    q;    d    =    p    *    q    +    a;    	compilable	  [FE]  AssertionError  	114	5	replace
279	[BUG]  [BUGGY]  d  =  p  *  r  +  a;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  r  +  a;	  d    =    p    *    q;    d    =    p    *    q    +    a;    	compilable	  [FE]  AssertionError  	114	5	replace
280	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  q  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  *  q  +  a;	  d    =    p    *    q;    d    =    p    *    q    +    a;    	compilable	  [FE]  AssertionError  	114	5	replace
281	[BUG]  [BUGGY]  d  =  p  *  q  +  a;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  q  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  q  +  a;	  d    =    p    *    q;    d    =    p    *    q    +    a;    	compilable	  [FE]  AssertionError  	114	5	replace
282	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  r;  d  =  m  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    m    /    r;    d  =  m  /  r;	  	compilable	  [FE]  AssertionError  	21	4	add
283	[BUG]  [BUGGY]  d  =  m  /  r;  d  =  m  /  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  r;  d  =  m  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    r;    d  =  m  /  r;	  	compilable	  [FE]  AssertionError  	21	4	add
284	[BUG]  [BUGGY]  timeout  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  r;  d  =  m  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    m    /    r;    d  =  m  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	21	1	add
285	[BUG]  [BUGGY]  d  =  m  /  r;  d  =  m  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  timeout  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  r;  d  =  m  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    r;    d  =  m  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	21	1	add
286	[BUG]  [BUGGY]  d  =  m  /  r;  d  =  m  /  r;  }  else  if(i  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  cannot  find  symbol  i  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  r;  d  =  m  /  r;  }  else  if(i  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    r;    d  =  m  /  r;  }  else  if(i  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  cannot  find  symbol  i	21	None	add
287	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  r;  d  =  m  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    m    /    r;    d  =  m  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	21	1	add
288	[BUG]  [BUGGY]  d  =  m  /  r;  d  =  m  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  timeout  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  r;  d  =  m  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    r;    d  =  m  /  r;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	21	1	add
289	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x    >    a    *(b    -    x)&&    p    <    q    *(lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	186	4	add
290	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(b    -    x)&&    p    <    q    *(lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	186	4	add
291	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(b    -    x)&&    p    <    q    *(lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	186	None	add
292	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x    >    a    *(b    -    x)&&    p    <    q    *(lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	186	4	add
293	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(b    -    x)&&    p    <    q    *(lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	186	4	add
294	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  If(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  If(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(b    -    x)&&    p    <    q    *(lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    If(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  ';'  expected	186	None	add
295	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  m)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  m)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  m)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    m)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
296	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  2  +  1;	  d    =    p    /    2;    	compilable	  [FE]  AssertionError  	162	5	replace
297	[BUG]  [BUGGY]  d  =  p  /  2  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  2  +  1;	  d    =    p    /    2;    	compilable	  [FE]  AssertionError  	162	5	replace
298	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  *  2;	  d    =    p    /    2;    	compilable	  [FE]  AssertionError  	162	6	replace
299	[BUG]  [BUGGY]  d  =  p  *  2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  2;	  d    =    p    /    2;    	compilable	  [FE]  AssertionError  	162	6	replace
300	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  2  *  r;	  d    =    p    /    2;    	compilable	  [FE]  AssertionError  	162	4	replace
301	[BUG]  [BUGGY]  d  =  p  /  2  *  r;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  2  *  r;	  d    =    p    /    2;    	compilable	  [FE]  AssertionError  	162	4	replace
302	[BUG]  [BUGGY]  int  d  =  q  /  p;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  q  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  q  /  p;	  d    =    q    /    p;    int    d    =    q    /    p;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	129	None	replace
303	[BUG]  [BUGGY]  int  d  =  q  /  r;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  q  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  q  /  r;	  d    =    q    /    p;    int    d    =    q    /    p;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	129	None	replace
304	[BUG]  [BUGGY]  int  d  =  q  *  p;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  q  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  q  *  p;	  d    =    q    /    p;    int    d    =    q    /    p;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	129	None	replace
305	[BUG]  [BUGGY]  if(p  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	85	None	replace
306	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(1.0    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	164	5	replace
307	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(1.0    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	164	5	replace
308	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(1.0    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	164	5	replace
309	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(1.0    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	164	5	replace
310	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(r  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(r  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(1.0    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	164	5	replace
311	[BUG]  [BUGGY]  if(r  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(r  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(r  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(1.0    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	164	5	replace
312	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        *        q;        if    (p    >    q    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	171	4	add
313	[BUG]  [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        if    (p    >    q    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	171	4	add
314	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        *        q;        if    (p    >    q    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	171	4	add
315	[BUG]  [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        if    (p    >    q    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	171	4	add
316	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  if(p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        *        q;        if    (p    >    q    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    if(p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	171	4	add
317	[BUG]  [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  if(p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  if(p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        if    (p    >    q    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    if(p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	171	4	add
318	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  *  r;  d  =  b  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  a  *  r;  d  =  b  /  q;	  d    =    r    /    q;    d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    m))    {    timeout    	compilable	  [FE]  AssertionError  	34	5	replace
319	[BUG]  [BUGGY]  d  =  a  *  r;  d  =  b  /  q;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  *  r;  d  =  b  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  a  *  r;  d  =  b  /  q;	  d    =    r    /    q;    d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    m))    {    timeout    	compilable	  [FE]  AssertionError  	34	5	replace
320	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  x;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  x;	  d    =    p    /    r;    d    =    p    /    r;    }    else    if(i    >    a    -    x)    {    d    =    p    /    r;    }    	compilable	  [FE]  AssertionError  	82	5	replace
321	[BUG]  [BUGGY]  d  =  p  /  x;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  x;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  x;	  d    =    p    /    r;    d    =    p    /    r;    }    else    if(i    >    a    -    x)    {    d    =    p    /    r;    }    	compilable	  [FE]  AssertionError  	82	5	replace
322	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  q  +  d;	  d    =    d    /    q;    d    =    d    /    q    +    d;    	compilable	  [FE]  AssertionError  	160	5	replace
323	[BUG]  [BUGGY]  d  =  d  /  q  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  q  +  d;	  d    =    d    /    q;    d    =    d    /    q    +    d;    	compilable	  [FE]  AssertionError  	160	5	replace
324	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  q  *  r;	  d    =    d    /    q;    d    =    d    /    q    +    d;    	compilable	  [FE]  AssertionError  	160	5	replace
325	[BUG]  [BUGGY]  d  =  d  /  q  *  r;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  q  *  r;	  d    =    d    /    q;    d    =    d    /    q    +    d;    	compilable	  [FE]  AssertionError  	160	5	replace
326	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  *  q  +  d;	  d    =    d    /    q;    d    =    d    /    q    +    d;    	compilable	  [FE]  AssertionError  	160	5	replace
327	[BUG]  [BUGGY]  d  =  d  *  q  +  d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  *  q  +  d;	  d    =    d    /    q;    d    =    d    /    q    +    d;    	compilable	  [FE]  AssertionError  	160	5	replace
328	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  r  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  r  +  1;	  d    =    d    /    q    +    1;    	compilable	  [FE]  AssertionError  	101	5	replace
329	[BUG]  [BUGGY]  d  =  d  /  r  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  r  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  r  +  1;	  d    =    d    /    q    +    1;    	compilable	  [FE]  AssertionError  	101	5	replace
330	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  *  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  q  *  1;	  d    =    d    /    q    +    1;    	compilable	  [FE]  AssertionError  	101	5	replace
331	[BUG]  [BUGGY]  d  =  d  /  q  *  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  *  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  q  *  1;	  d    =    d    /    q    +    1;    	compilable	  [FE]  AssertionError  	101	5	replace
332	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  *  2  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  q  *  2  +  1;	  d    =    d    /    q    +    1;    	compilable	  [FE]  AssertionError  	101	5	replace
333	[BUG]  [BUGGY]  d  =  d  /  q  *  2  +  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  *  2  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  q  *  2  +  1;	  d    =    d    /    q    +    1;    	compilable	  [FE]  AssertionError  	101	5	replace
334	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  r  /  m;	  d    =    q    /    m;    	compilable	  [FE]  AssertionError  	89	5	replace
335	[BUG]  [BUGGY]  d  =  r  /  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  r  /  m;	  d    =    q    /    m;    	compilable	  [FE]  AssertionError  	89	5	replace
336	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  m;	  d    =    q    /    m;    	compilable	  [FE]  AssertionError  	89	5	replace
337	[BUG]  [BUGGY]  d  =  d  /  m;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  m;	  d    =    q    /    m;    	compilable	  [FE]  AssertionError  	89	5	replace
338	[BUG]  [BUGGY]  if(p  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >=    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	25	None	replace
339	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  ==  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  ==  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	166	5	replace
340	[BUG]  [BUGGY]  if(x  ==  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  ==  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  ==  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	166	5	replace
341	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    /    m;    d  =  q  /  m;	  	compilable	  [FE]  AssertionError  	88	4	add
342	[BUG]  [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    m;    d  =  q  /  m;	  	compilable	  [FE]  AssertionError  	88	4	add
343	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    /    m;    d  =  q  /  m;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	88	5	add
344	[BUG]  [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    m;    d  =  q  /  m;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	88	5	add
345	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    /    m;    d  =  q  /  m;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {	  	compilable	  [FE]  AssertionError  	88	5	add
346	[BUG]  [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    m;    d  =  q  /  m;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {	  	compilable	  [FE]  AssertionError  	88	5	add
347	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    /    m;    d  =  q  /  m;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	88	5	add
348	[BUG]  [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    m;    d  =  q  /  m;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	  [FE]  AssertionError  	88	5	add
349	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    /    m;    d  =  q  /  m;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {	  	compilable	  [FE]  AssertionError  	88	5	add
350	[BUG]  [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    m;    d  =  q  /  m;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {	  	compilable	  [FE]  AssertionError  	88	5	add
351	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  a;	  d    =    a    /    p;    	compilable	  [FE]  AssertionError  	181	5	replace
352	[BUG]  [BUGGY]  d  =  p  /  a;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  a;	  d    =    a    /    p;    	compilable	  [FE]  AssertionError  	181	5	replace
353	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  a  *  p;	  d    =    a    /    p;    	compilable	  [FE]  AssertionError  	181	5	replace
354	[BUG]  [BUGGY]  d  =  a  *  p;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  a  *  p;	  d    =    a    /    p;    	compilable	  [FE]  AssertionError  	181	5	replace
355	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	75	4	add
356	[BUG]  [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	75	4	add
357	[BUG]  [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	75	None	add
358	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	75	4	add
359	[BUG]  [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	75	4	add
360	[BUG]  [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(o  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  cannot  find  symbol  o  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(o  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(o  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  cannot  find  symbol  o	75	None	add
361	[BUG]  [BUGGY]  int  d  =  m  /  q;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  m  /  q;	  d    =    m    /    q;    int    d    =    m    /    q;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	102	None	replace
362	[BUG]  [BUGGY]  int  d  =  m  *  q;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  m  *  q;	  d    =    m    /    q;    int    d    =    m    /    q;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	102	None	replace
363	[BUG]  [BUGGY]  int  d  =  m  /  q  +  1;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  m  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  m  /  q  +  1;	  d    =    m    /    q;    int    d    =    m    /    q;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	102	None	replace
364	[BUG]  [BUGGY]  int  d  =  m  /  r;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  m  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  m  /  r;	  d    =    m    /    q;    int    d    =    m    /    q;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	102	None	replace
365	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	71	4	add
366	[BUG]  [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	71	4	add
367	[BUG]  [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	71	None	add
368	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  }	  	compilable	  [FE]  AssertionError  	71	4	add
369	[BUG]  [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  }	  	compilable	  [FE]  AssertionError  	71	4	add
370	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  <  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  <  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	71	4	add
371	[BUG]  [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  <  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  <  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  <  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	71	4	add
372	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  d  =  d  /  q;  d  =  d  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        d        /        q;        d    =    d    /    q;    d  =  d  /  q;  d  =  d  /  q;	  	compilable	  [FE]  AssertionError  	90	4	add
373	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  d  =  d  /  q;  d  =  d  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  d  =  d  /  q;  d  =  d  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    /    q;    d  =  d  /  q;  d  =  d  /  q;	  	compilable	  [FE]  AssertionError  	90	4	add
374	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  d  =  d  /  q;  d  =  d  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        d        /        q;        d    =    d    /    q;    d  =  d  /  q;  d  =  d  %  q;	  	compilable	  [FE]  AssertionError  	90	4	add
375	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  d  =  d  /  q;  d  =  d  %  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  d  =  d  /  q;  d  =  d  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    /    q;    d  =  d  /  q;  d  =  d  %  q;	  	compilable	  [FE]  AssertionError  	90	4	add
376	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  d  =  d  *  q;  d  =  d  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        d        /        q;        d    =    d    /    q;    d  =  d  *  q;  d  =  d  /  q;	  	compilable	  [FE]  AssertionError  	90	4	add
377	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  d  =  d  *  q;  d  =  d  /  q;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  d  =  d  *  q;  d  =  d  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    /    q;    d  =  d  *  q;  d  =  d  /  q;	  	compilable	  [FE]  AssertionError  	90	4	add
378	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  d  =  a  /  q;  d  =  d  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        d        /        q;        d    =    d    /    q;    d  =  a  /  q;  d  =  d  /  q;	  	compilable	  [FE]  AssertionError  	90	4	add
379	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  d  =  a  /  q;  d  =  d  /  q;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  d  =  a  /  q;  d  =  d  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    /    q;    d  =  a  /  q;  d  =  d  /  q;	  	compilable	  [FE]  AssertionError  	90	4	add
380	[BUG]  [BUGGY]  if(p  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >=    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	87	None	replace
381	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  a  *(m  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  a  *(m  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(lo  -  x)&&  p  <  a  *(m  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >=    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	87	None	replace
382	[BUG]  [BUGGY]  d  =  p  /  x;  dev  =  p  /  r;  [CE]  cannot  find  symbol  dev  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  x;  dev  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  x;  dev  =  p  /  r;	  d    =    p    /    r;    dev    =    p    /    r;    	non-compiled	[CE]  cannot  find  symbol  dev	139	None	replace
383	[BUG]  [BUGGY]  d  =  p  /  q;  dev  =  p  /  r;  [CE]  cannot  find  symbol  dev  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  q;  dev  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  q;  dev  =  p  /  r;	  d    =    p    /    r;    dev    =    p    /    r;    	non-compiled	[CE]  cannot  find  symbol  dev	139	None	replace
384	[BUG]  [BUGGY]  d  =  p  /  r  +  1;  dev  =  p  /  r;  [CE]  cannot  find  symbol  dev  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  r  +  1;  dev  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  r  +  1;  dev  =  p  /  r;	  d    =    p    /    r;    dev    =    p    /    r;    	non-compiled	[CE]  cannot  find  symbol  dev	139	None	replace
385	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  m  *  p;	  d    =    m    /    p;    	compilable	  [FE]  AssertionError  	16	6	replace
386	[BUG]  [BUGGY]  d  =  m  *  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  m  *  p;	  d    =    m    /    p;    	compilable	  [FE]  AssertionError  	16	6	replace
387	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  *  m;	  d    =    p    *    q;    d    =    p    *    q;    }    else    if(isMinim)    {    d    =    p    *    q;    }    	compilable	  [FE]  AssertionError  	42	6	replace
388	[BUG]  [BUGGY]  d  =  p  *  m;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  m;	  d    =    p    *    q;    d    =    p    *    q;    }    else    if(isMinim)    {    d    =    p    *    q;    }    	compilable	  [FE]  AssertionError  	42	6	replace
389	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  q;  d  =  a  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    a    /    q;    d  =  a  /  q;	  	compilable	  [FE]  AssertionError  	122	4	add
390	[BUG]  [BUGGY]  d  =  a  /  q;  d  =  a  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  q;  d  =  a  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    a    /    q;    d  =  a  /  q;	  	compilable	  [FE]  AssertionError  	122	4	add
391	[BUG]  [BUGGY]  timeout  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  q;  d  =  a  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    a    /    q;    d  =  a  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	122	1	add
392	[BUG]  [BUGGY]  d  =  a  /  q;  d  =  a  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  timeout  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  q;  d  =  a  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    a    /    q;    d  =  a  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	122	1	add
393	[BUG]  [BUGGY]  timeout  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  q;  d  =  a  /  q;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    a    /    q;    d  =  a  /  q;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	122	1	add
394	[BUG]  [BUGGY]  d  =  a  /  q;  d  =  a  /  q;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  timeout  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  q;  d  =  a  /  q;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    a    /    q;    d  =  a  /  q;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	122	1	add
395	[BUG]  [BUGGY]  d  =  l  /  q;  [CE]  cannot  find  symbol  l  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  l  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  l  /  q;	  d    =    r    /    q;    d    =    l    /    q;    	non-compiled	[CE]  cannot  find  symbol  l	149	None	replace
396	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x    <    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	69	4	add
397	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    <    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	69	4	add
398	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    <    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	69	None	add
399	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x    <    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	69	4	add
400	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    <    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	69	4	add
401	[BUG]  [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  <  r  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  <  r  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  ||  p  <  a  ||  p  <  r  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)||    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	replace
402	[BUG]  [BUGGY]  if(x  <  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)||    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	replace
403	[BUG]  [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  ||  p  <  a  ||  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)||    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	replace
404	[BUG]  [BUGGY]  if(p  <  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  <  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  <  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *(l    lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ')'  expected	2	None	replace
405	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  p  /  p;  d  =  q  /  p;  d  =  p  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        d    =    p    /    p;    d  =  q  /  p;  d  =  p  /  p;	  	compilable	  [FE]  AssertionError  	130	4	add
406	[BUG]  [BUGGY]  d    =    q    /    p;    d  =  p  /  p;  d  =  q  /  p;  d  =  p  /  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  p  /  p;  d  =  q  /  p;  d  =  p  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        d    =    p    /    p;    d  =  q  /  p;  d  =  p  /  p;	  	compilable	  [FE]  AssertionError  	130	4	add
407	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  p  /  p;  d  =  q  /  p;  d  =  p  %  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        d    =    p    /    p;    d  =  q  /  p;  d  =  p  %  p;	  	compilable	  [FE]  AssertionError  	130	4	add
408	[BUG]  [BUGGY]  d    =    q    /    p;    d  =  p  /  p;  d  =  q  /  p;  d  =  p  %  p;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  p  /  p;  d  =  q  /  p;  d  =  p  %  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        d    =    p    /    p;    d  =  q  /  p;  d  =  p  %  p;	  	compilable	  [FE]  AssertionError  	130	4	add
409	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  p  /  p;  d  =  q  *  p;  d  =  p  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        d    =    p    /    p;    d  =  q  *  p;  d  =  p  /  p;	  	compilable	  [FE]  AssertionError  	130	4	add
410	[BUG]  [BUGGY]  d    =    q    /    p;    d  =  p  /  p;  d  =  q  *  p;  d  =  p  /  p;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  p  /  p;  d  =  q  *  p;  d  =  p  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        d    =    p    /    p;    d  =  q  *  p;  d  =  p  /  p;	  	compilable	  [FE]  AssertionError  	130	4	add
411	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  p  /  p;  d  =  q  /  p;  d  =  p  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        d    =    p    /    p;    d  =  q  /  p;  d  =  p  *  p;	  	compilable	  [FE]  AssertionError  	130	4	add
412	[BUG]  [BUGGY]  d    =    q    /    p;    d  =  p  /  p;  d  =  q  /  p;  d  =  p  *  p;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  p  /  p;  d  =  q  /  p;  d  =  p  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        d    =    p    /    p;    d  =  q  /  p;  d  =  p  *  p;	  	compilable	  [FE]  AssertionError  	130	4	add
413	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	          if(p    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	124	None	replace
414	[BUG]  [BUGGY]  if(d  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(d  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(d  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	          if(p    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	124	None	replace
415	[BUG]  [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    m    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	37	None	replace
416	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    m    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	37	None	replace
417	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }	          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    =    Math.abs(0.5    *    q    *    r))    {    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
418	[BUG]  [BUGGY]  if(r  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(r  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(r  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }	          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    =    Math.abs(0.5    *    q    *    r))    {    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
419	[BUG]  [BUGGY]  timeout  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  m  /  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        m        /        q;        d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d  =  m  /  q;  d  =  m  /  q;	  timeout    	compilable	timeout	58	1	add
420	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  m  /  q;  d  =  m  /  q;  timeout  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  m  /  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d  =  m  /  q;  d  =  m  /  q;	  timeout    	compilable	timeout	58	1	add
421	[BUG]  [BUGGY]  timeout  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        m        /        q;        d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  timeout    	compilable	timeout	58	1	add
422	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  timeout  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  timeout    	compilable	timeout	58	1	add
423	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  timeout    	non-compiled	[CE]  reached  end  of  file  while  parsing	58	None	add
424	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r)  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r)  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r)	  timeout    	non-compiled	[CE]  ')'  expected	58	None	add
425	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r	  timeout    	non-compiled	[CE]  ')'  expected	58	None	add
426	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	64	None	replace
427	[BUG]  [BUGGY]  if(p  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	64	None	replace
428	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  p;  d  =  m  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    m    /    p;    d  =  m  /  p;	  	compilable	  [FE]  AssertionError  	15	4	add
429	[BUG]  [BUGGY]  d  =  m  /  p;  d  =  m  /  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  p;  d  =  m  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    p;    d  =  m  /  p;	  	compilable	  [FE]  AssertionError  	15	4	add
430	[BUG]  [BUGGY]  timeout  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  p;  d  =  m  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  p  <  q  *  r)  {  d  =  m  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    m    /    p;    d  =  m  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  p  <  q  *  r)  {  d  =  m  /  p;  }	  	compilable	timeout	15	1	add
431	[BUG]  [BUGGY]  d  =  m  /  p;  d  =  m  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  p  <  q  *  r)  {  d  =  m  /  p;  }  timeout  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  p;  d  =  m  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  p  <  q  *  r)  {  d  =  m  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    p;    d  =  m  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  p  <  q  *  r)  {  d  =  m  /  p;  }	  	compilable	timeout	15	1	add
432	[BUG]  [BUGGY]  timeout  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  p;  d  =  m  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  -  a  &&  p  <  q  *  r)  {  d  =  m  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    m    /    p;    d  =  m  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  -  a  &&  p  <  q  *  r)  {  d  =  m  /  p;  }	  	compilable	timeout	15	1	add
433	[BUG]  [BUGGY]  d  =  m  /  p;  d  =  m  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  -  a  &&  p  <  q  *  r)  {  d  =  m  /  p;  }  timeout  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  p;  d  =  m  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  -  a  &&  p  <  q  *  r)  {  d  =  m  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    p;    d  =  m  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  -  a  &&  p  <  q  *  r)  {  d  =  m  /  p;  }	  	compilable	timeout	15	1	add
434	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  p;  d  =  m  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  p  <  q  *  b  -  x)  {  d  =  m  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    m    /    p;    d  =  m  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  p  <  q  *  b  -  x)  {  d  =  m  /  p;  }	  	compilable	timeout	15	1	add
435	[BUG]  [BUGGY]  d  =  m  /  p;  d  =  m  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  p  <  q  *  b  -  x)  {  d  =  m  /  p;  }  timeout  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  p;  d  =  m  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  p  <  q  *  b  -  x)  {  d  =  m  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    p;    d  =  m  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  p  <  q  *  b  -  x)  {  d  =  m  /  p;  }	  	compilable	timeout	15	1	add
436	[BUG]  [BUGGY]  timeout  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  p;  d  =  m  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  b  <  q  *  r)  {  d  =  m  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    m    /    p;    d  =  m  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  b  <  q  *  r)  {  d  =  m  /  p;  }	  	compilable	timeout	15	1	add
437	[BUG]  [BUGGY]  d  =  m  /  p;  d  =  m  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  b  <  q  *  r)  {  d  =  m  /  p;  }  timeout  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  p;  d  =  m  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  b  <  q  *  r)  {  d  =  m  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    p;    d  =  m  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  b  <  q  *  r)  {  d  =  m  /  p;  }	  	compilable	timeout	15	1	add
438	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  b;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  *  b;	  d    =    p    *    q;    d    =    p    *    q;    }    else    if(x    >    a)    {    d    =    p    *    q;    }    	compilable	  [FE]  AssertionError  	44	5	replace
439	[BUG]  [BUGGY]  d  =  p  *  b;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  b;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  b;	  d    =    p    *    q;    d    =    p    *    q;    }    else    if(x    >    a)    {    d    =    p    *    q;    }    	compilable	  [FE]  AssertionError  	44	5	replace
440	[BUG]  [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  <  r  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  <  r  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  ||  p  <  a  ||  p  <  r  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
441	[BUG]  [BUGGY]  if(x  <  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
442	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  m)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  m)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  m)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    m)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
443	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  r)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  r)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  r)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    m)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
444	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  m)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  m)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  m)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    m)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
445	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  m  /  q  +  1;	  d    =    m    /    q;    d    =    m    /    q;    	compilable	  [FE]  AssertionError  	57	5	replace
446	[BUG]  [BUGGY]  d  =  m  /  q  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  m  /  q  +  1;	  d    =    m    /    q;    d    =    m    /    q;    	compilable	  [FE]  AssertionError  	57	5	replace
447	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	73	4	add
448	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	73	4	add
449	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	73	None	add
450	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >>  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >>  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >>  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	73	None	add
451	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x!=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x!=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	73	4	add
452	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x!=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x!=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x!=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	73	4	add
453	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  ==  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  ==  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	73	4	add
454	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  ==  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  ==  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  ==  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	73	4	add
455	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(p  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    <    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	70	5	replace
456	[BUG]  [BUGGY]  if(p  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    <    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	70	5	replace
457	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  <  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    <    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	70	5	replace
458	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    <    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	70	5	replace
459	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q  +  d;  d  =  d  /  q;  d  =  d  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        d        /        q;        d    =    d    /    q    +    d;    d  =  d  /  q;  d  =  d  /  q  +  d;	  	compilable	  [FE]  AssertionError  	159	4	add
460	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  /  q  +  d;  d  =  d  /  q;  d  =  d  /  q  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q  +  d;  d  =  d  /  q;  d  =  d  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    /    q    +    d;    d  =  d  /  q;  d  =  d  /  q  +  d;	  	compilable	  [FE]  AssertionError  	159	4	add
461	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q  +  d;  d  =  d  /  q;  d  =  d  %  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        d        /        q;        d    =    d    /    q    +    d;    d  =  d  /  q;  d  =  d  %  q  +  d;	  	compilable	  [FE]  AssertionError  	159	4	add
462	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  /  q  +  d;  d  =  d  /  q;  d  =  d  %  q  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q  +  d;  d  =  d  /  q;  d  =  d  %  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    /    q    +    d;    d  =  d  /  q;  d  =  d  %  q  +  d;	  	compilable	  [FE]  AssertionError  	159	4	add
463	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q  +  d;  d  =  d  *  q;  d  =  d  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        d        /        q;        d    =    d    /    q    +    d;    d  =  d  *  q;  d  =  d  /  q  +  d;	  	compilable	  [FE]  AssertionError  	159	4	add
464	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  /  q  +  d;  d  =  d  *  q;  d  =  d  /  q  +  d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q  +  d;  d  =  d  *  q;  d  =  d  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    /    q    +    d;    d  =  d  *  q;  d  =  d  /  q  +  d;	  	compilable	  [FE]  AssertionError  	159	4	add
465	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  /  q  +  d;  d  =  d  /  q;  d  =  d  /  q  +  d);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q  +  d;  d  =  d  /  q;  d  =  d  /  q  +  d);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    /    q    +    d;    d  =  d  /  q;  d  =  d  /  q  +  d);	  	non-compiled	[CE]  ';'  expected	159	None	add
466	[BUG]  [BUGGY]  timeout  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  d  =  m  /  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        m        /        q;        d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    d  =  m  /  q;  d  =  m  /  q;	  timeout    	compilable	timeout	61	1	add
467	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  d  =  m  /  q;  d  =  m  /  q;  timeout  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  d  =  m  /  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    d  =  m  /  q;  d  =  m  /  q;	  timeout    	compilable	timeout	61	1	add
468	[BUG]  [BUGGY]  timeout  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        m        /        q;        d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {	  timeout    	compilable	timeout	61	1	add
469	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  timeout  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {	  timeout    	compilable	timeout	61	1	add
470	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {	  timeout    	non-compiled	[CE]  reached  end  of  file  while  parsing	61	None	add
471	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t)  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t)  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t)	  timeout    	non-compiled	[CE]  ')'  expected	61	None	add
472	[BUG]  [BUGGY]  timeout  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        m        /        q;        d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  timeout    	compilable	timeout	61	1	add
473	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  timeout  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  timeout    	compilable	timeout	61	1	add
474	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  q;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  *  q;  d  =  p  /  q;	  d    =    d    /    q;    d    =    p    /    q;    	compilable	  [FE]  AssertionError  	142	4	replace
475	[BUG]  [BUGGY]  d  =  d  *  q;  d  =  p  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  q;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  *  q;  d  =  p  /  q;	  d    =    d    /    q;    d    =    p    /    q;    	compilable	  [FE]  AssertionError  	142	4	replace
476	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  r  =  r  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  r  *  q;  r  =  r  *  q;	  d    =    r    /    q;    r    =    r    /    q;    	compilable	  [FE]  AssertionError  	148	5	replace
477	[BUG]  [BUGGY]  d  =  r  *  q;  r  =  r  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  r  =  r  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  r  *  q;  r  =  r  *  q;	  d    =    r    /    q;    r    =    r    /    q;    	compilable	  [FE]  AssertionError  	148	5	replace
478	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  q;  r  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  q;  r  =  p  /  q;	  d    =    r    /    q;    r    =    r    /    q;    	compilable	  [FE]  AssertionError  	148	4	replace
479	[BUG]  [BUGGY]  d  =  p  /  q;  r  =  p  /  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  q;  r  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  q;  r  =  p  /  q;	  d    =    r    /    q;    r    =    r    /    q;    	compilable	  [FE]  AssertionError  	148	4	replace
480	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q;  r  =  d  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  q;  r  =  d  /  q;	  d    =    r    /    q;    r    =    r    /    q;    	compilable	  [FE]  AssertionError  	148	5	replace
481	[BUG]  [BUGGY]  d  =  d  /  q;  r  =  d  /  q;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q;  r  =  d  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  q;  r  =  d  /  q;	  d    =    r    /    q;    r    =    r    /    q;    	compilable	  [FE]  AssertionError  	148	5	replace
482	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q;  r  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  q;  r  =  r  /  q;	  d    =    r    /    q;    r    =    r    /    q;    	compilable	  [FE]  AssertionError  	148	5	replace
483	[BUG]  [BUGGY]  d  =  d  /  q;  r  =  r  /  q;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q;  r  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  q;  r  =  r  /  q;	  d    =    r    /    q;    r    =    r    /    q;    	compilable	  [FE]  AssertionError  	148	5	replace
484	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  tol2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  tol2;	  d    =    d    /    tol1;    	compilable	  [FE]  AssertionError  	151	5	replace
485	[BUG]  [BUGGY]  d  =  d  /  tol2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  tol2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  tol2;	  d    =    d    /    tol1;    	compilable	  [FE]  AssertionError  	151	5	replace
486	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  *  tol1;	  d    =    d    /    tol1;    	compilable	  [FE]  AssertionError  	151	5	replace
487	[BUG]  [BUGGY]  d  =  d  *  tol1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  *  tol1;	  d    =    d    /    tol1;    	compilable	  [FE]  AssertionError  	151	5	replace
488	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  d;	  d    =    d    /    p;    	compilable	  [FE]  AssertionError  	14	5	replace
489	[BUG]  [BUGGY]  d  =  p  /  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  d;	  d    =    d    /    p;    	compilable	  [FE]  AssertionError  	14	5	replace
490	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(b    -    x)&&    p    <    a    *(lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	125	None	replace
491	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(1.0    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	163	4	add
492	[BUG]  [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(1.0    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	163	4	add
493	[BUG]  [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(1.0    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	163	None	add
494	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(1.0    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	163	4	add
495	[BUG]  [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(1.0    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	163	4	add
496	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.1  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(1.0    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.1  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	163	4	add
497	[BUG]  [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.1  *  q  *  r))  {  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.1  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(1.0    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.1  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	163	4	add
498	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        if    (r    /    q    >    a)    {    d    =    r    /    q;    }    else    {    d    =    r    /    q;    }    d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }	  	compilable	  [FE]  AssertionError  	205	4	add
499	[BUG]  [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        if    (r    /    q    >    a)    {    d    =    r    /    q;    }    else    {    d    =    r    /    q;    }    d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }	  	compilable	  [FE]  AssertionError  	205	4	add
500	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        if    (r    /    q    >    a)    {    d    =    r    /    q;    }    else    {    d    =    r    /    q;    }    d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }	  	compilable	  [FE]  AssertionError  	205	4	add
501	[BUG]  [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        if    (r    /    q    >    a)    {    d    =    r    /    q;    }    else    {    d    =    r    /    q;    }    d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }	  	compilable	  [FE]  AssertionError  	205	4	add
502	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  r  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        if    (r    /    q    >    a)    {    d    =    r    /    q;    }    else    {    d    =    r    /    q;    }    r  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }	  	compilable	  [FE]  AssertionError  	205	4	add
503	[BUG]  [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  r  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  r  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        if    (r    /    q    >    a)    {    d    =    r    /    q;    }    else    {    d    =    r    /    q;    }    r  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }	  	compilable	  [FE]  AssertionError  	205	4	add
504	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  tol1;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        if    (r    /    q    >    a)    {    d    =    r    /    q;    }    else    {    d    =    r    /    q;    }    d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  tol1;  }	  	compilable	  [FE]  AssertionError  	205	4	add
505	[BUG]  [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  tol1;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  tol1;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        if    (r    /    q    >    a)    {    d    =    r    /    q;    }    else    {    d    =    r    /    q;    }    d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  tol1;  }	  	compilable	  [FE]  AssertionError  	205	4	add
506	[BUG]  [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    /    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	63	None	replace
507	[BUG]  [BUGGY]  d  =  p  *  r;  dev  =  p  *  q;  [CE]  cannot  find  symbol  dev  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r;  dev  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  r;  dev  =  p  *  q;	  d    =    p    *    q;    dev    =    p    *    q;    	non-compiled	[CE]  cannot  find  symbol  dev	115	None	replace
508	[BUG]  [BUGGY]  d  =  p  *  x;  dev  =  p  *  q;  [CE]  cannot  find  symbol  dev  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  x;  dev  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  x;  dev  =  p  *  q;	  d    =    p    *    q;    dev    =    p    *    q;    	non-compiled	[CE]  cannot  find  symbol  dev	115	None	replace
509	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  x;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  x;	  d    =    d    /    q;    d    =    d    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    timeout    	compilable	  [FE]  AssertionError  	93	5	replace
510	[BUG]  [BUGGY]  d  =  d  /  x;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  x;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  x;	  d    =    d    /    q;    d    =    d    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    timeout    	compilable	  [FE]  AssertionError  	93	5	replace
511	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  p  /  q;  d  =  d  /  q;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        d        /        q;        d    =    p    /    q;    d  =  d  /  q;  d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	141	4	add
512	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  p  /  q;  d  =  d  /  q;  d  =  p  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  p  /  q;  d  =  d  /  q;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    p    /    q;    d  =  d  /  q;  d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	141	4	add
513	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  p  /  q;  d  =  d  *  q;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        d        /        q;        d    =    p    /    q;    d  =  d  *  q;  d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	141	4	add
514	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  p  /  q;  d  =  d  *  q;  d  =  p  /  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  p  /  q;  d  =  d  *  q;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    p    /    q;    d  =  d  *  q;  d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	141	4	add
515	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  p  /  q;  d  =  d  /  q;  d  =  p  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        d        /        q;        d    =    p    /    q;    d  =  d  /  q;  d  =  p  %  q;	  	compilable	  [FE]  AssertionError  	141	4	add
516	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  p  /  q;  d  =  d  /  q;  d  =  p  %  q;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  p  /  q;  d  =  d  /  q;  d  =  p  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    p    /    q;    d  =  d  /  q;  d  =  p  %  q;	  	compilable	  [FE]  AssertionError  	141	4	add
517	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  p  /  q;  d  =  d  %  q;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        d        /        q;        d    =    p    /    q;    d  =  d  %  q;  d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	141	4	add
518	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  p  /  q;  d  =  d  %  q;  d  =  p  /  q;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  p  /  q;  d  =  d  %  q;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    p    /    q;    d  =  d  %  q;  d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	141	4	add
519	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  q;  d  =  d  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    *    q;    d  =  d  *  q;	  	compilable	  [FE]  AssertionError  	96	4	add
520	[BUG]  [BUGGY]  d  =  d  *  q;  d  =  d  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  q;  d  =  d  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    *    q;    d  =  d  *  q;	  	compilable	  [FE]  AssertionError  	96	4	add
521	[BUG]  [BUGGY]  d  =  d  *  q;  d  =  d  *  q;  }  else  if(isMinim)  {  d  =  d  *  q;  }  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  q;  d  =  d  *  q;  }  else  if(isMinim)  {  d  =  d  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    *    q;    d  =  d  *  q;  }  else  if(isMinim)  {  d  =  d  *  q;  }	  	non-compiled	[CE]  'else'  without  'if'	96	None	add
522	[BUG]  [BUGGY]  d  =  d  *  q;  d  =  d  *  q;  }  else  if(x  >  a)  {  d  =  d  *  q;  }  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  q;  d  =  d  *  q;  }  else  if(x  >  a)  {  d  =  d  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    *    q;    d  =  d  *  q;  }  else  if(x  >  a)  {  d  =  d  *  q;  }	  	non-compiled	[CE]  'else'  without  'if'	96	None	add
523	[BUG]  [BUGGY]  d  =  d  *  q;  d  =  d  *  q;  }  else  if(isMinim)  {  d  =  tol1  +  d;  }  [CE]  'else'  without  'if'  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  q;  d  =  d  *  q;  }  else  if(isMinim)  {  d  =  tol1  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    *    q;    d  =  d  *  q;  }  else  if(isMinim)  {  d  =  tol1  +  d;  }	  	non-compiled	[CE]  'else'  without  'if'	96	None	add
524	[BUG]  [BUGGY]  d  =  d  *  q;  d  =  d  *  q;  this.isMinimum  =  isMinim?  1  :  0;  [CE]  cannot  find  symbol  isMinimum  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  q;  d  =  d  *  q;  this.isMinimum  =  isMinim?  1  :  0;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    *    q;    d  =  d  *  q;  this.isMinimum  =  isMinim?  1  :  0;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	96	None	add
525	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  q  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  m  /  q  *  r;	  d    =    m    /    q;    d    =    m    /    q    +    d;    	compilable	  [FE]  AssertionError  	104	5	replace
526	[BUG]  [BUGGY]  d  =  m  /  q  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  q  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  m  /  q  *  r;	  d    =    m    /    q;    d    =    m    /    q    +    d;    	compilable	  [FE]  AssertionError  	104	5	replace
527	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  m  *  q  +  d;	  d    =    m    /    q;    d    =    m    /    q    +    d;    	compilable	  [FE]  AssertionError  	104	5	replace
528	[BUG]  [BUGGY]  d  =  m  *  q  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  m  *  q  +  d;	  d    =    m    /    q;    d    =    m    /    q    +    d;    	compilable	  [FE]  AssertionError  	104	5	replace
529	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  m  /  q  +  d;	  d    =    m    /    q;    d    =    m    /    q    +    d;    	compilable	  [FE]  AssertionError  	104	5	replace
530	[BUG]  [BUGGY]  d  =  m  /  q  +  d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  m  /  q  +  d;	  d    =    m    /    q;    d    =    m    /    q    +    d;    	compilable	  [FE]  AssertionError  	104	5	replace
531	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        *        q;        d    =    p    *    q    +    a;    d  =  p  *  q;  d  =  p  *  q  +  a;	  	compilable	  [FE]  AssertionError  	113	4	add
532	[BUG]  [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  a;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        d    =    p    *    q    +    a;    d  =  p  *  q;  d  =  p  *  q  +  a;	  	compilable	  [FE]  AssertionError  	113	4	add
533	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  b;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        *        q;        d    =    p    *    q    +    a;    d  =  p  *  q;  d  =  p  *  q  +  b;	  	compilable	  [FE]  AssertionError  	113	4	add
534	[BUG]  [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  b;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  b;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        d    =    p    *    q    +    a;    d  =  p  *  q;  d  =  p  *  q  +  b;	  	compilable	  [FE]  AssertionError  	113	4	add
535	[BUG]  [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  a);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  a);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        d    =    p    *    q    +    a;    d  =  p  *  q;  d  =  p  *  q  +  a);	  	non-compiled	[CE]  ';'  expected	113	None	add
536	[BUG]  [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  a  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  a  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        d    =    p    *    q    +    a;    d  =  p  *  q;  d  =  p  *  q  +  a	  	non-compiled	[CE]  ';'  expected	113	None	add
537	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  *  r  +  1;	  d    =    p    *    r;    	compilable	  [FE]  AssertionError  	18	5	replace
538	[BUG]  [BUGGY]  d  =  p  *  r  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  r  +  1;	  d    =    p    *    r;    	compilable	  [FE]  AssertionError  	18	5	replace
539	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  d  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        *        q;        d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;	  	compilable	  [FE]  AssertionError  	40	4	add
540	[BUG]  [BUGGY]  d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  d  =  p  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  d  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;	  	compilable	  [FE]  AssertionError  	40	4	add
541	[BUG]  [BUGGY]  d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  d  =  p  *  q;  line  =  p  *  q;  [CE]  cannot  find  symbol  line  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  d  =  p  *  q;  line  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  line  =  p  *  q;	  	non-compiled	[CE]  cannot  find  symbol  line	40	None	add
542	[BUG]  [BUGGY]  d    =    p    *    q;    d  =  p  *  q;  int  d  =  p  *  q;  d  =  p  *  q;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q;  int  d  =  p  *  q;  d  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        d    =    p    *    q;    int  d  =  p  *  q;  d  =  p  *  q;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	40	None	add
543	[BUG]  [BUGGY]  d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  d  =  p  *  q;  no  =  p  *  q;  [CE]  cannot  find  symbol  no  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  d  =  p  *  q;  no  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  no  =  p  *  q;	  	non-compiled	[CE]  cannot  find  symbol  no	40	None	add
544	[BUG]  [BUGGY]  timeout  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  d  =  r  /  q;  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    m))    {    d  =  r  /  q;  d  =  r  /  q;	  timeout    	compilable	timeout	33	1	add
545	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  d  =  r  /  q;  d  =  r  /  q;  timeout  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  d  =  r  /  q;  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    m))    {    d  =  r  /  q;  d  =  r  /  q;	  timeout    	compilable	timeout	33	1	add
546	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    m))    {    if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {	  timeout    	non-compiled	[CE]  reached  end  of  file  while  parsing	33	None	add
547	[BUG]  [BUGGY]  timeout  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    m))    {    d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {	  timeout    	compilable	timeout	33	1	add
548	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  timeout  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    m))    {    d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {	  timeout    	compilable	timeout	33	1	add
549	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    m))    {    if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {	  timeout    	non-compiled	[CE]  reached  end  of  file  while  parsing	33	None	add
550	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m)  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m)  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    m))    {    d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m)	  timeout    	non-compiled	[CE]  ')'  expected	33	None	add
551	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  r)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	185	None	replace
552	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  r)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	185	None	replace
553	[BUG]  [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  r)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	185	None	replace
554	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  p;  d  =  q  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    *    p;    d  =  q  *  p;	  	compilable	  [FE]  AssertionError  	48	4	add
555	[BUG]  [BUGGY]  d  =  q  *  p;  d  =  q  *  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  p;  d  =  q  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    *    p;    d  =  q  *  p;	  	compilable	  [FE]  AssertionError  	48	4	add
556	[BUG]  [BUGGY]  d  =  q  *  p;  d  =  q  *  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  <  =  a)  {  d  =  tol2  +  d;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  p;  d  =  q  *  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  <  =  a)  {  d  =  tol2  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    *    p;    d  =  q  *  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  <  =  a)  {  d  =  tol2  +  d;  }	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
557	[BUG]  [BUGGY]  d  =  q  *  p;  d  =  q  *  p;  }  else  if(i  >  a  -  x)  {  d  =  q  *  p;  }  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  p;  d  =  q  *  p;  }  else  if(i  >  a  -  x)  {  d  =  q  *  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    *    p;    d  =  q  *  p;  }  else  if(i  >  a  -  x)  {  d  =  q  *  p;  }	  	non-compiled	[CE]  'else'  without  'if'	48	None	add
558	[BUG]  [BUGGY]  d  =  q  *  p;  d  =  q  *  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  <  =  a)  {  d  =  tol1  +  d;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  p;  d  =  q  *  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  <  =  a)  {  d  =  tol1  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    *    p;    d  =  q  *  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  <  =  a)  {  d  =  tol1  +  d;  }	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
559	[BUG]  [BUGGY]  d  =  q  *  p;  d  =  q  *  p;  }  else  if(isMinim)  {  d  =  q  *  p;  }  [CE]  'else'  without  'if'  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  p;  d  =  q  *  p;  }  else  if(isMinim)  {  d  =  q  *  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    *    p;    d  =  q  *  p;  }  else  if(isMinim)  {  d  =  q  *  p;  }	  	non-compiled	[CE]  'else'  without  'if'	48	None	add
560	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    m    *    q;    d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	46	4	add
561	[BUG]  [BUGGY]  d  =  m  *  q;  d  =  m  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    *    q;    d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	46	4	add
562	[BUG]  [BUGGY]  timeout  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  q;  d  =  m  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    m    *    q;    d  =  m  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	46	1	add
563	[BUG]  [BUGGY]  d  =  m  *  q;  d  =  m  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  timeout  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  q;  d  =  m  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    *    q;    d  =  m  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	46	1	add
564	[BUG]  [BUGGY]  d  =  m  *  q;  d  =  m  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  y)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  cannot  find  symbol  y  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  q;  d  =  m  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  y)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    *    q;    d  =  m  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  y)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  cannot  find  symbol  y	46	None	add
565	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  q;  d  =  m  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    m    *    q;    d  =  m  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {	  	compilable	timeout	46	1	add
566	[BUG]  [BUGGY]  d  =  m  *  q;  d  =  m  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  timeout  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  q;  d  =  m  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    *    q;    d  =  m  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {	  	compilable	timeout	46	1	add
567	[BUG]  [BUGGY]  timeout  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  q;  d  =  m  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(2.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    m    *    q;    d  =  m  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(2.5  *  q  *  r))  {	  	compilable	timeout	46	1	add
568	[BUG]  [BUGGY]  d  =  m  *  q;  d  =  m  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(2.5  *  q  *  r))  {  timeout  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  q;  d  =  m  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(2.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    *    q;    d  =  m  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(2.5  *  q  *  r))  {	  	compilable	timeout	46	1	add
569	[BUG]  [BUGGY]  if(x  <  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(l    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	replace
570	[BUG]  [BUGGY]  timeout  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  r  /  q;  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d  =  r  /  q;  d  =  r  /  q;	  timeout    	compilable	timeout	30	1	add
571	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  r  /  q;  d  =  r  /  q;  timeout  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  r  /  q;  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d  =  r  /  q;  d  =  r  /  q;	  timeout    	compilable	timeout	30	1	add
572	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  timeout    	non-compiled	[CE]  reached  end  of  file  while  parsing	30	None	add
573	[BUG]  [BUGGY]  timeout  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  timeout    	compilable	timeout	30	1	add
574	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  timeout  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  timeout    	compilable	timeout	30	1	add
575	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  timeout    	non-compiled	[CE]  reached  end  of  file  while  parsing	30	None	add
576	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r)  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r)  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r)	  timeout    	non-compiled	[CE]  ')'  expected	30	None	add
577	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  2  +  1;	  d    =    d    /    2;    	compilable	  [FE]  AssertionError  	99	5	replace
578	[BUG]  [BUGGY]  d  =  d  /  2  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  2  +  1;	  d    =    d    /    2;    	compilable	  [FE]  AssertionError  	99	5	replace
579	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  2  *  r;	  d    =    d    /    2;    	compilable	  [FE]  AssertionError  	99	6	replace
580	[BUG]  [BUGGY]  d  =  d  /  2  *  r;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  2  *  r;	  d    =    d    /    2;    	compilable	  [FE]  AssertionError  	99	6	replace
581	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2  *  t;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  2  *  t;	  d    =    d    /    2;    	compilable	  [FE]  AssertionError  	99	5	replace
582	[BUG]  [BUGGY]  d  =  d  /  2  *  t;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2  *  t;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  2  *  t;	  d    =    d    /    2;    	compilable	  [FE]  AssertionError  	99	5	replace
583	[BUG]  [BUGGY]  timeout  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  d  /  q;  d  =  d  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        d        /        q;        d    =    d    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d  =  d  /  q;  d  =  d  /  q;	  timeout    	compilable	timeout	92	1	add
584	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  d  /  q;  d  =  d  /  q;  timeout  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  d  /  q;  d  =  d  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d  =  d  /  q;  d  =  d  /  q;	  timeout    	compilable	timeout	92	1	add
585	[BUG]  [BUGGY]  timeout  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  d  /  q;  d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        d        /        q;        d    =    d    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d  =  d  /  q;  d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  timeout    	compilable	timeout	92	1	add
586	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  d  /  q;  d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  timeout  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  d  /  q;  d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d  =  d  /  q;  d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  timeout    	compilable	timeout	92	1	add
587	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  timeout    	non-compiled	[CE]  reached  end  of  file  while  parsing	92	None	add
588	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  d  /  q;  d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r)  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  d  /  q;  d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r)  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d  =  d  /  q;  d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r)	  timeout    	non-compiled	[CE]  ')'  expected	92	None	add
589	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  timeout    	non-compiled	[CE]  reached  end  of  file  while  parsing	92	None	add
590	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        *        q;        if    (p    >    q    *    q)    {    d    =    p    *    q;    }    d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	175	4	add
591	[BUG]  [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        if    (p    >    q    *    q)    {    d    =    p    *    q;    }    d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	175	4	add
592	[BUG]  [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  if  (p  >  q  *  q)  {  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  if  (p  >  q  *  q)  {  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        if    (p    >    q    *    q)    {    d    =    p    *    q;    }    if  (p  >  q  *  q)  {  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	175	None	add
593	[BUG]  [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  if  (p  >  p  *  q)  {  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  if  (p  >  p  *  q)  {  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        if    (p    >    q    *    q)    {    d    =    p    *    q;    }    if  (p  >  p  *  q)  {  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	175	None	add
594	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  r  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  m  /  r  +  1;	  d    =    m    /    r;    	compilable	  [FE]  AssertionError  	22	5	replace
595	[BUG]  [BUGGY]  d  =  m  /  r  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  r  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  m  /  r  +  1;	  d    =    m    /    r;    	compilable	  [FE]  AssertionError  	22	5	replace
596	[BUG]  [BUGGY]  if(p  <  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  <  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  <  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	67	None	replace
597	[BUG]  [BUGGY]  if(x  <  a  *  (lo  -  x)&&  p  <  r  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *  (lo  -  x)&&  p  <  r  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *  (lo  -  x)&&  p  <  r  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	67	None	replace
598	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  q  *  m;	  d    =    m    *    q;    	compilable	  [FE]  AssertionError  	47	5	replace
599	[BUG]  [BUGGY]  d  =  q  *  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  q  *  m;	  d    =    m    *    q;    	compilable	  [FE]  AssertionError  	47	5	replace
600	[BUG]  [BUGGY]  if(x  >  a  *(l  -  x)&&  p  <  q  *(l  lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(l  -  x)&&  p  <  q  *(l  lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(l  -  x)&&  p  <  q  *(l  lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(b    -    x)&&    p    <    q    *(l    lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ')'  expected	153	None	replace
601	[BUG]  [BUGGY]  if(x  <  a  *(l  -  x)&&  p  <  q  *(l  lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(l  -  x)&&  p  <  q  *(l  lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(l  -  x)&&  p  <  q  *(l  lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(b    -    x)&&    p    <    q    *(l    lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ')'  expected	153	None	replace
602	[BUG]  [BUGGY]  if(p  >  a  *(b  -  x)&&  p  <  q  *(l  lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(b  -  x)&&  p  <  q  *(l  lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(b  -  x)&&  p  <  q  *(l  lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(b    -    x)&&    p    <    q    *(l    lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ')'  expected	153	None	replace
603	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  q  /  p;  d  =  q  /  p;  d  =  q  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        d    =    q    /    p;    d  =  q  /  p;  d  =  q  /  p;	  	compilable	  [FE]  AssertionError  	50	4	add
604	[BUG]  [BUGGY]  d    =    q    /    p;    d  =  q  /  p;  d  =  q  /  p;  d  =  q  /  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  q  /  p;  d  =  q  /  p;  d  =  q  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        d    =    q    /    p;    d  =  q  /  p;  d  =  q  /  p;	  	compilable	  [FE]  AssertionError  	50	4	add
605	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  q  /  p;  d  =  q  /  p;  d  =  q  %  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        d    =    q    /    p;    d  =  q  /  p;  d  =  q  %  p;	  	compilable	  [FE]  AssertionError  	50	4	add
606	[BUG]  [BUGGY]  d    =    q    /    p;    d  =  q  /  p;  d  =  q  /  p;  d  =  q  %  p;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  q  /  p;  d  =  q  /  p;  d  =  q  %  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        d    =    q    /    p;    d  =  q  /  p;  d  =  q  %  p;	  	compilable	  [FE]  AssertionError  	50	4	add
607	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  q  /  p;  d  =  p  /  p;  d  =  q  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        d    =    q    /    p;    d  =  p  /  p;  d  =  q  /  p;	  	compilable	  [FE]  AssertionError  	50	4	add
608	[BUG]  [BUGGY]  d    =    q    /    p;    d  =  q  /  p;  d  =  p  /  p;  d  =  q  /  p;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  q  /  p;  d  =  p  /  p;  d  =  q  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        d    =    q    /    p;    d  =  p  /  p;  d  =  q  /  p;	  	compilable	  [FE]  AssertionError  	50	4	add
609	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  q  /  p;  d  =  q  *  p;  d  =  q  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        d    =    q    /    p;    d  =  q  *  p;  d  =  q  /  p;	  	compilable	  [FE]  AssertionError  	50	4	add
610	[BUG]  [BUGGY]  d    =    q    /    p;    d  =  q  /  p;  d  =  q  *  p;  d  =  q  /  p;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  q  /  p;  d  =  q  *  p;  d  =  q  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        d    =    q    /    p;    d  =  q  *  p;  d  =  q  /  p;	  	compilable	  [FE]  AssertionError  	50	4	add
611	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  r  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	r  =  p  /  r;	  d    =    p    /    r;    r    =    p    /    r;    	compilable	  [FE]  AssertionError  	137	5	replace
612	[BUG]  [BUGGY]  r  =  p  /  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  r  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	r  =  p  /  r;	  d    =    p    /    r;    r    =    p    /    r;    	compilable	  [FE]  AssertionError  	137	5	replace
613	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  r  =  p  /  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  2;  r  =  p  /  2;	  d    =    p    /    r;    r    =    p    /    r;    	compilable	  [FE]  AssertionError  	137	6	replace
614	[BUG]  [BUGGY]  d  =  p  /  2;  r  =  p  /  2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  r  =  p  /  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  2;  r  =  p  /  2;	  d    =    p    /    r;    r    =    p    /    r;    	compilable	  [FE]  AssertionError  	137	6	replace
615	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r;  r  =  p  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  *  r;  r  =  p  *  r;	  d    =    p    /    r;    r    =    p    /    r;    	compilable	  [FE]  AssertionError  	137	5	replace
616	[BUG]  [BUGGY]  d  =  p  *  r;  r  =  p  *  r;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r;  r  =  p  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  r;  r  =  p  *  r;	  d    =    p    /    r;    r    =    p    /    r;    	compilable	  [FE]  AssertionError  	137	5	replace
617	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  r  +  1;  r  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  r  +  1;  r  =  p  /  r;	  d    =    p    /    r;    r    =    p    /    r;    	compilable	  [FE]  AssertionError  	137	5	replace
618	[BUG]  [BUGGY]  d  =  p  /  r  +  1;  r  =  p  /  r;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  r  +  1;  r  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  r  +  1;  r  =  p  /  r;	  d    =    p    /    r;    r    =    p    /    r;    	compilable	  [FE]  AssertionError  	137	5	replace
619	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  p  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  r  /  p  +  1;	  d    =    p    /    r    +    1;    	compilable	  [FE]  AssertionError  	20	5	replace
620	[BUG]  [BUGGY]  d  =  r  /  p  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  p  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  r  /  p  +  1;	  d    =    p    /    r    +    1;    	compilable	  [FE]  AssertionError  	20	5	replace
621	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  r  *  1  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  r  *  1  +  1;	  d    =    p    /    r    +    1;    	compilable	  [FE]  AssertionError  	20	5	replace
622	[BUG]  [BUGGY]  d  =  p  /  r  *  1  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  r  *  1  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  r  *  1  +  1;	  d    =    p    /    r    +    1;    	compilable	  [FE]  AssertionError  	20	5	replace
623	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  d  =  p  /  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    /    2;    d  =  p  /  2;	  	compilable	  [FE]  AssertionError  	161	4	add
624	[BUG]  [BUGGY]  d  =  p  /  2;  d  =  p  /  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  d  =  p  /  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    2;    d  =  p  /  2;	  	compilable	  [FE]  AssertionError  	161	4	add
625	[BUG]  [BUGGY]  timeout  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  d  =  p  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    /    2;    d  =  p  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	161	1	add
626	[BUG]  [BUGGY]  d  =  p  /  2;  d  =  p  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  timeout  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  d  =  p  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    2;    d  =  p  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	161	1	add
627	[BUG]  [BUGGY]  timeout  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  d  =  p  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    /    2;    d  =  p  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	161	1	add
628	[BUG]  [BUGGY]  d  =  p  /  2;  d  =  p  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  timeout  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  d  =  p  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    2;    d  =  p  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	161	1	add
629	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  d  =  p  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  +  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    /    2;    d  =  p  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  +  r)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	161	1	add
630	[BUG]  [BUGGY]  d  =  p  /  2;  d  =  p  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  +  r)  <  Math.abs(0.5  *  q  *  r))  {  timeout  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  d  =  p  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  +  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    2;    d  =  p  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  +  r)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	161	1	add
631	[BUG]  [BUGGY]  timeout  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  d  =  p  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    /    2;    d  =  p  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	161	1	add
632	[BUG]  [BUGGY]  d  =  p  /  2;  d  =  p  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  timeout  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  d  =  p  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    2;    d  =  p  /  2;  }  else  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	161	1	add
633	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol1  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  tol1  /  p;	  d    =    q    /    p;    d    =    q    /    p;    }    else    if(isMinim)    {    d    =    tol1    /    p;    }    	compilable	  [FE]  AssertionError  	55	6	replace
634	[BUG]  [BUGGY]  d  =  tol1  /  p;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol1  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  tol1  /  p;	  d    =    q    /    p;    d    =    q    /    p;    }    else    if(isMinim)    {    d    =    tol1    /    p;    }    	compilable	  [FE]  AssertionError  	55	6	replace
635	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol2  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  tol2  /  p;	  d    =    q    /    p;    d    =    q    /    p;    }    else    if(isMinim)    {    d    =    tol1    /    p;    }    	compilable	  [FE]  AssertionError  	55	4	replace
636	[BUG]  [BUGGY]  d  =  tol2  /  p;  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol2  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  tol2  /  p;	  d    =    q    /    p;    d    =    q    /    p;    }    else    if(isMinim)    {    d    =    tol1    /    p;    }    	compilable	  [FE]  AssertionError  	55	4	replace
637	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(isMinim)  {  d  =  tol1  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(isMinim)  {  d  =  tol1  /  p;  }	  d    =    q    /    p;    d    =    q    /    p;    }    else    if(isMinim)    {    d    =    tol1    /    p;    }    	compilable	  [FE]  AssertionError  	55	5	replace
638	[BUG]  [BUGGY]  if(isMinim)  {  d  =  tol1  /  p;  }  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(isMinim)  {  d  =  tol1  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(isMinim)  {  d  =  tol1  /  p;  }	  d    =    q    /    p;    d    =    q    /    p;    }    else    if(isMinim)    {    d    =    tol1    /    p;    }    	compilable	  [FE]  AssertionError  	55	5	replace
639	[BUG]  [BUGGY]  d  =  tol1  /  p;  }  else  if(isMinim)  {  d  =  tol2  /  p;  }  [CE]  'else'  without  'if'  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol1  /  p;  }  else  if(isMinim)  {  d  =  tol2  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  tol1  /  p;  }  else  if(isMinim)  {  d  =  tol2  /  p;  }	  d    =    q    /    p;    d    =    q    /    p;    }    else    if(isMinim)    {    d    =    tol1    /    p;    }    	non-compiled	[CE]  'else'  without  'if'	55	None	replace
640	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    r  =  r  /  q;  d  =  r  /  q;  r  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        r    =    r    /    q;    d  =  r  /  q;  r  =  r  /  q;	  	compilable	  [FE]  AssertionError  	147	4	add
641	[BUG]  [BUGGY]  d    =    r    /    q;    r  =  r  /  q;  d  =  r  /  q;  r  =  r  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    r  =  r  /  q;  d  =  r  /  q;  r  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        r    =    r    /    q;    d  =  r  /  q;  r  =  r  /  q;	  	compilable	  [FE]  AssertionError  	147	4	add
642	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    r  =  r  /  q;  d  =  r  *  q;  r  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        r    =    r    /    q;    d  =  r  *  q;  r  =  r  /  q;	  	compilable	  [FE]  AssertionError  	147	4	add
643	[BUG]  [BUGGY]  d    =    r    /    q;    r  =  r  /  q;  d  =  r  *  q;  r  =  r  /  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    r  =  r  /  q;  d  =  r  *  q;  r  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        r    =    r    /    q;    d  =  r  *  q;  r  =  r  /  q;	  	compilable	  [FE]  AssertionError  	147	4	add
644	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    r  =  r  /  q;  d  =  r  /  q;  r  =  r  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        r    =    r    /    q;    d  =  r  /  q;  r  =  r  %  q;	  	compilable	  [FE]  AssertionError  	147	4	add
645	[BUG]  [BUGGY]  d    =    r    /    q;    r  =  r  /  q;  d  =  r  /  q;  r  =  r  %  q;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    r  =  r  /  q;  d  =  r  /  q;  r  =  r  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        r    =    r    /    q;    d  =  r  /  q;  r  =  r  %  q;	  	compilable	  [FE]  AssertionError  	147	4	add
646	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    r  =  r  /  q;  d  =  r  /  q;  r  =  r  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        r    =    r    /    q;    d  =  r  /  q;  r  =  r  *  q;	  	compilable	  [FE]  AssertionError  	147	4	add
647	[BUG]  [BUGGY]  d    =    r    /    q;    r  =  r  /  q;  d  =  r  /  q;  r  =  r  *  q;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    r  =  r  /  q;  d  =  r  /  q;  r  =  r  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        r    =    r    /    q;    d  =  r  /  q;  r  =  r  *  q;	  	compilable	  [FE]  AssertionError  	147	4	add
648	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  x;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  m  /  x;	  d    =    m    /    q;    d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    y)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	compilable	  [FE]  AssertionError  	60	5	replace
649	[BUG]  [BUGGY]  d  =  m  /  x;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  x;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  m  /  x;	  d    =    m    /    q;    d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    y)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	compilable	  [FE]  AssertionError  	60	5	replace
650	[BUG]  [BUGGY]  if(l  >  a)  {  d  =  p  /  r;  }  [CE]  cannot  find  symbol  l  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(l  >  a)  {  d  =  p  /  r;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(l  >  a)  {  d  =  p  /  r;  }	  d    =    p    /    r;    d    =    p    /    r;    }    else    if(l    >    a)    {    d    =    p    /    r;    }    	non-compiled	[CE]  cannot  find  symbol  l	84	None	replace
651	[BUG]  [BUGGY]  if(l  >  a)  {  d  =  p  /  r;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  l  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(l  >  a)  {  d  =  p  /  r;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(l  >  a)  {  d  =  p  /  r;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  d    =    p    /    r;    d    =    p    /    r;    }    else    if(l    >    a)    {    d    =    p    /    r;    }    	non-compiled	[CE]  cannot  find  symbol  l	84	None	replace
652	[BUG]  [BUGGY]  if(l  >  a)  {  d  =  p  /  r;  }  else  if(l  >  a)  {  d  =  p  /  r;  }  [CE]  cannot  find  symbol  l  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(l  >  a)  {  d  =  p  /  r;  }  else  if(l  >  a)  {  d  =  p  /  r;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(l  >  a)  {  d  =  p  /  r;  }  else  if(l  >  a)  {  d  =  p  /  r;  }	  d    =    p    /    r;    d    =    p    /    r;    }    else    if(l    >    a)    {    d    =    p    /    r;    }    	non-compiled	[CE]  cannot  find  symbol  l	84	None	replace
653	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    /    r;    d  =  p  /  r;  d  =  p  /  r;  d  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        /        r;        d    =    p    /    r;    d  =  p  /  r;  d  =  p  /  r;	  	compilable	  [FE]  AssertionError  	79	4	add
654	[BUG]  [BUGGY]  d    =    p    /    r;    d  =  p  /  r;  d  =  p  /  r;  d  =  p  /  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    /    r;    d  =  p  /  r;  d  =  p  /  r;  d  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        /        r;        d    =    p    /    r;    d  =  p  /  r;  d  =  p  /  r;	  	compilable	  [FE]  AssertionError  	79	4	add
655	[BUG]  [BUGGY]  d    =    p    /    r;    d  =  p  /  r;  int  d  =  p  /  r;  d  =  p  /  r;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    /    r;    d  =  p  /  r;  int  d  =  p  /  r;  d  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        /        r;        d    =    p    /    r;    int  d  =  p  /  r;  d  =  p  /  r;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	79	None	add
656	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    /    r;    d  =  p  /  r;  d  =  p  *  r;  d  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        /        r;        d    =    p    /    r;    d  =  p  *  r;  d  =  p  /  r;	  	compilable	  [FE]  AssertionError  	79	4	add
657	[BUG]  [BUGGY]  d    =    p    /    r;    d  =  p  /  r;  d  =  p  *  r;  d  =  p  /  r;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    /    r;    d  =  p  /  r;  d  =  p  *  r;  d  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        /        r;        d    =    p    /    r;    d  =  p  *  r;  d  =  p  /  r;	  	compilable	  [FE]  AssertionError  	79	4	add
658	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    /    r;    d  =  p  /  r;  d  =  p  /  r;  d  =  p  %  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        /        r;        d    =    p    /    r;    d  =  p  /  r;  d  =  p  %  r;	  	compilable	  [FE]  AssertionError  	79	4	add
659	[BUG]  [BUGGY]  d    =    p    /    r;    d  =  p  /  r;  d  =  p  /  r;  d  =  p  %  r;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    /    r;    d  =  p  /  r;  d  =  p  /  r;  d  =  p  %  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        /        r;        d    =    p    /    r;    d  =  p  /  r;  d  =  p  %  r;	  	compilable	  [FE]  AssertionError  	79	4	add
660	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  tol1;  d  =  d  /  tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    tol1;    d  =  d  /  tol1;	  	compilable	  [FE]  AssertionError  	150	4	add
661	[BUG]  [BUGGY]  d  =  d  /  tol1;  d  =  d  /  tol1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  tol1;  d  =  d  /  tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    tol1;    d  =  d  /  tol1;	  	compilable	  [FE]  AssertionError  	150	4	add
662	[BUG]  [BUGGY]  d  =  d  /  tol1;  d  =  d  /  tol1);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  tol1;  d  =  d  /  tol1);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    tol1;    d  =  d  /  tol1);	  	non-compiled	[CE]  ';'  expected	150	None	add
663	[BUG]  [BUGGY]  d  =  d  /  tol1;  d  =  d  /  tol1.;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  tol1;  d  =  d  /  tol1.;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    tol1;    d  =  d  /  tol1.;	  	non-compiled	[CE]  <identifier>  expected	150	None	add
664	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  tol1;  d  =  d  /  tol2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    tol1;    d  =  d  /  tol2;	  	compilable	  [FE]  AssertionError  	150	4	add
665	[BUG]  [BUGGY]  d  =  d  /  tol1;  d  =  d  /  tol2;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  tol1;  d  =  d  /  tol2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    tol1;    d  =  d  /  tol2;	  	compilable	  [FE]  AssertionError  	150	4	add
666	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(b    -    x)&&    p    <    a    *(lo    -    x)&&    Math.abs(p    -    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	127	None	replace
667	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(b    -    x)&&    p    <    a    *(lo    -    x)&&    Math.abs(p    -    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	127	None	replace
668	[BUG]  [BUGGY]  timeout  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  d  =  r  /  q;  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    d  =  r  /  q;  d  =  r  /  q;	  timeout    	compilable	timeout	35	1	add
669	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  d  =  r  /  q;  d  =  r  /  q;  timeout  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  d  =  r  /  q;  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    d  =  r  /  q;  d  =  r  /  q;	  timeout    	compilable	timeout	35	1	add
670	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {	  timeout    	non-compiled	[CE]  reached  end  of  file  while  parsing	35	None	add
671	[BUG]  [BUGGY]  timeout  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {	  timeout    	compilable	timeout	35	1	add
672	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  timeout  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {	  timeout    	compilable	timeout	35	1	add
673	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [CE]  reached  end  of  file  while  parsing  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {	  timeout    	non-compiled	[CE]  reached  end  of  file  while  parsing	35	None	add
674	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t)  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t)  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t)	  timeout    	non-compiled	[CE]  ')'  expected	35	None	add
675	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  +  1;  d  =  d  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    q    +    1;    d  =  d  /  q  +  1;	  	compilable	  [FE]  AssertionError  	100	4	add
676	[BUG]  [BUGGY]  d  =  d  /  q  +  1;  d  =  d  /  q  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  +  1;  d  =  d  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    q    +    1;    d  =  d  /  q  +  1;	  	compilable	  [FE]  AssertionError  	100	4	add
677	[BUG]  [BUGGY]  d  =  d  /  q  +  1;  int  d  =  d  /  q  +  1;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  +  1;  int  d  =  d  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    q    +    1;    int  d  =  d  /  q  +  1;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	100	None	add
678	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  +  1;  d  =  a  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    q    +    1;    d  =  a  /  q  +  1;	  	compilable	  [FE]  AssertionError  	100	4	add
679	[BUG]  [BUGGY]  d  =  d  /  q  +  1;  d  =  a  /  q  +  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  +  1;  d  =  a  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    q    +    1;    d  =  a  /  q  +  1;	  	compilable	  [FE]  AssertionError  	100	4	add
680	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  +  1;  d  =  p  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    q    +    1;    d  =  p  /  q  +  1;	  	compilable	  [FE]  AssertionError  	100	4	add
681	[BUG]  [BUGGY]  d  =  d  /  q  +  1;  d  =  p  /  q  +  1;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  +  1;  d  =  p  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    q    +    1;    d  =  p  /  q  +  1;	  	compilable	  [FE]  AssertionError  	100	4	add
682	[BUG]  [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  <  r  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  <  r  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  ||  p  <  a  ||  p  <  r  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	replace
683	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	154	None	replace
684	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  /  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  /  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  /  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	154	None	replace
685	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	154	None	replace
686	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    1)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	189	4	add
687	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    1)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	189	4	add
688	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    1)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	189	None	add
689	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  If(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  If(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    1)    <    Math.abs(0.5    *    q    *    r))    {    }    If(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  ';'  expected	189	None	add
690	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  M.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  cannot  find  symbol  M  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  M.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    1)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  M.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  cannot  find  symbol  M	189	None	add
691	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  *  q;  d  =  m  /  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        m        /        q;        d    =    m    *    q;    d  =  m  /  q;  d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	105	4	add
692	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  *  q;  d  =  m  /  q;  d  =  m  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  *  q;  d  =  m  /  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    *    q;    d  =  m  /  q;  d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	105	4	add
693	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  *  q;  int  d  =  m  /  q;  d  =  m  *  q;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  *  q;  int  d  =  m  /  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    *    q;    int  d  =  m  /  q;  d  =  m  *  q;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	105	None	add
694	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  *  q;  d  =  m  *  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        m        /        q;        d    =    m    *    q;    d  =  m  *  q;  d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	105	4	add
695	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  *  q;  d  =  m  *  q;  d  =  m  *  q;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  *  q;  d  =  m  *  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    *    q;    d  =  m  *  q;  d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	105	4	add
696	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  d  =  r  /  q;  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        d    =    r    /    q;    d  =  r  /  q;  d  =  r  /  q;	  	compilable	  [FE]  AssertionError  	28	4	add
697	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  d  =  r  /  q;  d  =  r  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  d  =  r  /  q;  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    d  =  r  /  q;  d  =  r  /  q;	  	compilable	  [FE]  AssertionError  	28	4	add
698	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  d  =  r  *  q;  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        d    =    r    /    q;    d  =  r  *  q;  d  =  r  /  q;	  	compilable	  [FE]  AssertionError  	28	4	add
699	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  d  =  r  *  q;  d  =  r  /  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  d  =  r  *  q;  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    d  =  r  *  q;  d  =  r  /  q;	  	compilable	  [FE]  AssertionError  	28	4	add
700	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  d  =  a  /  q;  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        d    =    r    /    q;    d  =  a  /  q;  d  =  r  /  q;	  	compilable	  [FE]  AssertionError  	28	4	add
701	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  d  =  a  /  q;  d  =  r  /  q;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  d  =  a  /  q;  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    d  =  a  /  q;  d  =  r  /  q;	  	compilable	  [FE]  AssertionError  	28	4	add
702	[BUG]  [BUGGY]  if(x  <  a  *(l  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(l  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(l  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(l    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	121	None	replace
703	[BUG]  [BUGGY]  if(x  >  a  *(l  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(l  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(l  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(l    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	121	None	replace
704	[BUG]  [BUGGY]  if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)    &&    Math.abs(p)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	134	None	replace
705	[BUG]  [BUGGY]  if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)    &&    Math.abs(p)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
706	[BUG]  [BUGGY]  if(p  >  a  *  (lo  -  x)&&  p  <  r  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *  (lo  -  x)&&  p  <  r  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *  (lo  -  x)&&  p  <  r  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *    (lo    -    x)&&    p    <    r    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	68	None	replace
707	[BUG]  [BUGGY]  if(x  >  a  *  (a  -  x)&&  p  <  q  *  (lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *  (a  -  x)&&  p  <  q  *  (lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *  (a  -  x)&&  p  <  q  *  (lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *    (b    -    x)&&    p    <    q    *    (lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	207	None	replace
708	[BUG]  [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *    (b    -    x)&&    p    <    q    *    (lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	207	None	replace
709	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  <  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(b    -    x)&&    p    <    q    *(lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	187	5	replace
710	[BUG]  [BUGGY]  if(x  <  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(b    -    x)&&    p    <    q    *(lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	187	5	replace
711	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(p  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	74	5	replace
712	[BUG]  [BUGGY]  if(p  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	74	5	replace
713	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  >=  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	74	5	replace
714	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	74	5	replace
715	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	118	5	replace
716	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	118	5	replace
717	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(p  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	118	5	replace
718	[BUG]  [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	118	5	replace
719	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        *        q;        if    (p    >    a    *    q)    {    d    =    p    *    q;    }    d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	173	4	add
720	[BUG]  [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        if    (p    >    a    *    q)    {    d    =    p    *    q;    }    d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	173	4	add
721	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        *        q;        if    (p    >    a    *    q)    {    d    =    p    *    q;    }    if  (p  >  a  *  q)  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	173	4	add
722	[BUG]  [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        if    (p    >    a    *    q)    {    d    =    p    *    q;    }    if  (p  >  a  *  q)  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	173	4	add
723	[BUG]  [BUGGY]  if(x  >  a  *(l  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(l  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(l  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(b    -    x)&&    p    <    b    *(lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	182	None	replace
724	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  *  p;	  d    =    q    /    p;    d    =    p    /    p;    	compilable	  [FE]  AssertionError  	131	5	replace
725	[BUG]  [BUGGY]  d  =  p  *  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  p;	  d    =    q    /    p;    d    =    p    /    p;    	compilable	  [FE]  AssertionError  	131	5	replace
726	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    -    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	157	None	replace
727	[BUG]  [BUGGY]  if(d  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(d  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(d  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    -    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	157	None	replace
728	[BUG]  [BUGGY]  if(p  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    -    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	157	None	replace
729	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    =    Math.abs(0.5    *    q    *    r))    {    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
730	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  d  =  a  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    a    /    p;    d  =  a  /  p;	  	compilable	  [FE]  AssertionError  	180	4	add
731	[BUG]  [BUGGY]  d  =  a  /  p;  d  =  a  /  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  d  =  a  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    a    /    p;    d  =  a  /  p;	  	compilable	  [FE]  AssertionError  	180	4	add
732	[BUG]  [BUGGY]  timeout  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  d  =  a  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  -  a  &&  b  <  q  *  r)  {  d  =  a  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    a    /    p;    d  =  a  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  -  a  &&  b  <  q  *  r)  {  d  =  a  /  p;  }	  	compilable	timeout	180	1	add
733	[BUG]  [BUGGY]  d  =  a  /  p;  d  =  a  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  -  a  &&  b  <  q  *  r)  {  d  =  a  /  p;  }  timeout  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  d  =  a  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  -  a  &&  b  <  q  *  r)  {  d  =  a  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    a    /    p;    d  =  a  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  -  a  &&  b  <  q  *  r)  {  d  =  a  /  p;  }	  	compilable	timeout	180	1	add
734	[BUG]  [BUGGY]  timeout  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  d  =  a  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  b  <  q  *  r)  {  d  =  a  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    a    /    p;    d  =  a  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  b  <  q  *  r)  {  d  =  a  /  p;  }	  	compilable	timeout	180	1	add
735	[BUG]  [BUGGY]  d  =  a  /  p;  d  =  a  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  b  <  q  *  r)  {  d  =  a  /  p;  }  timeout  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  d  =  a  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  b  <  q  *  r)  {  d  =  a  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    a    /    p;    d  =  a  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  b  <  q  *  r)  {  d  =  a  /  p;  }	  	compilable	timeout	180	1	add
736	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  d  =  a  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  p  <  q  *  r)  {  d  =  a  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    a    /    p;    d  =  a  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  p  <  q  *  r)  {  d  =  a  /  p;  }	  	compilable	timeout	180	1	add
737	[BUG]  [BUGGY]  d  =  a  /  p;  d  =  a  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  p  <  q  *  r)  {  d  =  a  /  p;  }  timeout  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  d  =  a  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  p  <  q  *  r)  {  d  =  a  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    a    /    p;    d  =  a  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  &&  p  <  q  *  r)  {  d  =  a  /  p;  }	  	compilable	timeout	180	1	add
738	[BUG]  [BUGGY]  timeout  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  d  =  a  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  -  a  &&  b  <  q  *  r)  {  d  =  tol2  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    a    /    p;    d  =  a  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  -  a  &&  b  <  q  *  r)  {  d  =  tol2  +  d;  }	  	compilable	timeout	180	1	add
739	[BUG]  [BUGGY]  d  =  a  /  p;  d  =  a  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  -  a  &&  b  <  q  *  r)  {  d  =  tol2  +  d;  }  timeout  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  d  =  a  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  -  a  &&  b  <  q  *  r)  {  d  =  tol2  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    a    /    p;    d  =  a  /  p;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if  (x  >  a  -  a  &&  b  <  q  *  r)  {  d  =  tol2  +  d;  }	  	compilable	timeout	180	1	add
740	[BUG]  [BUGGY]  int  d  =  p  /  r;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  p  /  r;	  d    =    p    /    r;    int    d    =    p    /    r;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	135	None	replace
741	[BUG]  [BUGGY]  int  d  =  p  /  r  +  1;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  p  /  r  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  p  /  r  +  1;	  d    =    p    /    r;    int    d    =    p    /    r;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	135	None	replace
742	[BUG]  [BUGGY]  int  d  =  p  /  r  +  5;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  p  /  r  +  5;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  p  /  r  +  5;	  d    =    p    /    r;    int    d    =    p    /    r;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	135	None	replace
743	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol1  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  tol1  /  m;	  d    =    m    /    q;    if    (m    /    q    >    a)    {    if    (x    <    =    m)    {    d    =    tol1    +    d;    }    	compilable	  [FE]  AssertionError  	179	5	replace
744	[BUG]  [BUGGY]  d  =  tol1  /  m;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol1  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  tol1  /  m;	  d    =    m    /    q;    if    (m    /    q    >    a)    {    if    (x    <    =    m)    {    d    =    tol1    +    d;    }    	compilable	  [FE]  AssertionError  	179	5	replace
745	[BUG]  [BUGGY]  if(x  <  =  m)  {  d  =  tol1  /  q;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  =  m)  {  d  =  tol1  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  =  m)  {  d  =  tol1  /  q;  }	  d    =    m    /    q;    if    (m    /    q    >    a)    {    if    (x    <    =    m)    {    d    =    tol1    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
746	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol1  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  tol1  /  q;	  d    =    m    /    q;    if    (m    /    q    >    a)    {    if    (x    <    =    m)    {    d    =    tol1    +    d;    }    	compilable	  [FE]  AssertionError  	179	5	replace
747	[BUG]  [BUGGY]  d  =  tol1  /  q;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol1  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  tol1  /  q;	  d    =    m    /    q;    if    (m    /    q    >    a)    {    if    (x    <    =    m)    {    d    =    tol1    +    d;    }    	compilable	  [FE]  AssertionError  	179	5	replace
748	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(d  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(d  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	          if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	168	5	replace
749	[BUG]  [BUGGY]  if(d  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(d  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(d  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	          if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	168	5	replace
750	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  p  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	p  =  p  *  q;	  d    =    p    *    q;    if    (p    >    q    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    	compilable	  [FE]  AssertionError  	172	5	replace
751	[BUG]  [BUGGY]  p  =  p  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  p  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	p  =  p  *  q;	  d    =    p    *    q;    if    (p    >    q    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    	compilable	  [FE]  AssertionError  	172	5	replace
752	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  /  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  /  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  /  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(b    -    x)&&    p    <    q    *(lo    -    x)&&    Math.abs(p    +    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	184	None	replace
753	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(b    -    x)&&    p    <    q    *(lo    -    x)&&    Math.abs(p    +    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	184	None	replace
754	[BUG]  [BUGGY]  if(l  >  a)  {  d  =  p  *  q;  }  [CE]  cannot  find  symbol  l  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(l  >  a)  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(l  >  a)  {  d  =  p  *  q;  }	  d    =    p    *    q;    d    =    p    *    q;    }    else    if(l    >    a)    {    d    =    p    *    q;    }    	non-compiled	[CE]  cannot  find  symbol  l	43	None	replace
755	[BUG]  [BUGGY]  if(l  >  a)  {  d  =  p  *  q;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  l  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(l  >  a)  {  d  =  p  *  q;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(l  >  a)  {  d  =  p  *  q;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  d    =    p    *    q;    d    =    p    *    q;    }    else    if(l    >    a)    {    d    =    p    *    q;    }    	non-compiled	[CE]  cannot  find  symbol  l	43	None	replace
756	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  tol1;  d  =  m  /  tol2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  m  /  tol1;  d  =  m  /  tol2;	  d    =    m    /    q;    d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    y)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	compilable	  [FE]  AssertionError  	60	5	replace
757	[BUG]  [BUGGY]  d  =  m  /  tol1;  d  =  m  /  tol2;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  tol1;  d  =  m  /  tol2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  m  /  tol1;  d  =  m  /  tol2;	  d    =    m    /    q;    d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    y)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	compilable	  [FE]  AssertionError  	60	5	replace
758	[BUG]  [BUGGY]  if(q  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(q  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(q  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	86	None	replace
759	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  lo)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  lo)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  lo)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	86	None	replace
760	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  /  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  /  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  /  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(b    -    x)&&    p    <    q    *(lo    -    x)&&    Math.abs(p    +    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	184	None	replace
761	[BUG]  [BUGGY]  d  =  p  /  2;  int  d  =  p  /  2;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  int  d  =  p  /  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    2;    int  d  =  p  /  2;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	161	None	add
762	[BUG]  [BUGGY]  d  =  p  /  2;  d  =  p  /  2);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  d  =  p  /  2);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    2;    d  =  p  /  2);	  	non-compiled	[CE]  ';'  expected	161	None	add
763	[BUG]  [BUGGY]  d  =  p  /  2;  dev  =  p  /  2;  [CE]  cannot  find  symbol  dev  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  dev  =  p  /  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    2;    dev  =  p  /  2;	  	non-compiled	[CE]  cannot  find  symbol  dev	161	None	add
764	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  >  a  *(a  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	72	5	replace
765	[BUG]  [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(a  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	72	5	replace
766	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  >  a  *(a  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	72	5	replace
767	[BUG]  [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(a  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	72	5	replace
768	[BUG]  [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  an;  [CE]  cannot  find  symbol  an  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  an;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        d    =    p    *    q    +    a;    d  =  p  *  q;  d  =  p  *  q  +  an;	  	non-compiled	[CE]  cannot  find  symbol  an	113	None	add
769	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  q;  r  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  q;  r  =  p  /  r;	  d    =    p    /    r;    r    =    p    /    r;    	compilable	  [FE]  AssertionError  	137	4	replace
770	[BUG]  [BUGGY]  d  =  p  /  q;  r  =  p  /  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  q;  r  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  q;  r  =  p  /  r;	  d    =    p    /    r;    r    =    p    /    r;    	compilable	  [FE]  AssertionError  	137	4	replace
771	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  tol1;  r  =  p  /  tol2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  tol1;  r  =  p  /  tol2;	  d    =    p    /    r;    r    =    p    /    r;    	compilable	  [FE]  AssertionError  	137	5	replace
772	[BUG]  [BUGGY]  d  =  p  /  tol1;  r  =  p  /  tol2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  tol1;  r  =  p  /  tol2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  tol1;  r  =  p  /  tol2;	  d    =    p    /    r;    r    =    p    /    r;    	compilable	  [FE]  AssertionError  	137	5	replace
773	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(b    -    x)&&    p    <    b    *(lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
774	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(b    -    x)&&    p    <    b    *(lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	182	None	replace
775	[BUG]  [BUGGY]  d  =  p  *  GOLDEN_SECTION;  dev  =  p  *  q;  [CE]  cannot  find  symbol  dev  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  GOLDEN_SECTION;  dev  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  GOLDEN_SECTION;  dev  =  p  *  q;	  d    =    p    *    q;    dev    =    p    *    q;    	non-compiled	[CE]  cannot  find  symbol  dev	115	None	replace
776	[BUG]  [BUGGY]  d    =    q    /    p;    d  =  q  /  p;  d  =  q  /  p;  d  =  q  /  p  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  q  /  p;  d  =  q  /  p;  d  =  q  /  p  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        d    =    q    /    p;    d  =  q  /  p;  d  =  q  /  p	  	non-compiled	[CE]  ';'  expected	50	None	add
777	[BUG]  [BUGGY]  int  d  =  m  /  q  *  r;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  m  /  q  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  m  /  q  *  r;	  d    =    m    /    q;    int    d    =    m    /    q;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	102	None	replace
778	[BUG]  [BUGGY]  d  =  tol3  /  p;  [CE]  cannot  find  symbol  tol3  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol3  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  tol3  /  p;	  d    =    q    /    p;    d    =    q    /    p;    }    else    if(isMinim)    {    d    =    tol1    /    p;    }    	non-compiled	[CE]  cannot  find  symbol  tol3	55	None	replace
779	[BUG]  [BUGGY]  d  =  tol4  /  p;  [CE]  cannot  find  symbol  tol4  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol4  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  tol4  /  p;	  d    =    q    /    p;    d    =    q    /    p;    }    else    if(isMinim)    {    d    =    tol1    /    p;    }    	non-compiled	[CE]  cannot  find  symbol  tol4	55	None	replace
780	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  %  q;  d  =  d  /  q;  d  =  d  %  qL;  [CE]  cannot  find  symbol  qL  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  %  q;  d  =  d  /  q;  d  =  d  %  qL;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    %    q;    d  =  d  /  q;  d  =  d  %  qL;	  	non-compiled	[CE]  cannot  find  symbol  qL	143	None	add
781	[BUG]  [BUGGY]  if(x  >=  a  *(l  lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(l  lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(l  lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >=    a    *(l    lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ')'  expected	152	None	replace
782	[BUG]  [BUGGY]  if(x  >=  a  *(l  lo  -  x)&&  p  <  =  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(l  lo  -  x)&&  p  <  =  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(l  lo  -  x)&&  p  <  =  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >=    a    *(l    lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ')'  expected	152	None	replace
783	[BUG]  [BUGGY]  if(x  >=  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    >=    a    *(l    lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ')'  expected	152	None	replace
784	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  +  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  +  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  +  r)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	185	None	replace
785	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  r)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	185	None	replace
786	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol1  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  tol1  *  q;	  d    =    p    *    q;    d    =    p    *    q;    }    else    if(isMinim)    {    d    =    tol1    +    d;    }    	compilable	  [FE]  AssertionError  	45	4	replace
787	[BUG]  [BUGGY]  d  =  tol1  *  q;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol1  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  tol1  *  q;	  d    =    p    *    q;    d    =    p    *    q;    }    else    if(isMinim)    {    d    =    tol1    +    d;    }    	compilable	  [FE]  AssertionError  	45	4	replace
788	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol1  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  tol1  *  r;	  d    =    p    *    q;    d    =    p    *    q;    }    else    if(isMinim)    {    d    =    tol1    +    d;    }    	compilable	  [FE]  AssertionError  	45	5	replace
789	[BUG]  [BUGGY]  d  =  tol1  *  r;  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  tol1  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  tol1  *  r;	  d    =    p    *    q;    d    =    p    *    q;    }    else    if(isMinim)    {    d    =    tol1    +    d;    }    	compilable	  [FE]  AssertionError  	45	5	replace
790	[BUG]  [BUGGY]  d  =  p  *  r;  int  d  =  p  *  r;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r;  int  d  =  p  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    *    r;    int  d  =  p  *  r;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	17	None	add
791	[BUG]  [BUGGY]  d  =  p  *  r;  d  =  p  *  l;  [CE]  cannot  find  symbol  l  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r;  d  =  p  *  l;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    *    r;    d  =  p  *  l;	  	non-compiled	[CE]  cannot  find  symbol  l	17	None	add
792	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  tol2;  d  =  m  /  tol2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  m  /  tol2;  d  =  m  /  tol2;	  d    =    m    /    q;    d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    timeout    	compilable	  [FE]  AssertionError  	59	5	replace
793	[BUG]  [BUGGY]  d  =  m  /  tol2;  d  =  m  /  tol2;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  tol2;  d  =  m  /  tol2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  m  /  tol2;  d  =  m  /  tol2;	  d    =    m    /    q;    d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    timeout    	compilable	  [FE]  AssertionError  	59	5	replace
794	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  *  q;  d  =  b  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  a  *  q;  d  =  b  /  q;	  d    =    m    /    q;    d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    timeout    	compilable	  [FE]  AssertionError  	59	5	replace
795	[BUG]  [BUGGY]  d  =  a  *  q;  d  =  b  /  q;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  *  q;  d  =  b  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  a  *  q;  d  =  b  /  q;	  d    =    m    /    q;    d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    timeout    	compilable	  [FE]  AssertionError  	59	5	replace
796	[BUG]  [BUGGY]  if(x  >  a  *(l  -  x)&&  p  <  =  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(l  -  x)&&  p  <  =  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(l  -  x)&&  p  <  =  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(l    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
797	[BUG]  [BUGGY]  if(x  >  a  *(l  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(l  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(l  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(l    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
798	[BUG]  [BUGGY]  if(x  >=  a  *(l  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(l  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(l  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(l    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	121	None	replace
799	[BUG]  [BUGGY]  if(x  >=  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >=    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	25	None	replace
800	[BUG]  [BUGGY]          if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  illegal  start  of  expression	167	None	add
801	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  r;  r  =  q  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  q  /  r;  r  =  q  /  r;	  d    =    r    /    q;    r    =    r    /    q;    	compilable	  [FE]  AssertionError  	148	5	replace
802	[BUG]  [BUGGY]  d  =  q  /  r;  r  =  q  /  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  r;  r  =  q  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  q  /  r;  r  =  q  /  r;	  d    =    r    /    q;    r    =    r    /    q;    	compilable	  [FE]  AssertionError  	148	5	replace
803	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  q;  r  =  b  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  a  /  q;  r  =  b  /  q;	  d    =    r    /    q;    r    =    r    /    q;    	compilable	  [FE]  AssertionError  	148	5	replace
804	[BUG]  [BUGGY]  d  =  a  /  q;  r  =  b  /  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  q;  r  =  b  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  a  /  q;  r  =  b  /  q;	  d    =    r    /    q;    r    =    r    /    q;    	compilable	  [FE]  AssertionError  	148	5	replace
805	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  r  /  2;	  d    =    p    /    2;    	compilable	  [FE]  AssertionError  	162	6	replace
806	[BUG]  [BUGGY]  d  =  r  /  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  r  /  2;	  d    =    p    /    2;    	compilable	  [FE]  AssertionError  	162	6	replace
807	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2  +  tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  2  +  tol1;	  d    =    p    /    2;    	compilable	  [FE]  AssertionError  	162	5	replace
808	[BUG]  [BUGGY]  d  =  p  /  2  +  tol1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2  +  tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  2  +  tol1;	  d    =    p    /    2;    	compilable	  [FE]  AssertionError  	162	5	replace
809	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  2  +  m;	  d    =    p    /    2;    	compilable	  [FE]  AssertionError  	162	5	replace
810	[BUG]  [BUGGY]  d  =  p  /  2  +  m;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  2  +  m;	  d    =    p    /    2;    	compilable	  [FE]  AssertionError  	162	5	replace
811	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  b  *(hi  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  b  *(hi  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  b  *(hi  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
812	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p  /  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p  /  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p  /  q  *  r))  {	  if(x    <    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
813	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  d  =  q  /  p;  if  (q  /  p  <  a)  {  d  =  q  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    d  =  q  /  p;  if  (q  /  p  <  a)  {  d  =  q  /  p;  }	  	compilable	  [FE]  AssertionError  	191	4	add
814	[BUG]  [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  d  =  q  /  p;  if  (q  /  p  <  a)  {  d  =  q  /  p;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  d  =  q  /  p;  if  (q  /  p  <  a)  {  d  =  q  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    d  =  q  /  p;  if  (q  /  p  <  a)  {  d  =  q  /  p;  }	  	compilable	  [FE]  AssertionError  	191	4	add
815	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  d  =  q  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    d  =  q  /  p;	  	compilable	  [FE]  AssertionError  	191	4	add
816	[BUG]  [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  d  =  q  /  p;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  d  =  q  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    d  =  q  /  p;	  	compilable	  [FE]  AssertionError  	191	4	add
817	[BUG]  [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  ||  p  <  a  ||  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
818	[BUG]  [BUGGY]  if(x  >=  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
819	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {	  timeout    	non-compiled	[CE]  reached  end  of  file  while  parsing	61	None	add
820	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  If(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  If(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    If(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  ';'  expected	73	None	add
821	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2  +  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  2  +  p;	  d    =    d    /    2;    	compilable	  [FE]  AssertionError  	99	5	replace
822	[BUG]  [BUGGY]  d  =  d  /  2  +  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2  +  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  2  +  p;	  d    =    d    /    2;    	compilable	  [FE]  AssertionError  	99	5	replace
823	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2  +  tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  2  +  tol1;	  d    =    d    /    2;    	compilable	  [FE]  AssertionError  	99	5	replace
824	[BUG]  [BUGGY]  d  =  d  /  2  +  tol1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2  +  tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  2  +  tol1;	  d    =    d    /    2;    	compilable	  [FE]  AssertionError  	99	5	replace
825	[BUG]  [BUGGY]  d  =  q  /  r;  int  d  =  q  /  r;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  r;  int  d  =  q  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    r;    int  d  =  q  /  r;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	107	None	add
826	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  r;  d  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    /    r;    d  =  p  /  r;	  	compilable	  [FE]  AssertionError  	107	4	add
827	[BUG]  [BUGGY]  d  =  q  /  r;  d  =  p  /  r;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  r;  d  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    r;    d  =  p  /  r;	  	compilable	  [FE]  AssertionError  	107	4	add
828	[BUG]  [BUGGY]  d  =  q  /  r;  d  =  q  /  r);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  r;  d  =  q  /  r);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    r;    d  =  q  /  r);	  	non-compiled	[CE]  ';'  expected	107	None	add
829	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  =  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  =  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  =  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    =    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
830	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  =  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  =  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  =  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    =    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
831	[BUG]  [BUGGY]  d  =  m  /  p;  int  d  =  m  /  p;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  p;  int  d  =  m  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    p;    int  d  =  m  /  p;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	15	None	add
832	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  p;  d  =  m  /  p  +  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    m    /    p;    d  =  m  /  p  +  p;	  	compilable	  [FE]  AssertionError  	15	4	add
833	[BUG]  [BUGGY]  d  =  m  /  p;  d  =  m  /  p  +  p;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  p;  d  =  m  /  p  +  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    p;    d  =  m  /  p  +  p;	  	compilable	  [FE]  AssertionError  	15	4	add
834	[BUG]  [BUGGY]  d  =  m  /  p;  d  =  m  /  p);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  p;  d  =  m  /  p);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    p;    d  =  m  /  p);	  	non-compiled	[CE]  ';'  expected	15	None	add
835	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  0.5  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  0.5  *  q;	  d    =    p    *    q;    d    =    p    *    q;    	compilable	  [FE]  AssertionError  	41	5	replace
836	[BUG]  [BUGGY]  d  =  0.5  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  0.5  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  0.5  *  q;	  d    =    p    *    q;    d    =    p    *    q;    	compilable	  [FE]  AssertionError  	41	5	replace
837	[BUG]  [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  if  (p  >  a  *  q)  {  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  if  (p  >  a  *  q)  {  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        if    (p    >    q    *    q)    {    d    =    p    *    q;    }    if  (p  >  a  *  q)  {  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	175	None	add
838	[BUG]  [BUGGY]  d  =  d  /  x;  dev  =  d  /  q;  [CE]  cannot  find  symbol  dev  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  x;  dev  =  d  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  x;  dev  =  d  /  q;	  d    =    d    /    q;    dev    =    d    /    q;    	non-compiled	[CE]  cannot  find  symbol  dev	145	None	replace
839	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  tol1;	  d    =    p    /    r;    d    =    p    /    r;    }    else    if(isMinim)    {    d    =    p    /    r;    }    	compilable	  [FE]  AssertionError  	81	5	replace
840	[BUG]  [BUGGY]  d  =  p  /  tol1;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  tol1;	  d    =    p    /    r;    d    =    p    /    r;    }    else    if(isMinim)    {    d    =    p    /    r;    }    	compilable	  [FE]  AssertionError  	81	5	replace
841	[BUG]  [BUGGY]  d  =  m  *  q;  int  d  =  m  *  q;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  q;  int  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    *    q;    int  d  =  m  *  q;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	46	None	add
842	[BUG]  [BUGGY]  d  =  m  *  q;  dev  =  m  *  q;  [CE]  cannot  find  symbol  dev  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  q;  dev  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    *    q;    dev  =  m  *  q;	  	non-compiled	[CE]  cannot  find  symbol  dev	46	None	add
843	[BUG]  [BUGGY]  d  =  m  *  q;  d  =  m  *  qua;  [CE]  cannot  find  symbol  qua  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  q;  d  =  m  *  qua;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    *    q;    d  =  m  *  qua;	  	non-compiled	[CE]  cannot  find  symbol  qua	46	None	add
844	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  tol1;  d  =  p  /  tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    tol1;    d  =  p  /  tol1;	  	compilable	  [FE]  AssertionError  	150	4	add
845	[BUG]  [BUGGY]  d  =  d  /  tol1;  d  =  p  /  tol1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  tol1;  d  =  p  /  tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    tol1;    d  =  p  /  tol1;	  	compilable	  [FE]  AssertionError  	150	4	add
846	[BUG]  [BUGGY]  if(x  <  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	replace
847	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  a  *(m  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  a  *(m  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  a  *(m  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	replace
848	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  GOLDEN_SECTION;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  *  GOLDEN_SECTION;	  d    =    d    *    q;    	compilable	  [FE]  AssertionError  	97	4	replace
849	[BUG]  [BUGGY]  d  =  d  *  GOLDEN_SECTION;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  GOLDEN_SECTION;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  *  GOLDEN_SECTION;	  d    =    d    *    q;    	compilable	  [FE]  AssertionError  	97	4	replace
850	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  q  *  d;	  d    =    d    *    q;    	compilable	  [FE]  AssertionError  	97	5	replace
851	[BUG]  [BUGGY]  d  =  q  *  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  q  *  d;	  d    =    d    *    q;    	compilable	  [FE]  AssertionError  	97	5	replace
852	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  If(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  If(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    <    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    If(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  ';'  expected	69	None	add
853	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  *  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  *  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  *  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    /    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	63	None	replace
854	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    /    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	63	None	replace
855	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    1)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1  <  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  ')'  expected	189	None	add
856	[BUG]  [BUGGY]  d  =  r  /  p;  int  d  =  r  /  p;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  p;  int  d  =  r  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    /    p;    int  d  =  r  /  p;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	11	None	add
857	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  p;  r  =  r  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    r    /    p;    r  =  r  /  p;	  	compilable	  [FE]  AssertionError  	11	4	add
858	[BUG]  [BUGGY]  d  =  r  /  p;  r  =  r  /  p;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  p;  r  =  r  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    /    p;    r  =  r  /  p;	  	compilable	  [FE]  AssertionError  	11	4	add
859	[BUG]  [BUGGY]  d  =  r  /  p;  d  =  l  /  p;  [CE]  cannot  find  symbol  l  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  p;  d  =  l  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    /    p;    d  =  l  /  p;	  	non-compiled	[CE]  cannot  find  symbol  l	11	None	add
860	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  +  m)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  +  m)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  +  m)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p    +    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
861	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  =  r  *(b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  =  r  *(b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  =  r  *(b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p    +    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
862	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  t  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  t  *  r;	  d    =    r    /    q;    d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    timeout    	compilable	  [FE]  AssertionError  	36	5	replace
863	[BUG]  [BUGGY]  d  =  t  *  r;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  t  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  t  *  r;	  d    =    r    /    q;    d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    timeout    	compilable	  [FE]  AssertionError  	36	5	replace
864	[BUG]  [BUGGY]  if(d  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  d)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(d  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  d)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(d  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  d)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    -    d)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	156	None	replace
865	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  d)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  d)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  d)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    -    d)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	156	None	replace
866	[BUG]  [BUGGY]  if(m  >  a)  {  d  =  m  /  q;  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(m  >  a)  {  d  =  m  /  q;  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(m  >  a)  {  d  =  m  /  q;  if  (x  <  =  m)  {  d  =  tol1  +  d;  }	  d    =    m    /    q;    if    (m    /    q    >    a)    {    if    (x    <    =    m)    {    d    =    tol1    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
867	[BUG]  [BUGGY]  if(m  >  a)  {  d  =  m  /  q;  if  (m  /  q  >  a)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(m  >  a)  {  d  =  m  /  q;  if  (m  /  q  >  a)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(m  >  a)  {  d  =  m  /  q;  if  (m  /  q  >  a)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }	  d    =    m    /    q;    if    (m    /    q    >    a)    {    if    (x    <    =    m)    {    d    =    tol1    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
868	[BUG]  [BUGGY]  if(m  >  a)  {  d  =  tol1  /  q;  if  (m  /  q  >  a)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(m  >  a)  {  d  =  tol1  /  q;  if  (m  /  q  >  a)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(m  >  a)  {  d  =  tol1  /  q;  if  (m  /  q  >  a)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }	  d    =    m    /    q;    if    (m    /    q    >    a)    {    if    (x    <    =    m)    {    d    =    tol1    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
869	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  q;  d  =  p  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  q;  d  =  p  %  q;	  d    =    q    /    p;    d    =    q    %    p;    	compilable	  [FE]  AssertionError  	133	5	replace
870	[BUG]  [BUGGY]  d  =  p  /  q;  d  =  p  %  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  q;  d  =  p  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  q;  d  =  p  %  q;	  d    =    q    /    p;    d    =    q    %    p;    	compilable	  [FE]  AssertionError  	133	5	replace
871	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  p;  d  =  q  %  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  q  *  p;  d  =  q  %  p;	  d    =    q    /    p;    d    =    q    %    p;    	compilable	  [FE]  AssertionError  	133	5	replace
872	[BUG]  [BUGGY]  d  =  q  *  p;  d  =  q  %  p;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  p;  d  =  q  %  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  q  *  p;  d  =  q  %  p;	  d    =    q    /    p;    d    =    q    %    p;    	compilable	  [FE]  AssertionError  	133	5	replace
873	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  d  =  q  %  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  a  /  p;  d  =  q  %  p;	  d    =    q    /    p;    d    =    q    %    p;    	compilable	  [FE]  AssertionError  	133	5	replace
874	[BUG]  [BUGGY]  d  =  a  /  p;  d  =  q  %  p;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  d  =  q  %  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  a  /  p;  d  =  q  %  p;	  d    =    q    /    p;    d    =    q    %    p;    	compilable	  [FE]  AssertionError  	133	5	replace
875	[BUG]  [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  If(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  If(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    If(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  ';'  expected	71	None	add
876	[BUG]  [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
877	[BUG]  [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  r  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  r  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *  (lo  -  x)&&  p  <  r  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)    &&    Math.abs(p)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
878	[BUG]  [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)    &&    Math.abs(p)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
879	[BUG]  [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  0.5  *  q  *  r))  {	  if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)    &&    Math.abs(p)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
880	[BUG]  [BUGGY]  if(x  >  a  *(l  lo  -  x)&&  p  <  =  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(l  lo  -  x)&&  p  <  =  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(l  lo  -  x)&&  p  <  =  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(l    lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ')'  expected	120	None	replace
881	[BUG]  [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  tol  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  tol  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  ||  p  <  a  ||  p  <  b  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  tol  *  r))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    tol    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
882	[BUG]  [BUGGY]  d  =  d  /  r;  int  d  =  d  /  r;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  r;  int  d  =  d  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    r;    int  d  =  d  /  r;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	94	None	add
883	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  r;  d  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    r;    d  =  p  /  r;	  	compilable	  [FE]  AssertionError  	94	4	add
884	[BUG]  [BUGGY]  d  =  d  /  r;  d  =  p  /  r;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  r;  d  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    r;    d  =  p  /  r;	  	compilable	  [FE]  AssertionError  	94	4	add
885	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  r;  d  =  a  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    r;    d  =  a  /  r;	  	compilable	  [FE]  AssertionError  	94	4	add
886	[BUG]  [BUGGY]  d  =  d  /  r;  d  =  a  /  r;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  r;  d  =  a  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    r;    d  =  a  /  r;	  	compilable	  [FE]  AssertionError  	94	4	add
887	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  d  =  l  /  q;  d  =  r  /  q;  [CE]  cannot  find  symbol  l  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  d  =  l  /  q;  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    d  =  l  /  q;  d  =  r  /  q;	  	non-compiled	[CE]  cannot  find  symbol  l	28	None	add
888	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  d  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        *        q;        if    (p    >    a    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    d  =  p  *  q;	  	compilable	  [FE]  AssertionError  	169	4	add
889	[BUG]  [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  d  =  p  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  d  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        if    (p    >    a    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    d  =  p  *  q;	  	compilable	  [FE]  AssertionError  	169	4	add
890	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r;  d  =  p  *  q  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  *  r;  d  =  p  *  q  +  a;	  d    =    p    *    q;    d    =    p    *    q    +    a;    	compilable	  [FE]  AssertionError  	114	5	replace
891	[BUG]  [BUGGY]  d  =  p  *  r;  d  =  p  *  q  +  a;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r;  d  =  p  *  q  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  r;  d  =  p  *  q  +  a;	  d    =    p    *    q;    d    =    p    *    q    +    a;    	compilable	  [FE]  AssertionError  	114	5	replace
892	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r;  d  =  p  *  q  +  b;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  *  r;  d  =  p  *  q  +  b;	  d    =    p    *    q;    d    =    p    *    q    +    a;    	compilable	  [FE]  AssertionError  	114	5	replace
893	[BUG]  [BUGGY]  d  =  p  *  r;  d  =  p  *  q  +  b;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r;  d  =  p  *  q  +  b;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  r;  d  =  p  *  q  +  b;	  d    =    p    *    q;    d    =    p    *    q    +    a;    	compilable	  [FE]  AssertionError  	114	5	replace
894	[BUG]  [BUGGY]  if(x  <  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	64	None	replace
895	[BUG]  [BUGGY]  if(x  >  a  *(l  -  lo)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(l  -  lo)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(l  -  lo)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(l    lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	replace
896	[BUG]  [BUGGY]  if(p  >  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(l    lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
897	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  >  a  *(lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(b    -    x)&&    p    <    q    *(lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	187	5	replace
898	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(b    -    x)&&    p    <    q    *(lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	187	5	replace
899	[BUG]  [BUGGY]  d  =  r  *  q;  d  =  l  /  q;  [CE]  cannot  find  symbol  l  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  d  =  l  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  r  *  q;  d  =  l  /  q;	  d    =    r    /    q;    d    =    l    /    q;    	non-compiled	[CE]  cannot  find  symbol  l	149	None	replace
900	[BUG]  [BUGGY]  d  =  a  /  p;  int  d  =  a  /  p;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  int  d  =  a  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    a    /    p;    int  d  =  a  /  p;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	180	None	add
901	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  d  =  a  /  p  +  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    a    /    p;    d  =  a  /  p  +  p;	  	compilable	  [FE]  AssertionError  	180	4	add
902	[BUG]  [BUGGY]  d  =  a  /  p;  d  =  a  /  p  +  p;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  d  =  a  /  p  +  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    a    /    p;    d  =  a  /  p  +  p;	  	compilable	  [FE]  AssertionError  	180	4	add
903	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  d  =  p  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    a    /    p;    d  =  p  /  p;	  	compilable	  [FE]  AssertionError  	180	4	add
904	[BUG]  [BUGGY]  d  =  a  /  p;  d  =  p  /  p;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  d  =  p  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    a    /    p;    d  =  p  /  p;	  	compilable	  [FE]  AssertionError  	180	4	add
905	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  m)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  m)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  m)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    m)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
906	[BUG]  [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  =  r  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  =  r  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *  (lo  -  x)&&  p  <  =  r  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *    (lo    -    x)&&    p    <    r    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
907	[BUG]  [BUGGY]  if(x  >  a  *  (b  -  x)&&  p  <  r  *  (lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *  (b  -  x)&&  p  <  r  *  (lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *  (b  -  x)&&  p  <  r  *  (lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *    (lo    -    x)&&    p    <    r    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	68	None	replace
908	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  +  1;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  q  +  1;  d  =  p  /  q;	  d    =    d    /    q;    d    =    p    /    q;    	compilable	  [FE]  AssertionError  	142	4	replace
909	[BUG]  [BUGGY]  d  =  d  /  q  +  1;  d  =  p  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  +  1;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  q  +  1;  d  =  p  /  q;	  d    =    d    /    q;    d    =    p    /    q;    	compilable	  [FE]  AssertionError  	142	4	replace
910	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  q;  d  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  *  q;  d  =  p  *  q;	  d    =    d    /    q;    d    =    p    /    q;    	compilable	  [FE]  AssertionError  	142	5	replace
911	[BUG]  [BUGGY]  d  =  d  *  q;  d  =  p  *  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  q;  d  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  *  q;  d  =  p  *  q;	  d    =    d    /    q;    d    =    p    /    q;    	compilable	  [FE]  AssertionError  	142	5	replace
912	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q  +  d;  d  =  d  /  q;  d  =  d  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        d        /        q;        d    =    d    /    q    +    d;    d  =  d  /  q;  d  =  d  *  q  +  d;	  	compilable	  [FE]  AssertionError  	159	4	add
913	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  /  q  +  d;  d  =  d  /  q;  d  =  d  *  q  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q  +  d;  d  =  d  /  q;  d  =  d  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    /    q    +    d;    d  =  d  /  q;  d  =  d  *  q  +  d;	  	compilable	  [FE]  AssertionError  	159	4	add
914	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  =  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  =  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  =  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
915	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  r  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  >  a  *(b  -  x)&&  p  <  r  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	118	5	replace
916	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  r  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  r  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  r  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	118	5	replace
917	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
918	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  =  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  =  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  =  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  illegal  start  of  expression	117	None	add
919	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    -    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	157	None	replace
920	[BUG]  [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  m)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  m)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  m)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    -    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
921	[BUG]  [BUGGY]  d  =  d  *  q;  dev  =  d  *  q;  [CE]  cannot  find  symbol  dev  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  q;  dev  =  d  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    *    q;    dev  =  d  *  q;	  	non-compiled	[CE]  cannot  find  symbol  dev	96	None	add
922	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  q;  d  =  a  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    *    q;    d  =  a  *  q;	  	compilable	  [FE]  AssertionError  	96	4	add
923	[BUG]  [BUGGY]  d  =  d  *  q;  d  =  a  *  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  q;  d  =  a  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    *    q;    d  =  a  *  q;	  	compilable	  [FE]  AssertionError  	96	4	add
924	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  q;  d  =  m  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  m  *  q;  d  =  m  *  q  +  d;	  d    =    m    /    q;    d    =    m    /    q    +    d;    	compilable	  [FE]  AssertionError  	104	5	replace
925	[BUG]  [BUGGY]  d  =  m  *  q;  d  =  m  *  q  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  q;  d  =  m  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  m  *  q;  d  =  m  *  q  +  d;	  d    =    m    /    q;    d    =    m    /    q    +    d;    	compilable	  [FE]  AssertionError  	104	5	replace
926	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  q;  d  =  m  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  q;  d  =  m  /  q  +  d;	  d    =    m    /    q;    d    =    m    /    q    +    d;    	compilable	  [FE]  AssertionError  	104	5	replace
927	[BUG]  [BUGGY]  d  =  p  /  q;  d  =  m  /  q  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  q;  d  =  m  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  q;  d  =  m  /  q  +  d;	  d    =    m    /    q;    d    =    m    /    q    +    d;    	compilable	  [FE]  AssertionError  	104	5	replace
928	[BUG]  [BUGGY]  d  =  p  /  r  +  1;  int  d  =  p  /  r  +  1;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  r  +  1;  int  d  =  p  /  r  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r    +    1;    int  d  =  p  /  r  +  1;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	19	None	add
929	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  r  +  1;  r  =  p  /  r  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    /    r    +    1;    r  =  p  /  r  +  1;	  	compilable	  [FE]  AssertionError  	19	4	add
930	[BUG]  [BUGGY]  d  =  p  /  r  +  1;  r  =  p  /  r  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  r  +  1;  r  =  p  /  r  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r    +    1;    r  =  p  /  r  +  1;	  	compilable	  [FE]  AssertionError  	19	4	add
931	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  r  +  1;  d  =  p  /  r  +  1L;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    /    r    +    1;    d  =  p  /  r  +  1L;	  	compilable	  [FE]  AssertionError  	19	4	add
932	[BUG]  [BUGGY]  d  =  p  /  r  +  1;  d  =  p  /  r  +  1L;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  r  +  1;  d  =  p  /  r  +  1L;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r    +    1;    d  =  p  /  r  +  1L;	  	compilable	  [FE]  AssertionError  	19	4	add
933	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  >=  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	74	5	replace
934	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	74	5	replace
935	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  q  *  (b  -  x))  {  }  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  q  *  (b  -  x))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  q  *  (b  -  x))  {  }	  if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	non-compiled	[CE]  ')'  expected	74	None	replace
936	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	75	4	add
937	[BUG]  [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	75	4	add
938	[BUG]  [BUGGY]  if(p  >  a  *(x  -  lo)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(x  -  lo)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(x  -  lo)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	          if(p    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	124	None	replace
939	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  q  %  p;  d  =  q  /  p;  d  =  q  %  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        d    =    q    %    p;    d  =  q  /  p;  d  =  q  %  r;	  	compilable	  [FE]  AssertionError  	132	4	add
940	[BUG]  [BUGGY]  d    =    q    /    p;    d  =  q  %  p;  d  =  q  /  p;  d  =  q  %  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  q  %  p;  d  =  q  /  p;  d  =  q  %  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        d    =    q    %    p;    d  =  q  /  p;  d  =  q  %  r;	  	compilable	  [FE]  AssertionError  	132	4	add
941	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  q  %  p;  d  =  q  /  p;  d  =  q  %  t;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        d    =    q    %    p;    d  =  q  /  p;  d  =  q  %  t;	  	compilable	  [FE]  AssertionError  	132	4	add
942	[BUG]  [BUGGY]  d    =    q    /    p;    d  =  q  %  p;  d  =  q  /  p;  d  =  q  %  t;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  q  %  p;  d  =  q  /  p;  d  =  q  %  t;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        d    =    q    %    p;    d  =  q  /  p;  d  =  q  %  t;	  	compilable	  [FE]  AssertionError  	132	4	add
943	[BUG]  [BUGGY]  d  =  a  /  q;  int  d  =  a  /  q;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  q;  int  d  =  a  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    a    /    q;    int  d  =  a  /  q;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	122	None	add
944	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  q;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    a    /    q;    d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	122	4	add
945	[BUG]  [BUGGY]  d  =  a  /  q;  d  =  p  /  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  q;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    a    /    q;    d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	122	4	add
946	[BUG]  [BUGGY]  d  =  a  /  q;  d  =  an  a  /  q;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  q;  d  =  an  a  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    a    /    q;    d  =  an  a  /  q;	  	non-compiled	[CE]  ';'  expected	122	None	add
947	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        if    (r    /    q    >    a)    {    d    =    r    /    q;    }    else    {    d    =    r    /    q;    }    d  =  r  /  q;	  	compilable	  [FE]  AssertionError  	205	4	add
948	[BUG]  [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  d  =  r  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        if    (r    /    q    >    a)    {    d    =    r    /    q;    }    else    {    d    =    r    /    q;    }    d  =  r  /  q;	  	compilable	  [FE]  AssertionError  	205	4	add
949	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  d  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        *        q;        if    (p    >    q    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    d  =  p  *  q;	  	compilable	  [FE]  AssertionError  	171	4	add
950	[BUG]  [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  d  =  p  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  d  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        if    (p    >    q    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    d  =  p  *  q;	  	compilable	  [FE]  AssertionError  	171	4	add
951	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        *        q;        if    (p    >    q    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	171	4	add
952	[BUG]  [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        if    (p    >    q    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	171	4	add
953	[BUG]  [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  <  b  *  (b  -  x)&&  Math.abs(m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  <  b  *  (b  -  x)&&  Math.abs(m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  ||  p  <  a  ||  p  <  b  *  (b  -  x)&&  Math.abs(m)  <  Math.abs(0.5  *  q  *  r))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)&&    Math.abs(m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
954	[BUG]  [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  >=  r  *  (b  -  x)&&  Math.abs(m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  >=  r  *  (b  -  x)&&  Math.abs(m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  ||  p  <  a  ||  p  >=  r  *  (b  -  x)&&  Math.abs(m)  <  Math.abs(0.5  *  q  *  r))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)&&    Math.abs(m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
955	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  d  =  p  /  q;  d  =  d  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        d        /        q;        d    =    d    /    q;    d  =  p  /  q;  d  =  d  /  q;	  	compilable	  [FE]  AssertionError  	90	4	add
956	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  d  =  p  /  q;  d  =  d  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  d  =  p  /  q;  d  =  d  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    /    q;    d  =  p  /  q;  d  =  d  /  q;	  	compilable	  [FE]  AssertionError  	90	4	add
957	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  m)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  m)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  m)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    m)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
958	[BUG]  [BUGGY]  if(x  >=  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >=    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	87	None	replace
959	[BUG]  [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  if  (p  >  a  *  q)  {  d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  if  (p  >  a  *  q)  {  d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        if    (p    >    a    *    q)    {    d    =    p    *    q;    }    if  (p  >  a  *  q)  {  d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	173	None	add
960	[BUG]  [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  r)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  r)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  r)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    -    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
961	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    1)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	190	5	replace
962	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    1)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	190	5	replace
963	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  2.0)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  2.0)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    1)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	190	5	replace
964	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  2.0)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  2.0)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  2.0)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    1)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	190	5	replace
965	[BUG]  [BUGGY]  int  d  =  p  *  q  *  a;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  p  *  q  *  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  p  *  q  *  a;	  d    =    p    *    q;    int    d    =    p    *    q;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	110	None	replace
966	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    /    r;    d  =  p  /  r;  d  =  p  /  r;  d  =  p  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        /        r;        d    =    p    /    r;    d  =  p  /  r;  d  =  p  *  r;	  	compilable	  [FE]  AssertionError  	79	4	add
967	[BUG]  [BUGGY]  d    =    p    /    r;    d  =  p  /  r;  d  =  p  /  r;  d  =  p  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    /    r;    d  =  p  /  r;  d  =  p  /  r;  d  =  p  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        /        r;        d    =    p    /    r;    d  =  p  /  r;  d  =  p  *  r;	  	compilable	  [FE]  AssertionError  	79	4	add
968	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    r)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
969	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  =  b  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  =  b  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  =  b  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p    -    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
970	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  p  /  q;  d  =  d  /  q;  d  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        d        /        q;        d    =    p    /    q;    d  =  d  /  q;  d  =  p  *  q;	  	compilable	  [FE]  AssertionError  	141	4	add
971	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  p  /  q;  d  =  d  /  q;  d  =  p  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  p  /  q;  d  =  d  /  q;  d  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    p    /    q;    d  =  d  /  q;  d  =  p  *  q;	  	compilable	  [FE]  AssertionError  	141	4	add
972	[BUG]  [BUGGY]  if(x  >  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(l    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
973	[BUG]  [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  >=  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  >=  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  ||  p  <  a  ||  p  >=  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)||    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	replace
974	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  p;  d  =  p  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    *    p;    d  =  p  *  p;	  	compilable	  [FE]  AssertionError  	48	4	add
975	[BUG]  [BUGGY]  d  =  q  *  p;  d  =  p  *  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  p;  d  =  p  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    *    p;    d  =  p  *  p;	  	compilable	  [FE]  AssertionError  	48	4	add
976	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  p;  d  =  q  *  t;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    *    p;    d  =  q  *  t;	  	compilable	  [FE]  AssertionError  	48	4	add
977	[BUG]  [BUGGY]  d  =  q  *  p;  d  =  q  *  t;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  p;  d  =  q  *  t;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    *    p;    d  =  q  *  t;	  	compilable	  [FE]  AssertionError  	48	4	add
978	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  p;  d  =  q  *  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    *    p;    d  =  q  *  m;	  	compilable	  [FE]  AssertionError  	48	4	add
979	[BUG]  [BUGGY]  d  =  q  *  p;  d  =  q  *  m;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  p;  d  =  q  *  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    *    p;    d  =  q  *  m;	  	compilable	  [FE]  AssertionError  	48	4	add
980	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(1.0    *    q    *    r))    {    }    if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	163	4	add
981	[BUG]  [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(1.0    *    q    *    r))    {    }    if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	163	4	add
982	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  x;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  r  /  x;	  d    =    r    /    q;    d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    y)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	compilable	  [FE]  AssertionError  	32	5	replace
983	[BUG]  [BUGGY]  d  =  r  /  x;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  x;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  r  /  x;	  d    =    r    /    q;    d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    y)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	compilable	  [FE]  AssertionError  	32	5	replace
984	[BUG]  [BUGGY]  if(x  >  a  *(l  -  x)&&  p  <  q  *(l  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(l  -  x)&&  p  <  q  *(l  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(l  -  x)&&  p  <  q  *(l  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(b    -    x)&&    p    <    q    *(l    lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	153	None	replace
985	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
986	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
987	[BUG]  [BUGGY]  if(x  <  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	85	None	replace
988	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  /  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  /  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  /  q  *  r))  {	  if(x    <    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	85	None	replace
989	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  if(r  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  if(r  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    m))    {    if(r  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {	  timeout    	non-compiled	[CE]  reached  end  of  file  while  parsing	33	None	add
990	[BUG]  [BUGGY]  int  d  =  p  /  r  +  3;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  p  /  r  +  3;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  p  /  r  +  3;	  d    =    p    /    r;    int    d    =    p    /    r;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	135	None	replace
991	[BUG]  [BUGGY]  if(x  <  a  *(l  lo  -  x)&&  p  <  =  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(l  lo  -  x)&&  p  <  =  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(l  lo  -  x)&&  p  <  =  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *(l    lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ')'  expected	2	None	replace
992	[BUG]  [BUGGY]  d    =    r    /    q;    r  =  r  /  q;  d  =  r  /  q;  l  =  r  /  q;  [CE]  cannot  find  symbol  l  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    r  =  r  /  q;  d  =  r  /  q;  l  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        r    =    r    /    q;    d  =  r  /  q;  l  =  r  /  q;	  	non-compiled	[CE]  cannot  find  symbol  l	147	None	add
993	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  0.5  *  q  *  r))  {  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    =    Math.abs(0.5    *    q    *    r))    {    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
994	[BUG]  [BUGGY]  d    =    q    /    p;    d  =  p  /  p;  d  =  q  /  p;  d  =  p  /  p  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  p  /  p;  d  =  q  /  p;  d  =  p  /  p  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        d    =    p    /    p;    d  =  q  /  p;  d  =  p  /  p	  	non-compiled	[CE]  ';'  expected	130	None	add
995	[BUG]  [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  d;  d  =  p  *  q;  d  =  p  *  q  +  l;  [CE]  cannot  find  symbol  l  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  d;  d  =  p  *  q;  d  =  p  *  q  +  l;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        d    =    p    *    q    +    d;    d  =  p  *  q;  d  =  p  *  q  +  l;	  	non-compiled	[CE]  cannot  find  symbol  l	111	None	add
996	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  d;  d  =  p  *  q;  d  =  p  *  q  +  t;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        *        q;        d    =    p    *    q    +    d;    d  =  p  *  q;  d  =  p  *  q  +  t;	  	compilable	  [FE]  AssertionError  	111	4	add
997	[BUG]  [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  d;  d  =  p  *  q;  d  =  p  *  q  +  t;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  d;  d  =  p  *  q;  d  =  p  *  q  +  t;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        d    =    p    *    q    +    d;    d  =  p  *  q;  d  =  p  *  q  +  t;	  	compilable	  [FE]  AssertionError  	111	4	add
998	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  =  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  =  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  =  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    =    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
999	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    tol1    +    d;    }    d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }	  	compilable	  [FE]  AssertionError  	196	4	add
1000	[BUG]  [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    tol1    +    d;    }    d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }	  	compilable	  [FE]  AssertionError  	196	4	add
1001	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }  d  =  q  /  p;  if  (q  /  p  <  a)  {  d  =  tol1  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    tol1    +    d;    }    d  =  q  /  p;  if  (q  /  p  <  a)  {  d  =  tol1  +  d;  }	  	compilable	  [FE]  AssertionError  	196	4	add
1002	[BUG]  [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }  d  =  q  /  p;  if  (q  /  p  <  a)  {  d  =  tol1  +  d;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }  d  =  q  /  p;  if  (q  /  p  <  a)  {  d  =  tol1  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    tol1    +    d;    }    d  =  q  /  p;  if  (q  /  p  <  a)  {  d  =  tol1  +  d;  }	  	compilable	  [FE]  AssertionError  	196	4	add
1003	[BUG]  [BUGGY]  d  =  d  /  2;  int  d  =  d  /  2;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2;  int  d  =  d  /  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    2;    int  d  =  d  /  2;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	98	None	add
1004	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2;  d  =  p  /  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    2;    d  =  p  /  2;	  	compilable	  [FE]  AssertionError  	98	4	add
1005	[BUG]  [BUGGY]  d  =  d  /  2;  d  =  p  /  2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2;  d  =  p  /  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    2;    d  =  p  /  2;	  	compilable	  [FE]  AssertionError  	98	4	add
1006	[BUG]  [BUGGY]  d  =  d  /  2;  dev  =  d  /  2;  [CE]  cannot  find  symbol  dev  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2;  dev  =  d  /  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    2;    dev  =  d  /  2;	  	non-compiled	[CE]  cannot  find  symbol  dev	98	None	add
1007	[BUG]  [BUGGY]  d  =  m  /  r;  int  d  =  m  /  r;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  r;  int  d  =  m  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    r;    int  d  =  m  /  r;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	21	None	add
1008	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  r;  r  =  m  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    m    /    r;    r  =  m  /  r;	  	compilable	  [FE]  AssertionError  	21	4	add
1009	[BUG]  [BUGGY]  d  =  m  /  r;  r  =  m  /  r;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  r;  r  =  m  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    r;    r  =  m  /  r;	  	compilable	  [FE]  AssertionError  	21	4	add
1010	[BUG]  [BUGGY]  d  =  m  /  r;  d  =  m  /  r);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  r;  d  =  m  /  r);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    r;    d  =  m  /  r);	  	non-compiled	[CE]  ';'  expected	21	None	add
1011	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    m    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
1012	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  m  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  m  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  m  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    m    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	37	None	replace
1013	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  +  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  q  +  r;	  d    =    d    /    q;    d    =    d    /    q    +    d;    	compilable	  [FE]  AssertionError  	160	5	replace
1014	[BUG]  [BUGGY]  d  =  d  /  q  +  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  +  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  q  +  r;	  d    =    d    /    q;    d    =    d    /    q    +    d;    	compilable	  [FE]  AssertionError  	160	5	replace
1015	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  d  /  q;  d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  d  /  q;  d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d  =  d  /  q;  d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r	  timeout    	non-compiled	[CE]  ')'  expected	92	None	add
1016	[BUG]  [BUGGY]  int  d  =  r  /  q  *  m;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  r  /  q  *  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  r  /  q  *  m;	  d    =    r    /    q;    int    d    =    r    /    q;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	146	None	replace
1017	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2;  d  =  d  %  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  2;  d  =  d  %  2;	  d    =    d    /    q;    d    =    d    %    q;    	compilable	  [FE]  AssertionError  	144	5	replace
1018	[BUG]  [BUGGY]  d  =  d  /  2;  d  =  d  %  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2;  d  =  d  %  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  2;  d  =  d  %  2;	  d    =    d    /    q;    d    =    d    %    q;    	compilable	  [FE]  AssertionError  	144	5	replace
1019	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2;  d  =  d  %  4;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  2;  d  =  d  %  4;	  d    =    d    /    q;    d    =    d    %    q;    	compilable	  [FE]  AssertionError  	144	5	replace
1020	[BUG]  [BUGGY]  d  =  d  /  2;  d  =  d  %  4;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2;  d  =  d  %  4;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  2;  d  =  d  %  4;	  d    =    d    /    q;    d    =    d    %    q;    	compilable	  [FE]  AssertionError  	144	5	replace
1021	[BUG]  [BUGGY]  if(x  <  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	replace
1022	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	154	None	replace
1023	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	154	None	replace
1024	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  int  d  =  m  /  q;  d  =  m  /  q;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  int  d  =  m  /  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q;    int  d  =  m  /  q;  d  =  m  /  q;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	56	None	add
1025	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  d  =  m  /  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        m        /        q;        d    =    m    /    q;    d  =  m  /  q;  d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	56	4	add
1026	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  d  =  m  /  q;  d  =  m  *  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  d  =  m  /  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q;    d  =  m  /  q;  d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	56	4	add
1027	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  p;  d  =  d  %  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    p;    d  =  d  %  p;	  	compilable	  [FE]  AssertionError  	13	4	add
1028	[BUG]  [BUGGY]  d  =  d  /  p;  d  =  d  %  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  p;  d  =  d  %  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    p;    d  =  d  %  p;	  	compilable	  [FE]  AssertionError  	13	4	add
1029	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  p;  d  =  p  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    p;    d  =  p  /  p;	  	compilable	  [FE]  AssertionError  	13	4	add
1030	[BUG]  [BUGGY]  d  =  d  /  p;  d  =  p  /  p;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  p;  d  =  p  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    p;    d  =  p  /  p;	  	compilable	  [FE]  AssertionError  	13	4	add
1031	[BUG]  [BUGGY]  d  =  d  /  p;  dev  =  d  /  p;  [CE]  cannot  find  symbol  dev  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  p;  dev  =  d  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    p;    dev  =  d  /  p;	  	non-compiled	[CE]  cannot  find  symbol  dev	13	None	add
1032	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(1.0    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	164	5	replace
1033	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(1.0    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	164	5	replace
1034	[BUG]  [BUGGY]  d  =  l  *  q;  [CE]  cannot  find  symbol  l  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  l  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  l  *  q;	  d    =    r    /    q;    d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    timeout    	non-compiled	[CE]  cannot  find  symbol  l	31	None	replace
1035	[BUG]  [BUGGY]  d  =  r  *  q;  int  d  =  r  *  q;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  int  d  =  r  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    *    q;    int  d  =  r  *  q;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	26	None	add
1036	[BUG]  [BUGGY]  d  =  r  *  q;  d  =  l  *  q;  [CE]  cannot  find  symbol  l  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  d  =  l  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    *    q;    d  =  l  *  q;	  	non-compiled	[CE]  cannot  find  symbol  l	26	None	add
1037	[BUG]  [BUGGY]  d  =  r  *  q;  dev  =  r  *  q;  [CE]  cannot  find  symbol  dev  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  dev  =  r  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    *    q;    dev  =  r  *  q;	  	non-compiled	[CE]  cannot  find  symbol  dev	26	None	add
1038	[BUG]  [BUGGY]  d  =  q  /  m;  int  d  =  q  /  m;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  m;  int  d  =  q  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    m;    int  d  =  q  /  m;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	88	None	add
1039	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  m;  d  =  p  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    /    m;    d  =  p  /  m;	  	compilable	  [FE]  AssertionError  	88	4	add
1040	[BUG]  [BUGGY]  d  =  q  /  m;  d  =  p  /  m;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  m;  d  =  p  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    m;    d  =  p  /  m;	  	compilable	  [FE]  AssertionError  	88	4	add
1041	[BUG]  [BUGGY]  d  =  q  /  m;  d  =  q  /  m);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  m;  d  =  q  /  m);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    m;    d  =  q  /  m);	  	non-compiled	[CE]  ';'  expected	88	None	add
1042	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  m;  d  =  q  %  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    /    m;    d  =  q  %  m;	  	compilable	  [FE]  AssertionError  	88	4	add
1043	[BUG]  [BUGGY]  d  =  q  /  m;  d  =  q  %  m;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  m;  d  =  q  %  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    m;    d  =  q  %  m;	  	compilable	  [FE]  AssertionError  	88	4	add
1044	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  x;  d  =  p  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  *  x;  d  =  p  *  q  +  d;	  d    =    p    *    q;    d    =    p    *    q    +    d;    	compilable	  [FE]  AssertionError  	112	5	replace
1045	[BUG]  [BUGGY]  d  =  p  *  x;  d  =  p  *  q  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  x;  d  =  p  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  x;  d  =  p  *  q  +  d;	  d    =    p    *    q;    d    =    p    *    q    +    d;    	compilable	  [FE]  AssertionError  	112	5	replace
1046	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  q  +  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  *  q  +  r;	  d    =    p    *    q;    d    =    p    *    q    +    d;    	compilable	  [FE]  AssertionError  	112	4	replace
1047	[BUG]  [BUGGY]  d  =  p  *  q  +  r;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  q  +  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  q  +  r;	  d    =    p    *    q;    d    =    p    *    q    +    d;    	compilable	  [FE]  AssertionError  	112	4	replace
1048	[BUG]  [BUGGY]  d  =  p  /  r  +  1;  if  (p  >  a  /  r  +  1)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  }  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  r  +  1;  if  (p  >  a  /  r  +  1)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r    +    1;    if  (p  >  a  /  r  +  1)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  ')'  expected	19	None	add
1049	[BUG]  [BUGGY]  d  =  p  /  r  +  1;  if  (p  >  a  /  r  +  1)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  }  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  r  +  1;  if  (p  >  a  /  r  +  1)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r    +    1;    if  (p  >  a  /  r  +  1)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	add
1050	[BUG]  [BUGGY]  d  =  p  /  r  +  1;  if  (p  >  a  /  r  +  1)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  r  +  1;  if  (p  >  a  /  r  +  1)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r    +    1;    if  (p  >  a  /  r  +  1)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  ')'  expected	19	None	add
1051	[BUG]  [BUGGY]  d  =  p  /  r  +  1;  if  (p  >  a  /  r  +  1)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  r  +  1;  if  (p  >  a  /  r  +  1)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r    +    1;    if  (p  >  a  /  r  +  1)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	add
1052	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(l  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(l  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  q  *(l  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(b    -    x)&&    p    <    q    *(l    lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	153	None	replace
1053	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p  -  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p  -  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p  -  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p    -    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	183	None	replace
1054	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p    -    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	183	None	replace
1055	[BUG]  [BUGGY]  if(x  >  a  *(w  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(w  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(w  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(b    -    x)&&    p    <    a    *(lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	125	None	replace
1056	[BUG]  [BUGGY]  if(x  >  a  ||  b  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  ||  b  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  ||  b  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1057	[BUG]  [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  tol1))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  tol1))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  tol1))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1058	[BUG]  [BUGGY]  d  =  m  *  q;  if  (d  =  m  *  q;  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  *  q;  if  (d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    *    q;    if  (d  =  m  *  q;	  	non-compiled	[CE]  ')'  expected	46	None	add
1059	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  q  +  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  *  q  +  2;	  d    =    p    *    q;    d    =    p    *    q;    	compilable	  [FE]  AssertionError  	41	5	replace
1060	[BUG]  [BUGGY]  d  =  p  *  q  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  q  +  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  q  +  2;	  d    =    p    *    q;    d    =    p    *    q;    	compilable	  [FE]  AssertionError  	41	5	replace
1061	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  q  +  3;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  *  q  +  3;	  d    =    p    *    q;    d    =    p    *    q;    	compilable	  [FE]  AssertionError  	41	5	replace
1062	[BUG]  [BUGGY]  d  =  p  *  q  +  3;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  q  +  3;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  q  +  3;	  d    =    p    *    q;    d    =    p    *    q;    	compilable	  [FE]  AssertionError  	41	5	replace
1063	[BUG]  [BUGGY]  if(p  >  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(l    lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ')'  expected	3	None	replace
1064	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  +  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  +  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  +  r)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	185	None	replace
1065	[BUG]  [BUGGY]  d  =  p  *  q;  dev  =  p  *  r;  [CE]  cannot  find  symbol  dev  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  q;  dev  =  p  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  q;  dev  =  p  *  r;	  d    =    p    *    q;    dev    =    p    *    q;    	non-compiled	[CE]  cannot  find  symbol  dev	115	None	replace
1066	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  if  (r  *  q  >  a)  {  d  =  r  *  q;  }  else  {  d  =  tol1  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    r    *    q;    if  (r  *  q  >  a)  {  d  =  r  *  q;  }  else  {  d  =  tol1  +  d;  }	  	compilable	  [FE]  AssertionError  	26	4	add
1067	[BUG]  [BUGGY]  d  =  r  *  q;  if  (r  *  q  >  a)  {  d  =  r  *  q;  }  else  {  d  =  tol1  +  d;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  if  (r  *  q  >  a)  {  d  =  r  *  q;  }  else  {  d  =  tol1  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    *    q;    if  (r  *  q  >  a)  {  d  =  r  *  q;  }  else  {  d  =  tol1  +  d;  }	  	compilable	  [FE]  AssertionError  	26	4	add
1068	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  if  (r  *  q  >  a)  {  d  =  r  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    r    *    q;    if  (r  *  q  >  a)  {  d  =  r  *  q;  }	  	compilable	  [FE]  AssertionError  	26	4	add
1069	[BUG]  [BUGGY]  d  =  r  *  q;  if  (r  *  q  >  a)  {  d  =  r  *  q;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  if  (r  *  q  >  a)  {  d  =  r  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    *    q;    if  (r  *  q  >  a)  {  d  =  r  *  q;  }	  	compilable	  [FE]  AssertionError  	26	4	add
1070	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  if  (r  *  q  >  a)  {  d  =  r  *  q;  }  else  {  d  =  p  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    r    *    q;    if  (r  *  q  >  a)  {  d  =  r  *  q;  }  else  {  d  =  p  +  d;  }	  	compilable	  [FE]  AssertionError  	26	4	add
1071	[BUG]  [BUGGY]  d  =  r  *  q;  if  (r  *  q  >  a)  {  d  =  r  *  q;  }  else  {  d  =  p  +  d;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  if  (r  *  q  >  a)  {  d  =  r  *  q;  }  else  {  d  =  p  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    *    q;    if  (r  *  q  >  a)  {  d  =  r  *  q;  }  else  {  d  =  p  +  d;  }	  	compilable	  [FE]  AssertionError  	26	4	add
1072	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  if  (r  *  q  >  a)  {  d  =  r  *  q;  }  else  {  d  =  t  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    r    *    q;    if  (r  *  q  >  a)  {  d  =  r  *  q;  }  else  {  d  =  t  +  d;  }	  	compilable	  [FE]  AssertionError  	26	4	add
1073	[BUG]  [BUGGY]  d  =  r  *  q;  if  (r  *  q  >  a)  {  d  =  r  *  q;  }  else  {  d  =  t  +  d;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  if  (r  *  q  >  a)  {  d  =  r  *  q;  }  else  {  d  =  t  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    *    q;    if  (r  *  q  >  a)  {  d  =  r  *  q;  }  else  {  d  =  t  +  d;  }	  	compilable	  [FE]  AssertionError  	26	4	add
1074	[BUG]  [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(x  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    -    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	157	None	replace
1075	[BUG]  [BUGGY]  if(p  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    -    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	157	None	replace
1076	[BUG]  [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(x  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	86	None	replace
1077	[BUG]  [BUGGY]  if(p  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	86	None	replace
1078	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  q  /  p;  d  =  q  +  p;  d  =  q  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        d    =    q    /    p;    d  =  q  +  p;  d  =  q  /  p;	  	compilable	  [FE]  AssertionError  	50	4	add
1079	[BUG]  [BUGGY]  d    =    q    /    p;    d  =  q  /  p;  d  =  q  +  p;  d  =  q  /  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  q  /  p;  d  =  q  +  p;  d  =  q  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        d    =    q    /    p;    d  =  q  +  p;  d  =  q  /  p;	  	compilable	  [FE]  AssertionError  	50	4	add
1080	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  a  *  r;	  d    =    p    *    r;    	compilable	  [FE]  AssertionError  	18	4	replace
1081	[BUG]  [BUGGY]  d  =  a  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  a  *  r;	  d    =    p    *    r;    	compilable	  [FE]  AssertionError  	18	4	replace
1082	[BUG]  [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  d;  if(p  >  a  *  q;  d  =  p  *  q  +  d;  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  d;  if(p  >  a  *  q;  d  =  p  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        d    =    p    *    q    +    d;    if(p  >  a  *  q;  d  =  p  *  q  +  d;	  	non-compiled	[CE]  ')'  expected	111	None	add
1083	[BUG]  [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  d;  d  =  p  *  q;  d  =  p  *   "q  +  d;  [CE]  unclosed  string  literal  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q  +  d;  d  =  p  *  q;  d  =  p  *   "q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        d    =    p    *    q    +    d;    d  =  p  *  q;  d  =  p  *   "q  +  d;	  	non-compiled	[CE]  unclosed  string  literal	111	None	add
1084	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  t  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  t  *  q;	  d    =    r    *    q;    	compilable	  [FE]  AssertionError  	27	4	replace
1085	[BUG]  [BUGGY]  d  =  t  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  t  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  t  *  q;	  d    =    r    *    q;    	compilable	  [FE]  AssertionError  	27	4	replace
1086	[BUG]  [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(x  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    -    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	155	None	replace
1087	[BUG]  [BUGGY]  if(p  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    -    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	155	None	replace
1088	[BUG]  [BUGGY]  d  =  d  /  p;  if  (d  =  d  /  p;  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  p;  if  (d  =  d  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    p;    if  (d  =  d  /  p;	  	non-compiled	[CE]  ')'  expected	13	None	add
1089	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  p;  d  =  d  /  p  +  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    p;    d  =  d  /  p  +  p;	  	compilable	  [FE]  AssertionError  	13	4	add
1090	[BUG]  [BUGGY]  d  =  d  /  p;  d  =  d  /  p  +  p;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  p;  d  =  d  /  p  +  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    p;    d  =  d  /  p  +  p;	  	compilable	  [FE]  AssertionError  	13	4	add
1091	[BUG]  [BUGGY]  d  =  m  /  r;  if  (m  /  r  >  GOLDEN_SECTION)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  }  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  r;  if  (m  /  r  >  GOLDEN_SECTION)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    r;    if  (m  /  r  >  GOLDEN_SECTION)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	add
1092	[BUG]  [BUGGY]  d  =  m  /  r;  if  (m  /  r  >  GOLDEN_SECTION)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  r;  if  (m  /  r  >  GOLDEN_SECTION)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    r;    if  (m  /  r  >  GOLDEN_SECTION)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  ')'  expected	21	None	add
1093	[BUG]  [BUGGY]  d  =  m  /  r;  if  (m  /  r  >  GOLDEN_SECTION)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  r;  if  (m  /  r  >  GOLDEN_SECTION)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    r;    if  (m  /  r  >  GOLDEN_SECTION)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	add
1094	[BUG]  [BUGGY]  d  =  m  /  r;  if  (m  /  r  >  GOLDEN_SECTION)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  r;  if  (m  /  r  >  GOLDEN_SECTION)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    r;    if  (m  /  r  >  GOLDEN_SECTION)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  ')'  expected	21	None	add
1095	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  if(d  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  if(d  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    if(d  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  timeout    	non-compiled	[CE]  reached  end  of  file  while  parsing	30	None	add
1096	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q;  if(p  >  a  *  q)  {  d  =  p  *  q;  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        *        q;        d    =    p    *    q;    if(p  >  a  *  q)  {  d  =  p  *  q;  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	40	4	add
1097	[BUG]  [BUGGY]  d    =    p    *    q;    d  =  p  *  q;  if(p  >  a  *  q)  {  d  =  p  *  q;  d  =  p  *  q;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q;  if(p  >  a  *  q)  {  d  =  p  *  q;  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        d    =    p    *    q;    if(p  >  a  *  q)  {  d  =  p  *  q;  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	40	4	add
1098	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q;  if(p  >  a  *  q)  {  d  =  p  *  q;  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        *        q;        d    =    p    *    q;    if(p  >  a  *  q)  {  d  =  p  *  q;  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	40	4	add
1099	[BUG]  [BUGGY]  d    =    p    *    q;    d  =  p  *  q;  if(p  >  a  *  q)  {  d  =  p  *  q;  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q;  if(p  >  a  *  q)  {  d  =  p  *  q;  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        d    =    p    *    q;    if(p  >  a  *  q)  {  d  =  p  *  q;  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	40	4	add
1100	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q;  if(p  >  a  *  q)  {  d  =  p  *  q;  d  =  p  *  q;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        *        q;        d    =    p    *    q;    if(p  >  a  *  q)  {  d  =  p  *  q;  d  =  p  *  q;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionError  	40	6	add
1101	[BUG]  [BUGGY]  d    =    p    *    q;    d  =  p  *  q;  if(p  >  a  *  q)  {  d  =  p  *  q;  d  =  p  *  q;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q;  if(p  >  a  *  q)  {  d  =  p  *  q;  d  =  p  *  q;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        d    =    p    *    q;    if(p  >  a  *  q)  {  d  =  p  *  q;  d  =  p  *  q;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionError  	40	6	add
1102	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q;  if(p  >  a  *  q)  {  d  =  p  *  q;  d  =  p  *  q;  }  else  {  d  =  tol1  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        *        q;        d    =    p    *    q;    if(p  >  a  *  q)  {  d  =  p  *  q;  d  =  p  *  q;  }  else  {  d  =  tol1  +  d;  }	  	compilable	  [FE]  AssertionError  	40	4	add
1103	[BUG]  [BUGGY]  d    =    p    *    q;    d  =  p  *  q;  if(p  >  a  *  q)  {  d  =  p  *  q;  d  =  p  *  q;  }  else  {  d  =  tol1  +  d;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    d  =  p  *  q;  if(p  >  a  *  q)  {  d  =  p  *  q;  d  =  p  *  q;  }  else  {  d  =  tol1  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        d    =    p    *    q;    if(p  >  a  *  q)  {  d  =  p  *  q;  d  =  p  *  q;  }  else  {  d  =  tol1  +  d;  }	  	compilable	  [FE]  AssertionError  	40	4	add
1104	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x    >    a    *(b    -    x)&&    p    <    q    *(lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	186	4	add
1105	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(b    -    x)&&    p    <    q    *(lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	186	4	add
1106	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q  +  d;  d  =  p  /  q;  d  =  m  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        m        /        q;        d    =    m    /    q    +    d;    d  =  p  /  q;  d  =  m  /  q  +  d;	  	compilable	  [FE]  AssertionError  	103	4	add
1107	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q  +  d;  d  =  p  /  q;  d  =  m  /  q  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q  +  d;  d  =  p  /  q;  d  =  m  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q    +    d;    d  =  p  /  q;  d  =  m  /  q  +  d;	  	compilable	  [FE]  AssertionError  	103	4	add
1108	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q  +  d;  d  =  m  +  q;  d  =  m  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        m        /        q;        d    =    m    /    q    +    d;    d  =  m  +  q;  d  =  m  /  q  +  d;	  	compilable	  [FE]  AssertionError  	103	4	add
1109	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q  +  d;  d  =  m  +  q;  d  =  m  /  q  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q  +  d;  d  =  m  +  q;  d  =  m  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q    +    d;    d  =  m  +  q;  d  =  m  /  q  +  d;	  	compilable	  [FE]  AssertionError  	103	4	add
1110	[BUG]  [BUGGY]  if(x  >  a  *  (w  -  x)&&  p  <  q  *  (lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *  (w  -  x)&&  p  <  q  *  (lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *  (w  -  x)&&  p  <  q  *  (lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *    (b    -    x)&&    p    <    q    *    (lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	207	None	replace
1111	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  if  (p  >  a  /  2  ||  b  -  u  <  tol2)  {  d  =  p  /  2;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    /    2;    if  (p  >  a  /  2  ||  b  -  u  <  tol2)  {  d  =  p  /  2;  }	  	compilable	  [FE]  AssertionError  	161	4	add
1112	[BUG]  [BUGGY]  d  =  p  /  2;  if  (p  >  a  /  2  ||  b  -  u  <  tol2)  {  d  =  p  /  2;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  if  (p  >  a  /  2  ||  b  -  u  <  tol2)  {  d  =  p  /  2;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    2;    if  (p  >  a  /  2  ||  b  -  u  <  tol2)  {  d  =  p  /  2;  }	  	compilable	  [FE]  AssertionError  	161	4	add
1113	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  if  (p  >  a  /  2  &&  b  <  m)  {  d  =  p  /  2;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    /    2;    if  (p  >  a  /  2  &&  b  <  m)  {  d  =  p  /  2;  }	  	compilable	  [FE]  AssertionError  	161	4	add
1114	[BUG]  [BUGGY]  d  =  p  /  2;  if  (p  >  a  /  2  &&  b  <  m)  {  d  =  p  /  2;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  if  (p  >  a  /  2  &&  b  <  m)  {  d  =  p  /  2;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    2;    if  (p  >  a  /  2  &&  b  <  m)  {  d  =  p  /  2;  }	  	compilable	  [FE]  AssertionError  	161	4	add
1115	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  if  (p  >  a  /  2  &&  p  <  a  -  x)  {  d  =  p  /  2;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    /    2;    if  (p  >  a  /  2  &&  p  <  a  -  x)  {  d  =  p  /  2;  }	  	compilable	  [FE]  AssertionError  	161	4	add
1116	[BUG]  [BUGGY]  d  =  p  /  2;  if  (p  >  a  /  2  &&  p  <  a  -  x)  {  d  =  p  /  2;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  if  (p  >  a  /  2  &&  p  <  a  -  x)  {  d  =  p  /  2;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    2;    if  (p  >  a  /  2  &&  p  <  a  -  x)  {  d  =  p  /  2;  }	  	compilable	  [FE]  AssertionError  	161	4	add
1117	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  if  (p  >  a  /  2  &&  p  <  a  -  d)  {  d  =  p  /  2;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    /    2;    if  (p  >  a  /  2  &&  p  <  a  -  d)  {  d  =  p  /  2;  }	  	compilable	  [FE]  AssertionError  	161	4	add
1118	[BUG]  [BUGGY]  d  =  p  /  2;  if  (p  >  a  /  2  &&  p  <  a  -  d)  {  d  =  p  /  2;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  2;  if  (p  >  a  /  2  &&  p  <  a  -  d)  {  d  =  p  /  2;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    2;    if  (p  >  a  /  2  &&  p  <  a  -  d)  {  d  =  p  /  2;  }	  	compilable	  [FE]  AssertionError  	161	4	add
1119	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    p    /    p;    }    d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }	  	compilable	  [FE]  AssertionError  	193	4	add
1120	[BUG]  [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    p    /    p;    }    d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }	  	compilable	  [FE]  AssertionError  	193	4	add
1121	[BUG]  [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  if(x  >  a)  {  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  p  /  p;  }  else  {  d  =  p  /  p;  }  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  if(x  >  a)  {  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  p  /  p;  }  else  {  d  =  p  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    p    /    p;    }    if(x  >  a)  {  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  p  /  p;  }  else  {  d  =  p  /  p;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	193	None	add
1122	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  if(x  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    p    /    p;    }    if(x  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }	  	compilable	  [FE]  AssertionError  	193	4	add
1123	[BUG]  [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  if(x  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  if(x  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    p    /    p;    }    if(x  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }	  	compilable	  [FE]  AssertionError  	193	4	add
1124	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  if(q  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    p    /    p;    }    if(q  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }	  	compilable	  [FE]  AssertionError  	193	4	add
1125	[BUG]  [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  if(q  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  if(q  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        if    (q    /    p    >    a)    {    d    =    q    /    p;    }    else    {    d    =    p    /    p;    }    if(q  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }	  	compilable	  [FE]  AssertionError  	193	4	add
1126	[BUG]  [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  >  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  ||  p  <  a  ||  p  >  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  ||  p  <  a  ||  p  >  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)||    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	replace
1127	[BUG]  [BUGGY]  if(x  >  a  ||  b  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  ||  b  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  ||  b  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)||    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	replace
1128	[BUG]  [BUGGY]  d  =  d  /  r;  if  (d  =  d  /  r;  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  r;  if  (d  =  d  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    r;    if  (d  =  d  /  r;	  	non-compiled	[CE]  ')'  expected	94	None	add
1129	[BUG]  [BUGGY]  d  =  d  /  r;  d  =  d  /  r);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  r;  d  =  d  /  r);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    r;    d  =  d  /  r);	  	non-compiled	[CE]  ';'  expected	94	None	add
1130	[BUG]  [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  if(a  >  r)  {  d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  if(a  >  r)  {  d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        if    (r    /    q    >    a)    {    d    =    r    /    q;    }    else    {    d    =    r    /    q;    }    if(a  >  r)  {  d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	205	None	add
1131	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  if(r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        if    (r    /    q    >    a)    {    d    =    r    /    q;    }    else    {    d    =    r    /    q;    }    if(r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }	  	compilable	  [FE]  AssertionError  	205	4	add
1132	[BUG]  [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  if(r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  if(r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        if    (r    /    q    >    a)    {    d    =    r    /    q;    }    else    {    d    =    r    /    q;    }    if(r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }	  	compilable	  [FE]  AssertionError  	205	4	add
1133	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  if(x  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        if    (r    /    q    >    a)    {    d    =    r    /    q;    }    else    {    d    =    r    /    q;    }    if(x  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }	  	compilable	  [FE]  AssertionError  	205	4	add
1134	[BUG]  [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  if(x  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  if(x  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        if    (r    /    q    >    a)    {    d    =    r    /    q;    }    else    {    d    =    r    /    q;    }    if(x  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }	  	compilable	  [FE]  AssertionError  	205	4	add
1135	[BUG]  [BUGGY]  if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *(l    lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	replace
1136	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(p  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	          if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	168	5	replace
1137	[BUG]  [BUGGY]  if(p  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	          if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	168	5	replace
1138	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(p  >  a  *(x  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	          if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	168	5	replace
1139	[BUG]  [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(x  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	          if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	168	5	replace
1140	[BUG]  [BUGGY]  if(x  >  a  ||  b  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  tol  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  ||  b  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  tol  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  ||  b  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  tol  *  r))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    tol    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
1141	[BUG]  [BUGGY]  int  d  =  p  /  2;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  p  /  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  p  /  2;	  d    =    p    /    r;    int    d    =    p    /    r;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	135	None	replace
1142	[BUG]  [BUGGY]  int  d  =  p  /  r  *  count;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  p  /  r  *  count;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  p  /  r  *  count;	  d    =    p    /    r;    int    d    =    p    /    r;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	135	None	replace
1143	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  r;  d  =  q  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  q  *  r;  d  =  q  *  q;	  d    =    r    /    q;    d    =    r    /    q;    	compilable	  [FE]  AssertionError  	29	5	replace
1144	[BUG]  [BUGGY]  d  =  q  *  r;  d  =  q  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  r;  d  =  q  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  q  *  r;  d  =  q  *  q;	  d    =    r    /    q;    d    =    r    /    q;    	compilable	  [FE]  AssertionError  	29	5	replace
1145	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  p;  d  =  q  *  p  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    *    p;    d  =  q  *  p  +  d;	  	compilable	  [FE]  AssertionError  	48	4	add
1146	[BUG]  [BUGGY]  d  =  q  *  p;  d  =  q  *  p  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  p;  d  =  q  *  p  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    *    p;    d  =  q  *  p  +  d;	  	compilable	  [FE]  AssertionError  	48	4	add
1147	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  p;  d  =  b  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    *    p;    d  =  b  *  p;	  	compilable	  [FE]  AssertionError  	48	4	add
1148	[BUG]  [BUGGY]  d  =  q  *  p;  d  =  b  *  p;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  p;  d  =  b  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    *    p;    d  =  b  *  p;	  	compilable	  [FE]  AssertionError  	48	4	add
1149	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  p;  d  =  m  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    *    p;    d  =  m  *  p;	  	compilable	  [FE]  AssertionError  	48	4	add
1150	[BUG]  [BUGGY]  d  =  q  *  p;  d  =  m  *  p;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  *  p;  d  =  m  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    *    p;    d  =  m  *  p;	  	compilable	  [FE]  AssertionError  	48	4	add
1151	[BUG]  [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  d)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  d)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(x  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  d)  <  Math.abs(0.5  *  q  *  r))  {	  if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    -    d)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	156	None	replace
1152	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  +  m)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  +  m)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  +  m)  <  =  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    m)    <    =    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1153	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(1.0    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	164	5	replace
1154	[BUG]  [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(1.0    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	164	5	replace
1155	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  r  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  d    =    r    /    q;    d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    y)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	compilable	  [FE]  AssertionError  	32	5	replace
1156	[BUG]  [BUGGY]  d  =  r  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  r  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  d    =    r    /    q;    d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    y)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	compilable	  [FE]  AssertionError  	32	5	replace
1157	[BUG]  [BUGGY]  d  =  r  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  y)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  cannot  find  symbol  y  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  y)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  r  *  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  y)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  d    =    r    /    q;    d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    y)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  cannot  find  symbol  y	32	None	replace
1158	[BUG]  [BUGGY]  timeout  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  d    =    r    /    q;    d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    y)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	compilable	timeout	32	1	replace
1159	[BUG]  [BUGGY]  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  timeout  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  d    =    r    /    q;    d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    y)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	compilable	timeout	32	1	replace
1160	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  +  1;  d  =  d  *  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    q    +    1;    d  =  d  *  q  +  1;	  	compilable	  [FE]  AssertionError  	100	4	add
1161	[BUG]  [BUGGY]  d  =  d  /  q  +  1;  d  =  d  *  q  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  +  1;  d  =  d  *  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    q    +    1;    d  =  d  *  q  +  1;	  	compilable	  [FE]  AssertionError  	100	4	add
1162	[BUG]  [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  if(p  >  a  *  q)  {  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  if(p  >  a  *  q)  {  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        if    (p    >    q    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    if(p  >  a  *  q)  {  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	171	None	add
1163	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    <    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	70	5	replace
1164	[BUG]  [BUGGY]  if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    <    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	70	5	replace
1165	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  q  %  p;  d  =  q  /  p;  d  =  q  %  p  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        q        /        p;        d    =    q    %    p;    d  =  q  /  p;  d  =  q  %  p  +  d;	  	compilable	  [FE]  AssertionError  	132	4	add
1166	[BUG]  [BUGGY]  d    =    q    /    p;    d  =  q  %  p;  d  =  q  /  p;  d  =  q  %  p  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    q    /    p;    d  =  q  %  p;  d  =  q  /  p;  d  =  q  %  p  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        q        /        p;        d    =    q    %    p;    d  =  q  /  p;  d  =  q  %  p  +  d;	  	compilable	  [FE]  AssertionError  	132	4	add
1167	[BUG]  [BUGGY]  int  d  =  r  /  q  *  2;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  r  /  q  *  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  r  /  q  *  2;	  d    =    r    /    q;    int    d    =    r    /    q;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	146	None	replace
1168	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  =  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  =  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  =  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    =    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
1169	[BUG]  [BUGGY]  d  =  r  /  p;  if  (r  /  p  >  a)  {  if(x  >  a)  {  d  =  r  /  p;  }  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  p;  if  (r  /  p  >  a)  {  if(x  >  a)  {  d  =  r  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    /    p;    if  (r  /  p  >  a)  {  if(x  >  a)  {  d  =  r  /  p;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	add
1170	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  p;  if  (r  /  p  >  a)  {  d  =  r  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    r    /    p;    if  (r  /  p  >  a)  {  d  =  r  /  p;  }	  	compilable	  [FE]  AssertionError  	11	4	add
1171	[BUG]  [BUGGY]  d  =  r  /  p;  if  (r  /  p  >  a)  {  d  =  r  /  p;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  p;  if  (r  /  p  >  a)  {  d  =  r  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    /    p;    if  (r  /  p  >  a)  {  d  =  r  /  p;  }	  	compilable	  [FE]  AssertionError  	11	4	add
1172	[BUG]  [BUGGY]  d  =  r  /  p;  if  (r  /  p  >  a)  {  if  (x  <  =  m)  {  d  =  r  /  p;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  r  /  p;  if  (r  /  p  >  a)  {  if  (x  <  =  m)  {  d  =  r  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    /    p;    if  (r  /  p  >  a)  {  if  (x  <  =  m)  {  d  =  r  /  p;  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
1173	[BUG]  [BUGGY]  d  =  m  /  p;  if  (m  /  p  >  a)  {  if(x  <  =  m)  {  d  =  m  /  p;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  p;  if  (m  /  p  >  a)  {  if(x  <  =  m)  {  d  =  m  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    p;    if  (m  /  p  >  a)  {  if(x  <  =  m)  {  d  =  m  /  p;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
1174	[BUG]  [BUGGY]  d  =  m  /  p;  if  (m  /  p  >  a)  {  if(x  >  a)  {  d  =  m  /  p;  }  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  p;  if  (m  /  p  >  a)  {  if(x  >  a)  {  d  =  m  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    p;    if  (m  /  p  >  a)  {  if(x  >  a)  {  d  =  m  /  p;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	15	None	add
1175	[BUG]  [BUGGY]  d  =  m  /  p;  if  (m  /  p  >  a)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  p;  if  (m  /  p  >  a)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    p;    if  (m  /  p  >  a)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
1176	[BUG]  [BUGGY]  d  =  a  /  q;  if  (a  =  a  /  q;  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  q;  if  (a  =  a  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    a    /    q;    if  (a  =  a  /  q;	  	non-compiled	[CE]  ')'  expected	122	None	add
1177	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  q;  d  =  a  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    a    /    q;    d  =  a  /  q  +  d;	  	compilable	  [FE]  AssertionError  	122	4	add
1178	[BUG]  [BUGGY]  d  =  a  /  q;  d  =  a  /  q  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  q;  d  =  a  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    a    /    q;    d  =  a  /  q  +  d;	  	compilable	  [FE]  AssertionError  	122	4	add
1179	[BUG]  [BUGGY]  d  =  a  /  q;  d  =  A  /  q;  [CE]  cannot  find  symbol  A  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  q;  d  =  A  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    a    /    q;    d  =  A  /  q;	  	non-compiled	[CE]  cannot  find  symbol  A	122	None	add
1180	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  q;  d  =  d  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    *    q;    d  =  d  *  q  +  d;	  	compilable	  [FE]  AssertionError  	96	4	add
1181	[BUG]  [BUGGY]  d  =  d  *  q;  d  =  d  *  q  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  q;  d  =  d  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    *    q;    d  =  d  *  q  +  d;	  	compilable	  [FE]  AssertionError  	96	4	add
1182	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  q  *  d;	  d    =    d    /    q;    d    =    d    /    q    +    d;    	compilable	  [FE]  AssertionError  	160	5	replace
1183	[BUG]  [BUGGY]  d  =  d  /  q  *  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  q  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  q  *  d;	  d    =    d    /    q;    d    =    d    /    q    +    d;    	compilable	  [FE]  AssertionError  	160	5	replace
1184	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  q;  r  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  q;  r  =  r  /  q;	  d    =    r    /    q;    r    =    r    /    q;    	compilable	  [FE]  AssertionError  	148	4	replace
1185	[BUG]  [BUGGY]  d  =  p  /  q;  r  =  r  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  q;  r  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  q;  r  =  r  /  q;	  d    =    r    /    q;    r    =    r    /    q;    	compilable	  [FE]  AssertionError  	148	4	replace
1186	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  q;  r  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  a  /  q;  r  =  r  /  q;	  d    =    r    /    q;    r    =    r    /    q;    	compilable	  [FE]  AssertionError  	148	5	replace
1187	[BUG]  [BUGGY]  d  =  a  /  q;  r  =  r  /  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  q;  r  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  a  /  q;  r  =  r  /  q;	  d    =    r    /    q;    r    =    r    /    q;    	compilable	  [FE]  AssertionError  	148	5	replace
1188	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  if  (a  /  p  >  x)  {  d  =  a  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    a    /    p;    if  (a  /  p  >  x)  {  d  =  a  /  p;  }	  	compilable	  [FE]  AssertionError  	180	4	add
1189	[BUG]  [BUGGY]  d  =  a  /  p;  if  (a  /  p  >  x)  {  d  =  a  /  p;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  if  (a  /  p  >  x)  {  d  =  a  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    a    /    p;    if  (a  /  p  >  x)  {  d  =  a  /  p;  }	  	compilable	  [FE]  AssertionError  	180	4	add
1190	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  if  (a  /  p  >  d)  {  d  =  a  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    a    /    p;    if  (a  /  p  >  d)  {  d  =  a  /  p;  }	  	compilable	  [FE]  AssertionError  	180	4	add
1191	[BUG]  [BUGGY]  d  =  a  /  p;  if  (a  /  p  >  d)  {  d  =  a  /  p;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  if  (a  /  p  >  d)  {  d  =  a  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    a    /    p;    if  (a  /  p  >  d)  {  d  =  a  /  p;  }	  	compilable	  [FE]  AssertionError  	180	4	add
1192	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  if  (a  /  p  >  t)  {  d  =  a  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    a    /    p;    if  (a  /  p  >  t)  {  d  =  a  /  p;  }	  	compilable	  [FE]  AssertionError  	180	4	add
1193	[BUG]  [BUGGY]  d  =  a  /  p;  if  (a  /  p  >  t)  {  d  =  a  /  p;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  if  (a  /  p  >  t)  {  d  =  a  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    a    /    p;    if  (a  /  p  >  t)  {  d  =  a  /  p;  }	  	compilable	  [FE]  AssertionError  	180	4	add
1194	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  if  (a  /  p  >  x)  {  d  =  tol1  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    a    /    p;    if  (a  /  p  >  x)  {  d  =  tol1  /  p;  }	  	compilable	  [FE]  AssertionError  	180	4	add
1195	[BUG]  [BUGGY]  d  =  a  /  p;  if  (a  /  p  >  x)  {  d  =  tol1  /  p;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  p;  if  (a  /  p  >  x)  {  d  =  tol1  /  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    a    /    p;    if  (a  /  p  >  x)  {  d  =  tol1  /  p;  }	  	compilable	  [FE]  AssertionError  	180	4	add
1196	[BUG]  [BUGGY]  if(x  >  a  ||  b  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  ||  b  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  ||  b  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(m)  <  Math.abs(0.5  *  q  *  r))  {	          if(x    >    a    ||    p    <    a    ||    p    <    q    *    (b    -    x)&&    Math.abs(m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
1197	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  t  *  r;  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  t  *  r;  d  =  r  /  q;	  d    =    r    /    q;    d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    timeout    	compilable	  [FE]  AssertionError  	36	5	replace
1198	[BUG]  [BUGGY]  d  =  t  *  r;  d  =  r  /  q;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  t  *  r;  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  t  *  r;  d  =  r  /  q;	  d    =    r    /    q;    d    =    r    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    timeout    	compilable	  [FE]  AssertionError  	36	5	replace
1199	[BUG]  [BUGGY]  if(x  >  a  *(w  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(w  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(w  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(b    -    x)&&    p    <    b    *(lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	182	None	replace
1200	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  if(x  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        *        q;        if    (p    >    a    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    if(x  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	169	4	add
1201	[BUG]  [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  if(x  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  if(x  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        *        q;        if    (p    >    a    *    q)    {    d    =    p    *    q;    }    else    {    d    =    p    *    q;    }    if(x  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	169	4	add
1202	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	71	4	add
1203	[BUG]  [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	71	4	add
1204	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(a  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(a  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	71	4	add
1205	[BUG]  [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(a  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(a  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(a  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	71	4	add
1206	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  r  *(l  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  r  *(l  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  r  *(l  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(l    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	121	None	replace
1207	[BUG]  [BUGGY]  if(x  >  a  *(l  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(l  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(l  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(l    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	121	None	replace
1208	[BUG]  [BUGGY]  if(x  <  a  *  (b  -  x)&&  p  <  q  *  (lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *  (b  -  x)&&  p  <  q  *  (lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *  (b  -  x)&&  p  <  q  *  (lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	67	None	replace
1209	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  >=  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	74	5	replace
1210	[BUG]  [BUGGY]  if(x  >=  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >=  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >=    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	74	5	replace
1211	[BUG]  [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }	          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    =    Math.abs(0.5    *    q    *    r))    {    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
1212	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  timeout    	non-compiled	[CE]  reached  end  of  file  while  parsing	58	None	add
1213	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  if(m  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  if(m  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    if(m  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  timeout    	non-compiled	[CE]  reached  end  of  file  while  parsing	58	None	add
1214	[BUG]  [BUGGY]  if(x  >  a  *(l  lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(l  lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(l  lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {	  if(x    >    a    *(l    lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ')'  expected	120	None	replace
1215	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x    <    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	69	4	add
1216	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    <    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	69	4	add
1217	[BUG]  [BUGGY]  d  =  d  *  l;  [CE]  cannot  find  symbol  l  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  *  l;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  *  l;	  d    =    d    *    q;    	non-compiled	[CE]  cannot  find  symbol  l	97	None	replace
1218	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    =    Math.abs(0.5    *    q    *    r))    {    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1219	[BUG]  [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(x  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	          if(p    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	124	None	replace
1220	[BUG]  [BUGGY]  if(p  >  a  *(b  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  >  a  *(b  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(b  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	          if(p    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	124	None	replace
1221	[BUG]  [BUGGY]  d  =  q  /  r;  if  (q  /  r  >  eps)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  }  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  r;  if  (q  /  r  >  eps)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    r;    if  (q  /  r  >  eps)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	107	None	add
1222	[BUG]  [BUGGY]  d  =  q  /  r;  if  (q  /  r  >  eps)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  }  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  r;  if  (q  /  r  >  eps)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    r;    if  (q  /  r  >  eps)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  ')'  expected	107	None	add
1223	[BUG]  [BUGGY]  d  =  q  /  r;  if  (q  /  r  >  eps)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  r;  if  (q  /  r  >  eps)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    r;    if  (q  /  r  >  eps)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  ')'  expected	107	None	add
1224	[BUG]  [BUGGY]  d  =  q  /  r;  if  (q  /  r  >  eps)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(1.0  *  q  *  r))  {  }  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  r;  if  (q  /  r  >  eps)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    r;    if  (q  /  r  >  eps)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(1.0  *  q  *  r))  {  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	107	None	add
1225	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  h  *  r))  {  }  [CE]  cannot  find  symbol  h  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  h  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  h  *  r))  {  }	  	non-compiled	[CE]  cannot  find  symbol  h	117	None	add
1226	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q  +  d;  d  =  p  /  q;  d  =  d  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        d        /        q;        d    =    d    /    q    +    d;    d  =  p  /  q;  d  =  d  /  q  +  d;	  	compilable	  [FE]  AssertionError  	159	4	add
1227	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  /  q  +  d;  d  =  p  /  q;  d  =  d  /  q  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q  +  d;  d  =  p  /  q;  d  =  d  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    /    q    +    d;    d  =  p  /  q;  d  =  d  /  q  +  d;	  	compilable	  [FE]  AssertionError  	159	4	add
1228	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  /  q  +  d;  d  =  d  /  q;  d  =  d  /  q  +  del;  [CE]  cannot  find  symbol  del  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  /  q  +  d;  d  =  d  /  q;  d  =  d  /  q  +  del;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    /    q    +    d;    d  =  d  /  q;  d  =  d  /  q  +  del;	  	non-compiled	[CE]  cannot  find  symbol  del	159	None	add
1229	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	                if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	167	4	add
1230	[BUG]  [BUGGY]          if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	167	4	add
1231	[BUG]  [BUGGY]          if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  tol  *  r))  {  }  [CE]  cannot  find  symbol  tol  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  tol  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  tol  *  r))  {  }	  	non-compiled	[CE]  cannot  find  symbol  tol	167	None	add
1232	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(p  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	                if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(p  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	167	4	add
1233	[BUG]  [BUGGY]          if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(p  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(p  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(p  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	167	4	add
1234	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  d  =  r  /  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        m        /        q;        d    =    m    /    q;    d  =  r  /  q;  d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	56	4	add
1235	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  d  =  r  /  q;  d  =  m  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  d  =  r  /  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q;    d  =  r  /  q;  d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	56	4	add
1236	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  d  =  m  +  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        m        /        q;        d    =    m    /    q;    d  =  m  +  q;  d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	56	4	add
1237	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  d  =  m  +  q;  d  =  m  /  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  d  =  m  +  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q;    d  =  m  +  q;  d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	56	4	add
1238	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  %  q;  d  =  d  /  q;  d  =  de  d  %  q;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  %  q;  d  =  d  /  q;  d  =  de  d  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    %    q;    d  =  d  /  q;  d  =  de  d  %  q;	  	non-compiled	[CE]  ';'  expected	143	None	add
1239	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  d  %  q;  d  =  d  /  q;  d  =  d  %  q  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  d  %  q;  d  =  d  /  q;  d  =  d  %  q  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    d    %    q;    d  =  d  /  q;  d  =  d  %  q	  	non-compiled	[CE]  ';'  expected	143	None	add
1240	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  =  b  *(b  -  x)&&  Math.abs(p  /  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  =  b  *(b  -  x)&&  Math.abs(p  /  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  =  b  *(b  -  x)&&  Math.abs(p  /  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    =    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1241	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  p  /  q;  d  =  p  /  q;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        d        /        q;        d    =    p    /    q;    d  =  p  /  q;  d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	141	4	add
1242	[BUG]  [BUGGY]  d    =    d    /    q;    d  =  p  /  q;  d  =  p  /  q;  d  =  p  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    d    /    q;    d  =  p  /  q;  d  =  p  /  q;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        d        /        q;        d    =    p    /    q;    d  =  p  /  q;  d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	141	4	add
1243	[BUG]  [BUGGY]  int  d  =  p  *  q  +  2;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  p  *  q  +  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  p  *  q  +  2;	  d    =    p    *    q;    int    d    =    p    *    q;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	110	None	replace
1244	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    /    r;    r  =  p  /  r;  r  =  p  /  r;  r  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        p        /        r;        r    =    p    /    r;    r  =  p  /  r;  r  =  p  /  r;	  	compilable	  [FE]  AssertionError  	136	4	add
1245	[BUG]  [BUGGY]  d    =    p    /    r;    r  =  p  /  r;  r  =  p  /  r;  r  =  p  /  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    /    r;    r  =  p  /  r;  r  =  p  /  r;  r  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        /        r;        r    =    p    /    r;    r  =  p  /  r;  r  =  p  /  r;	  	compilable	  [FE]  AssertionError  	136	4	add
1246	[BUG]  [BUGGY]  d    =    p    /    r;    r  =  p  /  r;  d  =  p  /  r;  r  =  p  /  l;  [CE]  cannot  find  symbol  l  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    p    /    r;    r  =  p  /  r;  d  =  p  /  r;  r  =  p  /  l;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        p        /        r;        r    =    p    /    r;    d  =  p  /  r;  r  =  p  /  l;	  	non-compiled	[CE]  cannot  find  symbol  l	136	None	add
1247	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(1.0    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	163	4	add
1248	[BUG]  [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]          if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	                if(x        >        a        *(lo        -        x)&&        p        <        q        *(b        -        x)&&        Math.abs(p)        <        Math.abs(0.5        *        q        *        r))        {        }        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(1.0    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	163	4	add
1249	[BUG]  [BUGGY]  d  =  q  /  m;  if  (q  /  m  >  eps)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  }  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  m;  if  (q  /  m  >  eps)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    m;    if  (q  /  m  >  eps)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	88	None	add
1250	[BUG]  [BUGGY]  d  =  q  /  m;  if  (q  /  m  >  eps)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  }  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  m;  if  (q  /  m  >  eps)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    m;    if  (q  /  m  >  eps)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  ')'  expected	88	None	add
1251	[BUG]  [BUGGY]  d  =  q  /  m;  if  (q  /  m  >  eps)  {  if  (x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  }  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  m;  if  (q  /  m  >  eps)  {  if  (x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    m;    if  (q  /  m  >  eps)  {  if  (x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	88	None	add
1252	[BUG]  [BUGGY]  d  =  q  /  m;  if  (q  /  m  >  eps)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  q  /  m;  if  (q  /  m  >  eps)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    m;    if  (q  /  m  >  eps)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  ')'  expected	88	None	add
1253	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  a  /  m;	  d    =    q    /    m;    	compilable	  [FE]  AssertionError  	89	5	replace
1254	[BUG]  [BUGGY]  d  =  a  /  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  a  /  m;	  d    =    q    /    m;    	compilable	  [FE]  AssertionError  	89	5	replace
1255	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  q  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  m  /  q  *  d;	  d    =    m    /    q;    d    =    m    /    q    +    d;    	compilable	  [FE]  AssertionError  	104	5	replace
1256	[BUG]  [BUGGY]  d  =  m  /  q  *  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  m  /  q  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  m  /  q  *  d;	  d    =    m    /    q;    d    =    m    /    q    +    d;    	compilable	  [FE]  AssertionError  	104	5	replace
1257	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  w  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  w  /  p;	  d    =    q    /    p;    d    =    q    /    p;    }    else    if(i    >    a    -    x)    {    d    =    q    /    p;    }    	compilable	  [FE]  AssertionError  	53	5	replace
1258	[BUG]  [BUGGY]  d  =  w  /  p;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  w  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  w  /  p;	  d    =    q    /    p;    d    =    q    /    p;    }    else    if(i    >    a    -    x)    {    d    =    q    /    p;    }    	compilable	  [FE]  AssertionError  	53	5	replace
1259	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r;  d  =  p  *  r  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    *    r;    d  =  p  *  r  +  d;	  	compilable	  [FE]  AssertionError  	17	4	add
1260	[BUG]  [BUGGY]  d  =  p  *  r;  d  =  p  *  r  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r;  d  =  p  *  r  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    *    r;    d  =  p  *  r  +  d;	  	compilable	  [FE]  AssertionError  	17	4	add
1261	[BUG]  [BUGGY]  d  =  p  *  r;  d  =  p  *  r);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r;  d  =  p  *  r);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    *    r;    d  =  p  *  r);	  	non-compiled	[CE]  ';'  expected	17	None	add
1262	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  x  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  x  *  q;	  d    =    m    /    q;    d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    timeout    	compilable	  [FE]  AssertionError  	62	5	replace
1263	[BUG]  [BUGGY]  d  =  x  *  q;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  x  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  x  *  q;	  d    =    m    /    q;    d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    timeout    	compilable	  [FE]  AssertionError  	62	5	replace
1264	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  *  x;  d  =  b  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  a  *  x;  d  =  b  *  q;	  d    =    m    /    q;    d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    timeout    	compilable	  [FE]  AssertionError  	62	5	replace
1265	[BUG]  [BUGGY]  d  =  a  *  x;  d  =  b  *  q;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  a  *  x;  d  =  b  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  a  *  x;  d  =  b  *  q;	  d    =    m    /    q;    d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    timeout    	compilable	  [FE]  AssertionError  	62	5	replace
1266	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  tol1  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  >  a  *(b  -  x)&&  p  <  tol1  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(b    -    x)&&    p    <    q    *(lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	187	5	replace
1267	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  tol1  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  tol1  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  tol1  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(b    -    x)&&    p    <    q    *(lo    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	187	5	replace
1268	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  q  +  1;	  d    =    d    /    q    +    1;    	compilable	  [FE]  AssertionError  	101	5	replace
1269	[BUG]  [BUGGY]  d  =  p  /  q  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  q  +  1;	  d    =    d    /    q    +    1;    	compilable	  [FE]  AssertionError  	101	5	replace
1270	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  w  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  w  /  r;	  d    =    m    /    r;    	compilable	  [FE]  AssertionError  	22	5	replace
1271	[BUG]  [BUGGY]  d  =  w  /  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  w  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  w  /  r;	  d    =    m    /    r;    	compilable	  [FE]  AssertionError  	22	5	replace
1272	[BUG]  [BUGGY]  if(x  <  a  *(b  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(b  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(b  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
1273	[BUG]  [BUGGY]  if(p  <  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(p  <  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  <  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    <    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
1274	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {	  if(x    <    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
1275	[BUG]  [BUGGY]  if(x  <  =  m)  {  d  =  tol1  /  d;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  =  m)  {  d  =  tol1  /  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  =  m)  {  d  =  tol1  /  d;  }	  d    =    m    /    q;    if    (m    /    q    >    a)    {    if    (x    <    =    m)    {    d    =    tol1    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
1276	[BUG]  [BUGGY]  if(x  <  =  m)  {  d  =  tol1  +  d;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  <  =  m)  {  d  =  tol1  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  =  m)  {  d  =  tol1  +  d;  }	  d    =    m    /    q;    if    (m    /    q    >    a)    {    if    (x    <    =    m)    {    d    =    tol1    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
1277	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	118	None	replace
1278	[BUG]  [BUGGY]  d  =  d  /  2;  if  (d  =  d  /  2;  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2;  if  (d  =  d  /  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    2;    if  (d  =  d  /  2;	  	non-compiled	[CE]  ')'  expected	98	None	add
1279	[BUG]  [BUGGY]  d  =  d  /  2;  d  =  d  /  2);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  2;  d  =  d  /  2);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    2;    d  =  d  /  2);	  	non-compiled	[CE]  ';'  expected	98	None	add
1280	[BUG]  [BUGGY]  int  d  =  a  /  p;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  int  d  =  a  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	int  d  =  a  /  p;	  d    =    q    /    p;    int    d    =    q    /    p;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	129	None	replace
1281	[BUG]  [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  =  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  =  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(a  -  x)&&  p  <  =  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(a    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
1282	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(B  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  cannot  find  symbol  B  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(B  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    1)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(B  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  cannot  find  symbol  B	189	None	add
1283	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    1)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	189	4	add
1284	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    1)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	189	4	add
1285	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  r  *(lo  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  r  *(lo  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  r  *(lo  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    r    *(b    -    x)&&    Math.abs(p    +    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	65	None	replace
1286	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {	  d    =    p    /    r;    if    (p    >    a    /    r)    {    if    (x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ')'  expected	200	None	replace
1287	[BUG]  [BUGGY]  d  =  p  *  r;  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  p  *  r;  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  r;  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {	  d    =    p    /    r;    if    (p    >    a    /    r)    {    if    (x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ')'  expected	200	None	replace
1288	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  tol  *  r))  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  tol  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  tol  *  r))  {	  d    =    p    /    r;    if    (p    >    a    /    r)    {    if    (x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ')'  expected	200	None	replace
1289	[BUG]  [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  if(m  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  if(m  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        m        /        q;        d    =    m    /    q;    }    else    if(p    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    t))    {    if(m  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {	  timeout    	non-compiled	[CE]  reached  end  of  file  while  parsing	61	None	add
1290	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  r;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  r;  d  =  p  /  q;	  d    =    d    /    q;    d    =    p    /    q;    	compilable	  [FE]  AssertionError  	142	4	replace
1291	[BUG]  [BUGGY]  d  =  d  /  r;  d  =  p  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d  =  d  /  r;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  r;  d  =  p  /  q;	  d    =    d    /    q;    d    =    p    /    q;    	compilable	  [FE]  AssertionError  	142	4	replace
1292	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    1)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	190	5	replace
1293	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    1)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	190	5	replace
1294	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  1  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  1  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  1  <  Math.abs(0.5  *  q  *  r))  {  }	  if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    1)    <    Math.abs(0.5    *    q    *    r))    {    }    	non-compiled	[CE]  ')'  expected	190	None	replace
1295	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  d  =  r  /  q;  d  =  r  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        d    =    r    /    q;    d  =  r  /  q;  d  =  r  *  q;	  	compilable	  [FE]  AssertionError  	28	4	add
1296	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  d  =  r  /  q;  d  =  r  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  d  =  r  /  q;  d  =  r  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    d  =  r  /  q;  d  =  r  *  q;	  	compilable	  [FE]  AssertionError  	28	4	add
1297	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  d  =  r  +  q;  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d        =        r        /        q;        d    =    r    /    q;    d  =  r  +  q;  d  =  r  /  q;	  	compilable	  [FE]  AssertionError  	28	4	add
1298	[BUG]  [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  d  =  r  +  q;  d  =  r  /  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {        [BUGGY]  d    =    r    /    q;    d  =  r  /  q;  d  =  r  +  q;  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d        =        r        /        q;        d    =    r    /    q;    d  =  r  +  q;  d  =  r  /  q;	  	compilable	  [FE]  AssertionError  	28	4	add
