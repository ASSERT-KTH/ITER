bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	63	4	add
2	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	63	4	add
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	63	4	add
4	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	63	4	add
5	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
6	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  If(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  If(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    If(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  	non-compiled	[CE]  ';'  expected	63	None	add
7	[BUG]  [BUGGY]  f.setMaximumFractionDigits(getMinimumFractionDigits(),  startValue,  goalType);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(getMinimumFractionDigits(),  startValue,  goalType);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(getMinimumFractionDigits(),  startValue,  goalType);	  f.setMaximumFractionDigits(getMinimumFractionDigits(),    startValue);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
8	[BUG]  [BUGGY]  f.setMaximumFractionDigits(getMinimumFractionDigits(),  max);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(getMinimumFractionDigits(),  max);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(getMinimumFractionDigits(),  max);	  f.setMaximumFractionDigits(getMinimumFractionDigits(),    startValue);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
9	[BUG]  [BUGGY]  f.setMaximumFractionDigits(getMinimumFractionDigits(),  startValue,  max);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(getMinimumFractionDigits(),  startValue,  max);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(getMinimumFractionDigits(),  startValue,  max);	  f.setMaximumFractionDigits(getMinimumFractionDigits(),    startValue);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
10	[BUG]  [BUGGY]  f.setMaximumFractionDigits(getMinimumFractionDigits(),  min,  max);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(getMinimumFractionDigits(),  min,  max);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(getMinimumFractionDigits(),  min,  max);	  f.setMaximumFractionDigits(getMinimumFractionDigits(),    startValue);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
11	[BUG]  [BUGGY]  final  GoalType  goalType  =  f.getOwner();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  f.getOwner();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  f.getOwner();	  final    GoalType    goalType    =    f.getOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	47	None	replace
12	[BUG]  [BUGGY]  luate(f,  goalType,  min,  startValue,  max,  getRelativeAccuracy());  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  startValue,  max,  getRelativeAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  startValue,  max,  getRelativeAccuracy());	  luate(f,    goalType,    startValue,    max,    getRelativeAccuracy());    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
13	[BUG]  [BUGGY]  luate(f,  GoalType.MINIMIZE,  goalType,  startValue,  max,  getRelativeAccuracy());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  GoalType.MINIMIZE,  goalType,  startValue,  max,  getRelativeAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  GoalType.MINIMIZE,  goalType,  startValue,  max,  getRelativeAccuracy());	  luate(f,    goalType,    startValue,    max,    getRelativeAccuracy());    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
14	[BUG]  [BUGGY]  luate(f,  goalType,  min,  endValue,  max,  getRelativeAccuracy());  [CE]  cannot  find  symbol  endValue  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  endValue,  max,  getRelativeAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  endValue,  max,  getRelativeAccuracy());	  luate(f,    goalType,    startValue,    max,    getRelativeAccuracy());    	non-compiled	[CE]  cannot  find  symbol  endValue	123	None	replace
15	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(max,  min,  startValue));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(max,  min,  startValue));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(max,  min,  startValue));	  f.setMaximumFractionDigits(Double.doubleToLongBits(startValue,    min,    max));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	91	None	replace
16	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  startValue,  max),  goalType);  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  startValue,  max),  goalType);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  startValue,  max),  goalType);	  f.setMaximumFractionDigits(Double.doubleToLongBits(startValue,    min,    max));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	91	None	replace
17	[BUG]  [BUGGY]  GoalType  goalType  =  this.f.getRealFunction(f);  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  this.f.getRealFunction(f);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  this.f.getRealFunction(f);	  GoalType    goalType    =    this.f.getRealFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	58	None	replace
18	[BUG]  [BUGGY]  GoalType  goalType  =  getLocalFunction();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  getLocalFunction();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  getLocalFunction();	  GoalType    goalType    =    getOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	46	None	replace
19	[BUG]  [BUGGY]  GoalType  goalType  =  getFunction();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                      AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  getFunction();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  getFunction();	  GoalType    goalType    =    getOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	46	None	replace
20	[BUG]  [BUGGY]  GoalType  goalType  =  getOptimizer().maximumValue();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  getOptimizer().maximumValue();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  getOptimizer().maximumValue();	  GoalType    goalType    =    getOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	46	None	replace
21	[BUG]  [BUGGY]  final  boolean  getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  boolean  getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  boolean  getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    final    boolean    getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    	non-compiled	[CE]  ';'  expected	98	None	replace
22	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    final    boolean    getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    	compilable	  [FE]  AssertionError  	98	4	replace
23	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    final    boolean    getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    	compilable	  [FE]  AssertionError  	98	4	replace
24	[BUG]  [BUGGY]  luate(f,  goalType,  min,  max,  startValue,  getRelativeAccuracy());  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  max,  startValue,  getRelativeAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  max,  startValue,  getRelativeAccuracy());	  luate(f,    goalType,    min,    max,    startValue);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
25	[BUG]  [BUGGY]  luate(f,  goalType,  min,  max,  startValue,  GOLDEN_SECTION);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  max,  startValue,  GOLDEN_SECTION);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  max,  startValue,  GOLDEN_SECTION);	  luate(f,    goalType,    min,    max,    startValue);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
26	[BUG]  [BUGGY]  Optimizer.setOptimize(false);  [CE]  cannot  find  symbol  Optimizer  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Optimizer.setOptimize(false);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Optimizer.setOptimize(false);	  f.setOptimize(false);    	non-compiled	[CE]  cannot  find  symbol  Optimizer	15	None	replace
27	[BUG]  [BUGGY]  GoalType  goalType  =  f.getOwnerFunction();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  f.getOwnerFunction();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  f.getOwnerFunction();	  GoalType    goalType    =    f.getLocalFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	112	None	replace
28	[BUG]  [BUGGY]  GoalType  goalType  =  f.getFunctionType();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                      AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  f.getFunctionType();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  f.getFunctionType();	  GoalType    goalType    =    f.getLocalFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	112	None	replace
29	[BUG]  [BUGGY]  final  boolean  getRelativeAccuracy()  >  max)  {  clearResult();  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  boolean  getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  boolean  getRelativeAccuracy()  >  max)  {  clearResult();  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    final    boolean    getRelativeAccuracy()    >    max)    {    clearResult();    }    	non-compiled	[CE]  ';'  expected	22	None	replace
30	[BUG]  [BUGGY]  final  boolean  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  boolean  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  boolean  getAbsoluteAccuracy()  >  max)  {  clearResult();  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    final    boolean    getRelativeAccuracy()    >    max)    {    clearResult();    }    	non-compiled	[CE]  ';'  expected	22	None	replace
31	[BUG]  [BUGGY]  final  boolean  getRelativeAccuracy()  {  clearResult();  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  boolean  getRelativeAccuracy()  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  boolean  getRelativeAccuracy()  {  clearResult();  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    final    boolean    getRelativeAccuracy()    >    max)    {    clearResult();    }    	non-compiled	[CE]  ';'  expected	22	None	replace
32	[BUG]  [BUGGY]  final  boolean  getRelativeAccuracy()  >  min)  {  clearResult();  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  boolean  getRelativeAccuracy()  >  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  boolean  getRelativeAccuracy()  >  min)  {  clearResult();  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    final    boolean    getRelativeAccuracy()    >    max)    {    clearResult();    }    	non-compiled	[CE]  ';'  expected	22	None	replace
33	[BUG]  [BUGGY]  luate(f,  GoalType.MINIMIZE,  min,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy()));  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  GoalType.MINIMIZE,  min,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy()));  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  GoalType.MINIMIZE,  min,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy()));	  luate(f,    GoalType.MINIMIZE,    min,    max,    getRelativeAccuracy(),    getAbsoluteAccuracy());    	non-compiled	[CE]  ';'  expected	12	None	replace
34	[BUG]  [BUGGY]  luate(f,  GoalType.MINIMIZE,  min,  max,  getRelativeAccuracy(),  getVerticalAccuracy());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  GoalType.MINIMIZE,  min,  max,  getRelativeAccuracy(),  getVerticalAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  GoalType.MINIMIZE,  min,  max,  getRelativeAccuracy(),  getVerticalAccuracy());	  luate(f,    GoalType.MINIMIZE,    min,    max,    getRelativeAccuracy(),    getAbsoluteAccuracy());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
35	[BUG]  [BUGGY]  Result  clearResult();  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Result  clearResult();  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Result  clearResult();	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    If(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	non-compiled	[CE]  ';'  expected	65	None	replace
36	[BUG]  [BUGGY]  luate(f,  GoalType.MINIMIZE);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  GoalType.MINIMIZE);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  GoalType.MINIMIZE);	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    If(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()    >    max    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	137	4	add
38	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    >    max    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	137	4	add
39	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  If(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  If(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    >    max    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    If(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }	  	non-compiled	[CE]  ';'  expected	137	None	add
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()    >    max    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  min  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	137	4	add
41	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    >    max    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  min  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	137	4	add
42	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()    >    max    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  min)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	137	4	add
43	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  min)  {  clearResult();  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    >    max    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  min)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	137	4	add
44	[BUG]  [BUGGY]  result  =  getRelativeAccuracy();  [CE]  result  has  private  access  in  AbstractUnivariateRealOptimizer  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  result  =  getRelativeAccuracy();  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	result  =  getRelativeAccuracy();	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  result  has  private  access  in  AbstractUnivariateRealOptimizer	3	None	replace
45	[BUG]  [BUGGY]  validate(f,  goalType);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  validate(f,  goalType);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	validate(f,  goalType);	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
46	[BUG]  [BUGGY]  result  =  getAbsoluteAccuracy();  [CE]  result  has  private  access  in  AbstractUnivariateRealOptimizer  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  result  =  getAbsoluteAccuracy();  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	result  =  getAbsoluteAccuracy();	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy());    }    	non-compiled	[CE]  result  has  private  access  in  AbstractUnivariateRealOptimizer	29	None	replace
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getAbsoluteAccuracy()    >    max)    {    clearResult();    }    if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	93	4	add
48	[BUG]  [BUGGY]  if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getAbsoluteAccuracy()    >    max)    {    clearResult();    }    if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	93	4	add
49	[BUG]  [BUGGY]  if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  If(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  If(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getAbsoluteAccuracy()    >    max)    {    clearResult();    }    If(getAbsoluteAccuracy()  >  max)  {  clearResult();  }	  	non-compiled	[CE]  ';'  expected	93	None	add
50	[BUG]  [BUGGY]  if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  final  boolean  getRelativeAccuracy()  >  max)  {  clearResult();  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  final  boolean  getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getAbsoluteAccuracy()    >    max)    {    clearResult();    }    final  boolean  getRelativeAccuracy()  >  max)  {  clearResult();  }	  	non-compiled	[CE]  ';'  expected	93	None	add
51	[BUG]  [BUGGY]  final  boolean  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  boolean  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  boolean  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    final    boolean    getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	non-compiled	[CE]  ';'  expected	66	None	replace
52	[BUG]  [BUGGY]  final  boolean  getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  boolean  getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  boolean  getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    final    boolean    getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	non-compiled	[CE]  ';'  expected	66	None	replace
53	[BUG]  [BUGGY]  final  boolean  isRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  boolean  isRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  boolean  isRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    final    boolean    getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	non-compiled	[CE]  ';'  expected	66	None	replace
54	[BUG]  [BUGGY]  Validate.notNull(min);  [CE]  cannot  find  symbol  Validate  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Validate.notNull(min);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Validate.notNull(min);	  Validate.notNull(targetType);    	non-compiled	[CE]  cannot  find  symbol  Validate	100	None	replace
55	[BUG]  [BUGGY]  Validate.notEmpty(min);  [CE]  cannot  find  symbol  Validate  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Validate.notEmpty(min);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Validate.notEmpty(min);	  Validate.notNull(targetType);    	non-compiled	[CE]  cannot  find  symbol  Validate	100	None	replace
56	[BUG]  [BUGGY]  Context.checkState(getRelativeAccuracy()  ==  goalType);  [CE]  incomparable  types:  double  and  GoalType  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Context.checkState(getRelativeAccuracy()  ==  goalType);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Context.checkState(getRelativeAccuracy()  ==  goalType);	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    If(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  incomparable  types:  double  and  GoalType	41	None	replace
57	[BUG]  [BUGGY]  Context.checkState(getRelativeAccuracy()  >  max);  [CE]  cannot  find  symbol  Context  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Context.checkState(getRelativeAccuracy()  >  max);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Context.checkState(getRelativeAccuracy()  >  max);	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    If(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  cannot  find  symbol  Context	41	None	replace
58	[BUG]  [BUGGY]  Context.checkState(getRelativeAccuracy()!=  goalType);  [CE]  incomparable  types:  double  and  GoalType  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Context.checkState(getRelativeAccuracy()!=  goalType);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Context.checkState(getRelativeAccuracy()!=  goalType);	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    If(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  incomparable  types:  double  and  GoalType	41	None	replace
59	[BUG]  [BUGGY]  Context.checkState(getRelativeAccuracy()  ==  null);  [CE]  incomparable  types:  double  and  <null>  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Context.checkState(getRelativeAccuracy()  ==  null);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Context.checkState(getRelativeAccuracy()  ==  null);	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    If(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	41	None	replace
60	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionError  	6	7	add
61	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionError  	6	7	add
62	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	6	None	add
63	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  AssertionError  	6	7	add
64	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  AssertionError  	6	7	add
65	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()    <    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	135	4	add
66	[BUG]  [BUGGY]  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    <    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	135	4	add
67	[BUG]  [BUGGY]  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  If(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  If(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    <    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    If(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	non-compiled	[CE]  ';'  expected	135	None	add
68	[BUG]  [BUGGY]  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy());  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy());  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    <    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy());  }	  	non-compiled	[CE]  ';'  expected	135	None	add
69	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()    <    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  min)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	135	4	add
70	[BUG]  [BUGGY]  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    <    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  min)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	135	4	add
71	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >=  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()    <    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >=  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	135	4	add
72	[BUG]  [BUGGY]  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >=  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >=  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    <    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >=  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	135	4	add
73	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  double.doubleToLongBits(startValue));  [CE]  class  expected  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  double.doubleToLongBits(startValue));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  double.doubleToLongBits(startValue));	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    Double.doubleToLongBits(max));    	non-compiled	[CE]  class  expected	117	None	replace
74	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(startValue,  max));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(startValue,  max));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(startValue,  max));	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    Double.doubleToLongBits(max));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	117	None	replace
75	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(max),  goalType);  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(max),  goalType);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(max),  goalType);	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    Double.doubleToLongBits(max));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	117	None	replace
76	[BUG]  [BUGGY]  f.setMaximumFractionDigits(getMinimumFractionDigits()  *  1);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(getMinimumFractionDigits()  *  1);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(getMinimumFractionDigits()  *  1);	  f.setMaximumFractionDigits(getMinimumFractionDigits()    +    1);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
77	[BUG]  [BUGGY]  f.setMinimumFractionDigits(getMinimumFractionDigits());  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMinimumFractionDigits(getMinimumFractionDigits());  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMinimumFractionDigits(getMinimumFractionDigits());	  f.setMaximumFractionDigits(getMinimumFractionDigits()    +    1);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
78	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	88	4	add
79	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	88	4	add
80	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	88	4	add
81	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	88	4	add
82	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  max)  {  getAbsoluteAccuracy();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  getAbsoluteAccuracy();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	88	4	add
83	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  max)  {  getAbsoluteAccuracy();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  max)  {  getAbsoluteAccuracy();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  getAbsoluteAccuracy();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	88	4	add
84	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	88	4	add
85	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	88	4	add
86	[BUG]  [BUGGY]  luate(f,  getRelativeAccuracy())  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  getRelativeAccuracy())  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  getRelativeAccuracy())  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    MaxIterationsExceededException(   "   ",    f);    }    	non-compiled	[CE]  	127	None	replace
87	[BUG]  [BUGGY]  luate(f,  getRelativeAccuracy())>  max)  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  getRelativeAccuracy())>  max)  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  getRelativeAccuracy())>  max)  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    MaxIterationsExceededException(   "   ",    f);    }    	non-compiled	[CE]  not  a  statement	127	None	replace
88	[BUG]  [BUGGY]  luate(f,  getRelativeAccuracy())  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ",  f);  }  [CE]  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  getRelativeAccuracy())  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ",  f);  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  getRelativeAccuracy())  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ",  f);  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    MaxIterationsExceededException(   "   ",    f);    }    	non-compiled	[CE]  	127	None	replace
89	[BUG]  [BUGGY]  luate(f,  getRelativeAccuracy())>  max)  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ",  f);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  getRelativeAccuracy())>  max)  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ",  f);  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  getRelativeAccuracy())>  max)  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ",  f);  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    MaxIterationsExceededException(   "   ",    f);    }    	non-compiled	[CE]  not  a  statement	127	None	replace
90	[BUG]  [BUGGY]  final  GoalType  goalType  =  f.getOwnerFunction();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  f.getOwnerFunction();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  f.getOwnerFunction();	  final    GoalType    goalType    =    f.getOwnerOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	49	None	replace
91	[BUG]  [BUGGY]  validate(f,  GoalType.MINIMIZE,  goalType);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  validate(f,  GoalType.MINIMIZE,  goalType);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	validate(f,  GoalType.MINIMIZE,  goalType);	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    If(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
92	[BUG]  [BUGGY]  validate(f);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  validate(f);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	validate(f);	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    If(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
93	[BUG]  [BUGGY]  validate(f,  GoalType.MINIMIZE);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  validate(f,  GoalType.MINIMIZE);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	validate(f,  GoalType.MINIMIZE);	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    If(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
94	[BUG]  [BUGGY]  final  GoalType  goalType  =  this.targetType.getOptimizer();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  this.targetType.getOptimizer();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  this.targetType.getOptimizer();	  final    GoalType    goalType    =    targetType.getOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	48	None	replace
95	[BUG]  [BUGGY]  luate(f,  goalType)  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType)  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType)  {  throw  new  MaxIterationsExceededException( " ");  }	  luate(f,    goalType)    {    clearResult();    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  	68	None	replace
96	[BUG]  [BUGGY]  luate(f,  goalType)  {  if(min  >  max)  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType)  {  if(min  >  max)  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType)  {  if(min  >  max)  {  throw  new  MaxIterationsExceededException( " ");  }	  luate(f,    goalType)    {    clearResult();    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  	68	None	replace
97	[BUG]  [BUGGY]  luate(f,  goalType)  {  if(min  <  =  max)  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType)  {  if(min  <  =  max)  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType)  {  if(min  <  =  max)  {  throw  new  MaxIterationsExceededException( " ");  }	  luate(f,    goalType)    {    clearResult();    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  	68	None	replace
98	[BUG]  [BUGGY]  luate(f,  goalType,  min,  max,  startValue))  {  clearResult();  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  max,  startValue))  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  max,  startValue))  {  clearResult();  }	  luate(f,    goalType,    min,    max,    startValue))    {    clearResult();    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  ';'  expected	106	None	replace
99	[BUG]  [BUGGY]  luate(f,  goalType,  min,  max,  startValue))  throw  new  MaxIterationsExceededException( " ");  [CE]  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  max,  startValue))  throw  new  MaxIterationsExceededException( " ");  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  max,  startValue))  throw  new  MaxIterationsExceededException( " ");	  luate(f,    goalType,    min,    max,    startValue))    {    clearResult();    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  	106	None	replace
100	[BUG]  [BUGGY]  luate(f,  goalType,  min,  max,  getRelativeAccuracy()))  {  clearResult();  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  max,  getRelativeAccuracy()))  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  max,  getRelativeAccuracy()))  {  clearResult();  }	  luate(f,    goalType,    min,    max,    startValue))    {    clearResult();    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  ';'  expected	106	None	replace
101	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  goalType,  f);  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  goalType,  f);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  goalType,  f);	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    f);    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	129	None	replace
102	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  startValue),  f);  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  startValue),  f);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  startValue),  f);	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    f);    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	129	None	replace
103	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  f,  goalType);  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  f,  goalType);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  f,  goalType);	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    f);    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	129	None	replace
104	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  targetType,  f);  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  targetType,  f);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  targetType,  f);	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    f);    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	129	None	replace
105	[BUG]  [BUGGY]  Validate.notEmpty(  goalType);  [CE]  cannot  find  symbol  Validate  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Validate.notEmpty(  goalType);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Validate.notEmpty(  goalType);	  Validate.notNull(    goalType);    	non-compiled	[CE]  cannot  find  symbol  Validate	116	None	replace
106	[BUG]  [BUGGY]  luate(f,  goalType,  min);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min);	  luate(f,    goalType);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
107	[BUG]  [BUGGY]  luate(f,  goalType,  max);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  max);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  max);	  luate(f,    goalType);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
108	[BUG]  [BUGGY]  luate(f,  goalType,  null);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  null);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  null);	  luate(f,    goalType);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
109	[BUG]  [BUGGY]  Preconditions.checkState(getRelativeAccuracy()!=  GOLDEN_SECTION);  [CE]  cannot  find  symbol  Preconditions  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getRelativeAccuracy()!=  GOLDEN_SECTION);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getRelativeAccuracy()!=  GOLDEN_SECTION);	  Preconditions.checkState(getRelativeAccuracy()    ==    GOLDEN_SECTION);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	80	None	replace
110	[BUG]  [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  >=  GOLDEN_SECTION);  [CE]  cannot  find  symbol  Preconditions  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  >=  GOLDEN_SECTION);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getRelativeAccuracy()  >=  GOLDEN_SECTION);	  Preconditions.checkState(getRelativeAccuracy()    ==    GOLDEN_SECTION);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	80	None	replace
111	[BUG]  [BUGGY]  luate(f,  goalType,  min,  max,  getRelativeAccuracy()));  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  max,  getRelativeAccuracy()));  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  max,  getRelativeAccuracy()));	  if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    	non-compiled	[CE]  ';'  expected	104	None	replace
112	[BUG]  [BUGGY]  luate(f,  goalType,  min,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy())  {  clearResult();  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy())  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy())  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    	non-compiled	[CE]  ';'  expected	104	None	replace
113	[BUG]  [BUGGY]  luate(f,  goalType,  min,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy()))  {  clearResult();  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy()))  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy()))  {  clearResult();  }	  luate(f,    goalType,    min,    max,    getRelativeAccuracy()))    {    clearResult();    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  ';'  expected	67	None	replace
114	[BUG]  [BUGGY]  luate(f,  goalType,  min,  max,  getAbsoluteAccuracy()))  {  clearResult();  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  max,  getAbsoluteAccuracy()))  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  max,  getAbsoluteAccuracy()))  {  clearResult();  }	  luate(f,    goalType,    min,    max,    getRelativeAccuracy()))    {    clearResult();    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  ';'  expected	67	None	replace
115	[BUG]  [BUGGY]  luate(f,  GoalType.MINIMIZE,  goalType,  min,  max,  getAbsoluteAccuracy());  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  GoalType.MINIMIZE,  goalType,  min,  max,  getAbsoluteAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  GoalType.MINIMIZE,  goalType,  min,  max,  getAbsoluteAccuracy());	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()    >    min)    {    clearResult();    }    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
116	[BUG]  [BUGGY]  f.setOptimize(true,  goalType,  min);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setOptimize(true,  goalType,  min);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setOptimize(true,  goalType,  min);	  f.setOptimize(true,    goalType);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
117	[BUG]  [BUGGY]  f.setOptimize(true,  goalType,  max);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setOptimize(true,  goalType,  max);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setOptimize(true,  goalType,  max);	  f.setOptimize(true,    goalType);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
118	[BUG]  [BUGGY]  Validate.notNull(f,  GoalType.MINIMIZE,  goalType);  [CE]  cannot  find  symbol  Validate  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Validate.notNull(f,  GoalType.MINIMIZE,  goalType);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Validate.notNull(f,  GoalType.MINIMIZE,  goalType);	  Validate.notNull(f,    GoalType.MINIMIZE);    	non-compiled	[CE]  cannot  find  symbol  Validate	55	None	replace
119	[BUG]  [BUGGY]  Validate.notEmpty(f,  GoalType.MINIMIZE);  [CE]  cannot  find  symbol  Validate  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Validate.notEmpty(f,  GoalType.MINIMIZE);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Validate.notEmpty(f,  GoalType.MINIMIZE);	  Validate.notNull(f,    GoalType.MINIMIZE);    	non-compiled	[CE]  cannot  find  symbol  Validate	55	None	replace
120	[BUG]  [BUGGY]  Validate.notNull(f,  GoalType.MINIMIZE,  min);  [CE]  cannot  find  symbol  Validate  [FE]                      AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Validate.notNull(f,  GoalType.MINIMIZE,  min);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Validate.notNull(f,  GoalType.MINIMIZE,  min);	  Validate.notNull(f,    GoalType.MINIMIZE);    	non-compiled	[CE]  cannot  find  symbol  Validate	55	None	replace
121	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(startValue,  goalType));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(startValue,  goalType));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(startValue,  goalType));	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    Double.doubleToLongBits(startValue));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	73	None	replace
122	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(max,  startValue));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(max,  startValue));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(max,  startValue));	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    Double.doubleToLongBits(startValue));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	73	None	replace
123	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(goalType,  startValue));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(goalType,  startValue));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(goalType,  startValue));	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    Double.doubleToLongBits(startValue));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	73	None	replace
124	[BUG]  [BUGGY]  luate(f,  GoalType.MINIMIZE,  max,  min,  startValue,  getAbsoluteAccuracy());  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  GoalType.MINIMIZE,  max,  min,  startValue,  getAbsoluteAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  GoalType.MINIMIZE,  max,  min,  startValue,  getAbsoluteAccuracy());	  luate(f,    GoalType.MINIMIZE,    min,    max,    getAbsoluteAccuracy());    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
125	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	133	4	add
126	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	133	4	add
127	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  If(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  If(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    If(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  	non-compiled	[CE]  ';'  expected	133	None	add
128	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  final  boolean  getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  final  boolean  getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    final  boolean  getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  	non-compiled	[CE]  ';'  expected	133	None	add
129	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  final  boolean  getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  final  boolean  getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    final  boolean  getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();	  	non-compiled	[CE]  ';'  expected	133	None	add
130	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()    >    GOLDEN_SECTION    &&    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	131	4	add
131	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    >    GOLDEN_SECTION    &&    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	131	4	add
132	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  If(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  If(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    >    GOLDEN_SECTION    &&    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    If(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }	  	non-compiled	[CE]  ';'  expected	131	None	add
133	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  final  boolean  getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  final  boolean  getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    >    GOLDEN_SECTION    &&    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    final  boolean  getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }	  	non-compiled	[CE]  ';'  expected	131	None	add
134	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()    >    GOLDEN_SECTION    &&    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  min)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	131	4	add
135	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  min)  {  clearResult();  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    >    GOLDEN_SECTION    &&    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  min)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	131	4	add
136	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	103	4	add
137	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	103	4	add
138	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  If(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  If(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    If(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }	  	non-compiled	[CE]  ';'  expected	103	None	add
139	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  final  boolean  getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  final  boolean  getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    final  boolean  getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }	  	non-compiled	[CE]  ';'  expected	103	None	add
140	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  min)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	103	4	add
141	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  min)  {  clearResult();  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  min)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	103	4	add
142	[BUG]  [BUGGY]  goalType.setOptimize(false,  false);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  goalType.setOptimize(false,  false);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	goalType.setOptimize(false,  false);	  f.setOptimize(false,    goalType);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
143	[BUG]  [BUGGY]  GoalType  goalType.setOptimize(false,  goalType);  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType.setOptimize(false,  goalType);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType.setOptimize(false,  goalType);	  f.setOptimize(false,    goalType);    	non-compiled	[CE]  ';'  expected	17	None	replace
144	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	19	4	add
145	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	19	4	add
146	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	19	4	add
147	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	19	4	add
148	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	19	4	add
149	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	19	4	add
150	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  getAbsoluteAccuracy(),  getAbsoluteAccuracy());  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  getAbsoluteAccuracy(),  getAbsoluteAccuracy());  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  getAbsoluteAccuracy(),  getAbsoluteAccuracy());  }	  	non-compiled	[CE]  ';'  expected	19	None	add
151	[BUG]  [BUGGY]  f.setOptimize(true,  startValue,  goalType);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setOptimize(true,  startValue,  goalType);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setOptimize(true,  startValue,  goalType);	  f.setOptimize(true,    startValue);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
152	[BUG]  [BUGGY]  f.setOptimize(true,  goalType,  startValue);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setOptimize(true,  goalType,  startValue);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setOptimize(true,  goalType,  startValue);	  f.setOptimize(true,    startValue);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
153	[BUG]  [BUGGY]  f.setOptimize(false,  startValue,  goalType);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setOptimize(false,  startValue,  goalType);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setOptimize(false,  startValue,  goalType);	  f.setOptimize(true,    startValue);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
154	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionError  	1	7	add
155	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionError  	1	7	add
156	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	1	None	add
157	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  If(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  If(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    If(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  	1	None	add
158	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	101	4	add
159	[BUG]  [BUGGY]  if(getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	101	4	add
160	[BUG]  [BUGGY]  if(getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  If(getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  If(getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    If(getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  	non-compiled	[CE]  ';'  expected	101	None	add
161	[BUG]  [BUGGY]  if(getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  final  boolean  getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  final  boolean  getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    final  boolean  getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  	non-compiled	[CE]  ';'  expected	101	None	add
162	[BUG]  [BUGGY]  final  GoalType  goalType  =  getLocalFunction();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  getLocalFunction();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  getLocalFunction();	  final    GoalType    goalType    =    getRealFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	36	None	replace
163	[BUG]  [BUGGY]  final  GoalType  goalType  =  getFunction();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  getFunction();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  getFunction();	  final    GoalType    goalType    =    getRealFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	36	None	replace
164	[BUG]  [BUGGY]  final  GoalType  goalType  =  getRealFunction().getOwnerFunctionType();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  getRealFunction().getOwnerFunctionType();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  getRealFunction().getOwnerFunctionType();	  final    GoalType    goalType    =    getRealFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	36	None	replace
165	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()    <    max)    {    clearResult();    }    if(getRelativeAccuracy()  <  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	95	4	add
166	[BUG]  [BUGGY]  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    <    max)    {    clearResult();    }    if(getRelativeAccuracy()  <  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	95	4	add
167	[BUG]  [BUGGY]  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  If(getRelativeAccuracy()  <  max)  {  clearResult();  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  If(getRelativeAccuracy()  <  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    <    max)    {    clearResult();    }    If(getRelativeAccuracy()  <  max)  {  clearResult();  }	  	non-compiled	[CE]  ';'  expected	95	None	add
168	[BUG]  [BUGGY]  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  final  boolean  getRelativeAccuracy()  <  max)  {  clearResult();  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  final  boolean  getRelativeAccuracy()  <  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    <    max)    {    clearResult();    }    final  boolean  getRelativeAccuracy()  <  max)  {  clearResult();  }	  	non-compiled	[CE]  ';'  expected	95	None	add
169	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()    <    max)    {    clearResult();    }    if(getRelativeAccuracy()  <  min)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	95	4	add
170	[BUG]  [BUGGY]  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    <    max)    {    clearResult();    }    if(getRelativeAccuracy()  <  min)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	95	4	add
171	[BUG]  [BUGGY]  final  GoalType  goalType  =  getOptimizer(f);  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  getOptimizer(f);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  getOptimizer(f);	  final    GoalType    goalType    =    getOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	81	None	replace
172	[BUG]  [BUGGY]  final  GoalType  goalType  =  getOptimizer().maximumValue();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  getOptimizer().maximumValue();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  getOptimizer().maximumValue();	  final    GoalType    goalType    =    getOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	81	None	replace
173	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        RuntimeException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }	  	compilable	  [FE]  AssertionError  	32	7	add
174	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        RuntimeException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }	  	compilable	  [FE]  AssertionError  	32	7	add
175	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( "   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        RuntimeException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( "   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	32	7	add
176	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( "   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( "   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        RuntimeException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( "   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	32	7	add
177	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException(   "     ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        RuntimeException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(   "       ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }	  	compilable	  [FE]  AssertionError  	30	7	add
178	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException(   "     ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException(   "     ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        RuntimeException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(   "       ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }	  	compilable	  [FE]  AssertionError  	30	7	add
179	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException(   "     ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ".);  }  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException(   "     ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ".);  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        RuntimeException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(   "       ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	30	None	add
180	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException(   "     ");  }  If(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException(   "     ");  }  If(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        RuntimeException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(   "       ");    }    If(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }	  	non-compiled	[CE]  	30	None	add
181	[BUG]  [BUGGY]  luate(f,  GoalType.MINIMIZE,  max,  min,  startValue,  getRelativeAccuracy(),  getAbsoluteAccuracy());  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  GoalType.MINIMIZE,  max,  min,  startValue,  getRelativeAccuracy(),  getAbsoluteAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  GoalType.MINIMIZE,  max,  min,  startValue,  getRelativeAccuracy(),  getAbsoluteAccuracy());	  luate(f,    GoalType.MINIMIZE,    goalType,    min,    max,    getRelativeAccuracy(),    getAbsoluteAccuracy());    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
182	[BUG]  [BUGGY]  luate(f,  GoalType.MINIMIZE,  goalType,  min,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy()));  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  GoalType.MINIMIZE,  goalType,  min,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy()));  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  GoalType.MINIMIZE,  goalType,  min,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy()));	  luate(f,    GoalType.MINIMIZE,    goalType,    min,    max,    getRelativeAccuracy(),    getAbsoluteAccuracy());    	non-compiled	[CE]  ';'  expected	50	None	replace
183	[BUG]  [BUGGY]  Validate.notEmpty(f,  goalType);  [CE]  cannot  find  symbol  Validate  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Validate.notEmpty(f,  goalType);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Validate.notEmpty(f,  goalType);	  Validate.notEmpty(f);    	non-compiled	[CE]  cannot  find  symbol  Validate	53	None	replace
184	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.parseDouble(startValue),  Double.doubleToLongBits(max));  [CE]  method  parseDouble  in  class  Double  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.parseDouble(startValue),  Double.doubleToLongBits(max));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.parseDouble(startValue),  Double.doubleToLongBits(max));	  f.setMaximumFractionDigits(Double.doubleToLongBits(startValue),    Double.doubleToLongBits(max));    	non-compiled	[CE]  method  parseDouble  in  class  Double  cannot  be  applied  to  given  types;	97	None	replace
185	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(startValue),  Double.doubleToLongBits(min));  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(startValue),  Double.doubleToLongBits(min));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(startValue),  Double.doubleToLongBits(min));	  f.setMaximumFractionDigits(Double.doubleToLongBits(startValue),    Double.doubleToLongBits(max));    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
186	[BUG]  [BUGGY]  Util.setMaximumFractionDigits(Double.doubleToLongBits(startValue),  Double.doubleToLongBits(max));  [CE]  cannot  find  symbol  Util  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Util.setMaximumFractionDigits(Double.doubleToLongBits(startValue),  Double.doubleToLongBits(max));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Util.setMaximumFractionDigits(Double.doubleToLongBits(startValue),  Double.doubleToLongBits(max));	  f.setMaximumFractionDigits(Double.doubleToLongBits(startValue),    Double.doubleToLongBits(max));    	non-compiled	[CE]  cannot  find  symbol  Util	97	None	replace
187	[BUG]  [BUGGY]  luate(f,  goalType,  min,  startValue,  max,  getAbsoluteAccuracy());  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  startValue,  max,  getAbsoluteAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  startValue,  max,  getAbsoluteAccuracy());	  luate(f,    goalType,    min,    max,    getAbsoluteAccuracy());    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
188	[BUG]  [BUGGY]  GoalType  goalType  =  this.targetType.getRealFunction();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  this.targetType.getRealFunction();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  this.targetType.getRealFunction();	  GoalType    goalType    =    targetType.getRealFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	57	None	replace
189	[BUG]  [BUGGY]  GoalType  targetType  =  f.getRealFunction();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  targetType  =  f.getRealFunction();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  targetType  =  f.getRealFunction();	  GoalType    goalType    =    targetType.getRealFunction();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
190	[BUG]  [BUGGY]  f.setMaximumFractionDigits(startValue,  min);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(startValue,  min);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(startValue,  min);	  f.setMaximumFractionDigits(min);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
191	[BUG]  [BUGGY]  f.setMaximumFractionDigits(min,  max);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(min,  max);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(min,  max);	  f.setMaximumFractionDigits(min);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
192	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  startValue));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  startValue));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  startValue));	  f.setMaximumFractionDigits(Double.doubleToLongBits(startValue));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	70	None	replace
193	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min),  startValue);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min),  startValue);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min),  startValue);	  f.setMaximumFractionDigits(Double.doubleToLongBits(startValue));    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
194	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  goalType,  startValue));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  goalType,  startValue));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  goalType,  startValue));	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max,    goalType));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	10	None	replace
195	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  startValue,  goalType));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  startValue,  goalType));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  startValue,  goalType));	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max,    goalType));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	10	None	replace
196	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  goalType,  getRelativeAccuracy()));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  goalType,  getRelativeAccuracy()));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  goalType,  getRelativeAccuracy()));	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max,    goalType));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	10	None	replace
197	[BUG]  [BUGGY]  GoalType  goalType  =  goals.getLocalFunction();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  goals.getLocalFunction();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  goals.getLocalFunction();	  GoalType    goalType    =    goals.getRealFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	120	None	replace
198	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  goalType,  startValue);  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  goalType,  startValue);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  goalType,  startValue);	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    goalType);    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	9	None	replace
199	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  goalType,  goalType);  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  goalType,  goalType);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  goalType,  goalType);	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    goalType);    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	9	None	replace
200	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  startValue),  goalType);  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  startValue),  goalType);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  startValue),  goalType);	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    goalType);    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	9	None	replace
201	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  goalType,  targetType);  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  goalType,  targetType);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  goalType,  targetType);	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    goalType);    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	9	None	replace
202	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	37	4	add
203	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	37	4	add
204	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  max)  {  getAbsoluteAccuracy();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  getAbsoluteAccuracy();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	37	4	add
205	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  max)  {  getAbsoluteAccuracy();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  max)  {  getAbsoluteAccuracy();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  getAbsoluteAccuracy();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	37	4	add
206	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	37	4	add
207	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	37	4	add
208	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	37	4	add
209	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	37	4	add
210	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	37	4	add
211	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	37	4	add
212	[BUG]  [BUGGY]  GoalType  goalType  =  f.getLowerCase();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  f.getLowerCase();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  f.getLowerCase();	  GoalType    goalType    =    f.getOwner();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	78	None	replace
213	[BUG]  [BUGGY]  GoalType  goalType  =  f.getReal();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  f.getReal();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  f.getReal();	  GoalType    goalType    =    f.getOwner();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	78	None	replace
214	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	27	4	add
215	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	27	4	add
216	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	27	4	add
217	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	27	4	add
218	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy());  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy());  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy());  }	  	non-compiled	[CE]  ';'  expected	27	None	add
219	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	27	4	add
220	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	27	4	add
221	[BUG]  [BUGGY]  luate(f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());	  luate(f,    goalType,    startValue,    max,    getRelativeAccuracy(),    getAbsoluteAccuracy());    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
222	[BUG]  [BUGGY]  luate(f,  GoalType.MINIMIZE,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  GoalType.MINIMIZE,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  GoalType.MINIMIZE,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());	  luate(f,    goalType,    startValue,    max,    getRelativeAccuracy(),    getAbsoluteAccuracy());    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
223	[BUG]  [BUGGY]  luate(f,  goalType,  min,  endValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  [CE]  cannot  find  symbol  endValue  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  endValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  endValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());	  luate(f,    goalType,    startValue,    max,    getRelativeAccuracy(),    getAbsoluteAccuracy());    	non-compiled	[CE]  cannot  find  symbol  endValue	124	None	replace
224	[BUG]  [BUGGY]  GoalType  goalType  =  f.getFunction();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  f.getFunction();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  f.getFunction();	  GoalType    goalType    =    f.getRealFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	56	None	replace
225	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	39	4	add
226	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	39	4	add
227	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	39	4	add
228	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	39	4	add
229	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  <  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	39	4	add
230	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  <  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	39	4	add
231	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	39	4	add
232	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	39	4	add
233	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy());  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy());  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy());  }	  	non-compiled	[CE]  ';'  expected	39	None	add
234	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Float.doubleToLongBits(min));  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Float.doubleToLongBits(min));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Float.doubleToLongBits(min));	  f.setMaximumFractionDigits(Float.doubleToLongBits(startValue));    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
235	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Float.doubleToLongBits(min,  startValue));  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Float.doubleToLongBits(min,  startValue));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Float.doubleToLongBits(min,  startValue));	  f.setMaximumFractionDigits(Float.doubleToLongBits(startValue));    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
236	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Float.doubleToLongBits(min),  startValue);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Float.doubleToLongBits(min),  startValue);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Float.doubleToLongBits(min),  startValue);	  f.setMaximumFractionDigits(Float.doubleToLongBits(startValue));    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
237	[BUG]  [BUGGY]  luate(f,  goalType,  min,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy())  {  clearResult();  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy())  {  clearResult();  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy())  {  clearResult();	  if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	non-compiled	[CE]  ';'  expected	134	None	replace
238	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  AssertionError  	4	7	add
239	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  AssertionError  	4	7	add
240	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	4	None	add
241	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  AssertionError  	4	7	add
242	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  AssertionError  	4	7	add
243	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }	  	non-compiled	[CE]  unclosed  string  literal	4	None	add
244	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    <    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	86	4	add
245	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    <    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	86	4	add
246	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    <    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	86	4	add
247	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    <    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	86	4	add
248	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  getAbsoluteAccuracy();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    <    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  getAbsoluteAccuracy();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	86	4	add
249	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  getAbsoluteAccuracy();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  getAbsoluteAccuracy();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    <    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  getAbsoluteAccuracy();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	86	4	add
250	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy());  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy());  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    <    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy());  }	  	non-compiled	[CE]  ';'  expected	86	None	add
251	[BUG]  [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  >  max,  getAbsoluteAccuracy());  [CE]  cannot  find  symbol  Preconditions  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  >  max,  getAbsoluteAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getRelativeAccuracy()  >  max,  getAbsoluteAccuracy());	  Preconditions.checkState(getRelativeAccuracy()    >    max);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	105	None	replace
252	[BUG]  [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  >  max,  min);  [CE]  cannot  find  symbol  Preconditions  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  >  max,  min);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getRelativeAccuracy()  >  max,  min);	  Preconditions.checkState(getRelativeAccuracy()    >    max);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	105	None	replace
253	[BUG]  [BUGGY]  f.setMaximumFractionDigits(getMinimumFractionDigits(),  min,  startValue);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(getMinimumFractionDigits(),  min,  startValue);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(getMinimumFractionDigits(),  min,  startValue);	  f.setMaximumFractionDigits(getMinimumFractionDigits(),    min);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
254	[BUG]  [BUGGY]  f.setMinimumFractionDigits(getMinimumFractionDigits(),  startValue);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMinimumFractionDigits(getMinimumFractionDigits(),  startValue);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMinimumFractionDigits(getMinimumFractionDigits(),  startValue);	  f.setMaximumFractionDigits(getMinimumFractionDigits(),    min);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
255	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min),  max);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min),  max);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min),  max);	  f.setMaximumFractionDigits(Double.doubleToLongBits(max));    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
256	[BUG]  [BUGGY]  final  GoalType  goalType  =  f.getRawParameterType(0);  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  f.getRawParameterType(0);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  f.getRawParameterType(0);	  final    GoalType    goalType    =    goalType.getRawParameterType(0);    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	125	None	replace
257	[BUG]  [BUGGY]  final  GoalType  goalType  =  f.getRawParameterType(1);  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  f.getRawParameterType(1);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  f.getRawParameterType(1);	  final    GoalType    goalType    =    goalType.getRawParameterType(0);    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	125	None	replace
258	[BUG]  [BUGGY]  final  GoalType  goalType  =  goalType.getRawParameterType(1);  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  goalType.getRawParameterType(1);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  goalType.getRawParameterType(1);	  final    GoalType    goalType    =    goalType.getRawParameterType(0);    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	125	None	replace
259	[BUG]  [BUGGY]  GoalType  goalType  =  f.getName();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  f.getName();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  f.getName();	  GoalType    goalType    =    f.getLabel();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	122	None	replace
260	[BUG]  [BUGGY]  f.setMaximumFractionDigits(getMinimumFractionDigits()  *  startValue);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(getMinimumFractionDigits()  *  startValue);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(getMinimumFractionDigits()  *  startValue);	  f.setMaximumFractionDigits(getMinimumFractionDigits()    +    startValue);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
261	[BUG]  [BUGGY]  f.setMaximumFractionDigits(getMinimumFractionDigits()  +  startValue,  max);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(getMinimumFractionDigits()  +  startValue,  max);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(getMinimumFractionDigits()  +  startValue,  max);	  f.setMaximumFractionDigits(getMinimumFractionDigits()    +    startValue);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
262	[BUG]  [BUGGY]  f.setMaximumFractionDigits(getMinimumFractionDigits()  +  startValue,  goalType);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(getMinimumFractionDigits()  +  startValue,  goalType);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(getMinimumFractionDigits()  +  startValue,  goalType);	  f.setMaximumFractionDigits(getMinimumFractionDigits()    +    startValue);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
263	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  startValue,  GOLDEN_SECTION));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  startValue,  GOLDEN_SECTION));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  startValue,  GOLDEN_SECTION));	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max,    startValue));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	8	None	replace
264	[BUG]  [BUGGY]  GoalType  targetType  =  f.getOptimizer();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  targetType  =  f.getOptimizer();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  targetType  =  f.getOptimizer();	  GoalType    goalType    =    targetType.getOptimizer();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
265	[BUG]  [BUGGY]  luate(f,  goalType)>  GOLDEN_SECTION)  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType)>  GOLDEN_SECTION)  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType)>  GOLDEN_SECTION)  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  not  a  statement	126	None	replace
266	[BUG]  [BUGGY]  luate(f,  goalType)>  GOLDEN_SECTION)  {  clearResult();  }  else  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType)>  GOLDEN_SECTION)  {  clearResult();  }  else  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType)>  GOLDEN_SECTION)  {  clearResult();  }  else  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  throw  new  MaxIterationsExceededException( " ");  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  not  a  statement	126	None	replace
267	[BUG]  [BUGGY]  luate(f,  goalType)  {  throw  new  RuntimeException( " ");  }  [CE]  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType)  {  throw  new  RuntimeException( " ");  }	  luate(f,    goalType)    {    clearResult();    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  	109	None	replace
268	[BUG]  [BUGGY]  luate(f,  goalType)  {  return  null;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType)  {  return  null;  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType)  {  return  null;  }	  luate(f,    goalType)    {    clearResult();    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  ';'  expected	109	None	replace
269	[BUG]  [BUGGY]  luate(f,  goalType)  {  clearResult();  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType)  {  clearResult();  }	  luate(f,    goalType)    {    clearResult();    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  ';'  expected	109	None	replace
270	[BUG]  [BUGGY]  f.setOptimize(false,  goalType,  startValue);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setOptimize(false,  goalType,  startValue);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setOptimize(false,  goalType,  startValue);	  f.setOptimize(false,    startValue);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
271	[BUG]  [BUGGY]  FALSE.setOptimize(false,  startValue);  [CE]  cannot  find  symbol  FALSE  [FE]                        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  FALSE.setOptimize(false,  startValue);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	FALSE.setOptimize(false,  startValue);	  f.setOptimize(false,    startValue);    	non-compiled	[CE]  cannot  find  symbol  FALSE	115	None	replace
272	[BUG]  [BUGGY]  f.setOptimize(false,  max);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setOptimize(false,  max);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setOptimize(false,  max);	  f.setOptimize(true,    max);    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
273	[BUG]  [BUGGY]  f.setOptimize(true,  min,  max);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setOptimize(true,  min,  max);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setOptimize(true,  min,  max);	  f.setOptimize(true,    max);    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
274	[BUG]  [BUGGY]  final  GoalType  goalType  =  this.targetType.getRealFunction();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  this.targetType.getRealFunction();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  this.targetType.getRealFunction();	  final    GoalType    goalType    =    targetType.getRealFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	113	None	replace
275	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        if(getRelativeAccuracy()    >    min)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	23	4	add
276	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        if(getRelativeAccuracy()    >    min)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	23	4	add
277	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        if(getRelativeAccuracy()    >    min)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	23	4	add
278	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        if(getRelativeAccuracy()    >    min)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	23	4	add
279	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        if(getRelativeAccuracy()    >    min)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	23	4	add
280	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        if(getRelativeAccuracy()    >    min)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	23	4	add
281	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  If(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  If(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        if(getRelativeAccuracy()    >    min)    {    clearResult();    }    If(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }	  	non-compiled	[CE]  ';'  expected	23	None	add
282	[BUG]  [BUGGY]  f.setMaximumFractionDigits(min,  startValue);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(min,  startValue);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(min,  startValue);	  f.setMaximumFractionDigits(startValue);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
283	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(max,  startValue,  min));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(max,  startValue,  min));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(max,  startValue,  min));	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    startValue,    max));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	130	None	replace
284	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  startValue,  max,  goalType));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  startValue,  max,  goalType));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  startValue,  max,  goalType));	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    startValue,    max));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	130	None	replace
285	[BUG]  [BUGGY]  f.setMaximumFractionDigits(min  +  max);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(min  +  max);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(min  +  max);	  f.setMaximumFractionDigits(maximumFractionDigits    +    min);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
286	[BUG]  [BUGGY]  f.setMaximumFractionDigits(maximumFractionDigits  +  min,  startValue);  [CE]  cannot  find  symbol  maximumFractionDigits  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(maximumFractionDigits  +  min,  startValue);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(maximumFractionDigits  +  min,  startValue);	  f.setMaximumFractionDigits(maximumFractionDigits    +    min);    	non-compiled	[CE]  cannot  find  symbol  maximumFractionDigits	99	None	replace
287	[BUG]  [BUGGY]  f.setMaximumFractionDigits(startValue  +  min);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(startValue  +  min);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(startValue  +  min);	  f.setMaximumFractionDigits(maximumFractionDigits    +    min);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
288	[BUG]  [BUGGY]  f.setMaximumFractionDigits(maximumFractionDigits  +  startValue);  [CE]  cannot  find  symbol  maximumFractionDigits  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(maximumFractionDigits  +  startValue);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(maximumFractionDigits  +  startValue);	  f.setMaximumFractionDigits(maximumFractionDigits    +    min);    	non-compiled	[CE]  cannot  find  symbol  maximumFractionDigits	99	None	replace
289	[BUG]  [BUGGY]  luate(f,  goalType,  min,  max,  getRelativeAccuracy(),  getVerticalAccuracy());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  max,  getRelativeAccuracy(),  getVerticalAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  max,  getRelativeAccuracy(),  getVerticalAccuracy());	  luate(f,    goalType,    min,    max,    getRelativeAccuracy(),    getAbsoluteAccuracy());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
290	[BUG]  [BUGGY]  luate(f,  goalType,  min,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy()));  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy()));  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy()));	  luate(f,    goalType,    min,    max,    getRelativeAccuracy(),    getAbsoluteAccuracy());    	non-compiled	[CE]  ';'  expected	13	None	replace
291	[BUG]  [BUGGY]  luate(f,  goalType)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType)  {  throw  new  IllegalArgumentException( " ");  }	  luate(f,    goalType)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	83	None	replace
292	[BUG]  [BUGGY]  luate(f,  goalType)  {  if(getRelativeAccuracy()  >  max)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType)  {  if(getRelativeAccuracy()  >  max)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType)  {  if(getRelativeAccuracy()  >  max)  {  throw  new  IllegalArgumentException( " ");  }	  luate(f,    goalType)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	83	None	replace
293	[BUG]  [BUGGY]  luate(f,  goalType)  {  return  0;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType)  {  return  0;  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType)  {  return  0;  }	  luate(f,    goalType)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	83	None	replace
294	[BUG]  [BUGGY]  f.setOptimize(true,  false);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setOptimize(true,  false);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setOptimize(true,  false);	  f.setOptimize(false,    true);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
295	[BUG]  [BUGGY]  f.setOptimize(false,  false);  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setOptimize(false,  false);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setOptimize(false,  false);	  f.setOptimize(false,    true);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
296	[BUG]  [BUGGY]  f.setOptimize(true,  true);  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setOptimize(true,  true);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setOptimize(true,  true);	  f.setOptimize(false,    true);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
297	[BUG]  [BUGGY]  GoalType  goalType  =  f.getOwnOptimizer(true);  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  f.getOwnOptimizer(true);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  f.getOwnOptimizer(true);	  GoalType    goalType    =    f.getOwnOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	111	None	replace
298	[BUG]  [BUGGY]  GoalType  goalType  =  f.getOwnOptimizer(this);  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  f.getOwnOptimizer(this);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  f.getOwnOptimizer(this);	  GoalType    goalType    =    f.getOwnOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	111	None	replace
299	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  startValue,  goalType);  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  startValue,  goalType);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  startValue,  goalType);	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    startValue);    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	90	None	replace
300	[BUG]  [BUGGY]  final  GoalType  goalType  =  f.getLocalFunction();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  f.getLocalFunction();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  f.getLocalFunction();	  final    GoalType    goalType    =    f.getRealFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	35	None	replace
301	[BUG]  [BUGGY]  final  GoalType  goalType  =  f.getFunction();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  f.getFunction();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  f.getFunction();	  final    GoalType    goalType    =    f.getRealFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	35	None	replace
302	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min),  Double.doubleToLongBits(max,  startValue),  goalType);  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min),  Double.doubleToLongBits(max,  startValue),  goalType);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min),  Double.doubleToLongBits(max,  startValue),  goalType);	  f.setMaximumFractionDigits(Double.doubleToLongBits(min),    Double.doubleToLongBits(max,    startValue));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	74	None	replace
303	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(startValue,  min));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(startValue,  min));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(startValue,  min));	  f.setMaximumFractionDigits(Double.doubleToLongBits(min),    Double.doubleToLongBits(max,    startValue));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	74	None	replace
304	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(Minimum.doubleToLongBits(min,  max));  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(Minimum.doubleToLongBits(min,  max));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(Minimum.doubleToLongBits(min,  max));	  f.setMaximumFractionDigits(Double.doubleToLongBits(max,    min));    	non-compiled	[CE]  ')'  expected	11	None	replace
305	[BUG]  [BUGGY]  f.setMinimumFractionDigits(Double.doubleToLongBits(min,  max));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMinimumFractionDigits(Double.doubleToLongBits(min,  max));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMinimumFractionDigits(Double.doubleToLongBits(min,  max));	  f.setMaximumFractionDigits(Double.doubleToLongBits(max,    min));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	11	None	replace
306	[BUG]  [BUGGY]  luate(f,  goalType,  min,  startValue,  max,  getRelativeAccuracy()));  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  startValue,  max,  getRelativeAccuracy()));  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  startValue,  max,  getRelativeAccuracy()));	  luate(f,    goalType,    min,    max,    getAbsoluteAccuracy()));    	non-compiled	[CE]  ';'  expected	118	None	replace
307	[BUG]  [BUGGY]  luate(f,  goalType,  min,  startValue,  max,  getAbsoluteAccuracy()));  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  startValue,  max,  getAbsoluteAccuracy()));  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  startValue,  max,  getAbsoluteAccuracy()));	  luate(f,    goalType,    min,    max,    getAbsoluteAccuracy()));    	non-compiled	[CE]  ';'  expected	118	None	replace
308	[BUG]  [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  >  GOLDEN_SECTION,  max);  [CE]  cannot  find  symbol  Preconditions  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  >  GOLDEN_SECTION,  max);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getRelativeAccuracy()  >  GOLDEN_SECTION,  max);	  Preconditions.checkState(getRelativeAccuracy()    >    GOLDEN_SECTION);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	79	None	replace
309	[BUG]  [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  >  GOLDEN_SECTION,  getAbsoluteAccuracy());  [CE]  cannot  find  symbol  Preconditions  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  >  GOLDEN_SECTION,  getAbsoluteAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getRelativeAccuracy()  >  GOLDEN_SECTION,  getAbsoluteAccuracy());	  Preconditions.checkState(getRelativeAccuracy()    >    GOLDEN_SECTION);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	79	None	replace
310	[BUG]  [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION);  [CE]  cannot  find  symbol  Preconditions  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION);	  Preconditions.checkState(getRelativeAccuracy()    >    GOLDEN_SECTION);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	79	None	replace
311	[BUG]  [BUGGY]  luate(f,  goalType,  min,  max,  getRelativeAccuracy())  {  clearResult();  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  max,  getRelativeAccuracy())  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  max,  getRelativeAccuracy())  {  clearResult();  }	  luate(f,    goalType,    min,    max,    getRelativeAccuracy())    {    clearResult();    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  ';'  expected	107	None	replace
312	[BUG]  [BUGGY]  luate(f,  goalType,  min,  max,  getAbsoluteAccuracy())  {  clearResult();  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  max,  getAbsoluteAccuracy())  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  max,  getAbsoluteAccuracy())  {  clearResult();  }	  luate(f,    goalType,    min,    max,    getRelativeAccuracy())    {    clearResult();    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  ';'  expected	107	None	replace
313	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	25	4	add
314	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	25	4	add
315	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	25	4	add
316	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	25	4	add
317	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  getAbsoluteAccuracy();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  getAbsoluteAccuracy();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	25	4	add
318	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  getAbsoluteAccuracy();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  getAbsoluteAccuracy();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  getAbsoluteAccuracy();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	25	4	add
319	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	25	4	add
320	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	25	4	add
321	[BUG]  [BUGGY]  f.setMaximumFractionDigits(getMinimumFractionDigits(),  startValue,  min);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(getMinimumFractionDigits(),  startValue,  min);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(getMinimumFractionDigits(),  startValue,  min);	  f.setMaximumFractionDigits(getMinimumFractionDigits(),    startValue);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
322	[BUG]  [BUGGY]  Preconditions.checkState(getGoalType()  ==  GoalType.MINIMIZE);  [CE]  cannot  find  symbol  Preconditions  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getGoalType()  ==  GoalType.MINIMIZE);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getGoalType()  ==  GoalType.MINIMIZE);	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	5	None	replace
323	[BUG]  [BUGGY]  Preconditions.checkState(goalType  ==  GoalType.MINIMIZE);  [CE]  cannot  find  symbol  Preconditions  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(goalType  ==  GoalType.MINIMIZE);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(goalType  ==  GoalType.MINIMIZE);	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	5	None	replace
324	[BUG]  [BUGGY]  final  boolean  isRelative  =  getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  boolean  isRelative  =  getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  boolean  isRelative  =  getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    final    boolean    getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    	non-compiled	[CE]  ';'  expected	98	None	replace
325	[BUG]  [BUGGY]  final  GoalType  goalType  =  getRelativeAccuracy();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  getRelativeAccuracy();  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  getRelativeAccuracy();	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    If(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	84	None	replace
326	[BUG]  [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  >  max,  goalType);  [CE]  cannot  find  symbol  Preconditions  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  >  max,  goalType);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getRelativeAccuracy()  >  max,  goalType);	  Preconditions.checkState(getRelativeAccuracy()    >    max);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	105	None	replace
327	[BUG]  [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  >  max,  startValue);  [CE]  cannot  find  symbol  Preconditions  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  >  max,  startValue);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getRelativeAccuracy()  >  max,  startValue);	  Preconditions.checkState(getRelativeAccuracy()    >    max);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	105	None	replace
328	[BUG]  [BUGGY]  GoalType  goalType  =  goals.getRealFunction(f);  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  goals.getRealFunction(f);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  goals.getRealFunction(f);	  GoalType    goalType    =    goals.getRealFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	120	None	replace
329	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Long.doubleToLongBits(startValue));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Long.doubleToLongBits(startValue));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Long.doubleToLongBits(startValue));	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    Double.doubleToLongBits(max));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	117	None	replace
330	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(max,  min),  Double.doubleToLongBits(min));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(max,  min),  Double.doubleToLongBits(min));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(max,  min),  Double.doubleToLongBits(min));	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    Double.doubleToLongBits(max));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	117	None	replace
331	[BUG]  [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  ==  goalType);  [CE]  incomparable  types:  double  and  GoalType  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  ==  goalType);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getRelativeAccuracy()  ==  goalType);	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(getRelativeAccuracy()    >    max)    {    clearResult();    }    	non-compiled	[CE]  incomparable  types:  double  and  GoalType	7	None	replace
332	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(startValue,  min,  max,  startValue));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(startValue,  min,  max,  startValue));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(startValue,  min,  max,  startValue));	  f.setMaximumFractionDigits(Double.doubleToLongBits(startValue,    min,    max));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	91	None	replace
333	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  If(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  If(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    If(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	non-compiled	[CE]  ';'  expected	19	None	add
334	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	19	4	add
335	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	19	4	add
336	[BUG]  [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  if(getRelativeAccuracy()    <    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  ';'  expected	136	None	replace
337	[BUG]  [BUGGY]  Preconditions.checkState(f.getRelativeAccuracy()  <  min  ||  f.getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(f.getRelativeAccuracy()  <  min  ||  f.getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(f.getRelativeAccuracy()  <  min  ||  f.getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  if(getRelativeAccuracy()    <    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  ';'  expected	136	None	replace
338	[BUG]  [BUGGY]  Preconditions.checkState(f.getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(f.getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(f.getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  if(getRelativeAccuracy()    <    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  ';'  expected	136	None	replace
339	[BUG]  [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  <  min);  [CE]  cannot  find  symbol  Preconditions  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  <  min);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getRelativeAccuracy()  <  min);	  if(getRelativeAccuracy()    <    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	136	None	replace
340	[BUG]  [BUGGY]  Evaluate(f,  goalType,  min,  max,  startValue);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Evaluate(f,  goalType,  min,  max,  startValue);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Evaluate(f,  goalType,  min,  max,  startValue);	  luate(f,    goalType,    min,    max,    startValue);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
341	[BUG]  [BUGGY]  Evaluate(f,  goalType,  min,  max,  startValue,  getRelativeAccuracy());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Evaluate(f,  goalType,  min,  max,  startValue,  getRelativeAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Evaluate(f,  goalType,  min,  max,  startValue,  getRelativeAccuracy());	  luate(f,    goalType,    min,    max,    startValue);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
342	[BUG]  [BUGGY]  luate(f,  goalType,  min,  max,  startValue));  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  max,  startValue));  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  max,  startValue));	  luate(f,    goalType,    min,    max,    startValue);    	non-compiled	[CE]  ';'  expected	82	None	replace
343	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(startValue),  goalType);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(startValue),  goalType);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(startValue),  goalType);	  f.setMaximumFractionDigits(Double.doubleToLongBits(startValue));    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
344	[BUG]  [BUGGY]  Validate.notNull(startValue);  [CE]  cannot  find  symbol  Validate  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Validate.notNull(startValue);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Validate.notNull(startValue);	  Validate.notNull(    goalType);    	non-compiled	[CE]  cannot  find  symbol  Validate	116	None	replace
345	[BUG]  [BUGGY]  Validate.notEmpty(startValue);  [CE]  cannot  find  symbol  Validate  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Validate.notEmpty(startValue);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Validate.notEmpty(startValue);	  Validate.notNull(    goalType);    	non-compiled	[CE]  cannot  find  symbol  Validate	116	None	replace
346	[BUG]  [BUGGY]  luate(f,  goalType,  min,  max,  startValue))  {  clearResult();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  max,  startValue))  {  clearResult();  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  max,  startValue))  {  clearResult();	  luate(f,    goalType,    min,    max,    startValue))    {    clearResult();    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  ';'  expected	106	None	replace
347	[BUG]  [BUGGY]  final  GoalType  goalType  =  f.getOwnOptimizer();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  f.getOwnOptimizer();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  f.getOwnOptimizer();	  final    GoalType    goalType    =    f.getOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	47	None	replace
348	[BUG]  [BUGGY]  luate(f,  goalType,  startValue,  max);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  startValue,  max);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  startValue,  max);	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()    >    min)    {    clearResult();    }    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
349	[BUG]  [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  ==  max);  [CE]  cannot  find  symbol  Preconditions  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  ==  max);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getRelativeAccuracy()  ==  max);	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()    >    min)    {    clearResult();    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	24	None	replace
350	[BUG]  [BUGGY]  final  GoalType  goalType  =  f.getLowerOptimizer();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  f.getLowerOptimizer();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  f.getLowerOptimizer();	  final    GoalType    goalType    =    f.getOwnerOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	49	None	replace
351	[BUG]  [BUGGY]  GoalType  goalType  =  f.getLeastSupertype(startValue);  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  f.getLeastSupertype(startValue);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  f.getLeastSupertype(startValue);	  GoalType    goalType    =    f.getOwnOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	111	None	replace
352	[BUG]  [BUGGY]  GoalType  goalType  =  f.getOwnOptimizer(f);  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  f.getOwnOptimizer(f);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  f.getOwnOptimizer(f);	  GoalType    goalType    =    f.getOwnOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	111	None	replace
353	[BUG]  [BUGGY]  GoalType  goalType  =  f.getLowerBound();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  f.getLowerBound();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  f.getLowerBound();	  GoalType    goalType    =    f.getOwner();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	78	None	replace
354	[BUG]  [BUGGY]  GoalType  goalType  =  f.getOwn();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  f.getOwn();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  f.getOwn();	  GoalType    goalType    =    f.getOwner();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	78	None	replace
355	[BUG]  [BUGGY]  GoalType  goalType  =  this.f.getLocalFunction();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  this.f.getLocalFunction();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  this.f.getLocalFunction();	  GoalType    goalType    =    this.f.getRealFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	58	None	replace
356	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  startValue,  targetType);  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  startValue,  targetType);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  startValue,  targetType);	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    startValue);    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	90	None	replace
357	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  targetType,  startValue);  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  targetType,  startValue);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  targetType,  startValue);	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    startValue);    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	90	None	replace
358	[BUG]  [BUGGY]  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  setAbsoluteAccuracy();  }  [CE]  method  setAbsoluteAccuracy  in  class  ConvergingAlgorithmImpl  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  setAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    <    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  setAbsoluteAccuracy();  }	  	non-compiled	[CE]  method  setAbsoluteAccuracy  in  class  ConvergingAlgorithmImpl  cannot  be  applied  to  given  types;	135	None	add
359	[BUG]  [BUGGY]  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getVerticalAccuracy();  }  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getVerticalAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    <    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getVerticalAccuracy();  }	  	non-compiled	[CE]  cannot  find  symbol	135	None	add
360	[BUG]  [BUGGY]  Evaluate(f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Evaluate(f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Evaluate(f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());	  luate(f,    goalType,    startValue,    max,    getRelativeAccuracy(),    getAbsoluteAccuracy());    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
361	[BUG]  [BUGGY]  luate(f,  goalType,  max,  min,  startValue,  getRelativeAccuracy(),  getAbsoluteAccuracy());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  max,  min,  startValue,  getRelativeAccuracy(),  getAbsoluteAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  max,  min,  startValue,  getRelativeAccuracy(),  getAbsoluteAccuracy());	  luate(f,    goalType,    startValue,    max,    getRelativeAccuracy(),    getAbsoluteAccuracy());    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
362	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(startValue),  goalType);  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(startValue),  goalType);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(startValue),  goalType);	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    Double.doubleToLongBits(startValue));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	73	None	replace
363	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(focusValue));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(focusValue));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  Double.doubleToLongBits(focusValue));	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    Double.doubleToLongBits(startValue));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	73	None	replace
364	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    <    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	86	4	add
365	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    <    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	86	4	add
366	[BUG]  [BUGGY]  luate(f,  GoalType.MINIMIZE,  max,  min,  getRelativeAccuracy(),  getAbsoluteAccuracy());  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  GoalType.MINIMIZE,  max,  min,  getRelativeAccuracy(),  getAbsoluteAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  GoalType.MINIMIZE,  max,  min,  getRelativeAccuracy(),  getAbsoluteAccuracy());	  luate(f,    GoalType.MINIMIZE,    min,    max,    getRelativeAccuracy(),    getAbsoluteAccuracy());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
367	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Float.doubleToLongBits(startValue),  goalType);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Float.doubleToLongBits(startValue),  goalType);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Float.doubleToLongBits(startValue),  goalType);	  f.setMaximumFractionDigits(Float.doubleToLongBits(startValue));    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
368	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  startValue),  Double.doubleToLongBits(max));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  startValue),  Double.doubleToLongBits(max));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  startValue),  Double.doubleToLongBits(max));	  f.setMaximumFractionDigits(Double.doubleToLongBits(startValue),    Double.doubleToLongBits(max));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	97	None	replace
369	[BUG]  [BUGGY]  final  boolean  getAbsoluteAccuracy()  ==  false)  {  clearResult();  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  boolean  getAbsoluteAccuracy()  ==  false)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  boolean  getAbsoluteAccuracy()  ==  false)  {  clearResult();  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    final    boolean    getRelativeAccuracy()    >    max)    {    clearResult();    }    	non-compiled	[CE]  ';'  expected	22	None	replace
370	[BUG]  [BUGGY]  final  boolean  getAbsoluteAccuracy()  {  clearResult();  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  boolean  getAbsoluteAccuracy()  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  boolean  getAbsoluteAccuracy()  {  clearResult();  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    final    boolean    getRelativeAccuracy()    >    max)    {    clearResult();    }    	non-compiled	[CE]  ';'  expected	22	None	replace
371	[BUG]  [BUGGY]  Preconditions.checkState(getGoalType()!=  GoalType.MINIMIZE);  [CE]  cannot  find  symbol  Preconditions  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getGoalType()!=  GoalType.MINIMIZE);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getGoalType()!=  GoalType.MINIMIZE);	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	28	None	replace
372	[BUG]  [BUGGY]  GoalType  goalType  =  f.getLowerOptimizer();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  f.getLowerOptimizer();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  f.getLowerOptimizer();	  GoalType    goalType    =    f.getOwnerOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	44	None	replace
373	[BUG]  [BUGGY]  GoalType  goalType  =  f.getOwnerOptimizer(f);  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  f.getOwnerOptimizer(f);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  f.getOwnerOptimizer(f);	  GoalType    goalType    =    f.getOwnerOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	44	None	replace
374	[BUG]  [BUGGY]  Preconditions.checkState(goalType!=  GoalType.MINIMIZE);  [CE]  cannot  find  symbol  Preconditions  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(goalType!=  GoalType.MINIMIZE);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(goalType!=  GoalType.MINIMIZE);	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()    >    max)    {    clearResult();    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	20	None	replace
375	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getAbsoluteAccuracy()  >  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getAbsoluteAccuracy()    >    max)    {    clearResult();    }    if(getAbsoluteAccuracy()  >  min)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	93	4	add
376	[BUG]  [BUGGY]  if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getAbsoluteAccuracy()  >  min)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getAbsoluteAccuracy()  >  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getAbsoluteAccuracy()    >    max)    {    clearResult();    }    if(getAbsoluteAccuracy()  >  min)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	93	4	add
377	[BUG]  [BUGGY]  GoalType  goalType  =  getRealFunction(f);  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  getRealFunction(f);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  getRealFunction(f);	  GoalType    goalType    =    getRealFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	59	None	replace
378	[BUG]  [BUGGY]  GoalType  goalType  =  getRealFunction().getOwnerFunctionType();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  getRealFunction().getOwnerFunctionType();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  getRealFunction().getOwnerFunctionType();	  GoalType    goalType    =    getRealFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	59	None	replace
379	[BUG]  [BUGGY]  f.setMaximumFractionDigits(startValue,  max);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(startValue,  max);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(startValue,  max);	  f.setMaximumFractionDigits(min);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
380	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException(   "     ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        RuntimeException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(   "       ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	30	7	add
381	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException(   "     ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException(   "     ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        RuntimeException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(   "       ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	30	7	add
382	[BUG]  [BUGGY]  GoalType  goalType  =  f.getOwnFunction();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  f.getOwnFunction();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  f.getOwnFunction();	  GoalType    goalType    =    f.getLocalFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	112	None	replace
383	[BUG]  [BUGGY]  f.setMaximumFractionDigits(getMinimumFractionDigits()  +  1,  startValue);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(getMinimumFractionDigits()  +  1,  startValue);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(getMinimumFractionDigits()  +  1,  startValue);	  f.setMaximumFractionDigits(getMinimumFractionDigits()    +    1);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
384	[BUG]  [BUGGY]  Evaluate(f,  goalType,  min,  startValue,  max,  getRelativeAccuracy());  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Evaluate(f,  goalType,  min,  startValue,  max,  getRelativeAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Evaluate(f,  goalType,  min,  startValue,  max,  getRelativeAccuracy());	  luate(f,    goalType,    startValue,    max,    getRelativeAccuracy());    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
385	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	88	4	add
386	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	compilable	  [FE]  AssertionError  	88	4	add
387	[BUG]  [BUGGY]  Evaluate(f,  goalType,  min);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Evaluate(f,  goalType,  min);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Evaluate(f,  goalType,  min);	  luate(f,    goalType);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
388	[BUG]  [BUGGY]  luate(f,  goalType,  min,  max,  startValue,  getAbsoluteAccuracy()));  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  max,  startValue,  getAbsoluteAccuracy()));  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  max,  startValue,  getAbsoluteAccuracy()));	  luate(f,    goalType,    min,    max,    getAbsoluteAccuracy()));    	non-compiled	[CE]  ';'  expected	118	None	replace
389	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	103	4	add
390	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	103	4	add
391	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  cleanResult();  }  else  {  getAbsoluteAccuracy();  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  cleanResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  cleanResult();  }  else  {  getAbsoluteAccuracy();  }	  	non-compiled	[CE]  cannot  find  symbol	27	None	add
392	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()  <  min)  {  clearResult();  }	  if(getRelativeAccuracy()    <    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	96	4	replace
393	[BUG]  [BUGGY]  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  <  min)  {  clearResult();  }	  if(getRelativeAccuracy()    <    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	96	4	replace
394	[BUG]  [BUGGY]  f.setMinimumFractionDigits(startValue);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMinimumFractionDigits(startValue);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMinimumFractionDigits(startValue);	  f.setMaximumFractionDigits(MinimumFractionDigits);    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
395	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ".);  }  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ".);  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        RuntimeException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	32	None	add
396	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( ". ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        RuntimeException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( ". ");  }	  	compilable	  [FE]  AssertionError  	32	7	add
397	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( ". ");  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( ". ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        RuntimeException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( ". ");  }	  	compilable	  [FE]  AssertionError  	32	7	add
398	[BUG]  [BUGGY]  luate(f,  goalType,  min,  max,  getAbsoluteAccuracy())  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  max,  getAbsoluteAccuracy())  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  max,  getAbsoluteAccuracy())  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  luate(f,    goalType,    min,    max,    getRelativeAccuracy())    {    clearResult();    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  	107	None	replace
399	[BUG]  [BUGGY]  luate(f,  goalType,  min,  max,  getAbsoluteAccuracy()))  {  clearResult();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  max,  getAbsoluteAccuracy()))  {  clearResult();  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  max,  getAbsoluteAccuracy()))  {  clearResult();	  luate(f,    goalType,    min,    max,    getRelativeAccuracy()))    {    clearResult();    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  ';'  expected	67	None	replace
400	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	104	4	replace
401	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	104	4	replace
402	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  min  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()  >  min  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	104	4	replace
403	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  min  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  min  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  >  min  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	104	4	replace
404	[BUG]  [BUGGY]  final  GoalType  goalType  =  getRealFunction(f);  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  getRealFunction(f);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  getRealFunction(f);	  final    GoalType    goalType    =    getRealFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	36	None	replace
405	[BUG]  [BUGGY]  final  boolean  getAbsoluteAccuracy()  ==  GOLDEN_SECTION)  {  clearResult();  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  boolean  getAbsoluteAccuracy()  ==  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  boolean  getAbsoluteAccuracy()  ==  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    final    boolean    getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	non-compiled	[CE]  ';'  expected	66	None	replace
406	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	1	7	add
407	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	1	7	add
408	[BUG]  [BUGGY]  Preconditions.checkState(f.getRelativeAccuracy()  >  max);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(f.getRelativeAccuracy()  >  max);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(f.getRelativeAccuracy()  >  max);	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    MaxIterationsExceededException(   "   ",    f);    }    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
409	[BUG]  [BUGGY]  GoalType  goalType  =  getFunctionOptimizer();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  getFunctionOptimizer();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  getFunctionOptimizer();	  GoalType    goalType    =    getOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	46	None	replace
410	[BUG]  [BUGGY]  GoalType  goalType  =  getRealOptimizer();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                      AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  getRealOptimizer();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  getRealOptimizer();	  GoalType    goalType    =    getOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	46	None	replace
411	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  max  &&  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()  >  max  &&  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION    &&    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	132	4	replace
412	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  max  &&  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  max  &&  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  >  max  &&  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION    &&    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	132	4	replace
413	[BUG]  [BUGGY]  Preconditions.checkState(getAbsoluteAccuracy()  ==  null);  [CE]  incomparable  types:  double  and  <null>  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getAbsoluteAccuracy()  ==  null);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getAbsoluteAccuracy()  ==  null);	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    If(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	65	None	replace
414	[BUG]  [BUGGY]  Preconditions.checkArgument(getAbsoluteAccuracy()  ==  null);  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkArgument(getAbsoluteAccuracy()  ==  null);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkArgument(getAbsoluteAccuracy()  ==  null);	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    If(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	65	None	replace
415	[BUG]  [BUGGY]  luate(f,  goalType)  {  getResult();  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType)  {  getResult();  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType)  {  getResult();  }  else  {  throw  new  RuntimeException( " ");  }	  luate(f,    goalType)    {    clearResult();    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  	109	None	replace
416	[BUG]  [BUGGY]  luate(f,  goalType)  {  if(min  >  max)  {  throw  new  RuntimeException( " ");  }  [CE]  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType)  {  if(min  >  max)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType)  {  if(min  >  max)  {  throw  new  RuntimeException( " ");  }	  luate(f,    goalType)    {    clearResult();    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  	109	None	replace
417	[BUG]  [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  <  GOLDEN_SECTION);  [CE]  cannot  find  symbol  Preconditions  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  <  GOLDEN_SECTION);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getRelativeAccuracy()  <  GOLDEN_SECTION);	  Preconditions.checkState(getRelativeAccuracy()    >    GOLDEN_SECTION);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	79	None	replace
418	[BUG]  [BUGGY]  Preconditions.checkState(getAbsoluteAccuracy()  >  GOLDEN_SECTION);  [CE]  cannot  find  symbol  Preconditions  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getAbsoluteAccuracy()  >  GOLDEN_SECTION);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getAbsoluteAccuracy()  >  GOLDEN_SECTION);	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	64	None	replace
419	[BUG]  [BUGGY]  goalType.setOptimize(true,  f);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  goalType.setOptimize(true,  f);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	goalType.setOptimize(true,  f);	  f.setOptimize(true,    goalType);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
420	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(Min,  max));  [CE]  cannot  find  symbol  Min  [FE]                          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(Min,  max));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(Min,  max));	  f.setMaximumFractionDigits(Double.doubleToLongBits(max,    min));    	non-compiled	[CE]  cannot  find  symbol  Min	11	None	replace
421	[BUG]  [BUGGY]  Preconditions.checkNotNull(startValue);  [CE]  cannot  find  symbol  Preconditions  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkNotNull(startValue);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkNotNull(startValue);	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()    >    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	89	None	replace
422	[BUG]  [BUGGY]  luate(f,  goalType,  startValue);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  startValue);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  startValue);	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()    >    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
423	[BUG]  [BUGGY]  GoalType  goalType  =  f.getRealFunction(min,  max);  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  f.getRealFunction(min,  max);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  f.getRealFunction(min,  max);	  GoalType    goalType    =    f.getRealFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	56	None	replace
424	[BUG]  [BUGGY]  f.setOptimize(min,  max);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setOptimize(min,  max);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setOptimize(min,  max);	  f.setOptimize(true,    max);    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
425	[BUG]  [BUGGY]  f.setOptimize(false,  min,  startValue);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setOptimize(false,  min,  startValue);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setOptimize(false,  min,  startValue);	  f.setOptimize(false,    startValue);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
426	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  min)  {  clearResult();  }	  if(getRelativeAccuracy()    >    max    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	138	4	replace
427	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  min)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  >  min)  {  clearResult();  }	  if(getRelativeAccuracy()    >    max    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	138	4	replace
428	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  <  =  max)  {  clearResult();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  <  =  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  <  =  max)  {  clearResult();  }	  if(getRelativeAccuracy()    >    max    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
429	[BUG]  [BUGGY]  Evaluate(f,  goalType,  min,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Evaluate(f,  goalType,  min,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Evaluate(f,  goalType,  min,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());	  luate(f,    goalType,    min,    max,    getRelativeAccuracy(),    getAbsoluteAccuracy());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
430	[BUG]  [BUGGY]  if(getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  final  boolean  getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  final  boolean  getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    final  boolean  getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();	  	non-compiled	[CE]  ';'  expected	101	None	add
431	[BUG]  [BUGGY]  final  GoalType  goalType  =  getRealOptimizer();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  getRealOptimizer();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  getRealOptimizer();	  final    GoalType    goalType    =    getOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	81	None	replace
432	[BUG]  [BUGGY]  final  GoalType  goalType  =  getFunctionOptimizer();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  getFunctionOptimizer();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  getFunctionOptimizer();	  final    GoalType    goalType    =    getOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	81	None	replace
433	[BUG]  [BUGGY]  if(getGoalType()  >  GOLDEN_SECTION)  {  clearResult();  }  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getGoalType()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getGoalType()  >  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    cleanResult();    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	121	None	replace
434	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_MINIMIZE)  {  clearResult();  }  [CE]  cannot  find  symbol  GOLDEN_MINIMIZE  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_MINIMIZE)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  >  GOLDEN_MINIMIZE)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    cleanResult();    }    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_MINIMIZE	121	None	replace
435	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  f,  startValue);  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  f,  startValue);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max),  f,  startValue);	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    f);    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	129	None	replace
436	[BUG]  [BUGGY]  f.setOptimize(true,  min);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setOptimize(true,  min);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setOptimize(true,  min);	  f.setOptimize(true,    startValue);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
437	[BUG]  [BUGGY]  luate(f,  goalType)  {  getResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType)  {  getResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType)  {  getResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  luate(f,    goalType)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	83	None	replace
438	[BUG]  [BUGGY]  luate(f,  goalType)  {  if(min  >  max)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType)  {  if(min  >  max)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType)  {  if(min  >  max)  {  throw  new  IllegalArgumentException( " ");  }	  luate(f,    goalType)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	83	None	replace
439	[BUG]  [BUGGY]  if(min  >  max)  {  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(min  >  max)  {  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(min  >  max)  {  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy());    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
440	[BUG]  [BUGGY]  if(min  >  max)  {  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(min  >  max)  {  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(min  >  max)  {  if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy());    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
441	[BUG]  [BUGGY]  if(min  >  max)  {  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(min  >  max)  {  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(min  >  max)  {  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy());    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
442	[BUG]  [BUGGY]  Evaluate(f,  goalType,  min,  max,  getRelativeAccuracy());  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Evaluate(f,  goalType,  min,  max,  getRelativeAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Evaluate(f,  goalType,  min,  max,  getRelativeAccuracy());	  luate(f,    goalType,    min,    max,    getAbsoluteAccuracy());    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
443	[BUG]  [BUGGY]  Preconditions.checkState(getAbsoluteAccuracy()  ==  GOLDEN_SECTION);  [CE]  cannot  find  symbol  Preconditions  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getAbsoluteAccuracy()  ==  GOLDEN_SECTION);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getAbsoluteAccuracy()  ==  GOLDEN_SECTION);	  Preconditions.checkState(getRelativeAccuracy()    ==    GOLDEN_SECTION);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	80	None	replace
444	[BUG]  [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  ==  GOLDEN_SECTION,  max);  [CE]  cannot  find  symbol  Preconditions  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  ==  GOLDEN_SECTION,  max);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getRelativeAccuracy()  ==  GOLDEN_SECTION,  max);	  Preconditions.checkState(getRelativeAccuracy()    ==    GOLDEN_SECTION);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	80	None	replace
445	[BUG]  [BUGGY]  Preconditions.checkState(f.getGoal()  ==  GoalType.MINIMIZE);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(f.getGoal()  ==  GoalType.MINIMIZE);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(f.getGoal()  ==  GoalType.MINIMIZE);	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
446	[BUG]  [BUGGY]  Preconditions.checkState(getGoalType()  ==  GoalType.GOLDEN_SECTION);  [CE]  cannot  find  symbol  GOLDEN_SECTION  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getGoalType()  ==  GoalType.GOLDEN_SECTION);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getGoalType()  ==  GoalType.GOLDEN_SECTION);	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    If(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_SECTION	41	None	replace
447	[BUG]  [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	non-compiled	[CE]  ';'  expected	134	None	replace
448	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	134	4	replace
449	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	134	4	replace
450	[BUG]  [BUGGY]  final  GoalType  goalType  =  getRealFunction().getTarget();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  getRealFunction().getTarget();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  getRealFunction().getTarget();	  final    GoalType    goalType    =    getRealFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	36	None	replace
451	[BUG]  [BUGGY]  if(getGoalType()  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getGoalType()  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getGoalType()  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy());    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
452	[BUG]  [BUGGY]  if(getGoalType()  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getGoalType()  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getGoalType()  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy());    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
453	[BUG]  [BUGGY]  if(getGoalType()  ==  GoalType.SECTION)  {  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getGoalType()  ==  GoalType.SECTION)  {  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getGoalType()  ==  GoalType.SECTION)  {  if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy());    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
454	[BUG]  [BUGGY]  if(getGoalType()  ==  GoalType.SECTION)  {  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getGoalType()  ==  GoalType.SECTION)  {  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getGoalType()  ==  GoalType.SECTION)  {  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    getAbsoluteAccuracy());    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
455	[BUG]  [BUGGY]  GoalType  goalType  =  getRelativeOptimizer();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  getRelativeOptimizer();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  getRelativeOptimizer();	  GoalType    goalType    =    getOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	46	None	replace
456	[BUG]  [BUGGY]  GoalType  goalType  =  getOwnerOptimizer();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                      AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  getOwnerOptimizer();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  getOwnerOptimizer();	  GoalType    goalType    =    getOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	46	None	replace
457	[BUG]  [BUGGY]  f.setOptimize(true,  startValue,  max);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setOptimize(true,  startValue,  max);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setOptimize(true,  startValue,  max);	  f.setOptimize(true,    startValue);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
458	[BUG]  [BUGGY]  luate(f,  goalType,  startValue,  max,  getAbsoluteAccuracy());  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  startValue,  max,  getAbsoluteAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  startValue,  max,  getAbsoluteAccuracy());	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
459	[BUG]  [BUGGY]  GoalType  goalType  =  goals.getOwnerFunction();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  goals.getOwnerFunction();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  goals.getOwnerFunction();	  GoalType    goalType    =    goals.getRealFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	120	None	replace
460	[BUG]  [BUGGY]  luate(f,  GoalType.MINIMIZE,  max,  min,  getRelativeAccuracy());  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  GoalType.MINIMIZE,  max,  min,  getRelativeAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  GoalType.MINIMIZE,  max,  min,  getRelativeAccuracy());	  luate(f,    GoalType.MINIMIZE,    min,    max,    getAbsoluteAccuracy());    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
461	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getAbsoluteAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    If(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	65	4	replace
462	[BUG]  [BUGGY]  if(getAbsoluteAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getAbsoluteAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    If(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	65	4	replace
463	[BUG]  [BUGGY]  luate(f,  GoalType.MINIMIZE,  goalType,  startValue,  max,  getAbsoluteAccuracy());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  GoalType.MINIMIZE,  goalType,  startValue,  max,  getAbsoluteAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  GoalType.MINIMIZE,  goalType,  startValue,  max,  getAbsoluteAccuracy());	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    If(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
464	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getAbsoluteAccuracy()  >  min)  {  clearResult();  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    If(getRelativeAccuracy()    >    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	21	4	replace
465	[BUG]  [BUGGY]  if(getAbsoluteAccuracy()  >  min)  {  clearResult();  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getAbsoluteAccuracy()  >  min)  {  clearResult();  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    If(getRelativeAccuracy()    >    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	21	4	replace
466	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  <  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getAbsoluteAccuracy()  <  min)  {  clearResult();  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    If(getRelativeAccuracy()    >    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	21	4	replace
467	[BUG]  [BUGGY]  if(getAbsoluteAccuracy()  <  min)  {  clearResult();  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  <  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getAbsoluteAccuracy()  <  min)  {  clearResult();  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    If(getRelativeAccuracy()    >    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	21	4	replace
468	[BUG]  [BUGGY]  GoalType  goalType  =  f.getTarget();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  f.getTarget();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  f.getTarget();	  GoalType    goalType    =    f.getLabel();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	122	None	replace
469	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max)/  2,  f);  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max)/  2,  f);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max)/  2,  f);	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    f);    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	129	None	replace
470	[BUG]  [BUGGY]  luate(f,  goalType,  min,  max,  startValue))  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ",  f.getMessage());  }  [CE]  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  max,  startValue))  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ",  f.getMessage());  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  max,  startValue))  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ",  f.getMessage());  }	  luate(f,    goalType,    min,    max,    startValue))    {    clearResult();    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  	106	None	replace
471	[BUG]  [BUGGY]  Validate.notNull(f,  goalType));  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Validate.notNull(f,  goalType));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Validate.notNull(f,  goalType));	  Validate.notNull(f,    goalType);    	non-compiled	[CE]  ';'  expected	54	None	replace
472	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max)/  2,  Double.doubleToLongBits(max));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max)/  2,  Double.doubleToLongBits(max));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max)/  2,  Double.doubleToLongBits(max));	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    Double.doubleToLongBits(max));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	117	None	replace
473	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max)-  min,  Double.doubleToLongBits(max));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max)-  min,  Double.doubleToLongBits(max));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max)-  min,  Double.doubleToLongBits(max));	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    Double.doubleToLongBits(max));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	117	None	replace
474	[BUG]  [BUGGY]  Validate.notNull(f,  GoalType.MINIMIZE,  max);  [CE]  cannot  find  symbol  Validate  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Validate.notNull(f,  GoalType.MINIMIZE,  max);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Validate.notNull(f,  GoalType.MINIMIZE,  max);	  Validate.notNull(f,    GoalType.MINIMIZE);    	non-compiled	[CE]  cannot  find  symbol  Validate	55	None	replace
475	[BUG]  [BUGGY]  f.setMaximumFractionDigits(maximumFractionDigits  *  min);  [CE]  cannot  find  symbol  maximumFractionDigits  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(maximumFractionDigits  *  min);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(maximumFractionDigits  *  min);	  f.setMaximumFractionDigits(maximumFractionDigits    +    min);    	non-compiled	[CE]  cannot  find  symbol  maximumFractionDigits	99	None	replace
476	[BUG]  [BUGGY]  luate(f,  goalType,  f.maximumValue());  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  f.maximumValue());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  f.maximumValue());	  luate(f,    goalType);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
477	[BUG]  [BUGGY]  GoalType  goalType  =  getRealFunction().getTarget();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  getRealFunction().getTarget();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  getRealFunction().getTarget();	  GoalType    goalType    =    getRealFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	59	None	replace
478	[BUG]  [BUGGY]  goalType.setOptimize(false,  f);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  goalType.setOptimize(false,  f);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	goalType.setOptimize(false,  f);	  f.setOptimize(false,    goalType);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
479	[BUG]  [BUGGY]  f.setOptimize(false,  goalType,  max);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setOptimize(false,  goalType,  max);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setOptimize(false,  goalType,  max);	  f.setOptimize(false,    goalType);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
480	[BUG]  [BUGGY]  luate(f,  GoalType.MINIMIZE,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  GoalType.MINIMIZE,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  GoalType.MINIMIZE,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());	  luate(f,    GoalType.MINIMIZE,    min,    max,    getRelativeAccuracy(),    getAbsoluteAccuracy());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
481	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  <  =  max)  {  clearResult();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  <  =  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  <  =  max)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
482	[BUG]  [BUGGY]  GoalType  goalType  =  this.f.getOwnerFunction();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  this.f.getOwnerFunction();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  this.f.getOwnerFunction();	  GoalType    goalType    =    this.f.getRealFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	58	None	replace
483	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  goalType,  endValue));  [CE]  cannot  find  symbol  endValue  [FE]                        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  goalType,  endValue));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  goalType,  endValue));	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max,    goalType));    	non-compiled	[CE]  cannot  find  symbol  endValue	10	None	replace
484	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  goalType,  targetType));  [CE]  cannot  find  symbol  targetType  [FE]                          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  goalType,  targetType));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max,  goalType,  targetType));	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max,    goalType));    	non-compiled	[CE]  cannot  find  symbol  targetType	10	None	replace
485	[BUG]  [BUGGY]  if(getGoalType()  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getGoalType()  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getGoalType()  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()    <    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
486	[BUG]  [BUGGY]  if(getGoalType()  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getGoalType()  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getGoalType()  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()    <    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
487	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()    <    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	compilable	  [FE]  AssertionError  	87	4	replace
488	[BUG]  [BUGGY]  if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()    <    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	compilable	  [FE]  AssertionError  	87	4	replace
489	[BUG]  [BUGGY]  if(getGoalType()  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  while(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getGoalType()  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  while(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getGoalType()  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  while(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()    <    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
490	[BUG]  [BUGGY]  if(getGoalType()  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  other  {  getAbsoluteAccuracy();  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getGoalType()  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  other  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getGoalType()  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  other  {  getAbsoluteAccuracy();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  not  a  statement	26	None	replace
491	[BUG]  [BUGGY]  if(getGoalType()  ==  GoalType.MINIMIZE)  {  if(getRElativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getGoalType()  ==  GoalType.MINIMIZE)  {  if(getRElativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getGoalType()  ==  GoalType.MINIMIZE)  {  if(getRElativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
492	[BUG]  [BUGGY]  if(getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  cleanResult();  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  cleanResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  cleanResult();  }	  	non-compiled	[CE]  cannot  find  symbol	101	None	add
493	[BUG]  [BUGGY]  luate(f,  goalType,  min,  max,  getAbsoluteAccuracy(),  getAbsoluteAccuracy());  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  max,  getAbsoluteAccuracy(),  getAbsoluteAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  max,  getAbsoluteAccuracy(),  getAbsoluteAccuracy());	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
494	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  min)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getAbsoluteAccuracy()  >  min)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(getRelativeAccuracy()    >    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	7	7	replace
495	[BUG]  [BUGGY]  if(getAbsoluteAccuracy()  >  min)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  min)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getAbsoluteAccuracy()  >  min)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(getRelativeAccuracy()    >    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	7	7	replace
496	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(getRelativeAccuracy()    >    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	7	7	replace
497	[BUG]  [BUGGY]  if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(getRelativeAccuracy()    >    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	7	7	replace
498	[BUG]  [BUGGY]  final  GoalType  goalType  =  targetType.getRawParameterType(0);  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  targetType.getRawParameterType(0);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  targetType.getRawParameterType(0);	  final    GoalType    goalType    =    targetType.getOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	48	None	replace
499	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  min)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getAbsoluteAccuracy()  >  min)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(       "       ");    }    if(getRelativeAccuracy()    >    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	33	7	replace
500	[BUG]  [BUGGY]  if(getAbsoluteAccuracy()  >  min)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  min)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getAbsoluteAccuracy()  >  min)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(       "       ");    }    if(getRelativeAccuracy()    >    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	33	7	replace
501	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(       "       ");    }    if(getRelativeAccuracy()    >    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	33	7	replace
502	[BUG]  [BUGGY]  if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getAbsoluteAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    RuntimeException(       "       ");    }    if(getRelativeAccuracy()    >    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	33	7	replace
503	[BUG]  [BUGGY]  if(getGoalType()  ==  GoalType.SECTION)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getGoalType()  ==  GoalType.SECTION)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getGoalType()  ==  GoalType.SECTION)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    If(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
504	[BUG]  [BUGGY]  if(f  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(f  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(f  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    If(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
505	[BUG]  [BUGGY]  if(getGoal()  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getGoal()  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getGoal()  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    If(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
506	[BUG]  [BUGGY]  GoalType  goalType  =  f.getOwnerOptimizer(true);  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  f.getOwnerOptimizer(true);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  f.getOwnerOptimizer(true);	  GoalType    goalType    =    f.getOwnerOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	44	None	replace
507	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  <  =  GOLDEN_SECTION)  {  clearResult();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  <  =  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  <  =  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
508	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	134	4	replace
509	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	134	4	replace
510	[BUG]  [BUGGY]  final  int  startValue  =  getRelativeAccuracy();  [CE]  variable  startValue  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  int  startValue  =  getRelativeAccuracy();  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  int  startValue  =  getRelativeAccuracy();	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	92	None	replace
511	[BUG]  [BUGGY]  final  int  startValue  =  getAbsoluteAccuracy();  [CE]  variable  startValue  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  int  startValue  =  getAbsoluteAccuracy();  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  int  startValue  =  getAbsoluteAccuracy();	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	92	None	replace
512	[BUG]  [BUGGY]  if(getGoal()  >  GOLDEN_SECTION)  {  clearResult();  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getGoal()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getGoal()  >  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    cleanResult();    }    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
513	[BUG]  [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max);  [CE]  cannot  find  symbol  Preconditions  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Preconditions.checkState(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max);  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Preconditions.checkState(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max);	  Preconditions.checkState(getRelativeAccuracy()    >    GOLDEN_SECTION);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	79	None	replace
514	[BUG]  [BUGGY]  GoalType  goalType  =  this.targetType.getOptimizer();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  this.targetType.getOptimizer();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  this.targetType.getOptimizer();	  GoalType    goalType    =    targetType.getOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	45	None	replace
515	[BUG]  [BUGGY]  GoalType  goalType  =  targetType.getOwner();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  targetType.getOwner();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  targetType.getOwner();	  GoalType    goalType    =    targetType.getOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	45	None	replace
516	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  If(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  If(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    If(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	non-compiled	[CE]  ';'  expected	25	None	add
517	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max)/  2,  startValue);  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max)/  2,  startValue);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max)/  2,  startValue);	  f.setMaximumFractionDigits(Double.doubleToLongBits(min,    max),    startValue);    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	90	None	replace
518	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  getAbsoluteAccuracy(),  getAbsoluteAccuracy());  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  getAbsoluteAccuracy(),  getAbsoluteAccuracy());  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        if(getRelativeAccuracy()    >    min)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  getAbsoluteAccuracy(),  getAbsoluteAccuracy());  }	  	non-compiled	[CE]  ';'  expected	23	None	add
519	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        if(getRelativeAccuracy()    >    min)    {    clearResult();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	23	4	add
520	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        if(getRelativeAccuracy()    >    min)    {    clearResult();    }    if(getRelativeAccuracy()  >  min)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	23	4	add
521	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  If(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()  <  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  If(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        else        {        getAbsoluteAccuracy();        }        if(getRelativeAccuracy()    <    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    If(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  	non-compiled	[CE]  ';'  expected	86	None	add
522	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  <  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  <  min)  {  clearResult();  }	  if(getRelativeAccuracy()    >    max    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	138	4	replace
523	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  <  min)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  <  min)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  >  max  ||  getAbsoluteAccuracy()  <  min)  {  clearResult();  }	  if(getRelativeAccuracy()    >    max    ||    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	138	4	replace
524	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  if(getRelativeAccuracy()  >=  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()    <    max)    {    clearResult();    }    if(getRelativeAccuracy()  >=  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	95	4	add
525	[BUG]  [BUGGY]  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  if(getRelativeAccuracy()  >=  max)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  if(getRelativeAccuracy()  >=  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    <    max)    {    clearResult();    }    if(getRelativeAccuracy()  >=  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	95	4	add
526	[BUG]  [BUGGY]  timeout  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  while(getRelativeAccuracy()  <  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()    <    max)    {    clearResult();    }    while(getRelativeAccuracy()  <  max)  {  clearResult();  }	  	compilable	timeout	95	1	add
527	[BUG]  [BUGGY]  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  while(getRelativeAccuracy()  <  max)  {  clearResult();  }  timeout  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  while(getRelativeAccuracy()  <  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    <    max)    {    clearResult();    }    while(getRelativeAccuracy()  <  max)  {  clearResult();  }	  	compilable	timeout	95	1	add
528	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  GOLDEN_SECTION  &&  getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getAbsoluteAccuracy()  >  GOLDEN_SECTION  &&  getRelativeAccuracy()  >  max)  {  clearResult();  }	  if(getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	102	4	replace
529	[BUG]  [BUGGY]  if(getAbsoluteAccuracy()  >  GOLDEN_SECTION  &&  getRelativeAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  GOLDEN_SECTION  &&  getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getAbsoluteAccuracy()  >  GOLDEN_SECTION  &&  getRelativeAccuracy()  >  max)  {  clearResult();  }	  if(getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	102	4	replace
530	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  GOLDEN_SECTION  ||  getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getAbsoluteAccuracy()  >  GOLDEN_SECTION  ||  getRelativeAccuracy()  >  max)  {  clearResult();  }	  if(getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	102	4	replace
531	[BUG]  [BUGGY]  if(getAbsoluteAccuracy()  >  GOLDEN_SECTION  ||  getRelativeAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getAbsoluteAccuracy()  >  GOLDEN_SECTION  ||  getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getAbsoluteAccuracy()  >  GOLDEN_SECTION  ||  getRelativeAccuracy()  >  max)  {  clearResult();  }	  if(getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    	compilable	  [FE]  AssertionError  	102	4	replace
532	[BUG]  [BUGGY]  GoalType  goalType  =  f.getOwnObject();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  f.getOwnObject();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  f.getOwnObject();	  GoalType    goalType    =    f.getLocalFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	112	None	replace
533	[BUG]  [BUGGY]  final  GoalType  goalType  =  f.getLabel();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  f.getLabel();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  f.getLabel();	  final    GoalType    goalType    =    f.getOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	47	None	replace
534	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  if(getRelativeAccuracy()    <    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	compilable	  [FE]  AssertionError  	136	4	replace
535	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  >  min)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	  if(getRelativeAccuracy()    <    min)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    	compilable	  [FE]  AssertionError  	136	4	replace
536	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  <  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	19	4	add
537	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  <  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        max)        {        clearResult();        }        if(getRelativeAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  <  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	19	4	add
538	[BUG]  [BUGGY]  f.setOptimize(false,  null);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setOptimize(false,  null);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setOptimize(false,  null);	  f.setOptimize(false);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
539	[BUG]  [BUGGY]  Validate.isTrue(f.getFunctionType()  ==  GoalType.FUNCTION);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Validate.isTrue(f.getFunctionType()  ==  GoalType.FUNCTION);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Validate.isTrue(f.getFunctionType()  ==  GoalType.FUNCTION);	  Validate.notEmpty(f);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
540	[BUG]  [BUGGY]  Validate.isTrue(f.getFunctionType()  ==  GoalType.SECTION);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Validate.isTrue(f.getFunctionType()  ==  GoalType.SECTION);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Validate.isTrue(f.getFunctionType()  ==  GoalType.SECTION);	  Validate.notEmpty(f);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
541	[BUG]  [BUGGY]  luate(f,  goalType,  min,  startValue,  getAbsoluteAccuracy()));  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  startValue,  getAbsoluteAccuracy()));  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  startValue,  getAbsoluteAccuracy()));	  luate(f,    goalType,    min,    max,    getAbsoluteAccuracy()));    	non-compiled	[CE]  ';'  expected	118	None	replace
542	[BUG]  [BUGGY]  luate(f,  GoalType.MINIMIZE,  min,  max,  getRelativeAccuracy()));  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  GoalType.MINIMIZE,  min,  max,  getRelativeAccuracy()));  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  GoalType.MINIMIZE,  min,  max,  getRelativeAccuracy()));	  luate(f,    goalType,    min,    max,    getAbsoluteAccuracy()));    	non-compiled	[CE]  ';'  expected	118	None	replace
543	[BUG]  [BUGGY]  if(f  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(f  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(f  ==  GoalType.MINIMIZE)  {  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy();    }    if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    else    {    getAbsoluteAccuracy());    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
544	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Float.doubleToLongBits(min  +  startValue));  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Float.doubleToLongBits(min  +  startValue));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Float.doubleToLongBits(min  +  startValue));	  f.setMaximumFractionDigits(Float.doubleToLongBits(startValue));    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
545	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  cleanResult();  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  cleanResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    >    GOLDEN_SECTION    ||    getAbsoluteAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  GOLDEN_SECTION)  {  cleanResult();  }	  	non-compiled	[CE]  cannot  find  symbol	133	None	add
546	[BUG]  [BUGGY]  final  GoalType  goalType  =  f.getOwnerObject();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  f.getOwnerObject();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  f.getOwnerObject();	  final    GoalType    goalType    =    f.getOwnerOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	49	None	replace
547	[BUG]  [BUGGY]  Validate.notNull(getRelativeAccuracy());  [CE]  cannot  find  symbol  Validate  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  Validate.notNull(getRelativeAccuracy());  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	Validate.notNull(getRelativeAccuracy());	  Validate.notNull(targetType);    	non-compiled	[CE]  cannot  find  symbol  Validate	100	None	replace
548	[BUG]  [BUGGY]  final  GoalType  goalType  =  f.getTarget();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  f.getTarget();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  f.getTarget();	  final    GoalType    goalType    =    f.getRealFunction();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	35	None	replace
549	[BUG]  [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(startValue,  max,  min));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setMaximumFractionDigits(Double.doubleToLongBits(startValue,  max,  min));  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setMaximumFractionDigits(Double.doubleToLongBits(startValue,  max,  min));	  f.setMaximumFractionDigits(Double.doubleToLongBits(startValue,    min,    max));    	non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	91	None	replace
550	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  getAbsoluteAccuracy(),  getAbsoluteAccuracy());  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  getAbsoluteAccuracy(),  getAbsoluteAccuracy());  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  getAbsoluteAccuracy(),  getAbsoluteAccuracy());  }	  	non-compiled	[CE]  ';'  expected	63	None	add
551	[BUG]  [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  getAbsoluteAccuracy(),  getAbsoluteAccuracy());  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  getAbsoluteAccuracy(),  getAbsoluteAccuracy());  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()        >        GOLDEN_SECTION)        {        clearResult();        }        if(getRelativeAccuracy()    >    GOLDEN_SECTION)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  getAbsoluteAccuracy(),  getAbsoluteAccuracy());  }	  	non-compiled	[CE]  ';'  expected	63	None	add
552	[BUG]  [BUGGY]  luate(f,  GoalType.MINIMIZE,  goalType,  min,  startValue,  max,  getRelativeAccuracy());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  GoalType.MINIMIZE,  goalType,  min,  startValue,  max,  getRelativeAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  GoalType.MINIMIZE,  goalType,  min,  startValue,  max,  getRelativeAccuracy());	  luate(f,    GoalType.MINIMIZE,    goalType,    min,    max,    getRelativeAccuracy());    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
553	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()    >    GOLDEN_SECTION    &&    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	131	4	add
554	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION  &&  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()    >    GOLDEN_SECTION    &&    getAbsoluteAccuracy()    >    max)    {    clearResult();    }    if(getRelativeAccuracy()  >  GOLDEN_SECTION  ||  getAbsoluteAccuracy()  >  max)  {  clearResult();  }	  	compilable	  [FE]  AssertionError  	131	4	add
555	[BUG]  [BUGGY]  final  GoalType  goalType  =  getRelativeOptimizer();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]            AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  getRelativeOptimizer();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  getRelativeOptimizer();	  final    GoalType    goalType    =    getOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	81	None	replace
556	[BUG]  [BUGGY]  final  GoalType  goalType  =  getOwnerOptimizer();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  getOwnerOptimizer();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  getOwnerOptimizer();	  final    GoalType    goalType    =    getOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	81	None	replace
557	[BUG]  [BUGGY]  final  GoalType  goalType  =  getLocale();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  final  GoalType  goalType  =  getLocale();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	final  GoalType  goalType  =  getLocale();	  final    GoalType    goalType    =    getOptimizer();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	81	None	replace
558	[BUG]  [BUGGY]  GoalType  goalType  =  f.getOwnerClass();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                  AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  f.getOwnerClass();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  f.getOwnerClass();	  GoalType    goalType    =    f.getOwner();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	78	None	replace
559	[BUG]  [BUGGY]  GoalType  goalType  =  f.getOwnerObject();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                    AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  f.getOwnerObject();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  f.getOwnerObject();	  GoalType    goalType    =    f.getOwner();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	78	None	replace
560	[BUG]  [BUGGY]  GoalType  goalType  =  f.getOwnerType();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]                      AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  GoalType  goalType  =  f.getOwnerType();  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	GoalType  goalType  =  f.getOwnerType();	  GoalType    goalType    =    f.getOwner();    	non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	78	None	replace
561	[BUG]  [BUGGY]  f.setOptimize(false,  startValue,  max);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  f.setOptimize(false,  startValue,  max);  [BUGGY]      clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	f.setOptimize(false,  startValue,  max);	  f.setOptimize(false,    startValue);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
562	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ",  f);  }  [CE]  no  suitable  constructor  found  for  MaxIterationsExceededException(String,UnivariateRealFunction)  [FE]              AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ",  f);  }  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ",  f);  }	  if(getRelativeAccuracy()    >    max)    {    clearResult();    }    else    {    throw    new    MaxIterationsExceededException(   "   ",    f);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  MaxIterationsExceededException(String,UnivariateRealFunction)	127	None	replace
563	[BUG]  [BUGGY]  luate(f,  goalType,  min,  max,  startValue,  getAbsoluteAccuracy());  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      [BUGGY]  luate(f,  goalType,  min,  max,  startValue,  getAbsoluteAccuracy());  [BUGGY]      return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	luate(f,  goalType,  min,  max,  startValue,  getAbsoluteAccuracy());	  luate(f,    goalType,    min,    max,    startValue);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
