bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    final  GoalType  goalType  =  goalType.getOptimizer();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]    AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    final  GoalType  goalType  =  goalType.getOptimizer();  [BUGGY]  clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	    final  GoalType  goalType  =  goalType.getOptimizer();		non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	24	None	add
2	[BUG]  [BUGGY]    final  GoalType  goalType  =  goalType.getRealFunction();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]      AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    final  GoalType  goalType  =  goalType.getRealFunction();  [BUGGY]  clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	    final  GoalType  goalType  =  goalType.getRealFunction();		non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	24	None	add
3	[BUG]  [BUGGY]    GoalType  goalType  =  goalType.getOptimizer();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]        AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    GoalType  goalType  =  goalType.getOptimizer();  [BUGGY]  clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	    GoalType  goalType  =  goalType.getOptimizer();		non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	24	None	add
4	[BUG]  [BUGGY]    GoalType  goalType  =  f.getOptimizer();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]          AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    GoalType  goalType  =  f.getOptimizer();  [BUGGY]  clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	    GoalType  goalType  =  f.getOptimizer();		non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	24	None	add
5	[BUG]  [BUGGY]    f.setOptimize(true);  [CE]  cannot  find  symbol  [FE]            AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    f.setOptimize(true);  [BUGGY]  clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	    f.setOptimize(true);		non-compiled	[CE]  cannot  find  symbol	24	None	add
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()  >  max)  {  clearResult();  }	clearResult();  	compilable	  [FE]  AssertionError  	23	4	replace
7	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  [BUGGY]  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  >  max)  {  clearResult();  }	clearResult();  	compilable	  [FE]  AssertionError  	23	4	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }	clearResult();  	compilable	  [FE]  AssertionError  	23	7	replace
9	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  IllegalArgumentException( " ");  }	clearResult();  	compilable	  [FE]  AssertionError  	23	7	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	clearResult();  	compilable	  [FE]  AssertionError  	23	4	replace
11	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  [BUGGY]  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }	clearResult();  	compilable	  [FE]  AssertionError  	23	4	replace
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }	clearResult();  	compilable	  [FE]  AssertionError  	23	7	replace
13	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  RuntimeException( " ");  }	clearResult();  	compilable	  [FE]  AssertionError  	23	7	replace
14	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  no  suitable  constructor  found  for  MaxIterationsExceededException(String)  [FE]    AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	clearResult();  	non-compiled	[CE]  no  suitable  constructor  found  for  MaxIterationsExceededException(String)	23	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	clearResult();  	compilable	  [FE]  AssertionError  	23	4	replace
16	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  >  max)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	clearResult();  	compilable	  [FE]  AssertionError  	23	4	replace
17	[BUG]  [BUGGY]    GoalType  goalType  =  goalType.getRealFunction();  [CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)  [FE]    AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    GoalType  goalType  =  goalType.getRealFunction();  [BUGGY]  clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	    GoalType  goalType  =  goalType.getRealFunction();		non-compiled	[CE]  variable  goalType  is  already  defined  in  method  optimize(UnivariateRealFunction,GoalType,double,double,double)	24	None	add
18	[BUG]  [BUGGY]    Validate.notNull(f);  [CE]  cannot  find  symbol  Validate  [FE]      AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    Validate.notNull(f);  [BUGGY]  clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	    Validate.notNull(f);		non-compiled	[CE]  cannot  find  symbol  Validate	24	None	add
19	[BUG]  [BUGGY]    f.setMaximumFractionDigits(Double.doubleToLongBits(min),  Double.doubleToLongBits(max));  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    f.setMaximumFractionDigits(Double.doubleToLongBits(min),  Double.doubleToLongBits(max));  [BUGGY]  clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	    f.setMaximumFractionDigits(Double.doubleToLongBits(min),  Double.doubleToLongBits(max));		non-compiled	[CE]  cannot  find  symbol	24	None	add
20	[BUG]  [BUGGY]    f.setMaximumFractionDigits(maximumFractionDigits);  [CE]  cannot  find  symbol  maximumFractionDigits  [FE]      AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    f.setMaximumFractionDigits(maximumFractionDigits);  [BUGGY]  clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	    f.setMaximumFractionDigits(maximumFractionDigits);		non-compiled	[CE]  cannot  find  symbol  maximumFractionDigits	24	None	add
21	[BUG]  [BUGGY]    f.setMaximumFractionDigits(getMinimumFractionDigits());  [CE]  cannot  find  symbol  [FE]        AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    f.setMaximumFractionDigits(getMinimumFractionDigits());  [BUGGY]  clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	    f.setMaximumFractionDigits(getMinimumFractionDigits());		non-compiled	[CE]  cannot  find  symbol	24	None	add
22	[BUG]  [BUGGY]    f.setMaximumFractionDigits(Double.doubleToLongBits(min));  [CE]  cannot  find  symbol  [FE]          AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    f.setMaximumFractionDigits(Double.doubleToLongBits(min));  [BUGGY]  clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	    f.setMaximumFractionDigits(Double.doubleToLongBits(min));		non-compiled	[CE]  cannot  find  symbol	24	None	add
23	[BUG]  [BUGGY]    f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max));  [CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;  [FE]            AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max));  [BUGGY]  clearResult();  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	    f.setMaximumFractionDigits(Double.doubleToLongBits(min,  max));		non-compiled	[CE]  method  doubleToLongBits  in  class  Double  cannot  be  applied  to  given  types;	24	None	add
24	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	clearResult();  	compilable	  [FE]  AssertionError  	23	4	replace
25	[BUG]  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  double  optimize(final  UnivariateRealFunction  f,  final  GoalType  goalType,  final  double  min,  final  double  max,  final  double  startValue)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }  [BUGGY]  return  localMin(getGoalType()  ==  GoalType.MINIMIZE,  f,  goalType,  min,  startValue,  max,  getRelativeAccuracy(),  getAbsoluteAccuracy());  }  [CLASS]  BrentOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  final  double  startValue  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  double  GOLDEN_SECTION  max  min  startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	if(getRelativeAccuracy()  >  GOLDEN_SECTION)  {  clearResult();  }  else  {  getAbsoluteAccuracy();  }	clearResult();  	compilable	  [FE]  AssertionError  	23	4	replace
