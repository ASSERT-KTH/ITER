bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  d  =  t;  [CE]  'else'  without  'if'  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  d  =  t;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	d  =  t;	      if(m    >    a)    {    if(b    >    a)    {    d    =    t;    }    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
2	[BUG]  [BUGGY]  if(u  <  =  m)  {  if(b  >  a)  {  d  =  t;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  <  =  m)  {  if(b  >  a)  {  d  =  t;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(u  <  =  m)  {  if(b  >  a)  {  d  =  t;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    t;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(t  >  a)  {  if(b  >  a)  {  d  =  t;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if(t  >  a)  {  if(b  >  a)  {  d  =  t;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    t;    }    	compilable	  [FE]  AssertionError  	19	5	replace
4	[BUG]  [BUGGY]  if(t  >  a)  {  if(b  >  a)  {  d  =  t;  }  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(t  >  a)  {  if(b  >  a)  {  d  =  t;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(t  >  a)  {  if(b  >  a)  {  d  =  t;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    t;    }    	compilable	  [FE]  AssertionError  	19	5	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  >  m)  {  if(b  >  a)  {  d  =  t;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if(u  >  m)  {  if(b  >  a)  {  d  =  t;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    t;    }    	compilable	  [FE]  AssertionError  	19	4	replace
6	[BUG]  [BUGGY]  if(u  >  m)  {  if(b  >  a)  {  d  =  t;  }  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  >  m)  {  if(b  >  a)  {  d  =  t;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(u  >  m)  {  if(b  >  a)  {  d  =  t;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    t;    }    	compilable	  [FE]  AssertionError  	19	4	replace
7	[BUG]  [BUGGY]  if  (u  <  =  m  ||  b  -  u  <  tol2)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  =  m  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  <  =  m  ||  b  -  u  <  tol2)  {	  if    (u    <    =    tol1    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
8	[BUG]  [BUGGY]  if  (u  <  =  m  ||  b  -  u  <  tol1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  =  m  ||  b  -  u  <  tol1)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  <  =  m  ||  b  -  u  <  tol1)  {	  if    (u    <    =    tol1    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol1  ||  b  -  u  >  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  <  tol1  ||  b  -  u  >  tol2)  {	  if    (u    <    =    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	14	5	replace
10	[BUG]  [BUGGY]  if  (u  <  tol1  ||  b  -  u  >  tol2)  {  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol1  ||  b  -  u  >  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  <  tol1  ||  b  -  u  >  tol2)  {	  if    (u    <    =    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	14	5	replace
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      d  =  p  /  q;  d  =  p  /  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        d    =    p    /    q;    d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	15	4	add
12	[BUG]  [BUGGY]      d  =  p  /  q;  d  =  p  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      d  =  p  /  q;  d  =  p  /  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        d    =    p    /    q;    d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	15	4	add
13	[BUG]  [BUGGY]      d  =  p  /  q;  d  =  p  /  q;  line  =  x  +  d;  [CE]  cannot  find  symbol  line  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      d  =  p  /  q;  d  =  p  /  q;  line  =  x  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        d    =    p    /    q;    d  =  p  /  q;  line  =  x  +  d;	  	non-compiled	[CE]  cannot  find  symbol  line	15	None	add
14	[BUG]  [BUGGY]      d  =  p  /  q;  d  =  p  /  q;  line  =  l  +  d;  [CE]  cannot  find  symbol  line  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      d  =  p  /  q;  d  =  p  /  q;  line  =  l  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        d    =    p    /    q;    d  =  p  /  q;  line  =  l  +  d;	  	non-compiled	[CE]  cannot  find  symbol  line	15	None	add
15	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      d  =  p  /  q;  d  =  p  %  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        d    =    p    /    q;    d  =  p  %  q;	  	compilable	timeout	15	1	add
16	[BUG]  [BUGGY]      d  =  p  /  q;  d  =  p  %  q;  timeout  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      d  =  p  /  q;  d  =  p  %  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        d    =    p    /    q;    d  =  p  %  q;	  	compilable	timeout	15	1	add
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      d  =  p  /  q;  d  =  p  /  q  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        d    =    p    /    q;    d  =  p  /  q  +  d;	  	compilable	  [FE]  AssertionError  	15	5	add
18	[BUG]  [BUGGY]      d  =  p  /  q;  d  =  p  /  q  +  d;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      d  =  p  /  q;  d  =  p  /  q  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        d    =    p    /    q;    d  =  p  /  q  +  d;	  	compilable	  [FE]  AssertionError  	15	5	add
19	[BUG]  [BUGGY]  u  =  m  +  x;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  m  +  x;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	u  =  m  +  x;	      u    =    x    +    m;    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
20	[BUG]  [BUGGY]  u  =  d  +  m;  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  d  +  m;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	u  =  d  +  m;	      u    =    x    +    m;    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
21	[BUG]  [BUGGY]  u  =  p  +  m;  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  p  +  m;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	u  =  p  +  m;	      u    =    x    +    m;    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
22	[BUG]  [BUGGY]  d  =  p  /  q;  u  =  r  +  d;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  d  =  p  /  q;  u  =  r  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	d  =  p  /  q;  u  =  r  +  d;	      d    =    p    /    q;    u    =    x    +    d;    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
23	[BUG]  [BUGGY]  d  =  p  *  q;  u  =  x  +  d;  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  d  =  p  *  q;  u  =  x  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	d  =  p  *  q;  u  =  x  +  d;	      d    =    p    /    q;    u    =    x    +    d;    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
24	[BUG]  [BUGGY]  d  =  p  /  q;  u  =  b  +  d;  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  d  =  p  /  q;  u  =  b  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	d  =  p  /  q;  u  =  b  +  d;	      d    =    p    /    q;    u    =    x    +    d;    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
25	[BUG]  [BUGGY]  u  =  p  /  q  +  1;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  p  /  q  +  1;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	u  =  p  /  q  +  1;	      u    =    p    /    q;    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
26	[BUG]  [BUGGY]  u  =  p  *  q;  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  p  *  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	u  =  p  *  q;	      u    =    p    /    q;    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
27	[BUG]  [BUGGY]  u  =  p  /  r;  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  p  /  r;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	u  =  p  /  r;	      u    =    p    /    q;    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
28	[BUG]  [BUGGY]  u  =  p  /  q  +  2;  [CE]  'else'  without  'if'  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  p  /  q  +  2;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	u  =  p  /  q  +  2;	      u    =    p    /    q;    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  d  =  p  /  q;  u  =  x  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        d    =    p    /    q;    u    =    x    +    d;    d  =  p  /  q;  u  =  x  +  d;	  	compilable	  [FE]  AssertionError  	17	4	add
30	[BUG]  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  d  =  p  /  q;  u  =  x  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  d  =  p  /  q;  u  =  x  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        d    =    p    /    q;    u    =    x    +    d;    d  =  p  /  q;  u  =  x  +  d;	  	compilable	  [FE]  AssertionError  	17	4	add
31	[BUG]  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  d  =  p  /  q;  u  =  y  +  d;  [CE]  cannot  find  symbol  y  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  d  =  p  /  q;  u  =  y  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        d    =    p    /    q;    u    =    x    +    d;    d  =  p  /  q;  u  =  y  +  d;	  	non-compiled	[CE]  cannot  find  symbol  y	17	None	add
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  u  =  p  /  q;  u  =  x  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        d    =    p    /    q;    u    =    x    +    d;    u  =  p  /  q;  u  =  x  +  d;	  	compilable	  [FE]  AssertionError  	17	4	add
33	[BUG]  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  u  =  p  /  q;  u  =  x  +  d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  u  =  p  /  q;  u  =  x  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        d    =    p    /    q;    u    =    x    +    d;    u  =  p  /  q;  u  =  x  +  d;	  	compilable	  [FE]  AssertionError  	17	4	add
34	[BUG]  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  d  =  p  /  q;  u  =  l  +  d;  [CE]  cannot  find  symbol  l  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  d  =  p  /  q;  u  =  l  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        d    =    p    /    q;    u    =    x    +    d;    d  =  p  /  q;  u  =  l  +  d;	  	non-compiled	[CE]  cannot  find  symbol  l	17	None	add
35	[BUG]  [BUGGY]  u  =  p  +  d;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  p  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	u  =  p  +  d;	      u    =    m    +    d;    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol1  ||  b  >  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  <  tol1  ||  b  >  tol2)  {	  if    (u    -    u    <    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	32	5	replace
37	[BUG]  [BUGGY]  if  (u  <  tol1  ||  b  >  tol2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol1  ||  b  >  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  <  tol1  ||  b  >  tol2)  {	  if    (u    -    u    <    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	32	5	replace
38	[BUG]  [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  a  <  tol1  ||  b  -  u  <  tol2)  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  a  <  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    a    <    tol1    ||    b    -    u    <    tol2)    {    if  (u  -  a  <  tol1  ||  b  -  u  <  tol2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	add
39	[BUG]  [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  <  tol2)  {  If  (u  -  a  <  tol1  ||  b  -  u  <  tol2)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  <  tol2)  {  If  (u  -  a  <  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    a    <    tol1    ||    b    -    u    <    tol2)    {    If  (u  -  a  <  tol1  ||  b  -  u  <  tol2)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
40	[BUG]  [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  a  <  tol1  ||  b  -  u  >=  tol2)  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  a  <  tol1  ||  b  -  u  >=  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    a    <    tol1    ||    b    -    u    <    tol2)    {    if  (u  -  a  <  tol1  ||  b  -  u  >=  tol2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	add
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  m  +  d;  u  =  m  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        u    =    m    +    d;    u  =  m  +  d;	  	compilable	  [FE]  AssertionError  	1	4	add
42	[BUG]  [BUGGY]      u  =  m  +  d;  u  =  m  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  m  +  d;  u  =  m  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    m    +    d;    u  =  m  +  d;	  	compilable	  [FE]  AssertionError  	1	4	add
43	[BUG]  [BUGGY]      u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    m    +    d;    u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
44	[BUG]  [BUGGY]      u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    m    +    d;    u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
45	[BUG]  [BUGGY]      u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    m    +    d;    u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is	  	non-compiled	[CE]  ';'  expected	1	None	add
46	[BUG]  [BUGGY]      u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMaximum  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMaximum  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    m    +    d;    u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMaximum	  	non-compiled	[CE]  ';'  expected	1	None	add
47	[BUG]  [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  >=  tol2)  {  if  (u  -  u  >=  tol1  ||  b  -  u  >=  tol2)  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  >=  tol2)  {  if  (u  -  u  >=  tol1  ||  b  -  u  >=  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    u    >=    tol1    ||    b    -    u    >=    tol2)    {    if  (u  -  u  >=  tol1  ||  b  -  u  >=  tol2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	add
48	[BUG]  [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  >=  tol2)  {  if  (u  -  u!=  tol1  ||  b  -  u  >=  tol2)  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  >=  tol2)  {  if  (u  -  u!=  tol1  ||  b  -  u  >=  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    u    >=    tol1    ||    b    -    u    >=    tol2)    {    if  (u  -  u!=  tol1  ||  b  -  u  >=  tol2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	add
49	[BUG]  [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  >=  tol2)  {  if  (u  -  u  >=  tol1  ||  b  -  u  >>  tol2)  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  >=  tol2)  {  if  (u  -  u  >=  tol1  ||  b  -  u  >>  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    u    >=    tol1    ||    b    -    u    >=    tol2)    {    if  (u  -  u  >=  tol1  ||  b  -  u  >>  tol2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	add
50	[BUG]  [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  >=  tol2)  {  if  (u  -  u  >>  tol1  ||  b  -  u  >=  tol2)  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  >=  tol2)  {  if  (u  -  u  >>  tol1  ||  b  -  u  >=  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    u    >=    tol1    ||    b    -    u    >=    tol2)    {    if  (u  -  u  >>  tol1  ||  b  -  u  >=  tol2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	add
51	[BUG]  [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  >=  tol2)  {  if  (u  -  u  >=  tol1  ||  b  -  u!=  tol2)  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  >=  tol2)  {  if  (u  -  u  >=  tol1  ||  b  -  u!=  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    u    >=    tol1    ||    b    -    u    >=    tol2)    {    if  (u  -  u  >=  tol1  ||  b  -  u!=  tol2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	add
52	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol1  ||  u  >  GOLDEN_SECTION  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  <  tol1  ||  u  >  GOLDEN_SECTION  ||  b  -  u  <  tol2)  {	  if    (u    <    tol1    ||    u    >    tol2    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	13	5	replace
53	[BUG]  [BUGGY]  if  (u  <  tol1  ||  u  >  GOLDEN_SECTION  ||  b  -  u  <  tol2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol1  ||  u  >  GOLDEN_SECTION  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  <  tol1  ||  u  >  GOLDEN_SECTION  ||  b  -  u  <  tol2)  {	  if    (u    <    tol1    ||    u    >    tol2    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	13	5	replace
54	[BUG]  [BUGGY]  if  (u  <  =  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  =  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  <  =  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {	  if    (u    <    tol1    ||    u    >    tol2    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol1  ||  u  >  GOLDEN_SECTION  ||  b  -  u  >=  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  <  tol1  ||  u  >  GOLDEN_SECTION  ||  b  -  u  >=  tol2)  {	  if    (u    <    tol1    ||    u    >    tol2    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	13	5	replace
56	[BUG]  [BUGGY]  if  (u  <  tol1  ||  u  >  GOLDEN_SECTION  ||  b  -  u  >=  tol2)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol1  ||  u  >  GOLDEN_SECTION  ||  b  -  u  >=  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  <  tol1  ||  u  >  GOLDEN_SECTION  ||  b  -  u  >=  tol2)  {	  if    (u    <    tol1    ||    u    >    tol2    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	13	5	replace
57	[BUG]  [BUGGY]  if  (u  <  tol1  ||  u  >  GOLDEN_SECTION  ||  b  -  u  <  =  tol2)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol1  ||  u  >  GOLDEN_SECTION  ||  b  -  u  <  =  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  <  tol1  ||  u  >  GOLDEN_SECTION  ||  b  -  u  <  =  tol2)  {	  if    (u    <    tol1    ||    u    >    tol2    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
58	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      if(m  >  a)  {  throw  new  IllegalArgumentException(   "   ");  }  if(m  >  a)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        if(m    >    a)    {    throw    new    IllegalArgumentException(   "   ");    }    if(m  >  a)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	9	6	add
59	[BUG]  [BUGGY]      if(m  >  a)  {  throw  new  IllegalArgumentException(   "   ");  }  if(m  >  a)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      if(m  >  a)  {  throw  new  IllegalArgumentException(   "   ");  }  if(m  >  a)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        if(m    >    a)    {    throw    new    IllegalArgumentException(   "   ");    }    if(m  >  a)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	9	6	add
60	[BUG]  [BUGGY]      if(m  >  a)  {  throw  new  IllegalArgumentException(   "   ");  }  If(m  >  a)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  [FE]      IllegalArgumentException    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      if(m  >  a)  {  throw  new  IllegalArgumentException(   "   ");  }  If(m  >  a)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        if(m    >    a)    {    throw    new    IllegalArgumentException(   "   ");    }    If(m  >  a)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  	9	None	add
61	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  x  +  m;  u  =  x  +  m;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        u    =    x    +    m;    u  =  x  +  m;	  	compilable	  [FE]  AssertionError  	7	5	add
62	[BUG]  [BUGGY]      u  =  x  +  m;  u  =  x  +  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  x  +  m;  u  =  x  +  m;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    x    +    m;    u  =  x  +  m;	  	compilable	  [FE]  AssertionError  	7	5	add
63	[BUG]  [BUGGY]      u  =  x  +  m;  u  =  x  +  m);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  x  +  m;  u  =  x  +  m);  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    x    +    m;    u  =  x  +  m);	  	non-compiled	[CE]  ';'  expected	7	None	add
64	[BUG]  [BUGGY]      u  =  x  +  m;  u  =  y  +  m;  [CE]  cannot  find  symbol  y  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  x  +  m;  u  =  y  +  m;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    x    +    m;    u  =  y  +  m;	  	non-compiled	[CE]  cannot  find  symbol  y	7	None	add
65	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  x  +  m;  u  =  m  +  m;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        u    =    x    +    m;    u  =  m  +  m;	  	compilable	  [FE]  AssertionError  	7	5	add
66	[BUG]  [BUGGY]      u  =  x  +  m;  u  =  m  +  m;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  x  +  m;  u  =  m  +  m;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    x    +    m;    u  =  m  +  m;	  	compilable	  [FE]  AssertionError  	7	5	add
67	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  x  +  m;  u  =  a  +  m;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        u    =    x    +    m;    u  =  a  +  m;	  	compilable	  [FE]  AssertionError  	7	5	add
68	[BUG]  [BUGGY]      u  =  x  +  m;  u  =  a  +  m;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  x  +  m;  u  =  a  +  m;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    x    +    m;    u  =  a  +  m;	  	compilable	  [FE]  AssertionError  	7	5	add
69	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      b  =  p  /  q;  b  =  p  /  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        b    =    p    /    q;    b  =  p  /  q;	  	compilable	  [FE]  AssertionError  	33	6	add
70	[BUG]  [BUGGY]      b  =  p  /  q;  b  =  p  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      b  =  p  /  q;  b  =  p  /  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        b    =    p    /    q;    b  =  p  /  q;	  	compilable	  [FE]  AssertionError  	33	6	add
71	[BUG]  [BUGGY]      b  =  p  /  q;  int  b  =  p  /  q;  [CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      b  =  p  /  q;  int  b  =  p  /  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        b    =    p    /    q;    int  b  =  p  /  q;	  	non-compiled	[CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	33	None	add
72	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      b  =  p  /  q;  b  =  p  %  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        b    =    p    /    q;    b  =  p  %  q;	  	compilable	  [FE]  AssertionError  	33	6	add
73	[BUG]  [BUGGY]      b  =  p  /  q;  b  =  p  %  q;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      b  =  p  /  q;  b  =  p  %  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        b    =    p    /    q;    b  =  p  %  q;	  	compilable	  [FE]  AssertionError  	33	6	add
74	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      b  =  p  /  q;  b  =  p  -  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        b    =    p    /    q;    b  =  p  -  q;	  	compilable	  [FE]  AssertionError  	33	6	add
75	[BUG]  [BUGGY]      b  =  p  /  q;  b  =  p  -  q;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      b  =  p  /  q;  b  =  p  -  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        b    =    p    /    q;    b  =  p  -  q;	  	compilable	  [FE]  AssertionError  	33	6	add
76	[BUG]  [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  <  tol1)  {  if  (u  -  a  <  tol1  ||  b  -  u  <  tol1)  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  <  tol1)  {  if  (u  -  a  <  tol1  ||  b  -  u  <  tol1)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    a    <    tol1    ||    b    -    u    <    tol1)    {    if  (u  -  a  <  tol1  ||  b  -  u  <  tol1)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	25	None	add
77	[BUG]  [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  <  tol1)  {  if  (u  -  a  <  tol1  ||  b  -  u  <  tol2)  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  <  tol1)  {  if  (u  -  a  <  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    a    <    tol1    ||    b    -    u    <    tol1)    {    if  (u  -  a  <  tol1  ||  b  -  u  <  tol2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	25	None	add
78	[BUG]  [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  <  tol1)  {  If  (u  -  a  <  tol1  ||  b  -  u  <  tol1)  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  <  tol1)  {  If  (u  -  a  <  tol1  ||  b  -  u  <  tol1)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    a    <    tol1    ||    b    -    u    <    tol1)    {    If  (u  -  a  <  tol1  ||  b  -  u  <  tol1)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
79	[BUG]  [BUGGY]  b  =  p  /  q  +  1;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  b  =  p  /  q  +  1;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	b  =  p  /  q  +  1;	      b    =    p    /    q;    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
80	[BUG]  [BUGGY]  b  =  p  /  r;  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  b  =  p  /  r;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	b  =  p  /  r;	      b    =    p    /    q;    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
81	[BUG]  [BUGGY]  b  =  p  *  q;  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  b  =  p  *  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	b  =  p  *  q;	      b    =    p    /    q;    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
82	[BUG]  [BUGGY]  b  =  p  /  q  +  2;  [CE]  'else'  without  'if'  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  b  =  p  /  q  +  2;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	b  =  p  /  q  +  2;	      b    =    p    /    q;    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
83	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  >  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  -  u  >  tol1  ||  b  -  u  <  tol2)  {	  if    (u    -    u    >=    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	30	4	replace
84	[BUG]  [BUGGY]  if  (u  -  u  >  tol1  ||  b  -  u  <  tol2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  >  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  u  >  tol1  ||  b  -  u  <  tol2)  {	  if    (u    -    u    >=    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	30	4	replace
85	[BUG]  [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  <  =  tol2)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  <  =  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  u  >=  tol1  ||  b  -  u  <  =  tol2)  {	  if    (u    -    u    >=    tol1    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
86	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  >  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  >  tol1  ||  b  -  u  <  tol2)  {	  if    (u    -    u    >=    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	30	4	replace
87	[BUG]  [BUGGY]  if  (u  >  tol1  ||  b  -  u  <  tol2)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  >  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  >  tol1  ||  b  -  u  <  tol2)  {	  if    (u    -    u    >=    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	30	4	replace
88	[BUG]  [BUGGY]  if  (u  <  =  tol1  ||  b  -  u  <  tol1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  =  tol1  ||  b  -  u  <  tol1)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  <  =  tol1  ||  b  -  u  <  tol1)  {	  if    (u    -    a    <    tol1    ||    b    -    u    <    tol1)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
89	[BUG]  [BUGGY]  if  (u  <  =  m  ||  a  >  tol1  ||  b  -  u  <  tol1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  =  m  ||  a  >  tol1  ||  b  -  u  <  tol1)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  <  =  m  ||  a  >  tol1  ||  b  -  u  <  tol1)  {	  if    (u    -    a    <    tol1    ||    b    -    u    <    tol1)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
90	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  x  +  d;  u  =  x  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        u    =    x    +    d;    u  =  x  +  d;	  	compilable	  [FE]  AssertionError  	3	4	add
91	[BUG]  [BUGGY]      u  =  x  +  d;  u  =  x  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  x  +  d;  u  =  x  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    x    +    d;    u  =  x  +  d;	  	compilable	  [FE]  AssertionError  	3	4	add
92	[BUG]  [BUGGY]      u  =  x  +  d;  u  =  y  +  d;  [CE]  cannot  find  symbol  y  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  x  +  d;  u  =  y  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    x    +    d;    u  =  y  +  d;	  	non-compiled	[CE]  cannot  find  symbol  y	3	None	add
93	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  x  +  d;  u  =  a  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        u    =    x    +    d;    u  =  a  +  d;	  	compilable	  [FE]  AssertionError  	3	5	add
94	[BUG]  [BUGGY]      u  =  x  +  d;  u  =  a  +  d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  x  +  d;  u  =  a  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    x    +    d;    u  =  a  +  d;	  	compilable	  [FE]  AssertionError  	3	5	add
95	[BUG]  [BUGGY]      u  =  x  +  d;  u  =  x  +  d);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  x  +  d;  u  =  x  +  d);  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    x    +    d;    u  =  x  +  d);	  	non-compiled	[CE]  ';'  expected	3	None	add
96	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  x  +  d;  u  =  d  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        u    =    x    +    d;    u  =  d  +  d;	  	compilable	  [FE]  AssertionError  	3	5	add
97	[BUG]  [BUGGY]      u  =  x  +  d;  u  =  d  +  d;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  x  +  d;  u  =  d  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    x    +    d;    u  =  d  +  d;	  	compilable	  [FE]  AssertionError  	3	5	add
98	[BUG]  [BUGGY]  b  =  b;  [CE]  'else'  without  'if'  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  b  =  b;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	b  =  b;	      if(m    >    a)    {    if(b    >    a)    {    b    =    b;    }    	non-compiled	[CE]  'else'  without  'if'	20	None	replace
99	[BUG]  [BUGGY]  if(u  <  =  m)  {  if(b  >  a)  {  b  =  b;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  <  =  m)  {  if(b  >  a)  {  b  =  b;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(u  <  =  m)  {  if(b  >  a)  {  b  =  b;  }	      if(m    >    a)    {    if(b    >    a)    {    b    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
100	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  >  m)  {  if(b  >  a)  {  b  =  b;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if(u  >  m)  {  if(b  >  a)  {  b  =  b;  }	      if(m    >    a)    {    if(b    >    a)    {    b    =    b;    }    	compilable	  [FE]  AssertionError  	20	4	replace
101	[BUG]  [BUGGY]  if(u  >  m)  {  if(b  >  a)  {  b  =  b;  }  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  >  m)  {  if(b  >  a)  {  b  =  b;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(u  >  m)  {  if(b  >  a)  {  b  =  b;  }	      if(m    >    a)    {    if(b    >    a)    {    b    =    b;    }    	compilable	  [FE]  AssertionError  	20	4	replace
102	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(m  >  a)  {  if(b  <  a)  {  b  =  b;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if(m  >  a)  {  if(b  <  a)  {  b  =  b;  }	      if(m    >    a)    {    if(b    >    a)    {    b    =    b;    }    	compilable	  [FE]  AssertionError  	20	5	replace
103	[BUG]  [BUGGY]  if(m  >  a)  {  if(b  <  a)  {  b  =  b;  }  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(m  >  a)  {  if(b  <  a)  {  b  =  b;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(m  >  a)  {  if(b  <  a)  {  b  =  b;  }	      if(m    >    a)    {    if(b    >    a)    {    b    =    b;    }    	compilable	  [FE]  AssertionError  	20	5	replace
104	[BUG]  [BUGGY]  d  =  d;  [CE]  'else'  without  'if'  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  d  =  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	d  =  d;	      if(m    >    a)    {    if(b    >    a)    {    d    =    d;    }    	non-compiled	[CE]  'else'  without  'if'	36	None	replace
105	[BUG]  [BUGGY]  if(u  <  =  m)  {  if(b  >  a)  {  d  =  d;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  <  =  m)  {  if(b  >  a)  {  d  =  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(u  <  =  m)  {  if(b  >  a)  {  d  =  d;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    d;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
106	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  >  m)  {  if(b  >  a)  {  d  =  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if(u  >  m)  {  if(b  >  a)  {  d  =  d;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    d;    }    	compilable	  [FE]  AssertionError  	36	4	replace
107	[BUG]  [BUGGY]  if(u  >  m)  {  if(b  >  a)  {  d  =  d;  }  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  >  m)  {  if(b  >  a)  {  d  =  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(u  >  m)  {  if(b  >  a)  {  d  =  d;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    d;    }    	compilable	  [FE]  AssertionError  	36	4	replace
108	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  ==  m)  {  if(b  >  a)  {  d  =  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if(u  ==  m)  {  if(b  >  a)  {  d  =  d;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    d;    }    	compilable	  [FE]  AssertionError  	36	4	replace
109	[BUG]  [BUGGY]  if(u  ==  m)  {  if(b  >  a)  {  d  =  d;  }  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  ==  m)  {  if(b  >  a)  {  d  =  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(u  ==  m)  {  if(b  >  a)  {  d  =  d;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    d;    }    	compilable	  [FE]  AssertionError  	36	4	replace
110	[BUG]  [BUGGY]  if  (u  -  a  >  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  a  >  tol1  ||  b  -  u  <  tol2)  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  a  >  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  a  >  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    a    >    tol1    ||    b    -    u    <    tol2)    {    if  (u  -  a  >  tol1  ||  b  -  u  <  tol2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	27	None	add
111	[BUG]  [BUGGY]  if  (u  -  a  >  tol1  ||  b  -  u  <  tol2)  {  If  (u  -  a  >  tol1  ||  b  -  u  <  tol2)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  a  >  tol1  ||  b  -  u  <  tol2)  {  If  (u  -  a  >  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    a    >    tol1    ||    b    -    u    <    tol2)    {    If  (u  -  a  >  tol1  ||  b  -  u  <  tol2)  {	  	non-compiled	[CE]  ';'  expected	27	None	add
112	[BUG]  [BUGGY]  if  (u  -  a  >  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  a  >  tol1  ||  b  -  u  >=  tol2)  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  a  >  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  a  >  tol1  ||  b  -  u  >=  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    a    >    tol1    ||    b    -    u    <    tol2)    {    if  (u  -  a  >  tol1  ||  b  -  u  >=  tol2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	27	None	add
113	[BUG]  [BUGGY]  if  (u  -  a  >  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  a  >  TOL1  ||  b  -  u  <  tol2)  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  a  >  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  a  >  TOL1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    a    >    tol1    ||    b    -    u    <    tol2)    {    if  (u  -  a  >  TOL1  ||  b  -  u  <  tol2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	27	None	add
114	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  >  tol1  ||  b  -  u  >=  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  -  u  >  tol1  ||  b  -  u  >=  tol2)  {	  if    (u    -    u    >=    tol1    ||    b    -    u    >=    tol2)    {    	compilable	  [FE]  AssertionError  	24	5	replace
115	[BUG]  [BUGGY]  if  (u  -  u  >  tol1  ||  b  -  u  >=  tol2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  >  tol1  ||  b  -  u  >=  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  u  >  tol1  ||  b  -  u  >=  tol2)  {	  if    (u    -    u    >=    tol1    ||    b    -    u    >=    tol2)    {    	compilable	  [FE]  AssertionError  	24	5	replace
116	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  >  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  -  u  >=  tol1  ||  b  -  u  >  tol2)  {	  if    (u    -    u    >=    tol1    ||    b    -    u    >=    tol2)    {    	compilable	  [FE]  AssertionError  	24	5	replace
117	[BUG]  [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  >  tol2)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  >  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  u  >=  tol1  ||  b  -  u  >  tol2)  {	  if    (u    -    u    >=    tol1    ||    b    -    u    >=    tol2)    {    	compilable	  [FE]  AssertionError  	24	5	replace
118	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  <  tol1  ||  b  -  u  >=  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  -  u  <  tol1  ||  b  -  u  >=  tol2)  {	  if    (u    -    u    >=    tol1    ||    b    -    u    >=    tol2)    {    	compilable	  [FE]  AssertionError  	24	5	replace
119	[BUG]  [BUGGY]  if  (u  -  u  <  tol1  ||  b  -  u  >=  tol2)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  <  tol1  ||  b  -  u  >=  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  u  <  tol1  ||  b  -  u  >=  tol2)  {	  if    (u    -    u    >=    tol1    ||    b    -    u    >=    tol2)    {    	compilable	  [FE]  AssertionError  	24	5	replace
120	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  p  /  q;  u  =  p  /  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        u    =    p    /    q;    u  =  p  /  q;	  	compilable	  [FE]  AssertionError  	37	5	add
121	[BUG]  [BUGGY]      u  =  p  /  q;  u  =  p  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  p  /  q;  u  =  p  /  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    p    /    q;    u  =  p  /  q;	  	compilable	  [FE]  AssertionError  	37	5	add
122	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  p  /  q;  u  =  p  %  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        u    =    p    /    q;    u  =  p  %  q;	  	compilable	  [FE]  AssertionError  	37	5	add
123	[BUG]  [BUGGY]      u  =  p  /  q;  u  =  p  %  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  p  /  q;  u  =  p  %  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    p    /    q;    u  =  p  %  q;	  	compilable	  [FE]  AssertionError  	37	5	add
124	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  p  /  q;  u  =  p  -  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        u    =    p    /    q;    u  =  p  -  q;	  	compilable	  [FE]  AssertionError  	37	5	add
125	[BUG]  [BUGGY]      u  =  p  /  q;  u  =  p  -  q;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  p  /  q;  u  =  p  -  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    p    /    q;    u  =  p  -  q;	  	compilable	  [FE]  AssertionError  	37	5	add
126	[BUG]  [BUGGY]      u  =  p  /  q;  u  =  p  3/  q;  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  p  /  q;  u  =  p  3/  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    p    /    q;    u  =  p  3/  q;	  	non-compiled	[CE]  ';'  expected	37	None	add
127	[BUG]  [BUGGY]      u  =  p  /  q;  u  =  p  /  q);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  p  /  q;  u  =  p  /  q);  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    p    /    q;    u  =  p  /  q);	  	non-compiled	[CE]  ';'  expected	37	None	add
128	[BUG]  [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    u    >=    tol1    ||    b    -    u    <    tol2)    {    if  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	add
129	[BUG]  [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  u!=  tol1  ||  b  -  u  <  tol2)  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  u!=  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    u    >=    tol1    ||    b    -    u    <    tol2)    {    if  (u  -  u!=  tol1  ||  b  -  u  <  tol2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	add
130	[BUG]  [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  u  >>  tol1  ||  b  -  u  <  tol2)  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  u  >>  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    u    >=    tol1    ||    b    -    u    <    tol2)    {    if  (u  -  u  >>  tol1  ||  b  -  u  <  tol2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	add
131	[BUG]  [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  u  ==  tol1  ||  b  -  u  <  tol2)  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  u  ==  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    u    >=    tol1    ||    b    -    u    <    tol2)    {    if  (u  -  u  ==  tol1  ||  b  -  u  <  tol2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	add
132	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  r  +  d;  u  =  r  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        u    =    r    +    d;    u  =  r  +  d;	  	compilable	  [FE]  AssertionError  	5	5	add
133	[BUG]  [BUGGY]      u  =  r  +  d;  u  =  r  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  r  +  d;  u  =  r  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    r    +    d;    u  =  r  +  d;	  	compilable	  [FE]  AssertionError  	5	5	add
134	[BUG]  [BUGGY]      u  =  r  +  d;  u  =  r  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  r  +  d;  u  =  r  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    r    +    d;    u  =  r  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
135	[BUG]  [BUGGY]      u  =  r  +  d;  u  =  r  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  r  +  d;  u  =  r  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    r    +    d;    u  =  r  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
136	[BUG]  [BUGGY]      u  =  r  +  d;  u  =  r  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  r  +  d;  u  =  r  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    r    +    d;    u  =  r  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is	  	non-compiled	[CE]  ';'  expected	5	None	add
137	[BUG]  [BUGGY]      u  =  r  +  d;  u  =  r  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMaximum  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  r  +  d;  u  =  r  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMaximum  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    r    +    d;    u  =  r  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMaximum	  	non-compiled	[CE]  ';'  expected	5	None	add
138	[BUG]  [BUGGY]  u  =  d  +  r;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  d  +  r;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	u  =  d  +  r;	      u    =    r    +    d;    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
139	[BUG]  [BUGGY]  u  =  y  +  d;  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  y  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	u  =  y  +  d;	      u    =    r    +    d;    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
140	[BUG]  [BUGGY]  if  (x  <  =  m)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (x  <  =  m)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (x  <  =  m)  {	  if    (u    <    =    m)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
141	[BUG]  [BUGGY]  if  (u  <  =  tol1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  =  tol1)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  <  =  tol1)  {	  if    (u    <    =    m)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
142	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  <  tol2)  {	  if    (u    <    =    m)    {    	compilable	  [FE]  AssertionError  	11	5	replace
143	[BUG]  [BUGGY]  if  (u  <  tol2)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  <  tol2)  {	  if    (u    <    =    m)    {    	compilable	  [FE]  AssertionError  	11	5	replace
144	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol1)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  <  tol1)  {	  if    (u    <    =    m)    {    	compilable	  [FE]  AssertionError  	11	5	replace
145	[BUG]  [BUGGY]  if  (u  <  tol1)  {  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol1)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  <  tol1)  {	  if    (u    <    =    m)    {    	compilable	  [FE]  AssertionError  	11	5	replace
146	[BUG]  [BUGGY]  if  (u  <  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {  if  (u  <  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {  if  (u  <  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    <    tol1    ||    u    >    tol2    ||    b    -    u    <    tol2)    {    if  (u  <  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	12	None	add
147	[BUG]  [BUGGY]  if  (u  <  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {  if  (u  >=  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {  if  (u  >=  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    <    tol1    ||    u    >    tol2    ||    b    -    u    <    tol2)    {    if  (u  >=  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	12	None	add
148	[BUG]  [BUGGY]  if  (u  <  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {  if  (u  <  tol1  ||  u  >  tol2)  ||  b  -  u  <  tol2)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {  if  (u  <  tol1  ||  u  >  tol2)  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    <    tol1    ||    u    >    tol2    ||    b    -    u    <    tol2)    {    if  (u  <  tol1  ||  u  >  tol2)  ||  b  -  u  <  tol2)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
149	[BUG]  [BUGGY]  if  (u  <  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {  If  (u  <  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {  If  (u  <  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    <    tol1    ||    u    >    tol2    ||    b    -    u    <    tol2)    {    If  (u  <  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
150	[BUG]  [BUGGY]  u  =  d  +  x;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  d  +  x;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	u  =  d  +  x;	      u    =    x    +    d;    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
151	[BUG]  [BUGGY]  d  =  p  /  q  +  1;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  d  =  p  /  q  +  1;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	d  =  p  /  q  +  1;	      d    =    p    /    q;    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
152	[BUG]  [BUGGY]  d  =  p  /  r;  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  d  =  p  /  r;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	d  =  p  /  r;	      d    =    p    /    q;    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
153	[BUG]  [BUGGY]  d  =  p  /  q  +  2;  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  d  =  p  /  q  +  2;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	d  =  p  /  q  +  2;	      d    =    p    /    q;    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
154	[BUG]  [BUGGY]  bucket  <  =  m)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  bucket  <  =  m)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	bucket  <  =  m)  {  throw  new  IllegalArgumentException( " ");  }	      if(m    >    a)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
155	[BUG]  [BUGGY]  bucket  <  m)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  >  expected  [FE]      IllegalArgumentException    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  bucket  <  m)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	bucket  <  m)  {  throw  new  IllegalArgumentException( " ");  }	      if(m    >    a)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	10	None	replace
156	[BUG]  [BUGGY]  bucket  <  =  a)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  bucket  <  =  a)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	bucket  <  =  a)  {  throw  new  IllegalArgumentException( " ");  }	      if(m    >    a)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
157	[BUG]  [BUGGY]  mutation(m)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          IllegalArgumentException    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  mutation(m)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	mutation(m)  {  throw  new  IllegalArgumentException( " ");  }	      if(m    >    a)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	10	None	replace
158	[BUG]  [BUGGY]  if  (u  >  tol1  ||  b  -  u  <  =  tol2)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  >  tol1  ||  b  -  u  <  =  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  >  tol1  ||  b  -  u  <  =  tol2)  {	  if    (u    -    a    >    tol1    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
159	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  >  tol1  ||  b  -  u  >=  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  >  tol1  ||  b  -  u  >=  tol2)  {	  if    (u    -    a    >    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	28	5	replace
160	[BUG]  [BUGGY]  if  (u  >  tol1  ||  b  -  u  >=  tol2)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  >  tol1  ||  b  -  u  >=  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  >  tol1  ||  b  -  u  >=  tol2)  {	  if    (u    -    a    >    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	28	5	replace
161	[BUG]  [BUGGY]  if  (u  -  u  <  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  u  <  tol1  ||  b  -  u  <  tol2)  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  <  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  u  <  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    u    <    tol1    ||    b    -    u    <    tol2)    {    if  (u  -  u  <  tol1  ||  b  -  u  <  tol2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	31	None	add
162	[BUG]  [BUGGY]  if  (u  -  u  <  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  u  <  tol1  ||  b  -  u  >=  tol2)  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  <  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  u  <  tol1  ||  b  -  u  >=  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    u    <    tol1    ||    b    -    u    <    tol2)    {    if  (u  -  u  <  tol1  ||  b  -  u  >=  tol2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	31	None	add
163	[BUG]  [BUGGY]  if  (u  -  u  <  tol1  ||  b  -  u  <  tol2)  {  If  (u  -  u  <  tol1  ||  b  -  u  <  tol2)  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  <  tol1  ||  b  -  u  <  tol2)  {  If  (u  -  u  <  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    u    <    tol1    ||    b    -    u    <    tol2)    {    If  (u  -  u  <  tol1  ||  b  -  u  <  tol2)  {	  	non-compiled	[CE]  ';'  expected	31	None	add
164	[BUG]  [BUGGY]  if  (u  -  u  <  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  <  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    u    <    tol1    ||    b    -    u    <    tol2)    {    if  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	31	None	add
165	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol1  ||  b  >  tol2  ||  u  >  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  <  tol1  ||  b  >  tol2  ||  u  >  tol2)  {	  if    (u    -    a    <    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	22	5	replace
166	[BUG]  [BUGGY]  if  (u  <  tol1  ||  b  >  tol2  ||  u  >  tol2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol1  ||  b  >  tol2  ||  u  >  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  <  tol1  ||  b  >  tol2  ||  u  >  tol2)  {	  if    (u    -    a    <    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	22	5	replace
167	[BUG]  [BUGGY]  if(u  <  =  m)  {  if(b  >  a)  {  return  d;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  <  =  m)  {  if(b  >  a)  {  return  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(u  <  =  m)  {  if(b  >  a)  {  return  d;  }	      if(m    >    a)    {    if(b    >    a)    {    return    d;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
168	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  >  m)  {  if(b  >  a)  {  return  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if(u  >  m)  {  if(b  >  a)  {  return  d;  }	      if(m    >    a)    {    if(b    >    a)    {    return    d;    }    	compilable	  [FE]  AssertionError  	35	6	replace
169	[BUG]  [BUGGY]  if(u  >  m)  {  if(b  >  a)  {  return  d;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  >  m)  {  if(b  >  a)  {  return  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(u  >  m)  {  if(b  >  a)  {  return  d;  }	      if(m    >    a)    {    if(b    >    a)    {    return    d;    }    	compilable	  [FE]  AssertionError  	35	6	replace
170	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  ==  m)  {  if(b  >  a)  {  return  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if(u  ==  m)  {  if(b  >  a)  {  return  d;  }	      if(m    >    a)    {    if(b    >    a)    {    return    d;    }    	compilable	  [FE]  AssertionError  	35	6	replace
171	[BUG]  [BUGGY]  if(u  ==  m)  {  if(b  >  a)  {  return  d;  }  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  ==  m)  {  if(b  >  a)  {  return  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(u  ==  m)  {  if(b  >  a)  {  return  d;  }	      if(m    >    a)    {    if(b    >    a)    {    return    d;    }    	compilable	  [FE]  AssertionError  	35	6	replace
172	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  >  a)  {  if(b  >  a)  {  return  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if(u  >  a)  {  if(b  >  a)  {  return  d;  }	      if(m    >    a)    {    if(b    >    a)    {    return    d;    }    	compilable	  [FE]  AssertionError  	35	6	replace
173	[BUG]  [BUGGY]  if(u  >  a)  {  if(b  >  a)  {  return  d;  }  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  >  a)  {  if(b  >  a)  {  return  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(u  >  a)  {  if(b  >  a)  {  return  d;  }	      if(m    >    a)    {    if(b    >    a)    {    return    d;    }    	compilable	  [FE]  AssertionError  	35	6	replace
174	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  >  tol1)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  >  tol1)  {	  if    (u    <    =    m)    {    	compilable	  [FE]  AssertionError  	11	4	replace
175	[BUG]  [BUGGY]  if  (u  >  tol1)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  >  tol1)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  >  tol1)  {	  if    (u    <    =    m)    {    	compilable	  [FE]  AssertionError  	11	4	replace
176	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  >  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  >  tol2)  {	  if    (u    <    =    m)    {    	compilable	  [FE]  AssertionError  	11	4	replace
177	[BUG]  [BUGGY]  if  (u  >  tol2)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  >  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  >  tol2)  {	  if    (u    <    =    m)    {    	compilable	  [FE]  AssertionError  	11	4	replace
178	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  >=  m)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  >=  m)  {	  if    (u    <    =    m)    {    	compilable	  [FE]  AssertionError  	11	4	replace
179	[BUG]  [BUGGY]  if  (u  >=  m)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  >=  m)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  >=  m)  {	  if    (u    <    =    m)    {    	compilable	  [FE]  AssertionError  	11	4	replace
180	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  r  =  p  /  q;  u  =  x  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        d    =    p    /    q;    u    =    x    +    d;    r  =  p  /  q;  u  =  x  +  d;	  	compilable	  [FE]  AssertionError  	17	4	add
181	[BUG]  [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  r  =  p  /  q;  u  =  x  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      d  =  p  /  q;  u  =  x  +  d;  r  =  p  /  q;  u  =  x  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        d    =    p    /    q;    u    =    x    +    d;    r  =  p  /  q;  u  =  x  +  d;	  	compilable	  [FE]  AssertionError  	17	4	add
182	[BUG]  [BUGGY]  d  =  p  /  q  +  d;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  d  =  p  /  q  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	d  =  p  /  q  +  d;	      d    =    p    /    q;    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
183	[BUG]  [BUGGY]  d  =  p  /  q  +  r;  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  d  =  p  /  q  +  r;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	d  =  p  /  q  +  r;	      d    =    p    /    q;    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
184	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol1  ||  u  >  GOLDEN_SECTION  ||  b  -  u  >  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  <  tol1  ||  u  >  GOLDEN_SECTION  ||  b  -  u  >  tol2)  {	  if    (u    <    tol1    ||    u    >    tol2    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	13	5	replace
185	[BUG]  [BUGGY]  if  (u  <  tol1  ||  u  >  GOLDEN_SECTION  ||  b  -  u  >  tol2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol1  ||  u  >  GOLDEN_SECTION  ||  b  -  u  >  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  <  tol1  ||  u  >  GOLDEN_SECTION  ||  b  -  u  >  tol2)  {	  if    (u    <    tol1    ||    u    >    tol2    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	13	5	replace
186	[BUG]  [BUGGY]  if(m  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'else'  without  'if'  [FE]    IllegalArgumentException    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(m  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(m  >  0)  {  throw  new  IllegalArgumentException( " ");  }	      if(m    >    a)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
187	[BUG]  [BUGGY]  parent!=  null  &&  m  >  a)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]      IllegalArgumentException    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  parent!=  null  &&  m  >  a)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	parent!=  null  &&  m  >  a)  {  throw  new  IllegalArgumentException( " ");  }	      if(m    >    a)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	10	None	replace
188	[BUG]  [BUGGY]  parent!=  null  &&  m  <  =  a)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  parent!=  null  &&  m  <  =  a)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	parent!=  null  &&  m  <  =  a)  {  throw  new  IllegalArgumentException( " ");  }	      if(m    >    a)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
189	[BUG]  [BUGGY]  u  =  q  +  d;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  q  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	u  =  q  +  d;	      u    =    m    +    d;    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
190	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  >=  m)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  -  u  >=  tol1  ||  b  -  u  >=  m)  {	  if    (u    -    u    >=    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	30	5	replace
191	[BUG]  [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  >=  m)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  >=  m)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  u  >=  tol1  ||  b  -  u  >=  m)  {	  if    (u    -    u    >=    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	30	5	replace
192	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  ==  tol1  ||  b  -  u  >=  m)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  -  u  ==  tol1  ||  b  -  u  >=  m)  {	  if    (u    -    u    >=    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	30	5	replace
193	[BUG]  [BUGGY]  if  (u  -  u  ==  tol1  ||  b  -  u  >=  m)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  ==  tol1  ||  b  -  u  >=  m)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  u  ==  tol1  ||  b  -  u  >=  m)  {	  if    (u    -    u    >=    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	30	5	replace
194	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  m  >  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  -  m  >  tol1  ||  b  -  u  <  tol2)  {	  if    (u    -    a    >    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	28	4	replace
195	[BUG]  [BUGGY]  if  (u  -  m  >  tol1  ||  b  -  u  <  tol2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  m  >  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  m  >  tol1  ||  b  -  u  <  tol2)  {	  if    (u    -    a    >    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	28	4	replace
196	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  tol1  >=  tol2  ||  b  -  u  <  tol1)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  -  tol1  >=  tol2  ||  b  -  u  <  tol1)  {	  if    (u    -    a    >    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	28	4	replace
197	[BUG]  [BUGGY]  if  (u  -  tol1  >=  tol2  ||  b  -  u  <  tol1)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  tol1  >=  tol2  ||  b  -  u  <  tol1)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  tol1  >=  tol2  ||  b  -  u  <  tol1)  {	  if    (u    -    a    >    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	28	4	replace
198	[BUG]  [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {  If  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {  If  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    u    >=    tol1    ||    b    -    u    <    tol2)    {    If  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
199	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(m  >  a)  {  if(b  >  a)  {  d  =  tol1;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if(m  >  a)  {  if(b  >  a)  {  d  =  tol1;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    d;    }    	compilable	  [FE]  AssertionError  	36	5	replace
200	[BUG]  [BUGGY]  if(m  >  a)  {  if(b  >  a)  {  d  =  tol1;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(m  >  a)  {  if(b  >  a)  {  d  =  tol1;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(m  >  a)  {  if(b  >  a)  {  d  =  tol1;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    d;    }    	compilable	  [FE]  AssertionError  	36	5	replace
201	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  >  m)  {  if(b  >  a)  {  d  =  tol1;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if(u  >  m)  {  if(b  >  a)  {  d  =  tol1;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    d;    }    	compilable	  [FE]  AssertionError  	36	4	replace
202	[BUG]  [BUGGY]  if(u  >  m)  {  if(b  >  a)  {  d  =  tol1;  }  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  >  m)  {  if(b  >  a)  {  d  =  tol1;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(u  >  m)  {  if(b  >  a)  {  d  =  tol1;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    d;    }    	compilable	  [FE]  AssertionError  	36	4	replace
203	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      b  =  p  /  q;  b  =  p  /  q  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        b    =    p    /    q;    b  =  p  /  q  +  d;	  	compilable	  [FE]  AssertionError  	33	6	add
204	[BUG]  [BUGGY]      b  =  p  /  q;  b  =  p  /  q  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      b  =  p  /  q;  b  =  p  /  q  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        b    =    p    /    q;    b  =  p  /  q  +  d;	  	compilable	  [FE]  AssertionError  	33	6	add
205	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  >  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  -  a  <  tol1  ||  b  -  u  >  tol2)  {	  if    (u    -    a    <    tol1    ||    b    -    u    <    tol1)    {    	compilable	  [FE]  AssertionError  	26	5	replace
206	[BUG]  [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  >  tol2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  >  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  a  <  tol1  ||  b  -  u  >  tol2)  {	  if    (u    -    a    <    tol1    ||    b    -    u    <    tol1)    {    	compilable	  [FE]  AssertionError  	26	5	replace
207	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  a  <  tol2  ||  b  -  u  <  tol1)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  -  a  <  tol2  ||  b  -  u  <  tol1)  {	  if    (u    -    a    <    tol1    ||    b    -    u    <    tol1)    {    	compilable	  [FE]  AssertionError  	26	4	replace
208	[BUG]  [BUGGY]  if  (u  -  a  <  tol2  ||  b  -  u  <  tol1)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  a  <  tol2  ||  b  -  u  <  tol1)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  a  <  tol2  ||  b  -  u  <  tol1)  {	  if    (u    -    a    <    tol1    ||    b    -    u    <    tol1)    {    	compilable	  [FE]  AssertionError  	26	4	replace
209	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  a  >  tol1  ||  b  -  u  <  tol1)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  -  a  >  tol1  ||  b  -  u  <  tol1)  {	  if    (u    -    a    <    tol1    ||    b    -    u    <    tol1)    {    	compilable	  [FE]  AssertionError  	26	5	replace
210	[BUG]  [BUGGY]  if  (u  -  a  >  tol1  ||  b  -  u  <  tol1)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  a  >  tol1  ||  b  -  u  <  tol1)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  a  >  tol1  ||  b  -  u  <  tol1)  {	  if    (u    -    a    <    tol1    ||    b    -    u    <    tol1)    {    	compilable	  [FE]  AssertionError  	26	5	replace
211	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      if(m  >  a)  {  throw  new  IllegalArgumentException(   "   ");  }  if(m  <  a)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        if(m    >    a)    {    throw    new    IllegalArgumentException(   "   ");    }    if(m  <  a)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	9	6	add
212	[BUG]  [BUGGY]      if(m  >  a)  {  throw  new  IllegalArgumentException(   "   ");  }  if(m  <  a)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      if(m  >  a)  {  throw  new  IllegalArgumentException(   "   ");  }  if(m  <  a)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        if(m    >    a)    {    throw    new    IllegalArgumentException(   "   ");    }    if(m  <  a)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	9	6	add
213	[BUG]  [BUGGY]  b  =  p  /  q  +  d;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  b  =  p  /  q  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	b  =  p  /  q  +  d;	      b    =    p    /    q;    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
214	[BUG]  [BUGGY]  b  =  p  /  q  +  r;  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  b  =  p  /  q  +  r;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	b  =  p  /  q  +  r;	      b    =    p    /    q;    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
215	[BUG]  [BUGGY]      u  =  r  +  d;  int  u  =  r  +  d;  [CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  r  +  d;  int  u  =  r  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    r    +    d;    int  u  =  r  +  d;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	5	None	add
216	[BUG]  [BUGGY]      u  =  r  +  d;  (  u  =  r  +  d;  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  r  +  d;  (  u  =  r  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    r    +    d;    (  u  =  r  +  d;	  	non-compiled	[CE]  ')'  expected	5	None	add
217	[BUG]  [BUGGY]      u  =  r  +  d;  u  =  r  +  d);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  r  +  d;  u  =  r  +  d);  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    r    +    d;    u  =  r  +  d);	  	non-compiled	[CE]  ';'  expected	5	None	add
218	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  r  +  d;  r  =  r  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        u    =    r    +    d;    r  =  r  +  d;	  	compilable	  [FE]  AssertionError  	5	5	add
219	[BUG]  [BUGGY]      u  =  r  +  d;  r  =  r  +  d;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  r  +  d;  r  =  r  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    r    +    d;    r  =  r  +  d;	  	compilable	  [FE]  AssertionError  	5	5	add
220	[BUG]  [BUGGY]  u  =  r  *  d;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  r  *  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	u  =  r  *  d;	      u    =    r    +    d;    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
221	[BUG]  [BUGGY]      u  =  m  +  d;  int  u  =  m  +  d;  [CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  m  +  d;  int  u  =  m  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    m    +    d;    int  u  =  m  +  d;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	1	None	add
222	[BUG]  [BUGGY]      u  =  m  +  d;  u  =  m  +  d);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  m  +  d;  u  =  m  +  d);  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    m    +    d;    u  =  m  +  d);	  	non-compiled	[CE]  ';'  expected	1	None	add
223	[BUG]  [BUGGY]      u  =  m  +  d;  (u  =  m  +  d;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  m  +  d;  (u  =  m  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    m    +    d;    (u  =  m  +  d;	  	non-compiled	[CE]  ')'  expected	1	None	add
224	[BUG]  [BUGGY]      u  =  m  +  d;  U  =  m  +  d;  [CE]  cannot  find  symbol  U  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  m  +  d;  U  =  m  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    m    +    d;    U  =  m  +  d;	  	non-compiled	[CE]  cannot  find  symbol  U	1	None	add
225	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      d  =  p  /  q;  r  =  p  /  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        d    =    p    /    q;    r  =  p  /  q;	  	compilable	  [FE]  AssertionError  	15	4	add
226	[BUG]  [BUGGY]      d  =  p  /  q;  r  =  p  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      d  =  p  /  q;  r  =  p  /  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        d    =    p    /    q;    r  =  p  /  q;	  	compilable	  [FE]  AssertionError  	15	4	add
227	[BUG]  [BUGGY]  u  =  p  /  q  +  d;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  p  /  q  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	u  =  p  /  q  +  d;	      u    =    p    /    q;    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
228	[BUG]  [BUGGY]  u  =  p  /  q  +  r;  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  p  /  q  +  r;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	u  =  p  /  q  +  r;	      u    =    p    /    q;    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
229	[BUG]  [BUGGY]  d  =  p  /  q  *  r;  u  =  x  +  d;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  d  =  p  /  q  *  r;  u  =  x  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	d  =  p  /  q  *  r;  u  =  x  +  d;	      d    =    p    /    q;    u    =    x    +    d;    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
230	[BUG]  [BUGGY]  d  =  p  /  q;  u  =  x  +  r;  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  d  =  p  /  q;  u  =  x  +  r;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	d  =  p  /  q;  u  =  x  +  r;	      d    =    p    /    q;    u    =    x    +    d;    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
231	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  <  tol1  ||  b  -  u  >  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  -  u  <  tol1  ||  b  -  u  >  tol2)  {	  if    (u    -    u    <    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	32	5	replace
232	[BUG]  [BUGGY]  if  (u  -  u  <  tol1  ||  b  -  u  >  tol2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  <  tol1  ||  b  -  u  >  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  u  <  tol1  ||  b  -  u  >  tol2)  {	  if    (u    -    u    <    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	32	5	replace
233	[BUG]  [BUGGY]  if  (u  -  u  <  =  tol1  ||  b  -  u  <  tol2)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  <  =  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  u  <  =  tol1  ||  b  -  u  <  tol2)  {	  if    (u    -    u    <    tol1    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
234	[BUG]  [BUGGY]  if  (u  <  =  tol1  ||  b  -  u  >  tol2)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  =  tol1  ||  b  -  u  >  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  <  =  tol1  ||  b  -  u  >  tol2)  {	  if    (u    <    =    tol1    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
235	[BUG]  [BUGGY]  if  (u  <  =  tol1  &&  b  -  u  <  tol2)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  =  tol1  &&  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  <  =  tol1  &&  b  -  u  <  tol2)  {	  if    (u    <    =    tol1    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
236	[BUG]  [BUGGY]      u  =  x  +  d;  U  =  x  +  d;  [CE]  cannot  find  symbol  U  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  x  +  d;  U  =  x  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    x    +    d;    U  =  x  +  d;	  	non-compiled	[CE]  cannot  find  symbol  U	3	None	add
237	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(t  >  a)  {  if(b  >  a)  {  d  =  tol1;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if(t  >  a)  {  if(b  >  a)  {  d  =  tol1;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    t;    }    	compilable	  [FE]  AssertionError  	19	5	replace
238	[BUG]  [BUGGY]  if(t  >  a)  {  if(b  >  a)  {  d  =  tol1;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(t  >  a)  {  if(b  >  a)  {  d  =  tol1;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(t  >  a)  {  if(b  >  a)  {  d  =  tol1;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    t;    }    	compilable	  [FE]  AssertionError  	19	5	replace
239	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(m  >  0)  {  if(b  >  0)  {  d  =  t;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if(m  >  0)  {  if(b  >  0)  {  d  =  t;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    t;    }    	compilable	  [FE]  AssertionError  	19	4	replace
240	[BUG]  [BUGGY]  if(m  >  0)  {  if(b  >  0)  {  d  =  t;  }  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(m  >  0)  {  if(b  >  0)  {  d  =  t;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(m  >  0)  {  if(b  >  0)  {  d  =  t;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    t;    }    	compilable	  [FE]  AssertionError  	19	4	replace
241	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  >  a)  {  if(b  >  a)  {  b  =  b;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if(u  >  a)  {  if(b  >  a)  {  b  =  b;  }	      if(m    >    a)    {    if(b    >    a)    {    b    =    b;    }    	compilable	  [FE]  AssertionError  	20	5	replace
242	[BUG]  [BUGGY]  if(u  >  a)  {  if(b  >  a)  {  b  =  b;  }  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  >  a)  {  if(b  >  a)  {  b  =  b;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(u  >  a)  {  if(b  >  a)  {  b  =  b;  }	      if(m    >    a)    {    if(b    >    a)    {    b    =    b;    }    	compilable	  [FE]  AssertionError  	20	5	replace
243	[BUG]  [BUGGY]  if  (u  -  a  <  =  tol1  ||  b  -  u  <  tol2)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  a  <  =  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  a  <  =  tol1  ||  b  -  u  <  tol2)  {	  if    (u    -    a    <    tol1    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
244	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  m  <  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  -  m  <  tol1  ||  b  -  u  <  tol2)  {	  if    (u    -    a    <    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	22	5	replace
245	[BUG]  [BUGGY]  if  (u  -  m  <  tol1  ||  b  -  u  <  tol2)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  m  <  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  m  <  tol1  ||  b  -  u  <  tol2)  {	  if    (u    -    a    <    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	22	5	replace
246	[BUG]  [BUGGY]      u  =  p  /  q;  int  u  =  p  /  q;  [CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  p  /  q;  int  u  =  p  /  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    p    /    q;    int  u  =  p  /  q;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	37	None	add
247	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  p  /  q;  u  =  p  *  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        u    =    p    /    q;    u  =  p  *  q;	  	compilable	  [FE]  AssertionError  	37	5	add
248	[BUG]  [BUGGY]      u  =  p  /  q;  u  =  p  *  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  p  /  q;  u  =  p  *  q;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    p    /    q;    u  =  p  *  q;	  	compilable	  [FE]  AssertionError  	37	5	add
249	[BUG]  [BUGGY]  u  =  q  +  m;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  q  +  m;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	u  =  q  +  m;	      u    =    x    +    m;    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
250	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (a  -  u  <  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (a  -  u  <  tol1  ||  b  -  u  <  tol2)  {	  if    (u    -    a    <    tol1    ||    b    -    u    <    tol1)    {    	compilable	  [FE]  AssertionError  	26	5	replace
251	[BUG]  [BUGGY]  if  (a  -  u  <  tol1  ||  b  -  u  <  tol2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (a  -  u  <  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (a  -  u  <  tol1  ||  b  -  u  <  tol2)  {	  if    (u    -    a    <    tol1    ||    b    -    u    <    tol1)    {    	compilable	  [FE]  AssertionError  	26	5	replace
252	[BUG]  [BUGGY]  u  =  w  +  m;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  w  +  m;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	u  =  w  +  m;	      u    =    x    +    m;    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
253	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(a  >  m)  {  if(b  >  a)  {  b  =  b;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if(a  >  m)  {  if(b  >  a)  {  b  =  b;  }	      if(m    >    a)    {    if(b    >    a)    {    b    =    b;    }    	compilable	  [FE]  AssertionError  	20	4	replace
254	[BUG]  [BUGGY]  if(a  >  m)  {  if(b  >  a)  {  b  =  b;  }  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(a  >  m)  {  if(b  >  a)  {  b  =  b;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(a  >  m)  {  if(b  >  a)  {  b  =  b;  }	      if(m    >    a)    {    if(b    >    a)    {    b    =    b;    }    	compilable	  [FE]  AssertionError  	20	4	replace
255	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(b  <  a)  {  if(m  >  a)  {  b  =  b;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if(b  <  a)  {  if(m  >  a)  {  b  =  b;  }	      if(m    >    a)    {    if(b    >    a)    {    b    =    b;    }    	compilable	  [FE]  AssertionError  	20	4	replace
256	[BUG]  [BUGGY]  if(b  <  a)  {  if(m  >  a)  {  b  =  b;  }  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(b  <  a)  {  if(m  >  a)  {  b  =  b;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(b  <  a)  {  if(m  >  a)  {  b  =  b;  }	      if(m    >    a)    {    if(b    >    a)    {    b    =    b;    }    	compilable	  [FE]  AssertionError  	20	4	replace
257	[BUG]  [BUGGY]  if(b  >  a)  {  b  =  b;  }  [CE]  'else'  without  'if'  [FE]                  AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(b  >  a)  {  b  =  b;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(b  >  a)  {  b  =  b;  }	      if(m    >    a)    {    if(b    >    a)    {    b    =    b;    }    	non-compiled	[CE]  'else'  without  'if'	20	None	replace
258	[BUG]  [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  a  <  tol1)  ||  b  -  u  <  tol2)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  <  tol2)  {  if  (u  -  a  <  tol1)  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if    (u    -    a    <    tol1    ||    b    -    u    <    tol2)    {    if  (u  -  a  <  tol1)  ||  b  -  u  <  tol2)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
259	[BUG]  [BUGGY]  u  =  w  +  d;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  w  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	u  =  w  +  d;	      u    =    x    +    d;    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
260	[BUG]  [BUGGY]  b  =  p  /  d;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  b  =  p  /  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	b  =  p  /  d;	      b    =    p    /    q;    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
261	[BUG]  [BUGGY]      u  =  r  +  d;  u  =  r  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  r  +  d;  u  =  r  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    r    +    d;    u  =  r  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  	non-compiled	[CE]  ';'  expected	5	None	add
262	[BUG]  [BUGGY]      u  =  r  +  d;  u  =  r  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  >  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  r  +  d;  u  =  r  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  >  m)  {  d  =  tol1;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    r    +    d;    u  =  r  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  >  m)  {  d  =  tol1;  }	  	non-compiled	[CE]  ';'  expected	5	None	add
263	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(d  >  a)  {  if(b  >  a)  {  return  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if(d  >  a)  {  if(b  >  a)  {  return  d;  }	      if(m    >    a)    {    if(b    >    a)    {    return    d;    }    	compilable	  [FE]  AssertionError  	35	5	replace
264	[BUG]  [BUGGY]  if(d  >  a)  {  if(b  >  a)  {  return  d;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(d  >  a)  {  if(b  >  a)  {  return  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(d  >  a)  {  if(b  >  a)  {  return  d;  }	      if(m    >    a)    {    if(b    >    a)    {    return    d;    }    	compilable	  [FE]  AssertionError  	35	5	replace
265	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(a  >  m)  {  if(b  >  a)  {  return  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if(a  >  m)  {  if(b  >  a)  {  return  d;  }	      if(m    >    a)    {    if(b    >    a)    {    return    d;    }    	compilable	  [FE]  AssertionError  	35	4	replace
266	[BUG]  [BUGGY]  if(a  >  m)  {  if(b  >  a)  {  return  d;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(a  >  m)  {  if(b  >  a)  {  return  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(a  >  m)  {  if(b  >  a)  {  return  d;  }	      if(m    >    a)    {    if(b    >    a)    {    return    d;    }    	compilable	  [FE]  AssertionError  	35	4	replace
267	[BUG]  [BUGGY]  if(b  >  a)  {  return  d;  }  [CE]  'else'  without  'if'  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(b  >  a)  {  return  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(b  >  a)  {  return  d;  }	      if(m    >    a)    {    if(b    >    a)    {    return    d;    }    	non-compiled	[CE]  'else'  without  'if'	35	None	replace
268	[BUG]  [BUGGY]      b  =  p  /  q;  b  =  p  /  q;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim)  {  if(x  <  =  m)  {  d  =  tol1  +  d;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      b  =  p  /  q;  b  =  p  /  q;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim)  {  if(x  <  =  m)  {  d  =  tol1  +  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        b    =    p    /    q;    b  =  p  /  q;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim)  {  if(x  <  =  m)  {  d  =  tol1  +  d;  }	  	non-compiled	[CE]  ';'  expected	33	None	add
269	[BUG]  [BUGGY]      b  =  p  /  q;  b  =  p  /  q;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim)  {  if(x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      b  =  p  /  q;  b  =  p  /  q;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim)  {  if(x  <  =  m)  {  d  =  tol1;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        b    =    p    /    q;    b  =  p  /  q;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim)  {  if(x  <  =  m)  {  d  =  tol1;  }	  	non-compiled	[CE]  ';'  expected	33	None	add
270	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(d  >  a)  {  if(b  >  a)  {  d  =  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if(d  >  a)  {  if(b  >  a)  {  d  =  d;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    d;    }    	compilable	  [FE]  AssertionError  	36	5	replace
271	[BUG]  [BUGGY]  if(d  >  a)  {  if(b  >  a)  {  d  =  d;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(d  >  a)  {  if(b  >  a)  {  d  =  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(d  >  a)  {  if(b  >  a)  {  d  =  d;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    d;    }    	compilable	  [FE]  AssertionError  	36	5	replace
272	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(a  >  m)  {  if(b  >  a)  {  d  =  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if(a  >  m)  {  if(b  >  a)  {  d  =  d;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    d;    }    	compilable	  [FE]  AssertionError  	36	4	replace
273	[BUG]  [BUGGY]  if(a  >  m)  {  if(b  >  a)  {  d  =  d;  }  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(a  >  m)  {  if(b  >  a)  {  d  =  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(a  >  m)  {  if(b  >  a)  {  d  =  d;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    d;    }    	compilable	  [FE]  AssertionError  	36	4	replace
274	[BUG]  [BUGGY]  if(d  <  =  m)  {  if(b  >  a)  {  d  =  d;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(d  <  =  m)  {  if(b  >  a)  {  d  =  d;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(d  <  =  m)  {  if(b  >  a)  {  d  =  d;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    d;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
275	[BUG]  [BUGGY]      u  =  p  /  q;  u  =  p  /  q;  this.isMinimum  =  isMinim;  [CE]  cannot  find  symbol  isMinimum  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  p  /  q;  u  =  p  /  q;  this.isMinimum  =  isMinim;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    p    /    q;    u  =  p  /  q;  this.isMinimum  =  isMinim;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	37	None	add
276	[BUG]  [BUGGY]      u  =  p  /  q;  u  =  p  /  q;  this.isMinimum  =  true;  [CE]  cannot  find  symbol  isMinimum  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  p  /  q;  u  =  p  /  q;  this.isMinimum  =  true;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    p    /    q;    u  =  p  /  q;  this.isMinimum  =  true;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	37	None	add
277	[BUG]  [BUGGY]      u  =  p  /  q;  u  =  p  /  q;  this.isMinimum  =  isMinim);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  p  /  q;  u  =  p  /  q;  this.isMinimum  =  isMinim);  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    p    /    q;    u  =  p  /  q;  this.isMinimum  =  isMinim);	  	non-compiled	[CE]  ';'  expected	37	None	add
278	[BUG]  [BUGGY]      u  =  p  /  q;  u  =  p  /  q;  this.isMinimum  =  false;  [CE]  cannot  find  symbol  isMinimum  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  p  /  q;  u  =  p  /  q;  this.isMinimum  =  false;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    p    /    q;    u  =  p  /  q;  this.isMinimum  =  false;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	37	None	add
279	[BUG]  [BUGGY]  d  =  p  /  q  *  r;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  d  =  p  /  q  *  r;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	d  =  p  /  q  *  r;	      d    =    p    /    q;    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
280	[BUG]  [BUGGY]  if(m  >  d)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'else'  without  'if'  [FE]    IllegalArgumentException    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(m  >  d)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(m  >  d)  {  throw  new  IllegalArgumentException( " ");  }	      if(m    >    a)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
281	[BUG]  [BUGGY]  if(d  >  a)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'else'  without  'if'  [FE]      IllegalArgumentException    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(d  >  a)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(d  >  a)  {  throw  new  IllegalArgumentException( " ");  }	      if(m    >    a)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
282	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  x  +  m;  u  =  p  +  m;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        u    =    x    +    m;    u  =  p  +  m;	  	compilable	  [FE]  AssertionError  	7	4	add
283	[BUG]  [BUGGY]      u  =  x  +  m;  u  =  p  +  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  x  +  m;  u  =  p  +  m;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    x    +    m;    u  =  p  +  m;	  	compilable	  [FE]  AssertionError  	7	4	add
284	[BUG]  [BUGGY]      u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    m    +    d;    u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  	non-compiled	[CE]  ';'  expected	1	None	add
285	[BUG]  [BUGGY]      u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    m    +    d;    u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  	non-compiled	[CE]  ';'  expected	1	None	add
286	[BUG]  [BUGGY]      u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol2;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol2;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    m    +    d;    u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol2;  }	  	non-compiled	[CE]  ';'  expected	1	None	add
287	[BUG]  [BUGGY]  d  =  p  /  q;  u  =  x  *  d;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  d  =  p  /  q;  u  =  x  *  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	d  =  p  /  q;  u  =  x  *  d;	      d    =    p    /    q;    u    =    x    +    d;    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
288	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (a  -  u  >  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (a  -  u  >  tol1  ||  b  -  u  <  tol2)  {	  if    (u    -    a    >    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	28	4	replace
289	[BUG]  [BUGGY]  if  (a  -  u  >  tol1  ||  b  -  u  <  tol2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (a  -  u  >  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (a  -  u  >  tol1  ||  b  -  u  <  tol2)  {	  if    (u    -    a    >    tol1    ||    b    -    u    <    tol2)    {    	compilable	  [FE]  AssertionError  	28	4	replace
290	[BUG]  [BUGGY]  if  (u  -  u  >  tol1  ||  b  -  u  <  =  tol2)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  u  >  tol1  ||  b  -  u  <  =  tol2)  {  [BUGGY]    ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  u  >  tol1  ||  b  -  u  <  =  tol2)  {	  if    (u    -    a    >    tol1    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
291	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(a  >  m)  {  if(b  >  a)  {  d  =  t;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if(a  >  m)  {  if(b  >  a)  {  d  =  t;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    t;    }    	compilable	  [FE]  AssertionError  	19	4	replace
292	[BUG]  [BUGGY]  if(a  >  m)  {  if(b  >  a)  {  d  =  t;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(a  >  m)  {  if(b  >  a)  {  d  =  t;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(a  >  m)  {  if(b  >  a)  {  d  =  t;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    t;    }    	compilable	  [FE]  AssertionError  	19	4	replace
293	[BUG]  [BUGGY]  if(b  >  a)  {  d  =  t;  }  [CE]  'else'  without  'if'  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(b  >  a)  {  d  =  t;  }  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if(b  >  a)  {  d  =  t;  }	      if(m    >    a)    {    if(b    >    a)    {    d    =    t;    }    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
294	[BUG]  [BUGGY]  u  =  p  /  q  *  r;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  p  /  q  *  r;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	u  =  p  /  q  *  r;	      u    =    p    /    q;    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
295	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  x  +  d;  u  =  p  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	        u    =    x    +    d;    u  =  p  +  d;	  	compilable	  [FE]  AssertionError  	3	5	add
296	[BUG]  [BUGGY]      u  =  x  +  d;  u  =  p  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      u  =  x  +  d;  u  =  p  +  d;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        u    =    x    +    d;    u  =  p  +  d;	  	compilable	  [FE]  AssertionError  	3	5	add
297	[BUG]  [BUGGY]      d  =  p  /  q;  d  =  p  /  q;  this.isMinimum  =  isMinim;  [CE]  cannot  find  symbol  isMinimum  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      d  =  p  /  q;  d  =  p  /  q;  this.isMinimum  =  isMinim;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        d    =    p    /    q;    d  =  p  /  q;  this.isMinimum  =  isMinim;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	15	None	add
298	[BUG]  [BUGGY]      d  =  p  /  q;  d  =  p  /  q;  this.isMinimum  =  isMinim);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      d  =  p  /  q;  d  =  p  /  q;  this.isMinimum  =  isMinim);  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        d    =    p    /    q;    d  =  p  /  q;  this.isMinimum  =  isMinim);	  	non-compiled	[CE]  ';'  expected	15	None	add
299	[BUG]  [BUGGY]      d  =  p  /  q;  d  =  p  /  q;  this.isMinimum  =  true;  [CE]  cannot  find  symbol  isMinimum  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]      d  =  p  /  q;  d  =  p  /  q;  this.isMinimum  =  true;  [BUGGY]    if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	        d    =    p    /    q;    d  =  p  /  q;  this.isMinimum  =  true;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	15	None	add
