bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    u  =  m  +  d;  [BUGGY]  if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	    u  =  m  +  d;		compilable	  [FE]  AssertionError  	6	4	add
2	[BUG]  [BUGGY]    u  =  m  +  d;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    u  =  m  +  d;  [BUGGY]  if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	    u  =  m  +  d;		compilable	  [FE]  AssertionError  	6	4	add
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    u  =  x  +  d;  [BUGGY]  if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	    u  =  x  +  d;		compilable	  [FE]  AssertionError  	6	4	add
4	[BUG]  [BUGGY]    u  =  x  +  d;  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    u  =  x  +  d;  [BUGGY]  if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	    u  =  x  +  d;		compilable	  [FE]  AssertionError  	6	4	add
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    u  =  r  +  d;  [BUGGY]  if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	    u  =  r  +  d;		compilable	  [FE]  AssertionError  	6	5	add
6	[BUG]  [BUGGY]    u  =  r  +  d;  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    u  =  r  +  d;  [BUGGY]  if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	    u  =  r  +  d;		compilable	  [FE]  AssertionError  	6	5	add
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    u  =  x  +  m;  [BUGGY]  if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	    u  =  x  +  m;		compilable	  [FE]  AssertionError  	6	5	add
8	[BUG]  [BUGGY]    u  =  x  +  m;  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    u  =  x  +  m;  [BUGGY]  if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	    u  =  x  +  m;		compilable	  [FE]  AssertionError  	6	5	add
9	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    if(m  >  a)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	    if(m  >  a)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException  	6	6	add
10	[BUG]  [BUGGY]    if(m  >  a)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]            AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    if(m  >  a)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	    if(m  >  a)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException  	6	6	add
11	[BUG]  [BUGGY]  if  (u  <  =  m)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]  if  (u  <  =  m)  {  [BUGGY]  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  <  =  m)  {	if  (u  -  a  <  tol2    ||  b  -  u  <  tol2)  {  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]  if  (u  <  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {  [BUGGY]  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  <  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {	if  (u  -  a  <  tol2    ||  b  -  u  <  tol2)  {  	compilable	  [FE]  AssertionError  	5	5	replace
13	[BUG]  [BUGGY]  if  (u  <  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]  if  (u  <  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {  [BUGGY]  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  <  tol1  ||  u  >  tol2  ||  b  -  u  <  tol2)  {	if  (u  -  a  <  tol2    ||  b  -  u  <  tol2)  {  	compilable	  [FE]  AssertionError  	5	5	replace
14	[BUG]  [BUGGY]  if  (u  <  =  tol1  ||  b  -  u  <  tol2)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]  if  (u  <  =  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  <  =  tol1  ||  b  -  u  <  tol2)  {	if  (u  -  a  <  tol2    ||  b  -  u  <  tol2)  {  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    d  =  p  /  q;  [BUGGY]  if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	    d  =  p  /  q;		compilable	  [FE]  AssertionError  	6	4	add
16	[BUG]  [BUGGY]    d  =  p  /  q;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    d  =  p  /  q;  [BUGGY]  if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	    d  =  p  /  q;		compilable	  [FE]  AssertionError  	6	4	add
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  [BUGGY]  if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	    d  =  p  /  q;  u  =  x  +  d;		compilable	  [FE]  AssertionError  	6	4	add
18	[BUG]  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  [BUGGY]  if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	    d  =  p  /  q;  u  =  x  +  d;		compilable	  [FE]  AssertionError  	6	4	add
19	[BUG]  [BUGGY]    if(m  >  a)  {  if(b  >  a)  {  d  =  t;  }  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    if(m  >  a)  {  if(b  >  a)  {  d  =  t;  }  [BUGGY]  if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	    if(m  >  a)  {  if(b  >  a)  {  d  =  t;  }		non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	add
20	[BUG]  [BUGGY]    if(m  >  a)  {  if(b  >  a)  {  b  =  b;  }  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    if(m  >  a)  {  if(b  >  a)  {  b  =  b;  }  [BUGGY]  if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	    if(m  >  a)  {  if(b  >  a)  {  b  =  b;  }		non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	add
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  -  a  <  tol1  ||  b  -  u  <  tol2)  {	if  (u  -  a  <  tol2    ||  b  -  u  <  tol2)  {  	compilable	  [FE]  AssertionError  	5	4	replace
22	[BUG]  [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  <  tol2)  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  a  <  tol1  ||  b  -  u  <  tol2)  {	if  (u  -  a  <  tol2    ||  b  -  u  <  tol2)  {  	compilable	  [FE]  AssertionError  	5	4	replace
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  >=  tol2)  {  [BUGGY]  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  -  u  >=  tol1  ||  b  -  u  >=  tol2)  {	if  (u  -  a  <  tol2    ||  b  -  u  <  tol2)  {  	compilable	  [FE]  AssertionError  	5	5	replace
24	[BUG]  [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  >=  tol2)  {  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  >=  tol2)  {  [BUGGY]  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  u  >=  tol1  ||  b  -  u  >=  tol2)  {	if  (u  -  a  <  tol2    ||  b  -  u  <  tol2)  {  	compilable	  [FE]  AssertionError  	5	5	replace
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  <  tol1)  {  [BUGGY]  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  -  a  <  tol1  ||  b  -  u  <  tol1)  {	if  (u  -  a  <  tol2    ||  b  -  u  <  tol2)  {  	compilable	  [FE]  AssertionError  	5	4	replace
26	[BUG]  [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  <  tol1)  {  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]  if  (u  -  a  <  tol1  ||  b  -  u  <  tol1)  {  [BUGGY]  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  a  <  tol1  ||  b  -  u  <  tol1)  {	if  (u  -  a  <  tol2    ||  b  -  u  <  tol2)  {  	compilable	  [FE]  AssertionError  	5	4	replace
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]  if  (u  -  a  >  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  -  a  >  tol1  ||  b  -  u  <  tol2)  {	if  (u  -  a  <  tol2    ||  b  -  u  <  tol2)  {  	compilable	  [FE]  AssertionError  	5	5	replace
28	[BUG]  [BUGGY]  if  (u  -  a  >  tol1  ||  b  -  u  <  tol2)  {  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]  if  (u  -  a  >  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  a  >  tol1  ||  b  -  u  <  tol2)  {	if  (u  -  a  <  tol2    ||  b  -  u  <  tol2)  {  	compilable	  [FE]  AssertionError  	5	5	replace
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {	if  (u  -  a  <  tol2    ||  b  -  u  <  tol2)  {  	compilable	  [FE]  AssertionError  	5	4	replace
30	[BUG]  [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]  if  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  u  >=  tol1  ||  b  -  u  <  tol2)  {	if  (u  -  a  <  tol2    ||  b  -  u  <  tol2)  {  	compilable	  [FE]  AssertionError  	5	4	replace
31	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]  if  (u  -  u  <  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	if  (u  -  u  <  tol1  ||  b  -  u  <  tol2)  {	if  (u  -  a  <  tol2    ||  b  -  u  <  tol2)  {  	compilable	  [FE]  AssertionError  	5	5	replace
32	[BUG]  [BUGGY]  if  (u  -  u  <  tol1  ||  b  -  u  <  tol2)  {  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]  if  (u  -  u  <  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	if  (u  -  u  <  tol1  ||  b  -  u  <  tol2)  {	if  (u  -  a  <  tol2    ||  b  -  u  <  tol2)  {  	compilable	  [FE]  AssertionError  	5	5	replace
33	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    b  =  p  /  q;  [BUGGY]  if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	    b  =  p  /  q;		compilable	  [FE]  AssertionError  	6	6	add
34	[BUG]  [BUGGY]    b  =  p  /  q;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    b  =  p  /  q;  [BUGGY]  if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	    b  =  p  /  q;		compilable	  [FE]  AssertionError  	6	6	add
35	[BUG]  [BUGGY]    if(m  >  a)  {  if(b  >  a)  {  return  d;  }  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    if(m  >  a)  {  if(b  >  a)  {  return  d;  }  [BUGGY]  if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	    if(m  >  a)  {  if(b  >  a)  {  return  d;  }		non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	add
36	[BUG]  [BUGGY]    if(m  >  a)  {  if(b  >  a)  {  d  =  d;  }  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    if(m  >  a)  {  if(b  >  a)  {  d  =  d;  }  [BUGGY]  if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	    if(m  >  a)  {  if(b  >  a)  {  d  =  d;  }		non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	add
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    u  =  p  /  q;  [BUGGY]  if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	    u  =  p  /  q;		compilable	  [FE]  AssertionError  	6	5	add
38	[BUG]  [BUGGY]    u  =  p  /  q;  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    u  =  p  /  q;  [BUGGY]  if  (u  -  a  <  tol2        ||  b  -  u  <  tol2)  {  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	    u  =  p  /  q;		compilable	  [FE]  AssertionError  	6	5	add
