bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] d = p / q; [FE] AssertionError [CONTEXT] if (p > q * (a - x) && p < q * (b - x) && Math.abs(p) < Math.abs(0.5 * q * r)) {  [BUGGY] d = p / q; [BUGGY] u = x + d;  if (u - a < tol2 || b - u < tol2) { if (x <= m) { d = tol1; } else { d = -tol1; } [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	
2	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (p > q * (a - x) && p < q * (b - x) && Math.abs(p) < Math.abs(0.5 * q * r)) {  [BUGGY] [BUGGY] d = p / q; u = x + d;  if (u - a < tol2 || b - u < tol2) { if (x <= m) { d = tol1; } else { d = -tol1; } [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	
3	[BUG] [BUGGY] u = x + d; [FE] AssertionError [CONTEXT] if (p > q * (a - x) && p < q * (b - x) && Math.abs(p) < Math.abs(0.5 * q * r)) {  d = p / q; [BUGGY] u = x + d; [BUGGY]   if (u - a < tol2 || b - u < tol2) { if (x <= m) { d = tol1; } else { d = -tol1; } } [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	
4	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (p > q * (a - x) && p < q * (b - x) && Math.abs(p) < Math.abs(0.5 * q * r)) {  d = p / q; [BUGGY] [BUGGY] u = x + d;  if (u - a < tol2 || b - u < tol2) { if (x <= m) { d = tol1; } else { d = -tol1; } } [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	
5	[BUG] [BUGGY] if (u - a < tol2  || b - u < tol2) { [FE] AssertionError [CONTEXT] if (p > q * (a - x) && p < q * (b - x) && Math.abs(p) < Math.abs(0.5 * q * r)) {  d = p / q; u = x + d;  [BUGGY] if (u - a < tol2       || b - u < tol2) { [BUGGY] || b - u < tol2) { if (x <= m) { d = tol1; } else { d = -tol1; } } } else {  if (x < m) { [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	replace	
6	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (p > q * (a - x) && p < q * (b - x) && Math.abs(p) < Math.abs(0.5 * q * r)) {  d = p / q; u = x + d;  [BUGGY] [BUGGY] if (u - a < tol2       || b - u < tol2) { || b - u < tol2) { if (x <= m) { d = tol1; } else { d = -tol1; } } } else {  if (x < m) { [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	162	163	4	add	
7	[BUG] [BUGGY] e = a - x; [FE] AssertionError [CONTEXT] d = tol1; } else { d = -tol1; } } } else {  if (x < m) { e = b - x; } else { [BUGGY] e = a - x; [BUGGY] } d = GOLDEN_SECTION * e; } [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	175	175	4	replace	
8	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] d = tol1; } else { d = -tol1; } } } else {  if (x < m) { e = b - x; } else { [BUGGY] [BUGGY] e = a - x; } d = GOLDEN_SECTION * e; } [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	175	175	4	add	
9	[BUG] [BUGGY] public BrentOptimizer() { [FE] AssertionError [CONTEXT] [BUGGY] public BrentOptimizer() { [BUGGY] setMaxEvaluations(Integer.MAX_VALUE); setMaximalIterationCount(100); setAbsoluteAccuracy(1E-10); setRelativeAccuracy(1.0e-14); } [CLASS] BrentOptimizer [METHOD] <init> [RETURN_TYPE] BrentOptimizer()  [VARIABLES] double GOLDEN_SECTION boolean  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	43	43	4	replace	
10	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] public BrentOptimizer() { setMaxEvaluations(Integer.MAX_VALUE); setMaximalIterationCount(100); setAbsoluteAccuracy(1E-10); setRelativeAccuracy(1.0e-14); } [CLASS] BrentOptimizer [METHOD] <init> [RETURN_TYPE] BrentOptimizer()  [VARIABLES] double GOLDEN_SECTION boolean  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	43	43	4	add	
11	[BUG] [BUGGY] setMaxEvaluations(Integer.MAX_VALUE); [FE] AssertionError [CONTEXT] public BrentOptimizer() { [BUGGY] setMaxEvaluations(Integer.MAX_VALUE); [BUGGY] setMaximalIterationCount(100); setAbsoluteAccuracy(1E-10); setRelativeAccuracy(1.0e-14); } [CLASS] BrentOptimizer [METHOD] <init> [RETURN_TYPE] BrentOptimizer()  [VARIABLES] double GOLDEN_SECTION boolean  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	44	44	4	replace	
12	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public BrentOptimizer() { [BUGGY] [BUGGY] setMaxEvaluations(Integer.MAX_VALUE); setMaximalIterationCount(100); setAbsoluteAccuracy(1E-10); setRelativeAccuracy(1.0e-14); } [CLASS] BrentOptimizer [METHOD] <init> [RETURN_TYPE] BrentOptimizer()  [VARIABLES] double GOLDEN_SECTION boolean  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	44	44	4	add	
13	[BUG] [BUGGY] setMaximalIterationCount(100); [FE] AssertionError [CONTEXT] public BrentOptimizer() { setMaxEvaluations(Integer.MAX_VALUE); [BUGGY] setMaximalIterationCount(100); [BUGGY] setAbsoluteAccuracy(1E-10); setRelativeAccuracy(1.0e-14); } [CLASS] BrentOptimizer [METHOD] <init> [RETURN_TYPE] BrentOptimizer()  [VARIABLES] double GOLDEN_SECTION boolean  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	45	45	4	replace	
14	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public BrentOptimizer() { setMaxEvaluations(Integer.MAX_VALUE); [BUGGY] [BUGGY] setMaximalIterationCount(100); setAbsoluteAccuracy(1E-10); setRelativeAccuracy(1.0e-14); } [CLASS] BrentOptimizer [METHOD] <init> [RETURN_TYPE] BrentOptimizer()  [VARIABLES] double GOLDEN_SECTION boolean  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	45	45	4	add	
15	[BUG] [BUGGY] setAbsoluteAccuracy(1E-10); [FE] AssertionError [CONTEXT] public BrentOptimizer() { setMaxEvaluations(Integer.MAX_VALUE); setMaximalIterationCount(100); [BUGGY] setAbsoluteAccuracy(1E-10); [BUGGY] setRelativeAccuracy(1.0e-14); } [CLASS] BrentOptimizer [METHOD] <init> [RETURN_TYPE] BrentOptimizer()  [VARIABLES] double GOLDEN_SECTION boolean  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	46	46	4	replace	
16	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public BrentOptimizer() { setMaxEvaluations(Integer.MAX_VALUE); setMaximalIterationCount(100); [BUGGY] [BUGGY] setAbsoluteAccuracy(1E-10); setRelativeAccuracy(1.0e-14); } [CLASS] BrentOptimizer [METHOD] <init> [RETURN_TYPE] BrentOptimizer()  [VARIABLES] double GOLDEN_SECTION boolean  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	46	46	4	add	
17	[BUG] [BUGGY] setRelativeAccuracy(1.0e-14); [FE] AssertionError [CONTEXT] public BrentOptimizer() { setMaxEvaluations(Integer.MAX_VALUE); setMaximalIterationCount(100); setAbsoluteAccuracy(1E-10); [BUGGY] setRelativeAccuracy(1.0e-14); [BUGGY] } [CLASS] BrentOptimizer [METHOD] <init> [RETURN_TYPE] BrentOptimizer()  [VARIABLES] double GOLDEN_SECTION boolean  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	47	47	4	replace	
18	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public BrentOptimizer() { setMaxEvaluations(Integer.MAX_VALUE); setMaximalIterationCount(100); setAbsoluteAccuracy(1E-10); [BUGGY] [BUGGY] setRelativeAccuracy(1.0e-14); } [CLASS] BrentOptimizer [METHOD] <init> [RETURN_TYPE] BrentOptimizer()  [VARIABLES] double GOLDEN_SECTION boolean  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	47	47	4	add	
19	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] public BrentOptimizer() { setMaxEvaluations(Integer.MAX_VALUE); setMaximalIterationCount(100); setAbsoluteAccuracy(1E-10); setRelativeAccuracy(1.0e-14); [BUGGY] } [BUGGY]  [CLASS] BrentOptimizer [METHOD] <init> [RETURN_TYPE] BrentOptimizer()  [VARIABLES] double GOLDEN_SECTION boolean  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	48	48	4	replace	
20	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public BrentOptimizer() { setMaxEvaluations(Integer.MAX_VALUE); setMaximalIterationCount(100); setAbsoluteAccuracy(1E-10); setRelativeAccuracy(1.0e-14); [BUGGY] [BUGGY] } [CLASS] BrentOptimizer [METHOD] <init> [RETURN_TYPE] BrentOptimizer()  [VARIABLES] double GOLDEN_SECTION boolean  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	48	48	4	add	
21	[BUG] [BUGGY] private static final double GOLDEN_SECTION = 0.5 * (3 - Math.sqrt(5)); [FE] AssertionError [CONTEXT] [BUGGY] private static final double GOLDEN_SECTION = 0.5 * (3 - Math.sqrt(5)); [BUGGY]  [CLASS] BrentOptimizer  [VARIABLES] 	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	38	38	4	replace	
22	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private static final double GOLDEN_SECTION = 0.5 * (3 - Math.sqrt(5)); [CLASS] BrentOptimizer  [VARIABLES] 	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	38	38	4	add	
23	[BUG] [BUGGY] clearResult(); [FE] AssertionError [CONTEXT] public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max, final double startValue) throws MaxIterationsExceededException, FunctionEvaluationException { [BUGGY] clearResult(); [BUGGY] return localMin(getGoalType() == GoalType.MINIMIZE, f, goalType, min, startValue, max, getRelativeAccuracy(), getAbsoluteAccuracy()); } [CLASS] BrentOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max final double startValue [VARIABLES] UnivariateRealFunction f GoalType goalType boolean double GOLDEN_SECTION max min startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	replace	
24	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max, final double startValue) throws MaxIterationsExceededException, FunctionEvaluationException { [BUGGY] [BUGGY] clearResult(); return localMin(getGoalType() == GoalType.MINIMIZE, f, goalType, min, startValue, max, getRelativeAccuracy(), getAbsoluteAccuracy()); } [CLASS] BrentOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max final double startValue [VARIABLES] UnivariateRealFunction f GoalType goalType boolean double GOLDEN_SECTION max min startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	60	60	4	add	
25	[BUG] [BUGGY] return localMin(getGoalType() == GoalType.MINIMIZE,  f, goalType, min, startValue, max,   getRelativeAccuracy(), getAbsoluteAccuracy()); [FE] AssertionError [CONTEXT] public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max, final double startValue) throws MaxIterationsExceededException, FunctionEvaluationException { clearResult(); [BUGGY] return localMin(getGoalType() == GoalType.MINIMIZE,      f, goalType, min, startValue, max,            getRelativeAccuracy(), getAbsoluteAccuracy()); [BUGGY] f, goalType, min, startValue, max, getRelativeAccuracy(), getAbsoluteAccuracy()); } [CLASS] BrentOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max final double startValue [VARIABLES] UnivariateRealFunction f GoalType goalType boolean double GOLDEN_SECTION max min startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	61	63	4	replace	
26	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max, final double startValue) throws MaxIterationsExceededException, FunctionEvaluationException { clearResult(); [BUGGY] [BUGGY] return localMin(getGoalType() == GoalType.MINIMIZE,      f, goalType, min, startValue, max,            getRelativeAccuracy(), getAbsoluteAccuracy()); f, goalType, min, startValue, max, getRelativeAccuracy(), getAbsoluteAccuracy()); } [CLASS] BrentOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max final double startValue [VARIABLES] UnivariateRealFunction f GoalType goalType boolean double GOLDEN_SECTION max min startValue  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	61	63	4	add	
27	[BUG] [BUGGY] if (eps <= 0) { [FE] AssertionError [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { [BUGGY] if (eps <= 0) { [BUGGY] throw new NotStrictlyPositiveException(eps); } if (t <= 0) { throw new NotStrictlyPositiveException(t); } double a, b; if (lo < hi) { a = lo; b = hi; } else { [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	99	99	4	replace	
28	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { [BUGGY] [BUGGY] if (eps <= 0) { throw new NotStrictlyPositiveException(eps); } if (t <= 0) { throw new NotStrictlyPositiveException(t); } double a, b; if (lo < hi) { a = lo; b = hi; } else { [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	99	99	4	add	
29	[BUG] [BUGGY] if (t <= 0) { [FE] AssertionError [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { if (eps <= 0) { throw new NotStrictlyPositiveException(eps); } [BUGGY] if (t <= 0) { [BUGGY] throw new NotStrictlyPositiveException(t); } double a, b; if (lo < hi) { a = lo; b = hi; } else { a = hi; b = lo; } [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	102	102	4	replace	
30	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { if (eps <= 0) { throw new NotStrictlyPositiveException(eps); } [BUGGY] [BUGGY] if (t <= 0) { throw new NotStrictlyPositiveException(t); } double a, b; if (lo < hi) { a = lo; b = hi; } else { a = hi; b = lo; } [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	102	102	4	add	
31	[BUG] [BUGGY] if (lo < hi) { [FE] AssertionError [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { if (eps <= 0) { throw new NotStrictlyPositiveException(eps); } if (t <= 0) { throw new NotStrictlyPositiveException(t); } double a, b; [BUGGY] if (lo < hi) { [BUGGY] a = lo; b = hi; } else { a = hi; b = lo; } double x = mid; double v = x; double w = x; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	106	106	4	replace	
32	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { if (eps <= 0) { throw new NotStrictlyPositiveException(eps); } if (t <= 0) { throw new NotStrictlyPositiveException(t); } double a, b; [BUGGY] [BUGGY] if (lo < hi) { a = lo; b = hi; } else { a = hi; b = lo; } double x = mid; double v = x; double w = x; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	106	106	4	add	
33	[BUG] [BUGGY] a = lo; [FE] AssertionError [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { if (eps <= 0) { throw new NotStrictlyPositiveException(eps); } if (t <= 0) { throw new NotStrictlyPositiveException(t); } double a, b; if (lo < hi) { [BUGGY] a = lo; [BUGGY] b = hi; } else { a = hi; b = lo; } double x = mid; double v = x; double w = x; double d = 0; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	
34	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { if (eps <= 0) { throw new NotStrictlyPositiveException(eps); } if (t <= 0) { throw new NotStrictlyPositiveException(t); } double a, b; if (lo < hi) { [BUGGY] [BUGGY] a = lo; b = hi; } else { a = hi; b = lo; } double x = mid; double v = x; double w = x; double d = 0; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	add	
35	[BUG] [BUGGY] b = hi; [FE] AssertionError [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { if (eps <= 0) { throw new NotStrictlyPositiveException(eps); } if (t <= 0) { throw new NotStrictlyPositiveException(t); } double a, b; if (lo < hi) { a = lo; [BUGGY] b = hi; [BUGGY] } else { a = hi; b = lo; } double x = mid; double v = x; double w = x; double d = 0; double e = 0; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	108	108	4	replace	
36	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { if (eps <= 0) { throw new NotStrictlyPositiveException(eps); } if (t <= 0) { throw new NotStrictlyPositiveException(t); } double a, b; if (lo < hi) { a = lo; [BUGGY] [BUGGY] b = hi; } else { a = hi; b = lo; } double x = mid; double v = x; double w = x; double d = 0; double e = 0; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	108	108	4	add	
37	[BUG] [BUGGY] double x = mid; [FE] AssertionError [CONTEXT] } double a, b; if (lo < hi) { a = lo; b = hi; } else { a = hi; b = lo; } [BUGGY] double x = mid; [BUGGY] double v = x; double w = x; double d = 0; double e = 0; double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	114	114	4	replace	
38	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] } double a, b; if (lo < hi) { a = lo; b = hi; } else { a = hi; b = lo; } [BUGGY] [BUGGY] double x = mid; double v = x; double w = x; double d = 0; double e = 0; double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	114	114	4	add	
39	[BUG] [BUGGY] double v = x; [FE] AssertionError [CONTEXT] double a, b; if (lo < hi) { a = lo; b = hi; } else { a = hi; b = lo; } double x = mid; [BUGGY] double v = x; [BUGGY] double w = x; double d = 0; double e = 0; double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx;  [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	115	115	4	replace	
40	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] double a, b; if (lo < hi) { a = lo; b = hi; } else { a = hi; b = lo; } double x = mid; [BUGGY] [BUGGY] double v = x; double w = x; double d = 0; double e = 0; double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx;  [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	115	115	4	add	
41	[BUG] [BUGGY] double w = x; [FE] AssertionError [CONTEXT] if (lo < hi) { a = lo; b = hi; } else { a = hi; b = lo; } double x = mid; double v = x; [BUGGY] double w = x; [BUGGY] double d = 0; double e = 0; double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx; int count = 0; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	116	116	4	replace	
42	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (lo < hi) { a = lo; b = hi; } else { a = hi; b = lo; } double x = mid; double v = x; [BUGGY] [BUGGY] double w = x; double d = 0; double e = 0; double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx; int count = 0; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	116	116	4	add	
43	[BUG] [BUGGY] double d = 0; [FE] AssertionError [CONTEXT] a = lo; b = hi; } else { a = hi; b = lo; } double x = mid; double v = x; double w = x; [BUGGY] double d = 0; [BUGGY] double e = 0; double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx; int count = 0; while (count < maximalIterationCount) { [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	117	117	4	replace	
44	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] a = lo; b = hi; } else { a = hi; b = lo; } double x = mid; double v = x; double w = x; [BUGGY] [BUGGY] double d = 0; double e = 0; double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx; int count = 0; while (count < maximalIterationCount) { [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	117	117	4	add	
45	[BUG] [BUGGY] double e = 0; [FE] AssertionError [CONTEXT] b = hi; } else { a = hi; b = lo; } double x = mid; double v = x; double w = x; double d = 0; [BUGGY] double e = 0; [BUGGY] double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx; int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	118	118	4	replace	
46	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] b = hi; } else { a = hi; b = lo; } double x = mid; double v = x; double w = x; double d = 0; [BUGGY] [BUGGY] double e = 0; double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx; int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	118	118	4	add	
47	[BUG] [BUGGY] double fx = computeObjectiveValue(f, x); [FE] AssertionError [CONTEXT] } else { a = hi; b = lo; } double x = mid; double v = x; double w = x; double d = 0; double e = 0; [BUGGY] double fx = computeObjectiveValue(f, x); [BUGGY] if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx; int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	
48	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] } else { a = hi; b = lo; } double x = mid; double v = x; double w = x; double d = 0; double e = 0; [BUGGY] [BUGGY] double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx; int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	
49	[BUG] [BUGGY] if (goalType == GoalType.MAXIMIZE) { [FE] AssertionError [CONTEXT] a = hi; b = lo; } double x = mid; double v = x; double w = x; double d = 0; double e = 0; double fx = computeObjectiveValue(f, x); [BUGGY] if (goalType == GoalType.MAXIMIZE) { [BUGGY] fx = -fx; } double fv = fx; double fw = fx; int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	
50	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] a = hi; b = lo; } double x = mid; double v = x; double w = x; double d = 0; double e = 0; double fx = computeObjectiveValue(f, x); [BUGGY] [BUGGY] if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx; int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	
51	[BUG] [BUGGY] double fv = fx; [FE] AssertionError [CONTEXT] double x = mid; double v = x; double w = x; double d = 0; double e = 0; double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } [BUGGY] double fv = fx; [BUGGY] double fw = fx; int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	
52	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] double x = mid; double v = x; double w = x; double d = 0; double e = 0; double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } [BUGGY] [BUGGY] double fv = fx; double fw = fx; int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	
53	[BUG] [BUGGY] double fw = fx; [FE] AssertionError [CONTEXT] double x = mid; double v = x; double w = x; double d = 0; double e = 0; double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; [BUGGY] double fw = fx; [BUGGY]  int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	124	124	4	replace	
54	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] double x = mid; double v = x; double w = x; double d = 0; double e = 0; double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; [BUGGY] [BUGGY] double fw = fx; int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	124	124	4	add	
55	[BUG] [BUGGY] int count = 0; [FE] AssertionError [CONTEXT] double w = x; double d = 0; double e = 0; double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx; [BUGGY] int count = 0; [BUGGY] while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	126	126	4	replace	
56	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] double w = x; double d = 0; double e = 0; double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx; [BUGGY] [BUGGY] int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	126	126	4	add	
57	[BUG] [BUGGY] while (count < maximalIterationCount) { [FE] AssertionError [CONTEXT] double d = 0; double e = 0; double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx; int count = 0; [BUGGY] while (count < maximalIterationCount) { [BUGGY] double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; double u = 0; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	127	127	4	replace	
58	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] double d = 0; double e = 0; double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx; int count = 0; [BUGGY] [BUGGY] while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; double u = 0; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	127	127	4	add	
59	[BUG] [BUGGY] double m = 0.5 * (a + b); [FE] AssertionError [CONTEXT] double e = 0; double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx; int count = 0; while (count < maximalIterationCount) { [BUGGY] double m = 0.5 * (a + b); [BUGGY] final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; double u = 0;  [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	128	128	4	replace	
60	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] double e = 0; double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx; int count = 0; while (count < maximalIterationCount) { [BUGGY] [BUGGY] double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; double u = 0;  [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	128	128	4	add	
61	[BUG] [BUGGY] final double tol1 = eps * Math.abs(x) + t; [FE] AssertionError [CONTEXT] double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx; int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); [BUGGY] final double tol1 = eps * Math.abs(x) + t; [BUGGY] final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	129	129	4	replace	
62	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] double fx = computeObjectiveValue(f, x); if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx; int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); [BUGGY] [BUGGY] final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	129	129	4	add	
63	[BUG] [BUGGY] final double tol2 = 2 * tol1; [FE] AssertionError [CONTEXT] if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx; int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; [BUGGY] final double tol2 = 2 * tol1; [BUGGY]   if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	130	130	4	replace	
64	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (goalType == GoalType.MAXIMIZE) { fx = -fx; } double fv = fx; double fw = fx; int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; [BUGGY] [BUGGY] final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	130	130	4	add	
65	[BUG] [BUGGY] if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { [FE] AssertionError [CONTEXT] double fv = fx; double fw = fx; int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  [BUGGY] if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { [BUGGY] double p = 0; double q = 0; double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r); [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	133	133	4	replace	
66	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] double fv = fx; double fw = fx; int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  [BUGGY] [BUGGY] if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r); [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	133	133	4	add	
67	[BUG] [BUGGY] double p = 0; [FE] AssertionError [CONTEXT] double fw = fx; int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { [BUGGY] double p = 0; [BUGGY] double q = 0; double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r);  [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	134	134	4	replace	
68	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] double fw = fx; int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { [BUGGY] [BUGGY] double p = 0; double q = 0; double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r);  [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	134	134	4	add	
69	[BUG] [BUGGY] double q = 0; [FE] AssertionError [CONTEXT] int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; [BUGGY] double q = 0; [BUGGY] double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r); if (q > 0) { [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	135	135	4	replace	
70	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; [BUGGY] [BUGGY] double q = 0; double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r); if (q > 0) { [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	135	135	4	add	
71	[BUG] [BUGGY] double r = 0; [FE] AssertionError [CONTEXT] int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; [BUGGY] double r = 0; [BUGGY] double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r); if (q > 0) { p = -p; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	136	136	4	replace	
72	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] int count = 0; while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; [BUGGY] [BUGGY] double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r); if (q > 0) { p = -p; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	136	136	4	add	
73	[BUG] [BUGGY] double u = 0; [FE] AssertionError [CONTEXT] while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; [BUGGY] double u = 0; [BUGGY]  if (Math.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r); if (q > 0) { p = -p; } else { [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	137	137	4	replace	
74	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] while (count < maximalIterationCount) { double m = 0.5 * (a + b); final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; [BUGGY] [BUGGY] double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r); if (q > 0) { p = -p; } else { [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	137	137	4	add	
75	[BUG] [BUGGY] if (Math.abs(e) > tol1) { // Fit parabola.  r = (x - w) * (fx - fv); [FE] AssertionError [CONTEXT] final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; double u = 0; [BUGGY] if (Math.abs(e) > tol1) { // Fit parabola.     r = (x - w) * (fx - fv); [BUGGY] r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r); if (q > 0) { p = -p; } else { q = -q; } [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	139	140	4	replace	
76	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final double tol1 = eps * Math.abs(x) + t; final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; double u = 0; [BUGGY] [BUGGY] if (Math.abs(e) > tol1) { // Fit parabola.     r = (x - w) * (fx - fv); r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r); if (q > 0) { p = -p; } else { q = -q; } [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	139	140	4	add	
77	[BUG] [BUGGY] r = (x - w) * (fx - fv); [FE] AssertionError [CONTEXT] final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. [BUGGY] r = (x - w) * (fx - fv); [BUGGY] q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r); if (q > 0) { p = -p; } else { q = -q; }  [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	140	140	4	replace	
78	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final double tol2 = 2 * tol1;  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. [BUGGY] [BUGGY] r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r); if (q > 0) { p = -p; } else { q = -q; }  [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	140	140	4	add	
79	[BUG] [BUGGY] q = (x - v) * (fx - fw); [FE] AssertionError [CONTEXT]  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); [BUGGY] q = (x - v) * (fx - fw); [BUGGY] p = (x - v) * q - (x - w) * r; q = 2 * (q - r); if (q > 0) { p = -p; } else { q = -q; } r = e; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	141	141	4	replace	
80	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); [BUGGY] [BUGGY] q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r); if (q > 0) { p = -p; } else { q = -q; } r = e; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	141	141	4	add	
81	[BUG] [BUGGY] p = (x - v) * q - (x - w) * r; [FE] AssertionError [CONTEXT]  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); [BUGGY] p = (x - v) * q - (x - w) * r; [BUGGY] q = 2 * (q - r); if (q > 0) { p = -p; } else { q = -q; } r = e; e = d; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	142	142	4	replace	
82	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]  if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); [BUGGY] [BUGGY] p = (x - v) * q - (x - w) * r; q = 2 * (q - r); if (q > 0) { p = -p; } else { q = -q; } r = e; e = d; [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	142	142	4	add	
83	[BUG] [BUGGY] q = 2 * (q - r); [FE] AssertionError [CONTEXT] if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; [BUGGY] q = 2 * (q - r); [BUGGY]  if (q > 0) { p = -p; } else { q = -q; } r = e; e = d;  [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	143	143	4	replace	
84	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) { double p = 0; double q = 0; double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; [BUGGY] [BUGGY] q = 2 * (q - r); if (q > 0) { p = -p; } else { q = -q; } r = e; e = d;  [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	143	143	4	add	
85	[BUG] [BUGGY] if (q > 0) { [FE] AssertionError [CONTEXT] double q = 0; double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r); [BUGGY] if (q > 0) { [BUGGY] p = -p; } else { q = -q; } r = e; e = d; if (p > q * (a - x) && p < q * (b - x) [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	145	145	4	replace	
86	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] double q = 0; double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r); [BUGGY] [BUGGY] if (q > 0) { p = -p; } else { q = -q; } r = e; e = d; if (p > q * (a - x) && p < q * (b - x) [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	145	145	4	add	
87	[BUG] [BUGGY] p = -p; [FE] AssertionError [CONTEXT] double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r); if (q > 0) { [BUGGY] p = -p; [BUGGY] } else { q = -q; } r = e; e = d; if (p > q * (a - x) && p < q * (b - x) && Math.abs(p) < Math.abs(0.5 * q * r)) { [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	146	146	4	replace	
88	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] double r = 0; double u = 0; if (Math.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r); if (q > 0) { [BUGGY] [BUGGY] p = -p; } else { q = -q; } r = e; e = d; if (p > q * (a - x) && p < q * (b - x) && Math.abs(p) < Math.abs(0.5 * q * r)) { [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	146	146	4	add	
89	[BUG] [BUGGY] q = -q; [FE] AssertionError [CONTEXT] if (q > 0) { p = -p; } else { [BUGGY] q = -q; [BUGGY] } [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	148	148	4	replace	
90	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (q > 0) { p = -p; } else { [BUGGY] [BUGGY] q = -q; } [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	148	148	4	add	
91	[BUG] [BUGGY] r = e; [FE] AssertionError [CONTEXT] q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r); if (q > 0) { p = -p; } else { q = -q; } [BUGGY] r = e; [BUGGY] e = d; if (p > q * (a - x) && p < q * (b - x) && Math.abs(p) < Math.abs(0.5 * q * r)) {  d = p / q; u = x + d;   [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	151	151	4	replace	
92	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r); if (q > 0) { p = -p; } else { q = -q; } [BUGGY] [BUGGY] r = e; e = d; if (p > q * (a - x) && p < q * (b - x) && Math.abs(p) < Math.abs(0.5 * q * r)) {  d = p / q; u = x + d;   [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	151	151	4	add	
93	[BUG] [BUGGY] e = d; [FE] AssertionError [CONTEXT] p = (x - v) * q - (x - w) * r; q = 2 * (q - r); if (q > 0) { p = -p; } else { q = -q; } r = e; [BUGGY] e = d; [BUGGY]  if (p > q * (a - x) && p < q * (b - x) && Math.abs(p) < Math.abs(0.5 * q * r)) {  d = p / q; u = x + d;  if (u - a < tol2 [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	152	152	4	replace	
94	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] p = (x - v) * q - (x - w) * r; q = 2 * (q - r); if (q > 0) { p = -p; } else { q = -q; } r = e; [BUGGY] [BUGGY] e = d; if (p > q * (a - x) && p < q * (b - x) && Math.abs(p) < Math.abs(0.5 * q * r)) {  d = p / q; u = x + d;  if (u - a < tol2 [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	152	152	4	add	
95	[BUG] [BUGGY] if (p > q * (a - x)  && p < q * (b - x)   && Math.abs(p) < Math.abs(0.5 * q * r)) { [FE] AssertionError [CONTEXT] if (q > 0) { p = -p; } else { q = -q; } r = e; e = d; [BUGGY] if (p > q * (a - x)      && p < q * (b - x)            && Math.abs(p) < Math.abs(0.5 * q * r)) { [BUGGY] && p < q * (b - x) && Math.abs(p) < Math.abs(0.5 * q * r)) {  d = p / q; u = x + d;  if (u - a < tol2 || b - u < tol2) { if (x <= m) { [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	154	156	4	replace	
96	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (q > 0) { p = -p; } else { q = -q; } r = e; e = d; [BUGGY] [BUGGY] if (p > q * (a - x)      && p < q * (b - x)            && Math.abs(p) < Math.abs(0.5 * q * r)) { && p < q * (b - x) && Math.abs(p) < Math.abs(0.5 * q * r)) {  d = p / q; u = x + d;  if (u - a < tol2 || b - u < tol2) { if (x <= m) { [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	154	156	4	add	
97	[BUG] [BUGGY] if (x < m) { [FE] AssertionError [CONTEXT] if (u - a < tol2 || b - u < tol2) { if (x <= m) { d = tol1; } else { d = -tol1; } } } else {  [BUGGY] if (x < m) { [BUGGY] e = b - x; } else { e = a - x; } d = GOLDEN_SECTION * e; } [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	172	172	4	replace	
98	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (u - a < tol2 || b - u < tol2) { if (x <= m) { d = tol1; } else { d = -tol1; } } } else {  [BUGGY] [BUGGY] if (x < m) { e = b - x; } else { e = a - x; } d = GOLDEN_SECTION * e; } [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	172	172	4	add	
99	[BUG] [BUGGY] e = b - x; [FE] AssertionError [CONTEXT] || b - u < tol2) { if (x <= m) { d = tol1; } else { d = -tol1; } } } else {  if (x < m) { [BUGGY] e = b - x; [BUGGY] } else { e = a - x; } d = GOLDEN_SECTION * e; } [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	173	173	4	replace	
100	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] || b - u < tol2) { if (x <= m) { d = tol1; } else { d = -tol1; } } } else {  if (x < m) { [BUGGY] [BUGGY] e = b - x; } else { e = a - x; } d = GOLDEN_SECTION * e; } [CLASS] BrentOptimizer [METHOD] localMin [RETURN_TYPE] double  boolean isMinim UnivariateRealFunction f GoalType goalType double lo double mid double hi double eps double t [VARIABLES] UnivariateRealFunction f GoalType goalType boolean isMinim double GOLDEN_SECTION a b d e eps fu fv fw fx hi lo m max mid min p q r startValue t tol1 tol2 u v w x int count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	173	173	4	add	
