bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    double  fv  =  fx;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]    double  fv  =  fx;  [BUGGY]  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	    double  fv  =  fx;		non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	52	None	add
2	[BUG]  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.  [BUGGY]  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.		non-compiled	[CE]  <identifier>  expected	52	None	add
3	[BUG]  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }		non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	add
4	[BUG]  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }		non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	add
5	[BUG]  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  [BUGGY]  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);		non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	add
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]  double  fv  =  fx  +  1;  [BUGGY]  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  +  1;	double  fv  =  fx;  	compilable	  [FE]  AssertionError  	51	4	replace
7	[BUG]  [BUGGY]  double  fv  =  fx  +  1;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]  double  fv  =  fx  +  1;  [BUGGY]  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  +  1;	double  fv  =  fx;  	compilable	  [FE]  AssertionError  	51	4	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]  double  fv  =  mid;  [BUGGY]  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid;	double  fv  =  fx;  	compilable	  [FE]  AssertionError  	51	4	replace
9	[BUG]  [BUGGY]  double  fv  =  mid;  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]  double  fv  =  mid;  [BUGGY]  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid;	double  fv  =  fx;  	compilable	  [FE]  AssertionError  	51	4	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]  double  fv  =  fx  -  1;  [BUGGY]  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  -  1;	double  fv  =  fx;  	compilable	  [FE]  AssertionError  	51	4	replace
11	[BUG]  [BUGGY]  double  fv  =  fx  -  1;  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]  double  fv  =  fx  -  1;  [BUGGY]  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  -  1;	double  fv  =  fx;  	compilable	  [FE]  AssertionError  	51	4	replace
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]  double  fv  =  fx  +  mid;  [BUGGY]  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  +  mid;	double  fv  =  fx;  	compilable	  [FE]  AssertionError  	51	4	replace
13	[BUG]  [BUGGY]  double  fv  =  fx  +  mid;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]  double  fv  =  fx  +  mid;  [BUGGY]  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  +  mid;	double  fv  =  fx;  	compilable	  [FE]  AssertionError  	51	4	replace
14	[BUG]  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	add
15	[BUG]  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(fx  >  GOLDEN_SECTION)  {  fx  =  -fx;  }  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(fx  >  GOLDEN_SECTION)  {  fx  =  -fx;  }  [BUGGY]  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(fx  >  GOLDEN_SECTION)  {  fx  =  -fx;  }		non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	add
16	[BUG]  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  continue;  }  [BUGGY]  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  continue;  }		non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	add
17	[BUG]  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }  [BUGGY]  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }		non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	add
18	[BUG]  [BUGGY]    b  =  goalType.getBooleanValue(f,  x);  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]    b  =  goalType.getBooleanValue(f,  x);  [BUGGY]  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	    b  =  goalType.getBooleanValue(f,  x);		non-compiled	[CE]  cannot  find  symbol	52	None	add
19	[BUG]  [BUGGY]    b  =  goalType.getBooleanValue(f,  a);  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]    b  =  goalType.getBooleanValue(f,  a);  [BUGGY]  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	    b  =  goalType.getBooleanValue(f,  a);		non-compiled	[CE]  cannot  find  symbol	52	None	add
20	[BUG]  [BUGGY]    b  =  goalType.getBooleanValue(f);  [CE]  cannot  find  symbol  [FE]        AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]    b  =  goalType.getBooleanValue(f);  [BUGGY]  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	    b  =  goalType.getBooleanValue(f);		non-compiled	[CE]  cannot  find  symbol	52	None	add
21	[BUG]  [BUGGY]    b  =  goalType.getBooleanValue(f,  false);  [CE]  cannot  find  symbol  [FE]          AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]    b  =  goalType.getBooleanValue(f,  false);  [BUGGY]  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	    b  =  goalType.getBooleanValue(f,  false);		non-compiled	[CE]  cannot  find  symbol	52	None	add
22	[BUG]  [BUGGY]    b  =  goalType.getBooleanValue();  [CE]  cannot  find  symbol  [FE]            AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]    b  =  goalType.getBooleanValue();  [BUGGY]  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	    b  =  goalType.getBooleanValue();		non-compiled	[CE]  cannot  find  symbol	52	None	add
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]  double  fv  =  0;  [BUGGY]  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  0;	double  fv  =  fx;  	compilable	  [FE]  AssertionError  	51	4	replace
24	[BUG]  [BUGGY]  double  fv  =  0;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]  double  fv  =  0;  [BUGGY]  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  0;	double  fv  =  fx;  	compilable	  [FE]  AssertionError  	51	4	replace
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]  double  fv  =  -fx;  [BUGGY]  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  -fx;	double  fv  =  fx;  	compilable	  [FE]  AssertionError  	51	4	replace
26	[BUG]  [BUGGY]  double  fv  =  -fx;  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]  double  fv  =  -fx;  [BUGGY]  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  -fx;	double  fv  =  fx;  	compilable	  [FE]  AssertionError  	51	4	replace
