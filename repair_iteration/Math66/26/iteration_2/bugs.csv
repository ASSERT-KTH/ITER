bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  isMinim?  fx  :  fx;  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  fx  :  fx;	      double    fv    =    fx;    	compilable	  [FE]  AssertionError  	1	4	replace
2	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  fx;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  isMinim?  fx  :  fx;  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  fx  :  fx;	      double    fv    =    fx;    	compilable	  [FE]  AssertionError  	1	4	replace
3	[BUG]  [BUGGY]  double  fv  =  isMinim?  min  :  fx;  [CE]  min  has  private  access  in  AbstractUnivariateRealOptimizer  [FE]          AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  isMinim?  min  :  fx;  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  min  :  fx;	      double    fv    =    fx;    	non-compiled	[CE]  min  has  private  access  in  AbstractUnivariateRealOptimizer	1	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  isMinim?  fx  :  1;  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  fx  :  1;	      double    fv    =    fx;    	compilable	  [FE]  AssertionError  	1	4	replace
5	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  1;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  isMinim?  fx  :  1;  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  fx  :  1;	      double    fv    =    fx;    	compilable	  [FE]  AssertionError  	1	4	replace
6	[BUG]  [BUGGY]  b  =  f.getBooleanValue(f,  goalType);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  b  =  f.getBooleanValue(f,  goalType);  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(f,  goalType);	      b    =    goalType.getBooleanValue(f,    a);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
7	[BUG]  [BUGGY]  b  =  a.getBooleanValue(f,  goalType);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  b  =  a.getBooleanValue(f,  goalType);  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  a.getBooleanValue(f,  goalType);	      b    =    goalType.getBooleanValue(f,    a);    	non-compiled	[CE]  double  cannot  be  dereferenced	19	None	replace
8	[BUG]  [BUGGY]  b  =  f.getBooleanValue(goalType,  a);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  b  =  f.getBooleanValue(goalType,  a);  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(goalType,  a);	      b    =    goalType.getBooleanValue(f,    a);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
9	[BUG]  [BUGGY]  double  fv  =  -goalType;  [CE]  bad  operand  type  GoalType  for  unary  operator  '-'  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  -goalType;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  -goalType;	  double    fv    =    -fx;    	non-compiled	[CE]  bad  operand  type  GoalType  for  unary  operator  '-'	26	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  -d;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  -d;	  double    fv    =    -fx;    	compilable	  [FE]  AssertionError  	26	4	replace
11	[BUG]  [BUGGY]  double  fv  =  -d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  -d;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  -d;	  double    fv    =    -fx;    	compilable	  [FE]  AssertionError  	26	4	replace
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  -1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  -1;	  double    fv    =    -fx;    	compilable	  [FE]  AssertionError  	26	4	replace
13	[BUG]  [BUGGY]  double  fv  =  -1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  -1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  -1;	  double    fv    =    -fx;    	compilable	  [FE]  AssertionError  	26	4	replace
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  -a;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  -a;	  double    fv    =    -fx;    	compilable	  [FE]  AssertionError  	26	4	replace
15	[BUG]  [BUGGY]  double  fv  =  -a;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  -a;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  -a;	  double    fv    =    -fx;    	compilable	  [FE]  AssertionError  	26	4	replace
16	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	replace
17	[BUG]  [BUGGY]  if(isMinim)  {  while(goalType  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim)  {  while(goalType  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  while(goalType  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	replace
18	[BUG]  [BUGGY]  if(isMinim)  {  int  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim)  {  int  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  int  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	replace
19	[BUG]  [BUGGY]  fx  =  -fx;  [CE]  cannot  find  symbol  fv  [FE]          AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  fx  =  -fx;  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fx  =  -fx;	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(fx    >    GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  cannot  find  symbol  fv	15	None	replace
20	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(fx    >    GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	15	None	replace
21	[BUG]  [BUGGY]  if(isMinim)  {  if(fx  >  GOLDEN_SECTION)  {  fx  =  -fx;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim)  {  if(fx  >  GOLDEN_SECTION)  {  fx  =  -fx;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(fx  >  GOLDEN_SECTION)  {  fx  =  -fx;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(fx    >    GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	15	None	replace
22	[BUG]  [BUGGY]  if(fx  >  GOLDEN_SECTION)  {  fx  =  -fx;  }  [CE]  cannot  find  symbol  fv  [FE]                AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(fx  >  GOLDEN_SECTION)  {  fx  =  -fx;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(fx  >  GOLDEN_SECTION)  {  fx  =  -fx;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(fx    >    GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  cannot  find  symbol  fv	15	None	replace
23	[BUG]  [BUGGY]  b  =  f.getBooleanValue(goalType);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  b  =  f.getBooleanValue(goalType);  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(goalType);	      b    =    goalType.getBooleanValue(f);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
24	[BUG]  [BUGGY]  b  =  goalType.getBooleanValue(f,  v);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  b  =  goalType.getBooleanValue(f,  v);  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goalType.getBooleanValue(f,  v);	      b    =    goalType.getBooleanValue(f);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
25	[BUG]  [BUGGY]  b  =  goalType.getBooleanValue(f,  w);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  b  =  goalType.getBooleanValue(f,  w);  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goalType.getBooleanValue(f,  w);	      b    =    goalType.getBooleanValue(f);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
26	[BUG]  [BUGGY]  b  =  f.getBooleanValue(goalType,  x);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  b  =  f.getBooleanValue(goalType,  x);  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(goalType,  x);	      b    =    goalType.getBooleanValue(f,    x);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
27	[BUG]  [BUGGY]  b  =  goalType.getBooleanValue(f,  d);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  b  =  goalType.getBooleanValue(f,  d);  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goalType.getBooleanValue(f,  d);	      b    =    goalType.getBooleanValue(f,    x);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
28	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  return  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  return  false;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  return  false;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    return    false;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	17	None	replace
29	[BUG]  [BUGGY]  if(isMinim)  {  if(!isMinim)  {  return  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim)  {  if(!isMinim)  {  return  false;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(!isMinim)  {  return  false;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    return    false;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	17	None	replace
30	[BUG]  [BUGGY]  if(isMinim)  {  return  false;  }  [CE]  incompatible  types  [FE]                  AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim)  {  return  false;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  return  false;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    return    false;    }    	non-compiled	[CE]  incompatible  types	17	None	replace
31	[BUG]  [BUGGY]  if(!isMinim)  {  return  false;  }  [CE]  incompatible  types  [FE]                    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(!isMinim)  {  return  false;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(!isMinim)  {  return  false;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    return    false;    }    	non-compiled	[CE]  incompatible  types	17	None	replace
32	[BUG]  [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  fv  [FE]        AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  throw  new  IllegalArgumentException( " ");  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  fv	14	None	replace
33	[BUG]  [BUGGY]  if(!isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  fv  [FE]          AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(!isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(!isMinim)  {  throw  new  IllegalArgumentException( " ");  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  fv	14	None	replace
34	[BUG]  [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(fx));  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]            AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(fx));  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(fx));  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	14	None	replace
35	[BUG]  [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(goalType));  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]              AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(goalType));  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(goalType));  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	14	None	replace
36	[BUG]  [BUGGY]  double  fv  =  0;  double  fv  =  0;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  0;  double  fv  =  0;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    0;    double  fv  =  0;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	23	None	add
37	[BUG]  [BUGGY]  double  fv  =  0;  Double  fv  =  0;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  0;  Double  fv  =  0;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    0;    Double  fv  =  0;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	23	None	add
38	[BUG]  [BUGGY]  double  fv  =  0;  int  fv  =  0;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  0;  int  fv  =  0;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    0;    int  fv  =  0;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	23	None	add
39	[BUG]  [BUGGY]  double  fv  =  0;  fv  =  0;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  0;  fv  =  0;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    0;    fv  =  0;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	23	None	add
40	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	5	None	replace
41	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	replace
42	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	replace
43	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (  [CE]  ')'  expected  [FE]                      AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    	non-compiled	[CE]  ')'  expected	5	None	replace
44	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
45	[BUG]  [BUGGY]  if(isMinim)  {  if(!isMinim)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim)  {  if(!isMinim)  {  continue;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(!isMinim)  {  continue;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
46	[BUG]  [BUGGY]  if(isMinim)  {  continue;  }  [CE]  continue  outside  of  loop  [FE]                AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim)  {  continue;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  continue;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    continue;    }    	non-compiled	[CE]  continue  outside  of  loop	16	None	replace
47	[BUG]  [BUGGY]  if(isMinim  ||  isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim  ||  isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim  ||  isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  mid  -  1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  -  1;	  double    fv    =    fx    -    1;    	compilable	  [FE]  AssertionError  	11	4	replace
49	[BUG]  [BUGGY]  double  fv  =  mid  -  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  mid  -  1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  -  1;	  double    fv    =    fx    -    1;    	compilable	  [FE]  AssertionError  	11	4	replace
50	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  /  1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  /  1;	  double    fv    =    fx    -    1;    	compilable	  [FE]  AssertionError  	11	4	replace
51	[BUG]  [BUGGY]  double  fv  =  fx  /  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  /  1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  /  1;	  double    fv    =    fx    -    1;    	compilable	  [FE]  AssertionError  	11	4	replace
52	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  lo;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  lo;	  double    fv    =    mid;    	compilable	  [FE]  AssertionError  	9	4	replace
53	[BUG]  [BUGGY]  double  fv  =  lo;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  lo;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  lo;	  double    fv    =    mid;    	compilable	  [FE]  AssertionError  	9	4	replace
54	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  hi;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  hi;	  double    fv    =    mid;    	compilable	  [FE]  AssertionError  	9	4	replace
55	[BUG]  [BUGGY]  double  fv  =  hi;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  hi;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  hi;	  double    fv    =    mid;    	compilable	  [FE]  AssertionError  	9	4	replace
56	[BUG]  [BUGGY]  double  fv  =  fx  +  1;  double  fv  =  fx  +  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  +  1;  double  fv  =  fx  +  1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    1;    double  fv  =  fx  +  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	6	None	add
57	[BUG]  [BUGGY]  double  fv  =  fx  +  1;  Double  fv  =  fx  +  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  +  1;  Double  fv  =  fx  +  1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    1;    Double  fv  =  fx  +  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	6	None	add
58	[BUG]  [BUGGY]  double  fv  =  fx  +  1;  int  fv  =  fx  +  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  +  1;  int  fv  =  fx  +  1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    1;    int  fv  =  fx  +  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	6	None	add
59	[BUG]  [BUGGY]  double  fv  =  fx  +  1;  fv  =  fx  +  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  +  1;  fv  =  fx  +  1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    1;    fv  =  fx  +  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	6	None	add
60	[BUG]  [BUGGY]  double  fv  =  mid;  double  fv  =  mid;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  mid;  double  fv  =  mid;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid;    double  fv  =  mid;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	8	None	add
61	[BUG]  [BUGGY]  double  fv  =  mid;  Double  fv  =  mid;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  mid;  Double  fv  =  mid;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid;    Double  fv  =  mid;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	8	None	add
62	[BUG]  [BUGGY]  double  fv  =  mid;  double  fv  =  hi;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  mid;  double  fv  =  hi;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid;    double  fv  =  hi;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	8	None	add
63	[BUG]  [BUGGY]  double  fv  =  mid;  double  fv  =  middle;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  mid;  double  fv  =  middle;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid;    double  fv  =  middle;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	8	None	add
64	[BUG]  [BUGGY]  double  fv  =  mid;  double  fv  =  low;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]            AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  mid;  double  fv  =  low;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid;    double  fv  =  low;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	8	None	add
65	[BUG]  [BUGGY]  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]            AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	3	None	replace
66	[BUG]  [BUGGY]  if(isMinim)  {  final  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim)  {  final  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  final  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	replace
67	[BUG]  [BUGGY]  if(isMinim)  {  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim)  {  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	replace
68	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  mid  +  1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  +  1;	  double    fv    =    fx    +    1;    	compilable	  [FE]  AssertionError  	7	4	replace
69	[BUG]  [BUGGY]  double  fv  =  mid  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  mid  +  1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  +  1;	  double    fv    =    fx    +    1;    	compilable	  [FE]  AssertionError  	7	4	replace
70	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  +  2;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  +  2;	  double    fv    =    fx    +    1;    	compilable	  [FE]  AssertionError  	7	4	replace
71	[BUG]  [BUGGY]  double  fv  =  fx  +  2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  +  2;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  +  2;	  double    fv    =    fx    +    1;    	compilable	  [FE]  AssertionError  	7	4	replace
72	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  +  3;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  +  3;	  double    fv    =    fx    +    1;    	compilable	  [FE]  AssertionError  	7	4	replace
73	[BUG]  [BUGGY]  double  fv  =  fx  +  3;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  +  3;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  +  3;	  double    fv    =    fx    +    1;    	compilable	  [FE]  AssertionError  	7	4	replace
74	[BUG]  [BUGGY]  double  fv  =  -fx;  double  fv  =  -fx;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  -fx;  double  fv  =  -fx;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    -fx;    double  fv  =  -fx;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	25	None	add
75	[BUG]  [BUGGY]  double  fv  =  -fx;  Double  fv  =  -fx;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  -fx;  Double  fv  =  -fx;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    -fx;    Double  fv  =  -fx;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	25	None	add
76	[BUG]  [BUGGY]  double  fv  =  -fx;  int  fv  =  -fx;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  -fx;  int  fv  =  -fx;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    -fx;    int  fv  =  -fx;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	25	None	add
77	[BUG]  [BUGGY]  double  fv  =  -fx;  fv  =  -fx;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  -fx;  fv  =  -fx;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    -fx;    fv  =  -fx;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	25	None	add
78	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  mid  +  fx;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  +  fx;	  double    fv    =    fx    +    mid;    	compilable	  [FE]  AssertionError  	13	4	replace
79	[BUG]  [BUGGY]  double  fv  =  mid  +  fx;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  mid  +  fx;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  +  fx;	  double    fv    =    fx    +    mid;    	compilable	  [FE]  AssertionError  	13	4	replace
80	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  <identifier>  expected	2	None	replace
81	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  not  a  statement	2	None	replace
82	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  not  a  statement	2	None	replace
83	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  not  a  statement	2	None	replace
84	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  1;	  double    fv    =    0;    	compilable	  [FE]  AssertionError  	24	4	replace
85	[BUG]  [BUGGY]  double  fv  =  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  1;	  double    fv    =    0;    	compilable	  [FE]  AssertionError  	24	4	replace
86	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  3;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  3;	  double    fv    =    0;    	compilable	  [FE]  AssertionError  	24	4	replace
87	[BUG]  [BUGGY]  double  fv  =  3;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  3;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  3;	  double    fv    =    0;    	compilable	  [FE]  AssertionError  	24	4	replace
88	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  0.0;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  0.0;	  double    fv    =    0;    	compilable	  [FE]  AssertionError  	24	4	replace
89	[BUG]  [BUGGY]  double  fv  =  0.0;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  0.0;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  0.0;	  double    fv    =    0;    	compilable	  [FE]  AssertionError  	24	4	replace
90	[BUG]  [BUGGY]  double  fv  =  fx  -  1;  double  fv  =  fx  -  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  -  1;  double  fv  =  fx  -  1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    -    1;    double  fv  =  fx  -  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	10	None	add
91	[BUG]  [BUGGY]  double  fv  =  fx  -  1;  Double  fv  =  fx  -  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  -  1;  Double  fv  =  fx  -  1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    -    1;    Double  fv  =  fx  -  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	10	None	add
92	[BUG]  [BUGGY]  double  fv  =  fx  -  1;  int  fv  =  fx  -  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  -  1;  int  fv  =  fx  -  1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    -    1;    int  fv  =  fx  -  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	10	None	add
93	[BUG]  [BUGGY]  double  fv  =  fx  -  1;  fv  =  fx  -  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  -  1;  fv  =  fx  -  1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    -    1;    fv  =  fx  -  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	10	None	add
94	[BUG]  [BUGGY]  double  fv  =  fx  +  mid;  double  fv  =  fx  +  mid;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  +  mid;  double  fv  =  fx  +  mid;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    mid;    double  fv  =  fx  +  mid;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	12	None	add
95	[BUG]  [BUGGY]  double  fv  =  fx  +  mid;  Double  fv  =  fx  +  mid;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  +  mid;  Double  fv  =  fx  +  mid;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    mid;    Double  fv  =  fx  +  mid;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	12	None	add
96	[BUG]  [BUGGY]  double  fv  =  fx  +  mid;  double  fv  =  fx  +  middle;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  +  mid;  double  fv  =  fx  +  middle;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    mid;    double  fv  =  fx  +  middle;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	12	None	add
97	[BUG]  [BUGGY]  double  fv  =  fx  +  mid;  fv  =  fx  +  mid;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  +  mid;  fv  =  fx  +  mid;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    mid;    fv  =  fx  +  mid;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	12	None	add
98	[BUG]  [BUGGY]  b  =  goalType.getBooleanValue(f,  true);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  b  =  goalType.getBooleanValue(f,  true);  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goalType.getBooleanValue(f,  true);	      b    =    goalType.getBooleanValue(f,    false);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
99	[BUG]  [BUGGY]  b  =  f.getBooleanValue(f,  false);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  b  =  f.getBooleanValue(f,  false);  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(f,  false);	      b    =    goalType.getBooleanValue(f,    false);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
100	[BUG]  [BUGGY]  b  =  f.getBooleanValue(goalType,  false);  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  b  =  f.getBooleanValue(goalType,  false);  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(goalType,  false);	      b    =    goalType.getBooleanValue(f,    false);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
101	[BUG]  [BUGGY]  b  =  GoalType.getBooleanValue();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  b  =  GoalType.getBooleanValue();  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  GoalType.getBooleanValue();	      b    =    goalType.getBooleanValue();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
102	[BUG]  [BUGGY]  b  =  goalType.getBooleanValue(t);  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  b  =  goalType.getBooleanValue(t);  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goalType.getBooleanValue(t);	      b    =    goalType.getBooleanValue();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
103	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  mid  /  1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  /  1;	  double    fv    =    fx    -    1;    	compilable	  [FE]  AssertionError  	11	4	replace
104	[BUG]  [BUGGY]  double  fv  =  mid  /  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  mid  /  1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  /  1;	  double    fv    =    fx    -    1;    	compilable	  [FE]  AssertionError  	11	4	replace
105	[BUG]  [BUGGY]  b  =  targetType.getBooleanValue();  [CE]  cannot  find  symbol  targetType  [FE]                AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  b  =  targetType.getBooleanValue();  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  targetType.getBooleanValue();	      b    =    goalType.getBooleanValue();    	non-compiled	[CE]  cannot  find  symbol  targetType	22	None	replace
106	[BUG]  [BUGGY]  if(goalType!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(goalType!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  continue;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  continue;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
107	[BUG]  [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(isMinim)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(isMinim)  {  continue;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(isMinim)  {  continue;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
108	[BUG]  [BUGGY]  if(isMinim)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	replace
109	[BUG]  [BUGGY]  if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  ')'  expected	3	None	replace
110	[BUG]  [BUGGY]  if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  [CE]  '.class'  expected  [FE]                AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  '.class'  expected	3	None	replace
111	[BUG]  [BUGGY]  if(isMinim)  {  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim)  {  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	replace
112	[BUG]  [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	replace
113	[BUG]  [BUGGY]  if(goalType!=  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(goalType!=  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType!=  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	replace
114	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  isMinim?  fx  :  GOLDEN_SECTION;  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  fx  :  GOLDEN_SECTION;	      double    fv    =    fx;    	compilable	  [FE]  AssertionError  	1	4	replace
115	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  GOLDEN_SECTION;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  isMinim?  fx  :  GOLDEN_SECTION;  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  fx  :  GOLDEN_SECTION;	      double    fv    =    fx;    	compilable	  [FE]  AssertionError  	1	4	replace
116	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  fx;  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  GOLDEN_SECTION  :  fx;	      double    fv    =    fx;    	compilable	  [FE]  AssertionError  	1	4	replace
117	[BUG]  [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  fx;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  fx;  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  GOLDEN_SECTION  :  fx;	      double    fv    =    fx;    	compilable	  [FE]  AssertionError  	1	4	replace
118	[BUG]  [BUGGY]  double  fv  =  isMinim;  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  isMinim;  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim;	      double    fv    =    fx;    	non-compiled	[CE]  incompatible  types	1	None	replace
119	[BUG]  [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    	non-compiled	[CE]  ')'  expected	5	None	replace
120	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  +  hi;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  +  hi;	  double    fv    =    fx    +    mid;    	compilable	  [FE]  AssertionError  	13	4	replace
121	[BUG]  [BUGGY]  double  fv  =  fx  +  hi;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  +  hi;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  +  hi;	  double    fv    =    fx    +    mid;    	compilable	  [FE]  AssertionError  	13	4	replace
122	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  +  b;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  +  b;	  double    fv    =    fx    +    mid;    	compilable	  [FE]  AssertionError  	13	4	replace
123	[BUG]  [BUGGY]  double  fv  =  fx  +  b;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  +  b;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  +  b;	  double    fv    =    fx    +    mid;    	compilable	  [FE]  AssertionError  	13	4	replace
124	[BUG]  [BUGGY]  b  =  goalType.getBooleanValue(f,  isMinim);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  b  =  goalType.getBooleanValue(f,  isMinim);  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goalType.getBooleanValue(f,  isMinim);	      b    =    goalType.getBooleanValue(f);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
125	[BUG]  [BUGGY]  b  =  f.getBooleanValue(f);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  b  =  f.getBooleanValue(f);  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(f);	      b    =    goalType.getBooleanValue(f);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
126	[BUG]  [BUGGY]  if(goalType!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(goalType!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    return    false;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	17	None	replace
127	[BUG]  [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(isMinim)  {  return  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(isMinim)  {  return  false;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(isMinim)  {  return  false;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    return    false;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	17	None	replace
128	[BUG]  [BUGGY]  if(goalType!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(goalType!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  throw  new  IllegalArgumentException( " ");  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	replace
129	[BUG]  [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(isMinim)  {  throw  new  IllegalArgumentException( " ");  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	replace
130	[BUG]  [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  <identifier>  expected	2	None	replace
131	[BUG]  [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.GOLDEN_SECTION)  {  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  <identifier>  expected	2	None	replace
132	[BUG]  [BUGGY]  double  fv  =  mid;  fv  =  mid;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  mid;  fv  =  mid;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid;    fv  =  mid;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	8	None	add
133	[BUG]  [BUGGY]  double  fv  =  fx  +  mid;  int  fv  =  fx  +  mid;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  +  mid;  int  fv  =  fx  +  mid;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    mid;    int  fv  =  fx  +  mid;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	12	None	add
134	[BUG]  [BUGGY]  double  fv  =  fx  -  1;  double  fx  =  fx  -  1;  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  -  1;  double  fx  =  fx  -  1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    -    1;    double  fx  =  fx  -  1;	  	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	10	None	add
135	[BUG]  [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(fx  <  GOLDEN_SECTION)  {  fx  =  -fx;  }  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(fx  <  GOLDEN_SECTION)  {  fx  =  -fx;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(fx  <  GOLDEN_SECTION)  {  fx  =  -fx;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(fx    >    GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	15	None	replace
136	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  variable  count  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]              AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  variable  count  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	4	None	replace
137	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  isMinim?  t  :  fx;  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  t  :  fx;	      double    fv    =    fx;    	compilable	  [FE]  AssertionError  	1	4	replace
138	[BUG]  [BUGGY]  double  fv  =  isMinim?  t  :  fx;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  isMinim?  t  :  fx;  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  t  :  fx;	      double    fv    =    fx;    	compilable	  [FE]  AssertionError  	1	4	replace
139	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  fv;  [CE]  variable  fv  might  not  have  been  initialized  [FE]          AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  isMinim?  fx  :  fv;  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  fx  :  fv;	      double    fv    =    fx;    	non-compiled	[CE]  variable  fv  might  not  have  been  initialized	1	None	replace
140	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  *  mid;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  *  mid;	  double    fv    =    fx    +    mid;    	compilable	  [FE]  AssertionError  	13	4	replace
141	[BUG]  [BUGGY]  double  fv  =  fx  *  mid;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  *  mid;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  *  mid;	  double    fv    =    fx    +    mid;    	compilable	  [FE]  AssertionError  	13	4	replace
142	[BUG]  [BUGGY]  double  fv  =  fx  +  min;  [CE]  min  has  private  access  in  AbstractUnivariateRealOptimizer  [FE]      AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  +  min;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  +  min;	  double    fv    =    fx    +    mid;    	non-compiled	[CE]  min  has  private  access  in  AbstractUnivariateRealOptimizer	13	None	replace
143	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  -b;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  -b;	  double    fv    =    -fx;    	compilable	  [FE]  AssertionError  	26	4	replace
144	[BUG]  [BUGGY]  double  fv  =  -b;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  -b;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  -b;	  double    fv    =    -fx;    	compilable	  [FE]  AssertionError  	26	4	replace
145	[BUG]  [BUGGY]  double  fv  =  fv;  [CE]  variable  fv  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fv;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fv;	  double    fv    =    mid;    	non-compiled	[CE]  variable  fv  might  not  have  been  initialized	9	None	replace
146	[BUG]  [BUGGY]  if(isMinim  ||  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim  ||  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  continue;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim  ||  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  continue;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
147	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  *  1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  *  1;	  double    fv    =    fx    +    1;    	compilable	  [FE]  AssertionError  	7	4	replace
148	[BUG]  [BUGGY]  double  fv  =  fx  *  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx  *  1;  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  *  1;	  double    fv    =    fx    +    1;    	compilable	  [FE]  AssertionError  	7	4	replace
149	[BUG]  [BUGGY]  if(isMinim  ||  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(isMinim  ||  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim  ||  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    return    false;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	17	None	replace
150	[BUG]  [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)return  false;  }  [CE]  cannot  find  symbol  GOLDEN_SECTION  [FE]                AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)return  false;  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)return  false;  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_SECTION	17	None	replace
151	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(a);  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(a);  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(a);  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  not  a  statement	2	None	replace
152	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }	      if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  not  a  statement	2	None	replace
153	[BUG]  [BUGGY]  b  =  goalType.getBooleanValue(fx);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  b  =  goalType.getBooleanValue(fx);  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goalType.getBooleanValue(fx);	      b    =    goalType.getBooleanValue();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
154	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  Math.max(a,  fx);  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  Math.max(a,  fx);	  double    fv    =    0;    	compilable	  [FE]  AssertionError  	24	4	replace
155	[BUG]  [BUGGY]  double  fv  =  Math.max(a,  fx);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  Math.max(a,  fx);  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  Math.max(a,  fx);	  double    fv    =    0;    	compilable	  [FE]  AssertionError  	24	4	replace
156	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  Math.max(0,  fx);  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  Math.max(0,  fx);	  double    fv    =    0;    	compilable	  [FE]  AssertionError  	24	4	replace
157	[BUG]  [BUGGY]  double  fv  =  Math.max(0,  fx);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  double  fv  =  Math.max(0,  fx);  [BUGGY]    double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  Math.max(0,  fx);	  double    fv    =    0;    	compilable	  [FE]  AssertionError  	24	4	replace
158	[BUG]  [BUGGY]  b  =  f.getBooleanValue(realType);  [CE]  cannot  find  symbol  realType  [FE]            AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  b  =  f.getBooleanValue(realType);  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(realType);	      b    =    goalType.getBooleanValue(f);    	non-compiled	[CE]  cannot  find  symbol  realType	20	None	replace
159	[BUG]  [BUGGY]  b  =  f.getBooleanValue(targetType);  [CE]  cannot  find  symbol  targetType  [FE]              AssertionError    [CONTEXT]    double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }    [BUGGY]  b  =  f.getBooleanValue(targetType);  [BUGGY]    double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(targetType);	      b    =    goalType.getBooleanValue(f);    	non-compiled	[CE]  cannot  find  symbol  targetType	20	None	replace
