bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType!=  GoalType.GOLDEN_SECTION)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(goalType!=  GoalType.GOLDEN_SECTION)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(goalType!=  GoalType.GOLDEN_SECTION)  {  continue;  }	  if(goalType!=    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	106	None	replace
2	[BUG]  [BUGGY]  if(isMinim  ||  goalType!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim  ||  goalType!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim  ||  goalType!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  continue;  }	  if(goalType!=    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	106	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(a,  b);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  Math.max(a,  b);	  double    fv    =    Math.max(a,    fx);    	compilable	  [FE]  AssertionError  	155	4	replace
4	[BUG]  [BUGGY]  double  fv  =  Math.max(a,  b);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(a,  b);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  Math.max(a,  b);	  double    fv    =    Math.max(a,    fx);    	compilable	  [FE]  AssertionError  	155	4	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.min(a,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  Math.min(a,  fx);	  double    fv    =    Math.max(a,    fx);    	compilable	  [FE]  AssertionError  	155	4	replace
6	[BUG]  [BUGGY]  double  fv  =  Math.min(a,  fx);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.min(a,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  Math.min(a,  fx);	  double    fv    =    Math.max(a,    fx);    	compilable	  [FE]  AssertionError  	155	4	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(a,  fx  +  1);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  Math.max(a,  fx  +  1);	  double    fv    =    Math.max(a,    fx);    	compilable	  [FE]  AssertionError  	155	4	replace
8	[BUG]  [BUGGY]  double  fv  =  Math.max(a,  fx  +  1);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(a,  fx  +  1);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  Math.max(a,  fx  +  1);	  double    fv    =    Math.max(a,    fx);    	compilable	  [FE]  AssertionError  	155	4	replace
9	[BUG]  [BUGGY]  double  fv  =  Math.max(m,  fx);  [CE]  cannot  find  symbol  m  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(m,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  Math.max(m,  fx);	  double    fv    =    Math.max(a,    fx);    	non-compiled	[CE]  cannot  find  symbol  m	155	None	replace
10	[BUG]  [BUGGY]  double  fv  =  fx  *  1;  double  fv  =  fx  *  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  *  1;  double  fv  =  fx  *  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    *    1;    double  fv  =  fx  *  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	147	None	add
11	[BUG]  [BUGGY]  double  fv  =  fx  *  1;  Double  fv  =  fx  *  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  *  1;  Double  fv  =  fx  *  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    *    1;    Double  fv  =  fx  *  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	147	None	add
12	[BUG]  [BUGGY]  double  fv  =  fx  *  1;  int  fv  =  fx  *  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  *  1;  int  fv  =  fx  *  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    *    1;    int  fv  =  fx  *  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	147	None	add
13	[BUG]  [BUGGY]  double  fv  =  fx  *  1;  fv  =  fx  *  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  *  1;  fv  =  fx  *  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    *    1;    fv  =  fx  *  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	147	None	add
14	[BUG]  [BUGGY]  b  =  goals.getBooleanValue();  [CE]  cannot  find  symbol  goals  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  goals.getBooleanValue();  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goals.getBooleanValue();	  b    =    targetType.getBooleanValue();    	non-compiled	[CE]  cannot  find  symbol  goals	105	None	replace
15	[BUG]  [BUGGY]  fv  =  fx  +  mid;  [CE]  cannot  find  symbol  fv  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fv  =  fx  +  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fv  =  fx  +  mid;	  double    fv    =    fx    +    mid;    double    fv    =    fx    +    mid;    	non-compiled	[CE]  cannot  find  symbol  fv	94	None	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  hi  +  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  hi  +  fx;	  double    fv    =    fx    +    hi;    	compilable	  [FE]  AssertionError  	121	4	replace
17	[BUG]  [BUGGY]  double  fv  =  hi  +  fx;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  hi  +  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  hi  +  fx;	  double    fv    =    fx    +    hi;    	compilable	  [FE]  AssertionError  	121	4	replace
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  hi;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  +  hi;	  double    fv    =    fx    +    hi;    	compilable	  [FE]  AssertionError  	121	4	replace
19	[BUG]  [BUGGY]  double  fv  =  mid  +  hi;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  hi;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  +  hi;	  double    fv    =    fx    +    hi;    	compilable	  [FE]  AssertionError  	121	4	replace
20	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  hi  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  +  hi  +  1;	  double    fv    =    fx    +    hi;    	compilable	  [FE]  AssertionError  	121	4	replace
21	[BUG]  [BUGGY]  double  fv  =  fx  +  hi  +  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  hi  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  +  hi  +  1;	  double    fv    =    fx    +    hi;    	compilable	  [FE]  AssertionError  	121	4	replace
22	[BUG]  [BUGGY]  double  fv  =  -a;  double  fv  =  -a;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -a;  double  fv  =  -a;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    -a;    double  fv  =  -a;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	14	None	add
23	[BUG]  [BUGGY]  double  fv  =  -a;  Double  fv  =  -a;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -a;  Double  fv  =  -a;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    -a;    Double  fv  =  -a;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	14	None	add
24	[BUG]  [BUGGY]  double  fv  =  -a;  int  fv  =  -a;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -a;  int  fv  =  -a;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    -a;    int  fv  =  -a;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	14	None	add
25	[BUG]  [BUGGY]  double  fv  =  -a;  fv  =  -a;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -a;  fv  =  -a;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    -a;    fv  =  -a;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	14	None	add
26	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  fx  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  +  fx  +  1;	  double    fv    =    mid    +    fx;    	compilable	  [FE]  AssertionError  	79	4	replace
27	[BUG]  [BUGGY]  double  fv  =  mid  +  fx  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  fx  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  +  fx  +  1;	  double    fv    =    mid    +    fx;    	compilable	  [FE]  AssertionError  	79	4	replace
28	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  fx  +  d;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  +  fx  +  d;	  double    fv    =    mid    +    fx;    	compilable	  [FE]  AssertionError  	79	4	replace
29	[BUG]  [BUGGY]  double  fv  =  mid  +  fx  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  fx  +  d;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  +  fx  +  d;	  double    fv    =    mid    +    fx;    	compilable	  [FE]  AssertionError  	79	4	replace
30	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  fx  *  lo;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  +  fx  *  lo;	  double    fv    =    mid    +    fx;    	compilable	  [FE]  AssertionError  	79	4	replace
31	[BUG]  [BUGGY]  double  fv  =  mid  +  fx  *  lo;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  fx  *  lo;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  +  fx  *  lo;	  double    fv    =    mid    +    fx;    	compilable	  [FE]  AssertionError  	79	4	replace
32	[BUG]  [BUGGY]  double  fv  =  fx  +  b;  double  fv  =  fx  +  b;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  b;  double  fv  =  fx  +  b;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    b;    double  fv  =  fx  +  b;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	122	None	add
33	[BUG]  [BUGGY]  double  fv  =  fx  +  b;  Double  fv  =  fx  +  b;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  b;  Double  fv  =  fx  +  b;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    b;    Double  fv  =  fx  +  b;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	122	None	add
34	[BUG]  [BUGGY]  double  fv  =  fx  +  b;  int  fv  =  fx  +  b;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  b;  int  fv  =  fx  +  b;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    b;    int  fv  =  fx  +  b;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	122	None	add
35	[BUG]  [BUGGY]  double  fv  =  fx  +  b;  fv  =  fx  +  b;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  b;  fv  =  fx  +  b;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    b;    fv  =  fx  +  b;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	122	None	add
36	[BUG]  [BUGGY]  double  fv  =  mid  /  1;  double  fv  =  mid  /  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  /  1;  double  fv  =  mid  /  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid    /    1;    double  fv  =  mid  /  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	103	None	add
37	[BUG]  [BUGGY]  double  fv  =  mid  /  1;  Double  fv  =  mid  /  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  /  1;  Double  fv  =  mid  /  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid    /    1;    Double  fv  =  mid  /  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	103	None	add
38	[BUG]  [BUGGY]  double  fv  =  mid  /  1;  int  fv  =  mid  /  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  /  1;  int  fv  =  mid  /  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid    /    1;    int  fv  =  mid  /  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	103	None	add
39	[BUG]  [BUGGY]  double  fv  =  mid  /  1;  fv  =  mid  /  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  /  1;  fv  =  mid  /  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid    /    1;    fv  =  mid  /  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	103	None	add
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  1.0;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  1.0;	  double    fv    =    0.0;    	compilable	  [FE]  AssertionError  	89	4	replace
41	[BUG]  [BUGGY]  double  fv  =  1.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  1.0;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  1.0;	  double    fv    =    0.0;    	compilable	  [FE]  AssertionError  	89	4	replace
42	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  0.5;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  0.5;	  double    fv    =    0.0;    	compilable	  [FE]  AssertionError  	89	4	replace
43	[BUG]  [BUGGY]  double  fv  =  0.5;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  0.5;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  0.5;	  double    fv    =    0.0;    	compilable	  [FE]  AssertionError  	89	4	replace
44	[BUG]  [BUGGY]  final  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  final  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	final  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  if(isMinim)    {    final    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	66	None	replace
45	[BUG]  [BUGGY]  while(isMinim)  {  final  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  while(isMinim)  {  final  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	while(isMinim)  {  final  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  if(isMinim)    {    final    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	66	None	replace
46	[BUG]  [BUGGY]  if(isMinim)  {  final  double  fv  =  x;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  final  double  fv  =  x;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  final  double  fv  =  x;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  if(isMinim)    {    final    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	66	None	replace
47	[BUG]  [BUGGY]  fv  =  fx  -  1;  [CE]  cannot  find  symbol  fv  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fv  =  fx  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fv  =  fx  -  1;	  double    fv    =    fx    -    1;    fv    =    fx    -    1;    	non-compiled	[CE]  cannot  find  symbol  fv	93	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid;  fv  =  fx  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid;  fv  =  fx  -  1;	  double    fv    =    fx    -    1;    fv    =    fx    -    1;    	compilable	  [FE]  AssertionError  	93	4	replace
49	[BUG]  [BUGGY]  double  fv  =  mid;  fv  =  fx  -  1;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid;  fv  =  fx  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid;  fv  =  fx  -  1;	  double    fv    =    fx    -    1;    fv    =    fx    -    1;    	compilable	  [FE]  AssertionError  	93	4	replace
50	[BUG]  [BUGGY]  fx  =  fx  -  1;  [CE]  cannot  find  symbol  fv  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fx  =  fx  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fx  =  fx  -  1;	  double    fv    =    fx    -    1;    fv    =    fx    -    1;    	non-compiled	[CE]  cannot  find  symbol  fv	93	None	replace
51	[BUG]  [BUGGY]  fv  =  w  -  1;  [CE]  cannot  find  symbol  fv  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fv  =  w  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fv  =  w  -  1;	  double    fv    =    fx    -    1;    fv    =    fx    -    1;    	non-compiled	[CE]  cannot  find  symbol  fv	93	None	replace
52	[BUG]  [BUGGY]  double  fv  =  fx  +  max;  [CE]  max  has  private  access  in  AbstractUnivariateRealOptimizer  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  max;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  +  max;	  double    fv    =    fx    +    min;    	non-compiled	[CE]  max  has  private  access  in  AbstractUnivariateRealOptimizer	142	None	replace
53	[BUG]  [BUGGY]  double  fv  =  fx  +  min  +  1;  [CE]  min  has  private  access  in  AbstractUnivariateRealOptimizer  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  min  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  +  min  +  1;	  double    fv    =    fx    +    min;    	non-compiled	[CE]  min  has  private  access  in  AbstractUnivariateRealOptimizer	142	None	replace
54	[BUG]  [BUGGY]  double  fv  =  min  +  fx;  [CE]  min  has  private  access  in  AbstractUnivariateRealOptimizer  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  min  +  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  min  +  fx;	  double    fv    =    fx    +    min;    	non-compiled	[CE]  min  has  private  access  in  AbstractUnivariateRealOptimizer	142	None	replace
55	[BUG]  [BUGGY]  double  fv  =  3;  double  fv  =  3;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  3;  double  fv  =  3;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    3;    double  fv  =  3;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	86	None	add
56	[BUG]  [BUGGY]  double  fv  =  3;  Double  fv  =  3;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  3;  Double  fv  =  3;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    3;    Double  fv  =  3;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	86	None	add
57	[BUG]  [BUGGY]  double  fv  =  3;  int  fv  =  3;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  3;  int  fv  =  3;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    3;    int  fv  =  3;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	86	None	add
58	[BUG]  [BUGGY]  double  fv  =  3;  fv  =  3;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  3;  fv  =  3;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    3;    fv  =  3;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	86	None	add
59	[BUG]  [BUGGY]  double  fv  =  mid  +  1;  double  fv  =  mid  +  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  1;  double  fv  =  mid  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid    +    1;    double  fv  =  mid  +  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	68	None	add
60	[BUG]  [BUGGY]  double  fv  =  mid  +  1;  Double  fv  =  mid  +  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  1;  Double  fv  =  mid  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid    +    1;    Double  fv  =  mid  +  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	68	None	add
61	[BUG]  [BUGGY]  double  fv  =  mid  +  1;  int  fv  =  mid  +  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  1;  int  fv  =  mid  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid    +    1;    int  fv  =  mid  +  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	68	None	add
62	[BUG]  [BUGGY]  double  fv  =  mid  +  1;  fv  =  mid  +  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  1;  fv  =  mid  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid    +    1;    fv  =  mid  +  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	68	None	add
63	[BUG]  [BUGGY]  fv  =  fx  +  1;  [CE]  cannot  find  symbol  fv  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fv  =  fx  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fv  =  fx  +  1;	  double    fv    =    fx    +    1;    double    fv    =    fx    +    1;    	non-compiled	[CE]  cannot  find  symbol  fv	56	None	replace
64	[BUG]  [BUGGY]  Double  fv  =  0;  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  Double  fv  =  0;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	Double  fv  =  0;	  double    fv    =    0;    Double    fv    =    0;    	non-compiled	[CE]  incompatible  types	37	None	replace
65	[BUG]  [BUGGY]  fv  =  0;  [CE]  cannot  find  symbol  fv  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fv  =  0;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fv  =  0;	  double    fv    =    0;    Double    fv    =    0;    	non-compiled	[CE]  cannot  find  symbol  fv	37	None	replace
66	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.MAXIMIZE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.abs(a);    }    	non-compiled	[CE]  not  a  statement	152	None	replace
67	[BUG]  [BUGGY]  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.abs(a);    }    	non-compiled	[CE]  not  a  statement	152	None	replace
68	[BUG]  [BUGGY]  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.abs(a);    }    	non-compiled	[CE]  not  a  statement	152	None	replace
69	[BUG]  [BUGGY]  int  fv  =  fx  +  mid;  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  fv  =  fx  +  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  fv  =  fx  +  mid;	  double    fv    =    fx    +    mid;    int    fv    =    fx    +    mid;    	non-compiled	[CE]  possible  loss  of  precision	133	None	replace
70	[BUG]  [BUGGY]  int  fv  =  mid;  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  fv  =  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  fv  =  mid;	  double    fv    =    fx    +    mid;    int    fv    =    fx    +    mid;    	non-compiled	[CE]  possible  loss  of  precision	133	None	replace
71	[BUG]  [BUGGY]  int  fv  =  mid  +  fx;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  fv  =  mid  +  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  fv  =  mid  +  fx;	  double    fv    =    fx    +    mid;    int    fv    =    fx    +    mid;    	non-compiled	[CE]  possible  loss  of  precision	133	None	replace
72	[BUG]  [BUGGY]  if(isMinim)  {  return  true;  }  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  return  true;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  return  true;  }	  if(isMinim)    {    return    false;    }    	non-compiled	[CE]  incompatible  types	30	None	replace
73	[BUG]  [BUGGY]  if(isMinim  ||  isMinim)  {  return  false;  }  [CE]  incompatible  types  [FE]                        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim  ||  isMinim)  {  return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim  ||  isMinim)  {  return  false;  }	  if(isMinim)    {    return    false;    }    	non-compiled	[CE]  incompatible  types	30	None	replace
74	[BUG]  [BUGGY]  b  =  f.getBooleanValue(f,  true);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  f.getBooleanValue(f,  true);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(f,  true);	  b    =    goalType.getBooleanValue(f,    true);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
75	[BUG]  [BUGGY]  b  =  f.getBooleanValue(goalType,  true);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  f.getBooleanValue(goalType,  true);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(goalType,  true);	  b    =    goalType.getBooleanValue(f,    true);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
76	[BUG]  [BUGGY]  double  fv  =  mid  +  fx;  double  fv  =  mid  +  fx;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  fx;  double  fv  =  mid  +  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid    +    fx;    double  fv  =  mid  +  fx;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	78	None	add
77	[BUG]  [BUGGY]  double  fv  =  mid  +  fx;  Double  fv  =  mid  +  fx;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  fx;  Double  fv  =  mid  +  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid    +    fx;    Double  fv  =  mid  +  fx;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	78	None	add
78	[BUG]  [BUGGY]  double  fv  =  mid  +  fx;  int  fv  =  mid  +  fx;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  fx;  int  fv  =  mid  +  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid    +    fx;    int  fv  =  mid  +  fx;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	78	None	add
79	[BUG]  [BUGGY]  double  fv  =  mid  +  fx;  fv  =  mid  +  fx;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  fx;  fv  =  mid  +  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid    +    fx;    fv  =  mid  +  fx;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	78	None	add
80	[BUG]  [BUGGY]  int  fv  =  -fx;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  fv  =  -fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  fv  =  -fx;	  double    fv    =    -fx;    int    fv    =    -fx;    	non-compiled	[CE]  possible  loss  of  precision	76	None	replace
81	[BUG]  [BUGGY]  int  fv  =  -goalType;  [CE]  bad  operand  type  GoalType  for  unary  operator  '-'  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  fv  =  -goalType;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  fv  =  -goalType;	  double    fv    =    -fx;    int    fv    =    -fx;    	non-compiled	[CE]  bad  operand  type  GoalType  for  unary  operator  '-'	76	None	replace
82	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  Double  fv  =  fx  +  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	Double  fv  =  fx  +  mid;	  double    fv    =    fx    +    mid;    Double    fv    =    fx    +    mid;    	compilable	  [FE]  AssertionError  	95	4	replace
83	[BUG]  [BUGGY]  Double  fv  =  fx  +  mid;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  Double  fv  =  fx  +  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	Double  fv  =  fx  +  mid;	  double    fv    =    fx    +    mid;    Double    fv    =    fx    +    mid;    	compilable	  [FE]  AssertionError  	95	4	replace
84	[BUG]  [BUGGY]  Double  fv  =  fx  +  min;  [CE]  min  has  private  access  in  AbstractUnivariateRealOptimizer  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  Double  fv  =  fx  +  min;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	Double  fv  =  fx  +  min;	  double    fv    =    fx    +    mid;    Double    fv    =    fx    +    mid;    	non-compiled	[CE]  min  has  private  access  in  AbstractUnivariateRealOptimizer	95	None	replace
85	[BUG]  [BUGGY]  b  =  t.getBooleanValue(goalType);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  t.getBooleanValue(goalType);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  t.getBooleanValue(goalType);	  b    =    goalType.getBooleanValue(t);    	non-compiled	[CE]  double  cannot  be  dereferenced	102	None	replace
86	[BUG]  [BUGGY]  b  =  t.getBooleanValue(t);  [CE]  double  cannot  be  dereferenced  [FE]                        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  t.getBooleanValue(t);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  t.getBooleanValue(t);	  b    =    goalType.getBooleanValue(t);    	non-compiled	[CE]  double  cannot  be  dereferenced	102	None	replace
87	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  hi  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  hi  +  1;	  double    fv    =    hi;    	compilable	  [FE]  AssertionError  	55	4	replace
88	[BUG]  [BUGGY]  double  fv  =  hi  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  hi  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  hi  +  1;	  double    fv    =    hi;    	compilable	  [FE]  AssertionError  	55	4	replace
89	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  Double  fv  =  -fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	Double  fv  =  -fx;	  double    fv    =    -fx;    Double    fv    =    -fx;    	compilable	  [FE]  AssertionError  	75	4	replace
90	[BUG]  [BUGGY]  Double  fv  =  -fx;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  Double  fv  =  -fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	Double  fv  =  -fx;	  double    fv    =    -fx;    Double    fv    =    -fx;    	compilable	  [FE]  AssertionError  	75	4	replace
91	[BUG]  [BUGGY]  fv  =  -fx;  [CE]  cannot  find  symbol  fv  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fv  =  -fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fv  =  -fx;	  double    fv    =    -fx;    Double    fv    =    -fx;    	non-compiled	[CE]  cannot  find  symbol  fv	75	None	replace
92	[BUG]  [BUGGY]  double  fv  =  0.0;  double  fv  =  0.0;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  0.0;  double  fv  =  0.0;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    0.0;    double  fv  =  0.0;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	88	None	add
93	[BUG]  [BUGGY]  double  fv  =  0.0;  Double  fv  =  0.0;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  0.0;  Double  fv  =  0.0;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    0.0;    Double  fv  =  0.0;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	88	None	add
94	[BUG]  [BUGGY]  double  fv  =  0.0;  int  fv  =  0.0;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  0.0;  int  fv  =  0.0;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    0.0;    int  fv  =  0.0;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	88	None	add
95	[BUG]  [BUGGY]  double  fv  =  0.0;  fv  =  0.0;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  0.0;  fv  =  0.0;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    0.0;    fv  =  0.0;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	88	None	add
96	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  GOLDEN_SECTION;  double  fv  =  isMinim?  fx  :  GOLDEN_SECTION;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  GOLDEN_SECTION;  double  fv  =  isMinim?  fx  :  GOLDEN_SECTION;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    fx    :    GOLDEN_SECTION;    double  fv  =  isMinim?  fx  :  GOLDEN_SECTION;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	114	None	add
97	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  GOLDEN_SECTION;  Double  fv  =  isMinim?  fx  :  GOLDEN_SECTION;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  GOLDEN_SECTION;  Double  fv  =  isMinim?  fx  :  GOLDEN_SECTION;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    fx    :    GOLDEN_SECTION;    Double  fv  =  isMinim?  fx  :  GOLDEN_SECTION;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	114	None	add
98	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  GOLDEN_SECTION;  int  fv  =  isMinim?  fx  :  GOLDEN_SECTION;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  GOLDEN_SECTION;  int  fv  =  isMinim?  fx  :  GOLDEN_SECTION;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    fx    :    GOLDEN_SECTION;    int  fv  =  isMinim?  fx  :  GOLDEN_SECTION;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	114	None	add
99	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  GOLDEN_SECTION;  fv  =  isMinim?  fx  :  GOLDEN_SECTION;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  GOLDEN_SECTION;  fv  =  isMinim?  fx  :  GOLDEN_SECTION;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    fx    :    GOLDEN_SECTION;    fv  =  isMinim?  fx  :  GOLDEN_SECTION;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	114	None	add
100	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -v;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  -v;	  double    fv    =    -goalType;    	compilable	  [FE]  AssertionError  	9	4	replace
101	[BUG]  [BUGGY]  double  fv  =  -v;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -v;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  -v;	  double    fv    =    -goalType;    	compilable	  [FE]  AssertionError  	9	4	replace
102	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -w;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  -w;	  double    fv    =    -goalType;    	compilable	  [FE]  AssertionError  	9	4	replace
103	[BUG]  [BUGGY]  double  fv  =  -w;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -w;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  -w;	  double    fv    =    -goalType;    	compilable	  [FE]  AssertionError  	9	4	replace
104	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  GOLDEN_SECTION  +  1;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  fx  :  GOLDEN_SECTION  +  1;	  double    fv    =    isMinim?    fx    :    GOLDEN_SECTION;    	compilable	  [FE]  AssertionError  	115	4	replace
105	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  GOLDEN_SECTION  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  GOLDEN_SECTION  +  1;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  fx  :  GOLDEN_SECTION  +  1;	  double    fv    =    isMinim?    fx    :    GOLDEN_SECTION;    	compilable	  [FE]  AssertionError  	115	4	replace
106	[BUG]  [BUGGY]  double  fv  =  isMinim?  fw  :  GOLDEN_SECTION;  [CE]  cannot  find  symbol  fw  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fw  :  GOLDEN_SECTION;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  fw  :  GOLDEN_SECTION;	  double    fv    =    isMinim?    fx    :    GOLDEN_SECTION;    	non-compiled	[CE]  cannot  find  symbol  fw	115	None	replace
107	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  GOLDEN_SECTION  +  2;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  fx  :  GOLDEN_SECTION  +  2;	  double    fv    =    isMinim?    fx    :    GOLDEN_SECTION;    	compilable	  [FE]  AssertionError  	115	4	replace
108	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  GOLDEN_SECTION  +  2;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  GOLDEN_SECTION  +  2;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  fx  :  GOLDEN_SECTION  +  2;	  double    fv    =    isMinim?    fx    :    GOLDEN_SECTION;    	compilable	  [FE]  AssertionError  	115	4	replace
109	[BUG]  [BUGGY]  double  fv  =  isMinim?  t  :  fx;  double  fv  =  isMinim?  t  :  fx;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  t  :  fx;  double  fv  =  isMinim?  t  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    t    :    fx;    double  fv  =  isMinim?  t  :  fx;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	137	None	add
110	[BUG]  [BUGGY]  double  fv  =  isMinim?  t  :  fx;  Double  fv  =  isMinim?  t  :  fx;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  t  :  fx;  Double  fv  =  isMinim?  t  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    t    :    fx;    Double  fv  =  isMinim?  t  :  fx;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	137	None	add
111	[BUG]  [BUGGY]  double  fv  =  isMinim?  t  :  fx;  double  fv  =  isMinim?  t  :  fx);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  t  :  fx;  double  fv  =  isMinim?  t  :  fx);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    t    :    fx;    double  fv  =  isMinim?  t  :  fx);	  	non-compiled	[CE]  ';'  expected	137	None	add
112	[BUG]  [BUGGY]  double  fv  =  isMinim?  t  :  fx;  int  fv  =  isMinim?  t  :  fx;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  t  :  fx;  int  fv  =  isMinim?  t  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    t    :    fx;    int  fv  =  isMinim?  t  :  fx;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	137	None	add
113	[BUG]  [BUGGY]  double  fv  =  isMinim?  t  :  fx;  fv  =  isMinim?  t  :  fx;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]            AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  t  :  fx;  fv  =  isMinim?  t  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    t    :    fx;    fv  =  isMinim?  t  :  fx;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	137	None	add
114	[BUG]  [BUGGY]  while(isMinim)  {  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  while(isMinim)  {  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	while(isMinim)  {  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  if(isMinim)    {    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	67	None	replace
115	[BUG]  [BUGGY]  if(isMinim)  {  for(int  b  =  0;  b  <  maximumIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  for(int  b  =  0;  b  <  maximumIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  for(int  b  =  0;  b  <  maximumIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  if(isMinim)    {    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	67	None	replace
116	[BUG]  [BUGGY]  if(isMinim)  {  for(int  b  =  0;  b  <  count;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]                        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  for(int  b  =  0;  b  <  count;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  for(int  b  =  0;  b  <  count;  b++)  {  m  =  0.5  *  (a  +  b);  }	  if(isMinim)    {    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	67	None	replace
117	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  1;  fv  =  fx  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  +  1;  fv  =  fx  +  1;	  double    fv    =    fx    +    1;    fv    =    fx    +    1;    	compilable	  [FE]  AssertionError  	59	4	replace
118	[BUG]  [BUGGY]  double  fv  =  mid  +  1;  fv  =  fx  +  1;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  1;  fv  =  fx  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  +  1;  fv  =  fx  +  1;	  double    fv    =    fx    +    1;    fv    =    fx    +    1;    	compilable	  [FE]  AssertionError  	59	4	replace
119	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid;  fv  =  fx  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid;  fv  =  fx  +  1;	  double    fv    =    fx    +    1;    fv    =    fx    +    1;    	compilable	  [FE]  AssertionError  	59	4	replace
120	[BUG]  [BUGGY]  double  fv  =  mid;  fv  =  fx  +  1;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid;  fv  =  fx  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid;  fv  =  fx  +  1;	  double    fv    =    fx    +    1;    fv    =    fx    +    1;    	compilable	  [FE]  AssertionError  	59	4	replace
121	[BUG]  [BUGGY]  fx  =  fx  +  1;  [CE]  cannot  find  symbol  fv  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fx  =  fx  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fx  =  fx  +  1;	  double    fv    =    fx    +    1;    fv    =    fx    +    1;    	non-compiled	[CE]  cannot  find  symbol  fv	59	None	replace
122	[BUG]  [BUGGY]  double  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	65	None	replace
123	[BUG]  [BUGGY]  int  count  =  1;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  count  =  1;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  count  =  1;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	65	None	replace
124	[BUG]  [BUGGY]  int  count  =  0;  for(int  b  =  0;  b  <  minimumIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  count  =  0;  for(int  b  =  0;  b  <  minimumIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  count  =  0;  for(int  b  =  0;  b  <  minimumIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	65	None	replace
125	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -d  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  -d  +  1;	  double    fv    =    -d;    	compilable	  [FE]  AssertionError  	11	4	replace
126	[BUG]  [BUGGY]  double  fv  =  -d  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -d  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  -d  +  1;	  double    fv    =    -d;    	compilable	  [FE]  AssertionError  	11	4	replace
127	[BUG]  [BUGGY]  double  fv  =  lo;  double  fv  =  lo;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  lo;  double  fv  =  lo;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    lo;    double  fv  =  lo;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	52	None	add
128	[BUG]  [BUGGY]  double  fv  =  lo;  Double  fv  =  lo;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  lo;  Double  fv  =  lo;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    lo;    Double  fv  =  lo;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	52	None	add
129	[BUG]  [BUGGY]  double  fv  =  lo;  int  fv  =  lo;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  lo;  int  fv  =  lo;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    lo;    int  fv  =  lo;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	52	None	add
130	[BUG]  [BUGGY]  double  fv  =  lo;  fv  =  lo;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  lo;  fv  =  lo;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    lo;    fv  =  lo;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	52	None	add
131	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  2;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  +  2;	  double    fv    =    mid    +    1;    	compilable	  [FE]  AssertionError  	69	4	replace
132	[BUG]  [BUGGY]  double  fv  =  mid  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  2;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  +  2;	  double    fv    =    mid    +    1;    	compilable	  [FE]  AssertionError  	69	4	replace
133	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  lo  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  lo  +  1;	  double    fv    =    mid    +    1;    	compilable	  [FE]  AssertionError  	69	4	replace
134	[BUG]  [BUGGY]  double  fv  =  lo  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  lo  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  lo  +  1;	  double    fv    =    mid    +    1;    	compilable	  [FE]  AssertionError  	69	4	replace
135	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  3;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  +  3;	  double    fv    =    mid    +    1;    	compilable	  [FE]  AssertionError  	69	4	replace
136	[BUG]  [BUGGY]  double  fv  =  mid  +  3;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  3;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  +  3;	  double    fv    =    mid    +    1;    	compilable	  [FE]  AssertionError  	69	4	replace
137	[BUG]  [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  fw;  [CE]  cannot  find  symbol  fw  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  fw;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  GOLDEN_SECTION  :  fw;	  double    fv    =    isMinim?    GOLDEN_SECTION    :    fx;    	non-compiled	[CE]  cannot  find  symbol  fw	117	None	replace
138	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  fx  +  1;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  GOLDEN_SECTION  :  fx  +  1;	  double    fv    =    isMinim?    GOLDEN_SECTION    :    fx;    	compilable	  [FE]  AssertionError  	117	4	replace
139	[BUG]  [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  fx  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  fx  +  1;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  GOLDEN_SECTION  :  fx  +  1;	  double    fv    =    isMinim?    GOLDEN_SECTION    :    fx;    	compilable	  [FE]  AssertionError  	117	4	replace
140	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  d;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  GOLDEN_SECTION  :  d;	  double    fv    =    isMinim?    GOLDEN_SECTION    :    fx;    	compilable	  [FE]  AssertionError  	117	4	replace
141	[BUG]  [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  d;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  GOLDEN_SECTION  :  d;	  double    fv    =    isMinim?    GOLDEN_SECTION    :    fx;    	compilable	  [FE]  AssertionError  	117	4	replace
142	[BUG]  [BUGGY]  While(isMinim)  {  throw  new  IllegalArgumentException( " "  +  fx.equals(goalType));  }  [CE]  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  While(isMinim)  {  throw  new  IllegalArgumentException( " "  +  fx.equals(goalType));  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	While(isMinim)  {  throw  new  IllegalArgumentException( " "  +  fx.equals(goalType));  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ".equals(fx));    }    	non-compiled	[CE]  	34	None	replace
143	[BUG]  [BUGGY]  While(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(fx));  }  [CE]  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  While(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(fx));  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	While(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(fx));  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ".equals(fx));    }    	non-compiled	[CE]  	34	None	replace
144	[BUG]  [BUGGY]  While(isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  While(isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	While(isMinim)  {  throw  new  IllegalArgumentException( " ");  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ".equals(fx));    }    	non-compiled	[CE]  	34	None	replace
145	[BUG]  [BUGGY]  While(isMinim)  {  throw  new  IllegalArgumentException( " "  +  fx.equals(m));  }  [CE]  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  While(isMinim)  {  throw  new  IllegalArgumentException( " "  +  fx.equals(m));  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	While(isMinim)  {  throw  new  IllegalArgumentException( " "  +  fx.equals(m));  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ".equals(fx));    }    	non-compiled	[CE]  	34	None	replace
146	[BUG]  [BUGGY]  if(isMinim  ||  isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  fv  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim  ||  isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim  ||  isMinim)  {  throw  new  IllegalArgumentException( " ");  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  fv	129	None	replace
147	[BUG]  [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(x));  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(x));  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(x));  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	129	None	replace
148	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  1  :  0;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  1  :  0;	  double    fv    =    isMinim;    	compilable	  [FE]  AssertionError  	118	4	replace
149	[BUG]  [BUGGY]  double  fv  =  isMinim?  1  :  0;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  1  :  0;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  1  :  0;	  double    fv    =    isMinim;    	compilable	  [FE]  AssertionError  	118	4	replace
150	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  min;  [CE]  min  has  private  access  in  AbstractUnivariateRealOptimizer  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  min;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  fx  :  min;	  double    fv    =    isMinim;    	non-compiled	[CE]  min  has  private  access  in  AbstractUnivariateRealOptimizer	118	None	replace
151	[BUG]  [BUGGY]  b  =  targetType.getBooleanValue(f,  x);  [CE]  cannot  find  symbol  targetType  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  targetType.getBooleanValue(f,  x);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  targetType.getBooleanValue(f,  x);	  b    =    f.getBooleanValue(goalType,    x);    	non-compiled	[CE]  cannot  find  symbol  targetType	26	None	replace
152	[BUG]  [BUGGY]  b  =  fieldType.getBooleanValue(f,  x);  [CE]  cannot  find  symbol  fieldType  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  fieldType.getBooleanValue(f,  x);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  fieldType.getBooleanValue(f,  x);	  b    =    f.getBooleanValue(goalType,    x);    	non-compiled	[CE]  cannot  find  symbol  fieldType	26	None	replace
153	[BUG]  [BUGGY]  b  =  tooltips.getBooleanValue(f,  x);  [CE]  cannot  find  symbol  tooltips  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  tooltips.getBooleanValue(f,  x);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  tooltips.getBooleanValue(f,  x);	  b    =    f.getBooleanValue(goalType,    x);    	non-compiled	[CE]  cannot  find  symbol  tooltips	26	None	replace
154	[BUG]  [BUGGY]  double  fv  =  fx  *  mid;  double  fv  =  fx  *  mid;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  *  mid;  double  fv  =  fx  *  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    *    mid;    double  fv  =  fx  *  mid;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	140	None	add
155	[BUG]  [BUGGY]  double  fv  =  fx  *  mid;  Double  fv  =  fx  *  mid;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  *  mid;  Double  fv  =  fx  *  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    *    mid;    Double  fv  =  fx  *  mid;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	140	None	add
156	[BUG]  [BUGGY]  double  fv  =  fx  *  mid;  double  fv  =  fx  *  middle;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  *  mid;  double  fv  =  fx  *  middle;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    *    mid;    double  fv  =  fx  *  middle;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	140	None	add
157	[BUG]  [BUGGY]  double  fv  =  fx  *  mid;  fv  =  fx  *  mid;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  *  mid;  fv  =  fx  *  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    *    mid;    fv  =  fx  *  mid;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	140	None	add
158	[BUG]  [BUGGY]  if(isMinim)return  false;  [CE]  incompatible  types  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)return  false;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)return  false;	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)return    false;    }    	non-compiled	[CE]  incompatible  types	150	None	replace
159	[BUG]  [BUGGY]  if(!isMinim)return  false;  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(!isMinim)return  false;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(!isMinim)return  false;	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)return    false;    }    	non-compiled	[CE]  incompatible  types	150	None	replace
160	[BUG]  [BUGGY]  if(goalType  ==  GoalType.SECTION)  {  if(!isMinim)return  false;  }  [CE]  cannot  find  symbol  SECTION  [FE]                        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.SECTION)  {  if(!isMinim)return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.SECTION)  {  if(!isMinim)return  false;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)return    false;    }    	non-compiled	[CE]  cannot  find  symbol  SECTION	150	None	replace
161	[BUG]  [BUGGY]  if(isMinim  &&  isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim  &&  isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim  &&  isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }	  if(isMinim    ||    isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	47	None	replace
162	[BUG]  [BUGGY]  if(isMinim  ||  isMaximum)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]                        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim  ||  isMaximum)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim  ||  isMaximum)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }	  if(isMinim    ||    isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	47	None	replace
163	[BUG]  [BUGGY]  b  =  GoalType.getBooleanValue(f);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  GoalType.getBooleanValue(f);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  GoalType.getBooleanValue(f);	  b    =    f.getBooleanValue(goalType);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
164	[BUG]  [BUGGY]  b  =  targetType.getBooleanValue(f);  [CE]  cannot  find  symbol  targetType  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  targetType.getBooleanValue(f);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  targetType.getBooleanValue(f);	  b    =    f.getBooleanValue(goalType);    	non-compiled	[CE]  cannot  find  symbol  targetType	23	None	replace
165	[BUG]  [BUGGY]  b  =  lo.getBooleanValue(goalType);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  lo.getBooleanValue(goalType);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  lo.getBooleanValue(goalType);	  b    =    f.getBooleanValue(goalType);    	non-compiled	[CE]  double  cannot  be  dereferenced	23	None	replace
166	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  Double  fv  =  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	Double  fv  =  mid;	  double    fv    =    mid;    Double    fv    =    mid;    	compilable	  [FE]  AssertionError  	61	4	replace
167	[BUG]  [BUGGY]  Double  fv  =  mid;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  Double  fv  =  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	Double  fv  =  mid;	  double    fv    =    mid;    Double    fv    =    mid;    	compilable	  [FE]  AssertionError  	61	4	replace
168	[BUG]  [BUGGY]  double  fv  =  lo;  Double  fv  =  mid;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  lo;  Double  fv  =  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  lo;  Double  fv  =  mid;	  double    fv    =    mid;    Double    fv    =    mid;    	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	61	None	replace
169	[BUG]  [BUGGY]  double  fv  =  low;  [CE]  cannot  find  symbol  low  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  low;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  low;	  double    fv    =    mid;    double    fv    =    low;    	non-compiled	[CE]  cannot  find  symbol  low	64	None	replace
170	[BUG]  [BUGGY]  Double  fv  =  low;  [CE]  cannot  find  symbol  low  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  Double  fv  =  low;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	Double  fv  =  low;	  double    fv    =    mid;    double    fv    =    low;    	non-compiled	[CE]  cannot  find  symbol  low	64	None	replace
171	[BUG]  [BUGGY]  b  =  f.getBooleanValue(d);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  f.getBooleanValue(d);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(d);	  b    =    f.getBooleanValue(realType);    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
172	[BUG]  [BUGGY]  b  =  f.getBooleanValue(lo);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  f.getBooleanValue(lo);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(lo);	  b    =    f.getBooleanValue(realType);    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
173	[BUG]  [BUGGY]  b  =  f.getBooleanValue(w);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  f.getBooleanValue(w);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(w);	  b    =    f.getBooleanValue(realType);    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
174	[BUG]  [BUGGY]  if(!isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  return  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(!isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(!isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  return  false;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(isMinim)    {    return    false;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	127	None	replace
175	[BUG]  [BUGGY]  while(isMinim  &&  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(isMinim)  {  return  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  while(isMinim  &&  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(isMinim)  {  return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	while(isMinim  &&  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(isMinim)  {  return  false;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(isMinim)    {    return    false;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	127	None	replace
176	[BUG]  [BUGGY]  double  fv  =  lo;  double  fv  =  mid;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  lo;  double  fv  =  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  lo;  double  fv  =  mid;	  double    fv    =    mid;    double    fv    =    mid;    	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	60	None	replace
177	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  mid  :  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  mid  :  fx;	  double    fv    =    mid;    double    fv    =    mid;    	compilable	  [FE]  AssertionError  	60	4	replace
178	[BUG]  [BUGGY]  double  fv  =  isMinim?  mid  :  fx;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  mid  :  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  mid  :  fx;	  double    fv    =    mid;    double    fv    =    mid;    	compilable	  [FE]  AssertionError  	60	4	replace
179	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.MAXIMIZE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    	non-compiled	[CE]  reached  end  of  file  while  parsing	41	None	replace
180	[BUG]  [BUGGY]  double  fv  =  mid;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	41	None	replace
181	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  1;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx;  int  count  =  1;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  1;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	41	None	replace
182	[BUG]  [BUGGY]  b  =  goalType.getBooleanValue(f,  f);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  goalType.getBooleanValue(f,  f);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goalType.getBooleanValue(f,  f);	  b    =    f.getBooleanValue(f,    goalType);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
183	[BUG]  [BUGGY]  b  =  GoalType.getBooleanValue(f,  goalType);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  GoalType.getBooleanValue(f,  goalType);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  GoalType.getBooleanValue(f,  goalType);	  b    =    f.getBooleanValue(f,    goalType);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
184	[BUG]  [BUGGY]  b  =  targetType.getBooleanValue(f,  f);  [CE]  cannot  find  symbol  targetType  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  targetType.getBooleanValue(f,  f);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  targetType.getBooleanValue(f,  f);	  b    =    f.getBooleanValue(f,    goalType);    	non-compiled	[CE]  cannot  find  symbol  targetType	6	None	replace
185	[BUG]  [BUGGY]  b  =  goals.getBooleanValue(f,  f);  [CE]  cannot  find  symbol  goals  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  goals.getBooleanValue(f,  f);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goals.getBooleanValue(f,  f);	  b    =    f.getBooleanValue(f,    goalType);    	non-compiled	[CE]  cannot  find  symbol  goals	6	None	replace
186	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  *  2;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  *  2;	  double    fv    =    fx    *    1;    	compilable	  [FE]  AssertionError  	148	4	replace
187	[BUG]  [BUGGY]  double  fv  =  fx  *  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  *  2;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  *  2;	  double    fv    =    fx    *    1;    	compilable	  [FE]  AssertionError  	148	4	replace
188	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  *  4;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  *  4;	  double    fv    =    fx    *    1;    	compilable	  [FE]  AssertionError  	148	4	replace
189	[BUG]  [BUGGY]  double  fv  =  fx  *  4;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  *  4;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  *  4;	  double    fv    =    fx    *    1;    	compilable	  [FE]  AssertionError  	148	4	replace
190	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  [CE]  '.class'  expected  [FE]                        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *	  if(isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  '.class'  expected	42	None	replace
191	[BUG]  [BUGGY]  if(isMinim)  {  if(fx  <  GOLDEN_SECTION)  {  fx  =  -fx;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(fx  <  GOLDEN_SECTION)  {  fx  =  -fx;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(fx  <  GOLDEN_SECTION)  {  fx  =  -fx;  }	  if(isMinim)    {    if(fx    >    GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	replace
192	[BUG]  [BUGGY]  if(isMinim)  {  if(fx  ==  GOLDEN_SECTION)  {  fx  =  -fx;  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(fx  ==  GOLDEN_SECTION)  {  fx  =  -fx;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(fx  ==  GOLDEN_SECTION)  {  fx  =  -fx;  }	  if(isMinim)    {    if(fx    >    GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	replace
193	[BUG]  [BUGGY]  b  =  f.getBooleanValue(a);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  f.getBooleanValue(a);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(a);	  b    =    f.getBooleanValue(f);    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
194	[BUG]  [BUGGY]  b  =  fs.getBooleanValue(f);  [CE]  cannot  find  symbol  fs  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  fs.getBooleanValue(f);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  fs.getBooleanValue(f);	  b    =    f.getBooleanValue(f);    	non-compiled	[CE]  cannot  find  symbol  fs	125	None	replace
195	[BUG]  [BUGGY]  b  =  lo.getBooleanValue(f);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  lo.getBooleanValue(f);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  lo.getBooleanValue(f);	  b    =    f.getBooleanValue(f);    	non-compiled	[CE]  double  cannot  be  dereferenced	125	None	replace
196	[BUG]  [BUGGY]  if(!isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(!isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(!isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }	  if(isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	44	None	replace
197	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION  ||  goalType  ==  GoalType.MAXIMIZE)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION  ||  goalType  ==  GoalType.MAXIMIZE)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION  ||  goalType  ==  GoalType.MAXIMIZE)  {  continue;  }	  if(isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	44	None	replace
198	[BUG]  [BUGGY]  b  =  isMinim.getBooleanValue(f,  goalType);  [CE]  boolean  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  isMinim.getBooleanValue(f,  goalType);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  isMinim.getBooleanValue(f,  goalType);	  b    =    goalType.getBooleanValue(f,    isMinim);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	124	None	replace
199	[BUG]  [BUGGY]  b  =  f.getBooleanValue(goalType,  isMinim);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  f.getBooleanValue(goalType,  isMinim);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(goalType,  isMinim);	  b    =    goalType.getBooleanValue(f,    isMinim);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
200	[BUG]  [BUGGY]  b  =  targetType.getBooleanValue(f,  isMinim);  [CE]  cannot  find  symbol  targetType  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  targetType.getBooleanValue(f,  isMinim);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  targetType.getBooleanValue(f,  isMinim);	  b    =    goalType.getBooleanValue(f,    isMinim);    	non-compiled	[CE]  cannot  find  symbol  targetType	124	None	replace
201	[BUG]  [BUGGY]  if(fx  <  GOLDEN_SECTION)  {  fx  =  -fx;  }  [CE]  cannot  find  symbol  fv  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(fx  <  GOLDEN_SECTION)  {  fx  =  -fx;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(fx  <  GOLDEN_SECTION)  {  fx  =  -fx;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(fx    <    GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  cannot  find  symbol  fv	135	None	replace
202	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  fx;  fv  =  fx  +  fv;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  +  fx;  fv  =  fx  +  fv;	  double    fv    =    fx    +    mid;    fv    =    fx    +    mid;    	compilable	  [FE]  AssertionError  	97	4	replace
203	[BUG]  [BUGGY]  double  fv  =  mid  +  fx;  fv  =  fx  +  fv;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  fx;  fv  =  fx  +  fv;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  +  fx;  fv  =  fx  +  fv;	  double    fv    =    fx    +    mid;    fv    =    fx    +    mid;    	compilable	  [FE]  AssertionError  	97	4	replace
204	[BUG]  [BUGGY]  fv  =  mid  +  fx;  [CE]  cannot  find  symbol  fv  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fv  =  mid  +  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fv  =  mid  +  fx;	  double    fv    =    fx    +    mid;    fv    =    fx    +    mid;    	non-compiled	[CE]  cannot  find  symbol  fv	97	None	replace
205	[BUG]  [BUGGY]  b  =  lo.getBooleanValue(f,  false);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  lo.getBooleanValue(f,  false);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  lo.getBooleanValue(f,  false);	  b    =    f.getBooleanValue(f,    false);    	non-compiled	[CE]  double  cannot  be  dereferenced	99	None	replace
206	[BUG]  [BUGGY]  b  =  fx.getBooleanValue(f,  false);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  fx.getBooleanValue(f,  false);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  fx.getBooleanValue(f,  false);	  b    =    f.getBooleanValue(f,    false);    	non-compiled	[CE]  double  cannot  be  dereferenced	99	None	replace
207	[BUG]  [BUGGY]  double  fv  =  Math.max(0,  fx);  double  fv  =  Math.max(0,  fx);  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(0,  fx);  double  fv  =  Math.max(0,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    Math.max(0,    fx);    double  fv  =  Math.max(0,  fx);	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	156	None	add
208	[BUG]  [BUGGY]  double  fv  =  Math.max(0,  fx);  Double  fv  =  Math.max(0,  fx);  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(0,  fx);  Double  fv  =  Math.max(0,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    Math.max(0,    fx);    Double  fv  =  Math.max(0,  fx);	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	156	None	add
209	[BUG]  [BUGGY]  double  fv  =  Math.max(0,  fx);  int  fv  =  Math.max(0,  fx);  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(0,  fx);  int  fv  =  Math.max(0,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    Math.max(0,    fx);    int  fv  =  Math.max(0,  fx);	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	156	None	add
210	[BUG]  [BUGGY]  double  fv  =  Math.max(0,  fx);  fv  =  Math.max(0,  fx);  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(0,  fx);  fv  =  Math.max(0,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    Math.max(0,    fx);    fv  =  Math.max(0,  fx);	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	156	None	add
211	[BUG]  [BUGGY]  if(isMinim  ||  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(isMinim)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim  ||  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(isMinim)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim  ||  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(isMinim)  {  continue;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(isMinim)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	107	None	replace
212	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(a);  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(a);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.MAXIMIZE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(a);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.cos(a);    }    	non-compiled	[CE]  not  a  statement	151	None	replace
213	[BUG]  [BUGGY]  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(a);  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(a);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(a);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.cos(a);    }    	non-compiled	[CE]  not  a  statement	151	None	replace
214	[BUG]  [BUGGY]  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(a);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(a);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(a);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.cos(a);    }    	non-compiled	[CE]  not  a  statement	151	None	replace
215	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  [CE]  '.class'  expected  [FE]                          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =	  if(isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (    	non-compiled	[CE]  '.class'  expected	43	None	replace
216	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (  [CE]  ')'  expected  [FE]                            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (	  if(isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (    	non-compiled	[CE]  ')'  expected	43	None	replace
217	[BUG]  [BUGGY]  double  fv  =  1;  double  fv  =  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  1;  double  fv  =  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    1;    double  fv  =  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	84	None	add
218	[BUG]  [BUGGY]  double  fv  =  1;  Double  fv  =  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  1;  Double  fv  =  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    1;    Double  fv  =  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	84	None	add
219	[BUG]  [BUGGY]  double  fv  =  1;  int  fv  =  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  1;  int  fv  =  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    1;    int  fv  =  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	84	None	add
220	[BUG]  [BUGGY]  double  fv  =  1;  fv  =  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  1;  fv  =  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    1;    fv  =  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	84	None	add
221	[BUG]  [BUGGY]  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    int    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  <identifier>  expected	131	None	replace
222	[BUG]  [BUGGY]  if(isMinim)  {  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    int    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  not  a  statement	131	None	replace
223	[BUG]  [BUGGY]  if(isMinim)  {  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    int    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  not  a  statement	131	None	replace
224	[BUG]  [BUGGY]  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    int    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  not  a  statement	131	None	replace
225	[BUG]  [BUGGY]  fx  =  -w;  [CE]  cannot  find  symbol  fv  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fx  =  -w;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fx  =  -w;	  fx    =    -fx;    	non-compiled	[CE]  cannot  find  symbol  fv	19	None	replace
226	[BUG]  [BUGGY]  fx  =  -goalType;  [CE]  bad  operand  type  GoalType  for  unary  operator  '-'  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fx  =  -goalType;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fx  =  -goalType;	  fx    =    -fx;    	non-compiled	[CE]  bad  operand  type  GoalType  for  unary  operator  '-'	19	None	replace
227	[BUG]  [BUGGY]  fx  =  -d;  [CE]  cannot  find  symbol  fv  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fx  =  -d;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fx  =  -d;	  fx    =    -fx;    	non-compiled	[CE]  cannot  find  symbol  fv	19	None	replace
228	[BUG]  [BUGGY]  fx  =  -a;  [CE]  cannot  find  symbol  fv  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fx  =  -a;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fx  =  -a;	  fx    =    -fx;    	non-compiled	[CE]  cannot  find  symbol  fv	19	None	replace
229	[BUG]  [BUGGY]  if(isMinim  ||  isMinim)  {  continue;  }  [CE]  continue  outside  of  loop  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim  ||  isMinim)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim  ||  isMinim)  {  continue;  }	  if(isMinim)    {    continue;    }    	non-compiled	[CE]  continue  outside  of  loop	46	None	replace
230	[BUG]  [BUGGY]  if(isMinim  &&  isMinim)  {  continue;  }  [CE]  continue  outside  of  loop  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim  &&  isMinim)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim  &&  isMinim)  {  continue;  }	  if(isMinim)    {    continue;    }    	non-compiled	[CE]  continue  outside  of  loop	46	None	replace
231	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.round(goalType  *  GoalType.MAXIMIZE);  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.round(goalType  *  GoalType.MAXIMIZE);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.round(goalType  *  GoalType.MAXIMIZE);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  not  a  statement	80	None	replace
232	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m  +  a);  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m  +  a);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m  +  a);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  not  a  statement	80	None	replace
233	[BUG]  [BUGGY]  double  fv  =  fx  +  hi;  double  fv  =  fx  +  hi;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  hi;  double  fv  =  fx  +  hi;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    hi;    double  fv  =  fx  +  hi;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	120	None	add
234	[BUG]  [BUGGY]  double  fv  =  fx  +  hi;  Double  fv  =  fx  +  hi;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  hi;  Double  fv  =  fx  +  hi;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    hi;    Double  fv  =  fx  +  hi;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	120	None	add
235	[BUG]  [BUGGY]  double  fv  =  fx  +  hi;  int  fv  =  fx  +  hi;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  hi;  int  fv  =  fx  +  hi;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    hi;    int  fv  =  fx  +  hi;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	120	None	add
236	[BUG]  [BUGGY]  double  fv  =  fx  +  hi;  fv  =  fx  +  hi;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  hi;  fv  =  fx  +  hi;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    hi;    fv  =  fx  +  hi;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	120	None	add
237	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  /  2;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  /  2;	  double    fv    =    fx    /    1;    	compilable	  [FE]  AssertionError  	51	4	replace
238	[BUG]  [BUGGY]  double  fv  =  fx  /  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  /  2;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  /  2;	  double    fv    =    fx    /    1;    	compilable	  [FE]  AssertionError  	51	4	replace
239	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  /  3;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  /  3;	  double    fv    =    fx    /    1;    	compilable	  [FE]  AssertionError  	51	4	replace
240	[BUG]  [BUGGY]  double  fv  =  fx  /  3;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  /  3;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  /  3;	  double    fv    =    fx    /    1;    	compilable	  [FE]  AssertionError  	51	4	replace
241	[BUG]  [BUGGY]  while(isMinim)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  while(isMinim)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	while(isMinim)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	  if(isMinim)    {    double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	111	None	replace
242	[BUG]  [BUGGY]  if(isMinim)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	  if(isMinim)    {    double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	111	None	replace
243	[BUG]  [BUGGY]  while(isMinimum)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  while(isMinimum)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	while(isMinimum)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	  if(isMinim)    {    double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	111	None	replace
244	[BUG]  [BUGGY]  double  fv  =  Math.max(a,  fx);  double  fv  =  Math.max(a,  fx);  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(a,  fx);  double  fv  =  Math.max(a,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    Math.max(a,    fx);    double  fv  =  Math.max(a,  fx);	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	154	None	add
245	[BUG]  [BUGGY]  double  fv  =  Math.max(a,  fx);  Double  fv  =  Math.max(a,  fx);  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(a,  fx);  Double  fv  =  Math.max(a,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    Math.max(a,    fx);    Double  fv  =  Math.max(a,  fx);	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	154	None	add
246	[BUG]  [BUGGY]  double  fv  =  Math.max(a,  fx);  int  fv  =  Math.max(a,  fx);  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(a,  fx);  int  fv  =  Math.max(a,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    Math.max(a,    fx);    int  fv  =  Math.max(a,  fx);	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	154	None	add
247	[BUG]  [BUGGY]  double  fv  =  Math.max(a,  fx);  fv  =  Math.max(a,  fx);  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(a,  fx);  fv  =  Math.max(a,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    Math.max(a,    fx);    fv  =  Math.max(a,  fx);	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	154	None	add
248	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  2;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  2;	  double    fv    =    3;    	compilable	  [FE]  AssertionError  	87	4	replace
249	[BUG]  [BUGGY]  double  fv  =  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  2;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  2;	  double    fv    =    3;    	compilable	  [FE]  AssertionError  	87	4	replace
250	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  fw;  [CE]  cannot  find  symbol  fw  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  fw;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  fx  :  fw;	  double    fv    =    isMinim?    fx    :    fx;    	non-compiled	[CE]  cannot  find  symbol  fw	2	None	replace
251	[BUG]  [BUGGY]  double  fv  =  isMinim?  fw  :  fx;  [CE]  cannot  find  symbol  fw  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fw  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  fw  :  fx;	  double    fv    =    isMinim?    fx    :    fx;    	non-compiled	[CE]  cannot  find  symbol  fw	2	None	replace
252	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  fx  +  1;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  fx  :  fx  +  1;	  double    fv    =    isMinim?    fx    :    fx;    	compilable	  [FE]  AssertionError  	2	4	replace
253	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  fx  +  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  fx  +  1;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  fx  :  fx  +  1;	  double    fv    =    isMinim?    fx    :    fx;    	compilable	  [FE]  AssertionError  	2	4	replace
254	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  *  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  *  fx;	  double    fv    =    fx    *    mid;    	compilable	  [FE]  AssertionError  	141	4	replace
255	[BUG]  [BUGGY]  double  fv  =  mid  *  fx;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  *  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  *  fx;	  double    fv    =    fx    *    mid;    	compilable	  [FE]  AssertionError  	141	4	replace
256	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  fx  *  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  +  fx  *  fx;	  double    fv    =    fx    *    mid;    	compilable	  [FE]  AssertionError  	141	4	replace
257	[BUG]  [BUGGY]  double  fv  =  mid  +  fx  *  fx;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  fx  *  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  +  fx  *  fx;	  double    fv    =    fx    *    mid;    	compilable	  [FE]  AssertionError  	141	4	replace
258	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  *  lo;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  *  lo;	  double    fv    =    fx    *    mid;    	compilable	  [FE]  AssertionError  	141	4	replace
259	[BUG]  [BUGGY]  double  fv  =  fx  *  lo;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  *  lo;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  *  lo;	  double    fv    =    fx    *    mid;    	compilable	  [FE]  AssertionError  	141	4	replace
260	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  *  hi;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  *  hi;	  double    fv    =    fx    *    mid;    	compilable	  [FE]  AssertionError  	141	4	replace
261	[BUG]  [BUGGY]  double  fv  =  fx  *  hi;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  *  hi;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  *  hi;	  double    fv    =    fx    *    mid;    	compilable	  [FE]  AssertionError  	141	4	replace
262	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  w  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  w  :  fx;	  double    fv    =    isMinim?    min    :    fx;    	compilable	  [FE]  AssertionError  	3	4	replace
263	[BUG]  [BUGGY]  double  fv  =  isMinim?  w  :  fx;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  w  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  w  :  fx;	  double    fv    =    isMinim?    min    :    fx;    	compilable	  [FE]  AssertionError  	3	4	replace
264	[BUG]  [BUGGY]  double  fv  =  -1;  double  fv  =  -1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -1;  double  fv  =  -1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    -1;    double  fv  =  -1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	12	None	add
265	[BUG]  [BUGGY]  double  fv  =  -1;  Double  fv  =  -1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -1;  Double  fv  =  -1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    -1;    Double  fv  =  -1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	12	None	add
266	[BUG]  [BUGGY]  double  fv  =  -1;  int  fv  =  -1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -1;  int  fv  =  -1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    -1;    int  fv  =  -1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	12	None	add
267	[BUG]  [BUGGY]  double  fv  =  -1;  fv  =  -1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -1;  fv  =  -1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    -1;    fv  =  -1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	12	None	add
268	[BUG]  [BUGGY]  double  fv  =  -1;  double  fv  =  -;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -1;  double  fv  =  -;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    -1;    double  fv  =  -;	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
269	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.MAXIMIZE)  {  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	  double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	136	None	replace
270	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MINIMIZE)  {  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.MINIMIZE)  {  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.MINIMIZE)  {  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	  double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	136	None	replace
271	[BUG]  [BUGGY]  double  fv  =  mid;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  variable  count  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	  double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  variable  count  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	136	None	replace
272	[BUG]  [BUGGY]  while  (b  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  cannot  find  symbol  fv  [FE]                        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  while  (b  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	while  (b  <  maximalIterationCount)  {  fx  =  -a;  }	  double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  cannot  find  symbol  fv	136	None	replace
273	[BUG]  [BUGGY]  while(!isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  fv  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  while(!isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	while(!isMinim)  {  throw  new  IllegalArgumentException( " ");  }	  if(!isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  fv	33	None	replace
274	[BUG]  [BUGGY]  double  fv  =  fx  +  2;  double  fv  =  fx  +  2;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  2;  double  fv  =  fx  +  2;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    2;    double  fv  =  fx  +  2;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	70	None	add
275	[BUG]  [BUGGY]  double  fv  =  fx  +  2;  Double  fv  =  fx  +  2;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  2;  Double  fv  =  fx  +  2;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    2;    Double  fv  =  fx  +  2;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	70	None	add
276	[BUG]  [BUGGY]  double  fv  =  fx  +  2;  int  fv  =  fx  +  2;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  2;  int  fv  =  fx  +  2;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    2;    int  fv  =  fx  +  2;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	70	None	add
277	[BUG]  [BUGGY]  double  fv  =  fx  +  2;  fv  =  fx  +  2;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  2;  fv  =  fx  +  2;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    2;    fv  =  fx  +  2;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	70	None	add
278	[BUG]  [BUGGY]  double  fx  =  fx  -  1;  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fx  =  fx  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fx  =  fx  -  1;	  double    fv    =    fx    -    1;    double    fx    =    fx    -    1;    	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	134	None	replace
279	[BUG]  [BUGGY]  double  fv  =  mid.length  -  1;  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid.length  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid.length  -  1;	  double    fv    =    fx    -    1;    double    fx    =    fx    -    1;    	non-compiled	[CE]  double  cannot  be  dereferenced	134	None	replace
280	[BUG]  [BUGGY]  double  fv  =  lo.getValue();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  lo.getValue();  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  lo.getValue();	  double    fv    =    lo;    	non-compiled	[CE]  double  cannot  be  dereferenced	53	None	replace
281	[BUG]  [BUGGY]  double  fv  =  lo.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  lo.doubleValue();  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  lo.doubleValue();	  double    fv    =    lo;    	non-compiled	[CE]  double  cannot  be  dereferenced	53	None	replace
282	[BUG]  [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim  &&  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }	  if(isMinim    ||    goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    return    false;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	149	None	replace
283	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim  &&  goalType!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }	  if(isMinim    ||    goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    return    false;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	149	None	replace
284	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -a  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  -a  +  1;	  double    fv    =    -a;    	compilable	  [FE]  AssertionError  	15	4	replace
285	[BUG]  [BUGGY]  double  fv  =  -a  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -a  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  -a  +  1;	  double    fv    =    -a;    	compilable	  [FE]  AssertionError  	15	4	replace
286	[BUG]  [BUGGY]  if(!isMinim)  {  return  true;  }  [CE]  incompatible  types  [FE]                        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(!isMinim)  {  return  true;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(!isMinim)  {  return  true;  }	  if(!isMinim)    {    return    false;    }    	non-compiled	[CE]  incompatible  types	31	None	replace
287	[BUG]  [BUGGY]  if(!isMinim)return  true;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(!isMinim)return  true;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(!isMinim)return  true;  }	  if(!isMinim)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
288	[BUG]  [BUGGY]  double  fv  =  mid  -  1;  double  fv  =  mid  -  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  -  1;  double  fv  =  mid  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid    -    1;    double  fv  =  mid  -  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	48	None	add
289	[BUG]  [BUGGY]  double  fv  =  mid  -  1;  Double  fv  =  mid  -  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  -  1;  Double  fv  =  mid  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid    -    1;    Double  fv  =  mid  -  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	48	None	add
290	[BUG]  [BUGGY]  double  fv  =  mid  -  1;  int  fv  =  mid  -  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  -  1;  int  fv  =  mid  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid    -    1;    int  fv  =  mid  -  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	48	None	add
291	[BUG]  [BUGGY]  double  fv  =  mid  -  1;  fv  =  mid  -  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  -  1;  fv  =  mid  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid    -    1;    fv  =  mid  -  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	48	None	add
292	[BUG]  [BUGGY]  int  fv  =  fx  +  1;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  fv  =  fx  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  fv  =  fx  +  1;	  double    fv    =    fx    +    1;    int    fv    =    fx    +    1;    	non-compiled	[CE]  possible  loss  of  precision	58	None	replace
293	[BUG]  [BUGGY]  int  fv  =  fx;  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  fv  =  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  fv  =  fx;	  double    fv    =    fx    +    1;    int    fv    =    fx    +    1;    	non-compiled	[CE]  possible  loss  of  precision	58	None	replace
294	[BUG]  [BUGGY]  while(isMinim)  {  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  while(isMinim)  {  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	while(isMinim)  {  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  if(isMinim)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	108	None	replace
295	[BUG]  [BUGGY]  while(isMinim)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  while(isMinim)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	while(isMinim)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  if(isMinim)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	108	None	replace
296	[BUG]  [BUGGY]  int  fv  =  fx  -  1;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  fv  =  fx  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  fv  =  fx  -  1;	  double    fv    =    fx    -    1;    int    fv    =    fx    -    1;    	non-compiled	[CE]  possible  loss  of  precision	92	None	replace
297	[BUG]  [BUGGY]  int  fv  =  mid  -  1;  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  fv  =  mid  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  fv  =  mid  -  1;	  double    fv    =    fx    -    1;    int    fv    =    fx    -    1;    	non-compiled	[CE]  possible  loss  of  precision	92	None	replace
298	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  1;  double  fv  =  isMinim?  fx  :  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  1;  double  fv  =  isMinim?  fx  :  1;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    fx    :    1;    double  fv  =  isMinim?  fx  :  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	4	None	add
299	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  1;  Double  fv  =  isMinim?  fx  :  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  1;  Double  fv  =  isMinim?  fx  :  1;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    fx    :    1;    Double  fv  =  isMinim?  fx  :  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	4	None	add
300	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  1;  int  fv  =  isMinim?  fx  :  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  1;  int  fv  =  isMinim?  fx  :  1;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    fx    :    1;    int  fv  =  isMinim?  fx  :  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	4	None	add
301	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  1;  fv  =  isMinim?  fx  :  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  1;  fv  =  isMinim?  fx  :  1;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    fx    :    1;    fv  =  isMinim?  fx  :  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	4	None	add
302	[BUG]  [BUGGY]  if(isMinim)  {  if(!isMinim)return  false;  }  [CE]  incompatible  types  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(!isMinim)return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(!isMinim)return  false;  }	  if(isMinim)    {    if(!isMinim)    {    return    false;    }    	non-compiled	[CE]  incompatible  types	29	None	replace
303	[BUG]  [BUGGY]  if(isMinim)  {  if(!isMaximum)  {  return  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(!isMaximum)  {  return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(!isMaximum)  {  return  false;  }	  if(isMinim)    {    if(!isMinim)    {    return    false;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	replace
304	[BUG]  [BUGGY]  if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5	  if(isMinim)    {    GoalType    goalType    =    GoalType.GOLDEN_SECTION;    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (    	non-compiled	[CE]  ';'  expected	109	None	replace
305	[BUG]  [BUGGY]  if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fv;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fv;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fv;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (	  if(isMinim)    {    GoalType    goalType    =    GoalType.GOLDEN_SECTION;    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (    	non-compiled	[CE]  ')'  expected	109	None	replace
306	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.MAXIMIZE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.abs(fx);    }    	non-compiled	[CE]  not  a  statement	82	None	replace
307	[BUG]  [BUGGY]  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.abs(fx);    }    	non-compiled	[CE]  not  a  statement	82	None	replace
308	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(d);  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(d);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(d);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.abs(fx);    }    	non-compiled	[CE]  not  a  statement	82	None	replace
309	[BUG]  [BUGGY]  if(isMinim)  {  while(fv  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  while(fv  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  while(fv  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	  if(isMinim)    {    while(goalType    ==    GoalType.GOLDEN_SECTION)    {    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	17	None	replace
310	[BUG]  [BUGGY]  if(isMinim)  {  while(fv!=  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  while(fv!=  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  while(fv!=  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	  if(isMinim)    {    while(goalType    ==    GoalType.GOLDEN_SECTION)    {    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	17	None	replace
311	[BUG]  [BUGGY]  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  cannot  find  symbol  fv  [FE]                        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	  if(isMinim)    {    while(goalType    ==    GoalType.GOLDEN_SECTION)    {    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  cannot  find  symbol  fv	17	None	replace
312	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.MAXIMIZE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.rint(m);    }    	non-compiled	[CE]  not  a  statement	83	None	replace
313	[BUG]  [BUGGY]  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.rint(m);    }    	non-compiled	[CE]  not  a  statement	83	None	replace
314	[BUG]  [BUGGY]  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.rint(m);    }    	non-compiled	[CE]  not  a  statement	83	None	replace
315	[BUG]  [BUGGY]  if(isMinim)  {  if(!goalType  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(!goalType  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(!goalType  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }	  if(isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	20	None	replace
316	[BUG]  [BUGGY]  if(isMinim)  {  if(fx  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(fx  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(fx  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }	  if(isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	20	None	replace
317	[BUG]  [BUGGY]  double  fv  =  -b;  double  fv  =  -b;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -b;  double  fv  =  -b;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    -b;    double  fv  =  -b;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	143	None	add
318	[BUG]  [BUGGY]  double  fv  =  -b;  Double  fv  =  -b;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -b;  Double  fv  =  -b;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    -b;    Double  fv  =  -b;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	143	None	add
319	[BUG]  [BUGGY]  double  fv  =  -b;  int  fv  =  -b;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -b;  int  fv  =  -b;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    -b;    int  fv  =  -b;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	143	None	add
320	[BUG]  [BUGGY]  double  fv  =  -b;  fv  =  -b;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -b;  fv  =  -b;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    -b;    fv  =  -b;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	143	None	add
321	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -b  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  -b  +  1;	  double    fv    =    -b;    	compilable	  [FE]  AssertionError  	144	4	replace
322	[BUG]  [BUGGY]  double  fv  =  -b  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -b  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  -b  +  1;	  double    fv    =    -b;    	compilable	  [FE]  AssertionError  	144	4	replace
323	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)return  false;  }  [CE]  cannot  find  symbol  GOLDEN_SECTION  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)return  false;  }	  if(isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_SECTION	28	None	replace
324	[BUG]  [BUGGY]  if(isMinim)  {  if(!goalType  ==  GoalType.GOLDEN_SECTION)  {  return  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(!goalType  ==  GoalType.GOLDEN_SECTION)  {  return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(!goalType  ==  GoalType.GOLDEN_SECTION)  {  return  false;  }	  if(isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    return    false;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	28	None	replace
325	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  b;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  +  b;	  double    fv    =    fx    +    b;    	compilable	  [FE]  AssertionError  	123	4	replace
326	[BUG]  [BUGGY]  double  fv  =  mid  +  b;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  b;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  +  b;	  double    fv    =    fx    +    b;    	compilable	  [FE]  AssertionError  	123	4	replace
327	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  a;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  +  a;	  double    fv    =    fx    +    b;    	compilable	  [FE]  AssertionError  	123	4	replace
328	[BUG]  [BUGGY]  double  fv  =  fx  +  a;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  a;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  +  a;	  double    fv    =    fx    +    b;    	compilable	  [FE]  AssertionError  	123	4	replace
329	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  d;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  +  d;	  double    fv    =    fx    +    b;    	compilable	  [FE]  AssertionError  	123	4	replace
330	[BUG]  [BUGGY]  double  fv  =  fx  +  d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  d;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  +  d;	  double    fv    =    fx    +    b;    	compilable	  [FE]  AssertionError  	123	4	replace
331	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  a  +  b;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  a  +  b;	  double    fv    =    fx    +    b;    	compilable	  [FE]  AssertionError  	123	4	replace
332	[BUG]  [BUGGY]  double  fv  =  a  +  b;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  a  +  b;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  a  +  b;	  double    fv    =    fx    +    b;    	compilable	  [FE]  AssertionError  	123	4	replace
333	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  Double  fv  =  fx  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	Double  fv  =  fx  +  1;	  double    fv    =    fx    +    1;    Double    fv    =    fx    +    1;    	compilable	  [FE]  AssertionError  	57	4	replace
334	[BUG]  [BUGGY]  Double  fv  =  fx  +  1;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  Double  fv  =  fx  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	Double  fv  =  fx  +  1;	  double    fv    =    fx    +    1;    Double    fv    =    fx    +    1;    	compilable	  [FE]  AssertionError  	57	4	replace
335	[BUG]  [BUGGY]  while(isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  fv  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  while(isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	while(isMinim)  {  throw  new  IllegalArgumentException( " ");  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  fv	32	None	replace
336	[BUG]  [BUGGY]  b  =  fx.getBooleanValue(goalType);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  fx.getBooleanValue(goalType);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  fx.getBooleanValue(goalType);	  b    =    goalType.getBooleanValue(fx);    	non-compiled	[CE]  double  cannot  be  dereferenced	153	None	replace
337	[BUG]  [BUGGY]  b  =  goalType.getBooleanValue(fx,  v);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  goalType.getBooleanValue(fx,  v);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goalType.getBooleanValue(fx,  v);	  b    =    goalType.getBooleanValue(fx);    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
338	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  /  2;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  /  2;	  double    fv    =    mid    /    1;    	compilable	  [FE]  AssertionError  	104	4	replace
339	[BUG]  [BUGGY]  double  fv  =  mid  /  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  /  2;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  /  2;	  double    fv    =    mid    /    1;    	compilable	  [FE]  AssertionError  	104	4	replace
340	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  lo  /  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  lo  /  1;	  double    fv    =    mid    /    1;    	compilable	  [FE]  AssertionError  	104	4	replace
341	[BUG]  [BUGGY]  double  fv  =  lo  /  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  lo  /  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  lo  /  1;	  double    fv    =    mid    /    1;    	compilable	  [FE]  AssertionError  	104	4	replace
342	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  /  3;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  /  3;	  double    fv    =    mid    /    1;    	compilable	  [FE]  AssertionError  	104	4	replace
343	[BUG]  [BUGGY]  double  fv  =  mid  /  3;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  /  3;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  /  3;	  double    fv    =    mid    /    1;    	compilable	  [FE]  AssertionError  	104	4	replace
344	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  2;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  fx  :  2;	  double    fv    =    isMinim?    fx    :    1;    	compilable	  [FE]  AssertionError  	5	4	replace
345	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  2;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  fx  :  2;	  double    fv    =    isMinim?    fx    :    1;    	compilable	  [FE]  AssertionError  	5	4	replace
346	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  3;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  fx  :  3;	  double    fv    =    isMinim?    fx    :    1;    	compilable	  [FE]  AssertionError  	5	4	replace
347	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  3;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  3;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  fx  :  3;	  double    fv    =    isMinim?    fx    :    1;    	compilable	  [FE]  AssertionError  	5	4	replace
348	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  fx;  double  fv  =  isMinim?  fx  :  fx;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  fx;  double  fv  =  isMinim?  fx  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    fx    :    fx;    double  fv  =  isMinim?  fx  :  fx;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	1	None	add
349	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  fx;  Double  fv  =  isMinim?  fx  :  fx;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  fx;  Double  fv  =  isMinim?  fx  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    fx    :    fx;    Double  fv  =  isMinim?  fx  :  fx;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	1	None	add
350	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  fx;  double  fv  =  isMinim?  fx  :  fx);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  fx;  double  fv  =  isMinim?  fx  :  fx);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    fx    :    fx;    double  fv  =  isMinim?  fx  :  fx);	  	non-compiled	[CE]  ';'  expected	1	None	add
351	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  fx;  int  fv  =  isMinim?  fx  :  fx;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  fx;  int  fv  =  isMinim?  fx  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    fx    :    fx;    int  fv  =  isMinim?  fx  :  fx;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	1	None	add
352	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  fx;  fv  =  isMinim?  fx  :  fx;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]            AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  fx;  fv  =  isMinim?  fx  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    fx    :    fx;    fv  =  isMinim?  fx  :  fx;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	1	None	add
353	[BUG]  [BUGGY]  if(isMinim)  {  int  fv  =  fx;  int  count  =  0;  while  (count  <  maximumIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  int  fv  =  fx;  int  count  =  0;  while  (count  <  maximumIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  int  fv  =  fx;  int  count  =  0;  while  (count  <  maximumIterationCount)  {  fx  =  -a;  }	  if(isMinim)    {    int    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	18	None	replace
354	[BUG]  [BUGGY]  while(isMinim)  {  fv  =  fx;  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  while(isMinim)  {  fv  =  fx;  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	while(isMinim)  {  fv  =  fx;  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	  if(isMinim)    {    int    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	18	None	replace
355	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType!=  GoalType.GOLDEN_SECTION)  {  return  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(goalType!=  GoalType.GOLDEN_SECTION)  {  return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(goalType!=  GoalType.GOLDEN_SECTION)  {  return  false;  }	  if(goalType!=    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    return    false;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	126	None	replace
356	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  Double  fv  =  fx  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	Double  fv  =  fx  -  1;	  double    fv    =    fx    -    1;    Double    fv    =    fx    -    1;    	compilable	  [FE]  AssertionError  	91	4	replace
357	[BUG]  [BUGGY]  Double  fv  =  fx  -  1;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  Double  fv  =  fx  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	Double  fv  =  fx  -  1;	  double    fv    =    fx    -    1;    Double    fv    =    fx    -    1;    	compilable	  [FE]  AssertionError  	91	4	replace
358	[BUG]  [BUGGY]  double  fv  =  fx  /  1;  double  fv  =  fx  /  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  /  1;  double  fv  =  fx  /  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    /    1;    double  fv  =  fx  /  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	50	None	add
359	[BUG]  [BUGGY]  double  fv  =  fx  /  1;  Double  fv  =  fx  /  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  /  1;  Double  fv  =  fx  /  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    /    1;    Double  fv  =  fx  /  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	50	None	add
360	[BUG]  [BUGGY]  double  fv  =  fx  /  1;  int  fv  =  fx  /  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  /  1;  int  fv  =  fx  /  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    /    1;    int  fv  =  fx  /  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	50	None	add
361	[BUG]  [BUGGY]  double  fv  =  fx  /  1;  fv  =  fx  /  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  /  1;  fv  =  fx  /  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    /    1;    fv  =  fx  /  1;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	50	None	add
362	[BUG]  [BUGGY]  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  <identifier>  expected	130	None	replace
363	[BUG]  [BUGGY]  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  not  a  statement	130	None	replace
364	[BUG]  [BUGGY]  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  not  a  statement	130	None	replace
365	[BUG]  [BUGGY]  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  not  a  statement	130	None	replace
366	[BUG]  [BUGGY]  fx  =  -g;  [CE]  cannot  find  symbol  g  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fx  =  -g;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fx  =  -g;	  if(fx    >    GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  cannot  find  symbol  g	22	None	replace
367	[BUG]  [BUGGY]  fx  =  -field;  [CE]  cannot  find  symbol  field  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fx  =  -field;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fx  =  -field;	  if(fx    >    GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  cannot  find  symbol  field	22	None	replace
368	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType!=  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(goalType!=  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(goalType!=  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	  if(goalType!=    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	113	None	replace
369	[BUG]  [BUGGY]  if(isMinim)  {  while(goalType!=  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  while(goalType!=  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  while(goalType!=  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	  if(goalType!=    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	113	None	replace
370	[BUG]  [BUGGY]  if(!isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  [CE]  '.class'  expected  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(!isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(!isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *	  if(isMinim)    {    GoalType    goalType    =    GoalType.GOLDEN_SECTION;    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    	non-compiled	[CE]  '.class'  expected	110	None	replace
371	[BUG]  [BUGGY]  if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fv;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  [CE]  '.class'  expected  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fv;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fv;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *	  if(isMinim)    {    GoalType    goalType    =    GoalType.GOLDEN_SECTION;    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    	non-compiled	[CE]  '.class'  expected	110	None	replace
372	[BUG]  [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim  &&  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  continue;  }	  if(isMinim    ||    goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	146	None	replace
373	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim  &&  goalType!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  continue;  }	  if(isMinim    ||    goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	146	None	replace
374	[BUG]  [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  fx;  double  fv  =  isMinim?  GOLDEN_SECTION  :  fx;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  fx;  double  fv  =  isMinim?  GOLDEN_SECTION  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    GOLDEN_SECTION    :    fx;    double  fv  =  isMinim?  GOLDEN_SECTION  :  fx;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	116	None	add
375	[BUG]  [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  fx;  Double  fv  =  isMinim?  GOLDEN_SECTION  :  fx;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  fx;  Double  fv  =  isMinim?  GOLDEN_SECTION  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    GOLDEN_SECTION    :    fx;    Double  fv  =  isMinim?  GOLDEN_SECTION  :  fx;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	116	None	add
376	[BUG]  [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  fx;  double  fv  =  isMinim?  GOLDEN_SECTION  :  fx);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  fx;  double  fv  =  isMinim?  GOLDEN_SECTION  :  fx);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    GOLDEN_SECTION    :    fx;    double  fv  =  isMinim?  GOLDEN_SECTION  :  fx);	  	non-compiled	[CE]  ';'  expected	116	None	add
377	[BUG]  [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  fx;  int  fv  =  isMinim?  GOLDEN_SECTION  :  fx;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  fx;  int  fv  =  isMinim?  GOLDEN_SECTION  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    GOLDEN_SECTION    :    fx;    int  fv  =  isMinim?  GOLDEN_SECTION  :  fx;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	116	None	add
378	[BUG]  [BUGGY]  b  =  f.getBooleanValue(g);  [CE]  cannot  find  symbol  g  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  f.getBooleanValue(g);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(g);	  b    =    f.getBooleanValue(targetType);    	non-compiled	[CE]  cannot  find  symbol  g	159	None	replace
379	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.MAXIMIZE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.floor(f);    }    	non-compiled	[CE]  not  a  statement	81	None	replace
380	[BUG]  [BUGGY]  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.floor(f);    }    	non-compiled	[CE]  not  a  statement	81	None	replace
381	[BUG]  [BUGGY]  b  =  goalType.getBooleanValue(a,  f);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  goalType.getBooleanValue(a,  f);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goalType.getBooleanValue(a,  f);	  b    =    a.getBooleanValue(f,    goalType);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
382	[BUG]  [BUGGY]  b  =  GoalType.getBooleanValue(f,  a);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  GoalType.getBooleanValue(f,  a);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  GoalType.getBooleanValue(f,  a);	  b    =    a.getBooleanValue(f,    goalType);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
383	[BUG]  [BUGGY]  b  =  goals.getBooleanValue(f,  a);  [CE]  cannot  find  symbol  goals  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  goals.getBooleanValue(f,  a);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goals.getBooleanValue(f,  a);	  b    =    a.getBooleanValue(f,    goalType);    	non-compiled	[CE]  cannot  find  symbol  goals	7	None	replace
384	[BUG]  [BUGGY]  double  fv  =  hi;  double  fv  =  hi;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  hi;  double  fv  =  hi;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    hi;    double  fv  =  hi;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	54	None	add
385	[BUG]  [BUGGY]  double  fv  =  hi;  Double  fv  =  hi;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  hi;  Double  fv  =  hi;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    hi;    Double  fv  =  hi;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	54	None	add
386	[BUG]  [BUGGY]  double  fv  =  hi;  int  fv  =  hi;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  hi;  int  fv  =  hi;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    hi;    int  fv  =  hi;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	54	None	add
387	[BUG]  [BUGGY]  double  fv  =  hi;  fv  =  hi;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  hi;  fv  =  hi;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    hi;    fv  =  hi;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	54	None	add
388	[BUG]  [BUGGY]  b  =  a.getBooleanValue(goalType,  f);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  a.getBooleanValue(goalType,  f);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  a.getBooleanValue(goalType,  f);	  b    =    f.getBooleanValue(goalType,    a);    	non-compiled	[CE]  double  cannot  be  dereferenced	8	None	replace
389	[BUG]  [BUGGY]  b  =  a.getBooleanValue(f,  f);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  a.getBooleanValue(f,  f);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  a.getBooleanValue(f,  f);	  b    =    f.getBooleanValue(goalType,    a);    	non-compiled	[CE]  double  cannot  be  dereferenced	8	None	replace
390	[BUG]  [BUGGY]  b  =  a.getBooleanValue(f,  a);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  a.getBooleanValue(f,  a);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  a.getBooleanValue(f,  a);	  b    =    f.getBooleanValue(goalType,    a);    	non-compiled	[CE]  double  cannot  be  dereferenced	8	None	replace
391	[BUG]  [BUGGY]  While(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(goalType));  }  [CE]  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  While(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(goalType));  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	While(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(goalType));  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ".equals(goalType));    }    	non-compiled	[CE]  	35	None	replace
392	[BUG]  [BUGGY]  While(isMinim)  {  throw  new  IllegalArgumentException( " "  +  goalType.equals(isMinim));  }  [CE]  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  While(isMinim)  {  throw  new  IllegalArgumentException( " "  +  goalType.equals(isMinim));  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	While(isMinim)  {  throw  new  IllegalArgumentException( " "  +  goalType.equals(isMinim));  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ".equals(goalType));    }    	non-compiled	[CE]  	35	None	replace
393	[BUG]  [BUGGY]  double  fv  =  isMinim?  w  :  fv;  [CE]  variable  fv  might  not  have  been  initialized  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  w  :  fv;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  w  :  fv;	  double    fv    =    isMinim?    fx    :    fv;    	non-compiled	[CE]  variable  fv  might  not  have  been  initialized	139	None	replace
394	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  lo;  fv  =  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  lo;  fv  =  mid;	  double    fv    =    mid;    fv    =    mid;    	compilable	  [FE]  AssertionError  	132	4	replace
395	[BUG]  [BUGGY]  double  fv  =  lo;  fv  =  mid;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  lo;  fv  =  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  lo;  fv  =  mid;	  double    fv    =    mid;    fv    =    mid;    	compilable	  [FE]  AssertionError  	132	4	replace
396	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid;  fv  =  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid;  fv  =  fx;	  double    fv    =    mid;    fv    =    mid;    	compilable	  [FE]  AssertionError  	132	4	replace
397	[BUG]  [BUGGY]  double  fv  =  mid;  fv  =  fx;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid;  fv  =  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid;  fv  =  fx;	  double    fv    =    mid;    fv    =    mid;    	compilable	  [FE]  AssertionError  	132	4	replace
398	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid;  fv  =  lo;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid;  fv  =  lo;	  double    fv    =    mid;    fv    =    mid;    	compilable	  [FE]  AssertionError  	132	4	replace
399	[BUG]  [BUGGY]  double  fv  =  mid;  fv  =  lo;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid;  fv  =  lo;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid;  fv  =  lo;	  double    fv    =    mid;    fv    =    mid;    	compilable	  [FE]  AssertionError  	132	4	replace
400	[BUG]  [BUGGY]  fv  =  mid;  [CE]  cannot  find  symbol  fv  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fv  =  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fv  =  mid;	  double    fv    =    mid;    fv    =    mid;    	non-compiled	[CE]  cannot  find  symbol  fv	132	None	replace
401	[BUG]  [BUGGY]  double  fv  =  min;  [CE]  min  has  private  access  in  AbstractUnivariateRealOptimizer  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  min;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  min;	  double    fv    =    fv;    	non-compiled	[CE]  min  has  private  access  in  AbstractUnivariateRealOptimizer	145	None	replace
402	[BUG]  [BUGGY]  double  fv  =  goalType;  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  goalType;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  goalType;	  double    fv    =    fv;    	non-compiled	[CE]  incompatible  types	145	None	replace
403	[BUG]  [BUGGY]  double  m  =  0.5  *  (a  +  b  >>  GoalType.GOLDEN_SECTION);  [CE]  cannot  find  symbol  GOLDEN_SECTION  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  m  =  0.5  *  (a  +  b  >>  GoalType.GOLDEN_SECTION);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  m  =  0.5  *  (a  +  b  >>  GoalType.GOLDEN_SECTION);	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_SECTION	119	None	replace
404	[BUG]  [BUGGY]  double  m  =  0.5  *  (a  +  b  >>  GoalType.MAXIMIZE)?  fx  :  -fx;  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  m  =  0.5  *  (a  +  b  >>  GoalType.MAXIMIZE)?  fx  :  -fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  m  =  0.5  *  (a  +  b  >>  GoalType.MAXIMIZE)?  fx  :  -fx;	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	119	None	replace
405	[BUG]  [BUGGY]  double  m  =  0.5  *  (a  +  b  >>  GoalType.MAXIMIZE);  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  m  =  0.5  *  (a  +  b  >>  GoalType.MAXIMIZE);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  m  =  0.5  *  (a  +  b  >>  GoalType.MAXIMIZE);	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	119	None	replace
406	[BUG]  [BUGGY]  m  =  0.5  *  (a  +  b  >>  GoalType.MAXIMIZE)?  fx  :  -fx;  [CE]  cannot  find  symbol  m  [FE]                          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  m  =  0.5  *  (a  +  b  >>  GoalType.MAXIMIZE)?  fx  :  -fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	m  =  0.5  *  (a  +  b  >>  GoalType.MAXIMIZE)?  fx  :  -fx;	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b    	non-compiled	[CE]  cannot  find  symbol  m	119	None	replace
407	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  t  :  fx  +  1;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  t  :  fx  +  1;	  double    fv    =    isMinim?    t    :    fx;    	compilable	  [FE]  AssertionError  	138	4	replace
408	[BUG]  [BUGGY]  double  fv  =  isMinim?  t  :  fx  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  t  :  fx  +  1;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  t  :  fx  +  1;	  double    fv    =    isMinim?    t    :    fx;    	compilable	  [FE]  AssertionError  	138	4	replace
409	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  t;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  fx  :  t;	  double    fv    =    isMinim?    t    :    fx;    	compilable	  [FE]  AssertionError  	138	4	replace
410	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  t;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  t;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  fx  :  t;	  double    fv    =    isMinim?    t    :    fx;    	compilable	  [FE]  AssertionError  	138	4	replace
411	[BUG]  [BUGGY]  b  =  GoalType.getBooleanValue(goalType);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  GoalType.getBooleanValue(goalType);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  GoalType.getBooleanValue(goalType);	  b    =    GoalType.getBooleanValue();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
412	[BUG]  [BUGGY]  double  fv  =  isMinim?  mid  :  1;  double  fv  =  middle;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  mid  :  1;  double  fv  =  middle;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  mid  :  1;  double  fv  =  middle;	  double    fv    =    mid;    double    fv    =    middle;    	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	63	None	replace
413	[BUG]  [BUGGY]  double  fv  =  isMinim?  mid  :  0;  double  fv  =  middle;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  mid  :  0;  double  fv  =  middle;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  mid  :  0;  double  fv  =  middle;	  double    fv    =    mid;    double    fv    =    middle;    	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	63	None	replace
414	[BUG]  [BUGGY]  double  fv  =  fx  +  3;  double  fv  =  fx  +  3;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  3;  double  fv  =  fx  +  3;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    3;    double  fv  =  fx  +  3;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	72	None	add
415	[BUG]  [BUGGY]  double  fv  =  fx  +  3;  Double  fv  =  fx  +  3;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  3;  Double  fv  =  fx  +  3;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    3;    Double  fv  =  fx  +  3;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	72	None	add
416	[BUG]  [BUGGY]  double  fv  =  fx  +  3;  int  fv  =  fx  +  3;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  3;  int  fv  =  fx  +  3;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    3;    int  fv  =  fx  +  3;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	72	None	add
417	[BUG]  [BUGGY]  double  fv  =  fx  +  3;  fv  =  fx  +  3;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  3;  fv  =  fx  +  3;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    +    3;    fv  =  fx  +  3;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	72	None	add
418	[BUG]  [BUGGY]  b  =  targetType.getBooleanValue(f,  false);  [CE]  cannot  find  symbol  targetType  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  targetType.getBooleanValue(f,  false);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  targetType.getBooleanValue(f,  false);	  b    =    f.getBooleanValue(goalType,    false);    	non-compiled	[CE]  cannot  find  symbol  targetType	100	None	replace
419	[BUG]  [BUGGY]  b  =  GoalType.getBooleanValue(f,  false);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  GoalType.getBooleanValue(f,  false);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  GoalType.getBooleanValue(f,  false);	  b    =    f.getBooleanValue(goalType,    false);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
420	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  *  3;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  *  3;	  double    fv    =    fx    +    3;    	compilable	  [FE]  AssertionError  	73	4	replace
421	[BUG]  [BUGGY]  double  fv  =  fx  *  3;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  *  3;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  *  3;	  double    fv    =    fx    +    3;    	compilable	  [FE]  AssertionError  	73	4	replace
422	[BUG]  [BUGGY]  if(isMinim)  {  if(!isMaximum)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(!isMaximum)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(!isMaximum)  {  continue;  }	  if(isMinim)    {    if(!isMinim)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	45	None	replace
423	[BUG]  [BUGGY]  if(!isMinim)  {  continue;  }  [CE]  continue  outside  of  loop  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(!isMinim)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(!isMinim)  {  continue;  }	  if(isMinim)    {    if(!isMinim)    {    continue;    }    	non-compiled	[CE]  continue  outside  of  loop	45	None	replace
424	[BUG]  [BUGGY]  if(isMinim)  {  if(!isInfinity)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(!isInfinity)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(!isInfinity)  {  continue;  }	  if(isMinim)    {    if(!isMinim)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	45	None	replace
425	[BUG]  [BUGGY]  b  =  d.getBooleanValue(f,  goalType);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  d.getBooleanValue(f,  goalType);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  d.getBooleanValue(f,  goalType);	  b    =    goalType.getBooleanValue(f,    d);    	non-compiled	[CE]  double  cannot  be  dereferenced	27	None	replace
426	[BUG]  [BUGGY]  b  =  f.getBooleanValue(goalType,  d);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  f.getBooleanValue(goalType,  d);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(goalType,  d);	  b    =    goalType.getBooleanValue(f,    d);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
427	[BUG]  [BUGGY]  double  fv  =  -d;  double  fv  =  -d;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -d;  double  fv  =  -d;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    -d;    double  fv  =  -d;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	10	None	add
428	[BUG]  [BUGGY]  double  fv  =  -d;  Double  fv  =  -d;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -d;  Double  fv  =  -d;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    -d;    Double  fv  =  -d;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	10	None	add
429	[BUG]  [BUGGY]  double  fv  =  -d;  int  fv  =  -d;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -d;  int  fv  =  -d;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    -d;    int  fv  =  -d;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	10	None	add
430	[BUG]  [BUGGY]  double  fv  =  -d;  fv  =  -d;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -d;  fv  =  -d;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    -d;    fv  =  -d;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	10	None	add
431	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(0,  fx  +  1);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  Math.max(0,  fx  +  1);	  double    fv    =    Math.max(0,    fx);    	compilable	  [FE]  AssertionError  	157	4	replace
432	[BUG]  [BUGGY]  double  fv  =  Math.max(0,  fx  +  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(0,  fx  +  1);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  Math.max(0,  fx  +  1);	  double    fv    =    Math.max(0,    fx);    	compilable	  [FE]  AssertionError  	157	4	replace
433	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(0,  fx  -  1);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  Math.max(0,  fx  -  1);	  double    fv    =    Math.max(0,    fx);    	compilable	  [FE]  AssertionError  	157	4	replace
434	[BUG]  [BUGGY]  double  fv  =  Math.max(0,  fx  -  1);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(0,  fx  -  1);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  Math.max(0,  fx  -  1);	  double    fv    =    Math.max(0,    fx);    	compilable	  [FE]  AssertionError  	157	4	replace
435	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(1,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  Math.max(1,  fx);	  double    fv    =    Math.max(0,    fx);    	compilable	  [FE]  AssertionError  	157	4	replace
436	[BUG]  [BUGGY]  double  fv  =  Math.max(1,  fx);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(1,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  Math.max(1,  fx);	  double    fv    =    Math.max(0,    fx);    	compilable	  [FE]  AssertionError  	157	4	replace
437	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.min(0,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  Math.min(0,  fx);	  double    fv    =    Math.max(0,    fx);    	compilable	  [FE]  AssertionError  	157	4	replace
438	[BUG]  [BUGGY]  double  fv  =  Math.min(0,  fx);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.min(0,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  Math.min(0,  fx);	  double    fv    =    Math.max(0,    fx);    	compilable	  [FE]  AssertionError  	157	4	replace
439	[BUG]  [BUGGY]  if(isMinim)  {  if(!goalType  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(!goalType  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(!goalType  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	  if(isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
440	[BUG]  [BUGGY]  int  fv  =  0;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  fv  =  0;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  fv  =  0;	  double    fv    =    0;    int    fv    =    0;    	non-compiled	[CE]  possible  loss  of  precision	38	None	replace
441	[BUG]  [BUGGY]  Integer  fv  =  0;  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  Integer  fv  =  0;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	Integer  fv  =  0;	  double    fv    =    0;    int    fv    =    0;    	non-compiled	[CE]  incompatible  types	38	None	replace
442	[BUG]  [BUGGY]  float  fv  =  0;  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  float  fv  =  0;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	float  fv  =  0;	  double    fv    =    0;    int    fv    =    0;    	non-compiled	[CE]  possible  loss  of  precision	38	None	replace
443	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -w;  fv  =  -fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  -w;  fv  =  -fx;	  double    fv    =    -fx;    fv    =    -fx;    	compilable	  [FE]  AssertionError  	77	4	replace
444	[BUG]  [BUGGY]  double  fv  =  -w;  fv  =  -fx;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -w;  fv  =  -fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  -w;  fv  =  -fx;	  double    fv    =    -fx;    fv    =    -fx;    	compilable	  [FE]  AssertionError  	77	4	replace
445	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -d;  fv  =  -fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  -d;  fv  =  -fx;	  double    fv    =    -fx;    fv    =    -fx;    	compilable	  [FE]  AssertionError  	77	4	replace
446	[BUG]  [BUGGY]  double  fv  =  -d;  fv  =  -fx;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -d;  fv  =  -fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  -d;  fv  =  -fx;	  double    fv    =    -fx;    fv    =    -fx;    	compilable	  [FE]  AssertionError  	77	4	replace
447	[BUG]  [BUGGY]  double  fv  =  fx  +  middle;  [CE]  cannot  find  symbol  middle  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  middle;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  +  middle;	  double    fv    =    fx    +    mid;    double    fv    =    fx    +    middle;    	non-compiled	[CE]  cannot  find  symbol  middle	96	None	replace
448	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  lo  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  lo  -  1;	  double    fv    =    mid    -    1;    	compilable	  [FE]  AssertionError  	49	4	replace
449	[BUG]  [BUGGY]  double  fv  =  lo  -  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  lo  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  lo  -  1;	  double    fv    =    mid    -    1;    	compilable	  [FE]  AssertionError  	49	4	replace
450	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  -  2;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  -  2;	  double    fv    =    mid    -    1;    	compilable	  [FE]  AssertionError  	49	4	replace
451	[BUG]  [BUGGY]  double  fv  =  mid  -  2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  -  2;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  -  2;	  double    fv    =    mid    -    1;    	compilable	  [FE]  AssertionError  	49	4	replace
452	[BUG]  [BUGGY]  if(goalType  ==  GoalType.GOLDEN)  {  if(!isMinim)return  false;  }  [CE]  cannot  find  symbol  GOLDEN  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.GOLDEN)  {  if(!isMinim)return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.GOLDEN)  {  if(!isMinim)return  false;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)return    false;    }    	non-compiled	[CE]  cannot  find  symbol  GOLDEN	150	None	replace
453	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MINIMIZE)  {  if(!isMinim)return  false;  }  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.MINIMIZE)  {  if(!isMinim)return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.MINIMIZE)  {  if(!isMinim)return  false;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)return    false;    }    	non-compiled	[CE]  incompatible  types	150	None	replace
454	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid;  fv  =  fv;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid;  fv  =  fv;	  double    fv    =    mid;    fv    =    mid;    	compilable	  [FE]  AssertionError  	132	4	replace
455	[BUG]  [BUGGY]  double  fv  =  mid;  fv  =  fv;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid;  fv  =  fv;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid;  fv  =  fv;	  double    fv    =    mid;    fv    =    mid;    	compilable	  [FE]  AssertionError  	132	4	replace
456	[BUG]  [BUGGY]  fv  =  lo;  fv  =  mid;  [CE]  cannot  find  symbol  fv  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fv  =  lo;  fv  =  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fv  =  lo;  fv  =  mid;	  double    fv    =    mid;    fv    =    mid;    	non-compiled	[CE]  cannot  find  symbol  fv	132	None	replace
457	[BUG]  [BUGGY]  if(isMinim)  {  double  fv  =  -fx;  fv  =  -fx;  }  [CE]  cannot  find  symbol  fv  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  double  fv  =  -fx;  fv  =  -fx;  }  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  double  fv  =  -fx;  fv  =  -fx;  }	  double    fv    =    -fx;    fv    =    -fx;    	non-compiled	[CE]  cannot  find  symbol  fv	77	None	replace
458	[BUG]  [BUGGY]  if(isMinim)  {  double  fv  =  -fx;  fv  =  -fv;  }  [CE]  cannot  find  symbol  fv  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  double  fv  =  -fx;  fv  =  -fv;  }  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  double  fv  =  -fx;  fv  =  -fv;  }	  double    fv    =    -fx;    fv    =    -fx;    	non-compiled	[CE]  cannot  find  symbol  fv	77	None	replace
459	[BUG]  [BUGGY]  if(goalType  ==  GoalType.SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.abs(fx);    }    	non-compiled	[CE]  not  a  statement	82	None	replace
460	[BUG]  [BUGGY]  if(goalType  ==  GoalType.NONE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.NONE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.NONE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.abs(fx);    }    	non-compiled	[CE]  not  a  statement	82	None	replace
461	[BUG]  [BUGGY]  if(goalType  ==  GoalType.FUNCTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.FUNCTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.FUNCTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(fx);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.abs(fx);    }    	non-compiled	[CE]  not  a  statement	82	None	replace
462	[BUG]  [BUGGY]  b  =  goals.getBooleanValue(f);  [CE]  cannot  find  symbol  goals  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  goals.getBooleanValue(f);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goals.getBooleanValue(f);	  b    =    f.getBooleanValue(goalType);    	non-compiled	[CE]  cannot  find  symbol  goals	23	None	replace
463	[BUG]  [BUGGY]  if(isMinim)  {  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	40	None	replace
464	[BUG]  [BUGGY]  long  fv  =  mid;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  possible  loss  of  precision  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  long  fv  =  mid;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	long  fv  =  mid;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  possible  loss  of  precision	40	None	replace
465	[BUG]  [BUGGY]  if(isMinim)  {  while(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  while(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  while(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }	  if(isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	44	None	replace
466	[BUG]  [BUGGY]  double  fv  =  isMinim?  f  :  fx;  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  f  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  f  :  fx;	  double    fv    =    isMinim?    min    :    fx;    	non-compiled	[CE]  incompatible  types	3	None	replace
467	[BUG]  [BUGGY]  double  fv  =  Math.max(0,  fx);  double  fx  =  Math.max(0,  fx);  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(0,  fx);  double  fx  =  Math.max(0,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    Math.max(0,    fx);    double  fx  =  Math.max(0,  fx);	  	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	156	None	add
468	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  mid  :  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  mid  :  1;	  double    fv    =    mid;    double    fv    =    mid;    	compilable	  [FE]  AssertionError  	60	4	replace
469	[BUG]  [BUGGY]  double  fv  =  isMinim?  mid  :  1;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  mid  :  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  mid  :  1;	  double    fv    =    mid;    double    fv    =    mid;    	compilable	  [FE]  AssertionError  	60	4	replace
470	[BUG]  [BUGGY]  b  =  f.getBooleanValue(v);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  f.getBooleanValue(v);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(v);	  b    =    f.getBooleanValue(f);    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
471	[BUG]  [BUGGY]  b  =  f.getBooleanValue(i);  [CE]  cannot  find  symbol  i  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  f.getBooleanValue(i);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(i);	  b    =    f.getBooleanValue(f);    	non-compiled	[CE]  cannot  find  symbol  i	125	None	replace
472	[BUG]  [BUGGY]  b  =  f.getBooleanValue(t);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  f.getBooleanValue(t);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(t);	  b    =    f.getBooleanValue(f);    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
473	[BUG]  [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  throw  new  IllegalArgumentException( " ".);  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
474	[BUG]  [BUGGY]  if(isMinim)  {  if(!isMaximumIterationCount)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(!isMaximumIterationCount)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(!isMaximumIterationCount)  {  continue;  }	  if(isMinim)    {    if(!isMinim)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	45	None	replace
475	[BUG]  [BUGGY]  double  fv  =  isMinim?  fw  :  fv;  [CE]  cannot  find  symbol  fw  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fw  :  fv;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  fw  :  fv;	  double    fv    =    isMinim?    fx    :    fv;    	non-compiled	[CE]  cannot  find  symbol  fw	139	None	replace
476	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION  ||  goalType  ==  GoalType.MAXIMIZE)  {  return  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION  ||  goalType  ==  GoalType.MAXIMIZE)  {  return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION  ||  goalType  ==  GoalType.MAXIMIZE)  {  return  false;  }	  if(isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    return    false;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	28	None	replace
477	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION  ||  goalType  ==  GoalType.MINIMIZE)  {  return  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION  ||  goalType  ==  GoalType.MINIMIZE)  {  return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION  ||  goalType  ==  GoalType.MINIMIZE)  {  return  false;  }	  if(isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    return    false;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	28	None	replace
478	[BUG]  [BUGGY]  if(!isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(!isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(!isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }	  if(isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	20	None	replace
479	[BUG]  [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }  [CE]  cannot  find  symbol  GOLDEN_SECTION  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }	  if(isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_SECTION	20	None	replace
480	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximumIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximumIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximumIterationCount)  {  fx  =  -a;  }	  if(isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
481	[BUG]  [BUGGY]  b  =  f.getBooleanValue(gOLDEN_SECTION);  [CE]  cannot  find  symbol  gOLDEN_SECTION  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  f.getBooleanValue(gOLDEN_SECTION);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(gOLDEN_SECTION);	  b    =    f.getBooleanValue(realType);    	non-compiled	[CE]  cannot  find  symbol  gOLDEN_SECTION	158	None	replace
482	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  0;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  fx  :  0;	  double    fv    =    isMinim?    fx    :    1;    	compilable	  [FE]  AssertionError  	5	4	replace
483	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  0;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  fx  :  0;	  double    fv    =    isMinim?    fx    :    1;    	compilable	  [FE]  AssertionError  	5	4	replace
484	[BUG]  [BUGGY]  b  =  goalType.getBooleanValue(f,  isMinim).booleanValue();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  goalType.getBooleanValue(f,  isMinim).booleanValue();  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goalType.getBooleanValue(f,  isMinim).booleanValue();	  b    =    goalType.getBooleanValue(f,    isMinim);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
485	[BUG]  [BUGGY]  b  =  GoalType.getBooleanValue(f,  isMinim);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  GoalType.getBooleanValue(f,  isMinim);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  GoalType.getBooleanValue(f,  isMinim);	  b    =    goalType.getBooleanValue(f,    isMinim);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
486	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  t  :  lo;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  t  :  lo;	  double    fv    =    isMinim?    t    :    fx;    	compilable	  [FE]  AssertionError  	138	4	replace
487	[BUG]  [BUGGY]  double  fv  =  isMinim?  t  :  lo;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  t  :  lo;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  t  :  lo;	  double    fv    =    isMinim?    t    :    fx;    	compilable	  [FE]  AssertionError  	138	4	replace
488	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  lo  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  lo  :  fx;	  double    fv    =    isMinim?    t    :    fx;    	compilable	  [FE]  AssertionError  	138	4	replace
489	[BUG]  [BUGGY]  double  fv  =  isMinim?  lo  :  fx;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  lo  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  lo  :  fx;	  double    fv    =    isMinim?    t    :    fx;    	compilable	  [FE]  AssertionError  	138	4	replace
490	[BUG]  [BUGGY]  if(goalType  ==  GoalType.SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.abs(a);    }    	non-compiled	[CE]  not  a  statement	152	None	replace
491	[BUG]  [BUGGY]  if(goalType  ==  GoalType.FUNCTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.FUNCTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.FUNCTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.abs(a);    }    	non-compiled	[CE]  not  a  statement	152	None	replace
492	[BUG]  [BUGGY]  if(goalType  ==  GoalType.NONE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.NONE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.NONE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.abs(a);    }    	non-compiled	[CE]  not  a  statement	152	None	replace
493	[BUG]  [BUGGY]  int  count  =  0;  for(int  b  =  0;  b  <  eps;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  count  =  0;  for(int  b  =  0;  b  <  eps;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  count  =  0;  for(int  b  =  0;  b  <  eps;  b++)  {  m  =  0.5  *  (a  +  b);  }	  int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	65	None	replace
494	[BUG]  [BUGGY]  int  count  =  0;  for(int  b  =  0;  b  <  fx;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  count  =  0;  for(int  b  =  0;  b  <  fx;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  count  =  0;  for(int  b  =  0;  b  <  fx;  b++)  {  m  =  0.5  *  (a  +  b);  }	  int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	65	None	replace
495	[BUG]  [BUGGY]  int  count  =  0;  for(int  b  =  0;  b  <  a;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  count  =  0;  for(int  b  =  0;  b  <  a;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  count  =  0;  for(int  b  =  0;  b  <  a;  b++)  {  m  =  0.5  *  (a  +  b);  }	  int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	65	None	replace
496	[BUG]  [BUGGY]  b  =  goalType.getBooleanValue(x);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  goalType.getBooleanValue(x);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goalType.getBooleanValue(x);	  b    =    goalType.getBooleanValue(fx);    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
497	[BUG]  [BUGGY]  b  =  goalType.getBooleanValue(fx,  isMinim);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  goalType.getBooleanValue(fx,  isMinim);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goalType.getBooleanValue(fx,  isMinim);	  b    =    goalType.getBooleanValue(fx);    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
498	[BUG]  [BUGGY]  b  =  goalType.getBooleanValue(lo,  fx);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  goalType.getBooleanValue(lo,  fx);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goalType.getBooleanValue(lo,  fx);	  b    =    goalType.getBooleanValue(fx);    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
499	[BUG]  [BUGGY]  if(!isMinim)  {  if(fx  >  GOLDEN_SECTION)  {  fx  =  -fx;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(!isMinim)  {  if(fx  >  GOLDEN_SECTION)  {  fx  =  -fx;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(!isMinim)  {  if(fx  >  GOLDEN_SECTION)  {  fx  =  -fx;  }	  if(isMinim)    {    if(fx    >    GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	replace
500	[BUG]  [BUGGY]  if(isMinim)  {  if(fx  <  =  GOLDEN_SECTION)  {  fx  =  -fx;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(fx  <  =  GOLDEN_SECTION)  {  fx  =  -fx;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(fx  <  =  GOLDEN_SECTION)  {  fx  =  -fx;  }	  if(isMinim)    {    if(fx    >    GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
501	[BUG]  [BUGGY]  b  =  goals.getBooleanValue(f,  false);  [CE]  cannot  find  symbol  goals  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  goals.getBooleanValue(f,  false);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goals.getBooleanValue(f,  false);	  b    =    f.getBooleanValue(goalType,    false);    	non-compiled	[CE]  cannot  find  symbol  goals	100	None	replace
502	[BUG]  [BUGGY]  b  =  lo.getBooleanValue(f,  x);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  lo.getBooleanValue(f,  x);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  lo.getBooleanValue(f,  x);	  b    =    f.getBooleanValue(goalType,    x);    	non-compiled	[CE]  double  cannot  be  dereferenced	26	None	replace
503	[BUG]  [BUGGY]  b  =  goals.getBooleanValue(f,  x);  [CE]  cannot  find  symbol  goals  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  goals.getBooleanValue(f,  x);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goals.getBooleanValue(f,  x);	  b    =    f.getBooleanValue(goalType,    x);    	non-compiled	[CE]  cannot  find  symbol  goals	26	None	replace
504	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  /  4;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  /  4;	  double    fv    =    mid    /    1;    	compilable	  [FE]  AssertionError  	104	4	replace
505	[BUG]  [BUGGY]  double  fv  =  mid  /  4;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  /  4;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  /  4;	  double    fv    =    mid    /    1;    	compilable	  [FE]  AssertionError  	104	4	replace
506	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  a;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  fx  :  a;	  double    fv    =    isMinim?    fx    :    GOLDEN_SECTION;    	compilable	  [FE]  AssertionError  	115	4	replace
507	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  a;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  a;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  fx  :  a;	  double    fv    =    isMinim?    fx    :    GOLDEN_SECTION;    	compilable	  [FE]  AssertionError  	115	4	replace
508	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  GOLDEN_SECTION  -  1;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  fx  :  GOLDEN_SECTION  -  1;	  double    fv    =    isMinim?    fx    :    GOLDEN_SECTION;    	compilable	  [FE]  AssertionError  	115	4	replace
509	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  GOLDEN_SECTION  -  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  GOLDEN_SECTION  -  1;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  fx  :  GOLDEN_SECTION  -  1;	  double    fv    =    isMinim?    fx    :    GOLDEN_SECTION;    	compilable	  [FE]  AssertionError  	115	4	replace
510	[BUG]  [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  fx;  fv  =  isMinim?  GOLDEN_SECTION  :  fx;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  fx;  fv  =  isMinim?  GOLDEN_SECTION  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    isMinim?    GOLDEN_SECTION    :    fx;    fv  =  isMinim?  GOLDEN_SECTION  :  fx;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	116	None	add
511	[BUG]  [BUGGY]  double  fv  =  isMinim?  mid  :  hi;  double  fv  =  middle;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  mid  :  hi;  double  fv  =  middle;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  mid  :  hi;  double  fv  =  middle;	  double    fv    =    mid;    double    fv    =    middle;    	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	63	None	replace
512	[BUG]  [BUGGY]  double  fv  =  isMinim?  mid  :  fx;  double  fv  =  middle;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  mid  :  fx;  double  fv  =  middle;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  mid  :  fx;  double  fv  =  middle;	  double    fv    =    mid;    double    fv    =    middle;    	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	63	None	replace
513	[BUG]  [BUGGY]  b  =  goalType.getBooleanValue(f,  isMinimum);  [CE]  cannot  find  symbol  isMinimum  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  goalType.getBooleanValue(f,  isMinimum);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goalType.getBooleanValue(f,  isMinimum);	  b    =    goalType.getBooleanValue(f,    true);    	non-compiled	[CE]  cannot  find  symbol  isMinimum	98	None	replace
514	[BUG]  [BUGGY]  double  fv  =  mid  -  1;  double  fx  =  fx  -  1;  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  -  1;  double  fx  =  fx  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  -  1;  double  fx  =  fx  -  1;	  double    fv    =    fx    -    1;    double    fx    =    fx    -    1;    	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	134	None	replace
515	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid;  fv  =  0;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid;  fv  =  0;	  double    fv    =    0;    fv    =    0;    	compilable	  [FE]  AssertionError  	39	4	replace
516	[BUG]  [BUGGY]  double  fv  =  mid;  fv  =  0;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid;  fv  =  0;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid;  fv  =  0;	  double    fv    =    0;    fv    =    0;    	compilable	  [FE]  AssertionError  	39	4	replace
517	[BUG]  [BUGGY]  Integer  fv  =  fx  +  1;  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  Integer  fv  =  fx  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	Integer  fv  =  fx  +  1;	  double    fv    =    fx    +    1;    int    fv    =    fx    +    1;    	non-compiled	[CE]  incompatible  types	58	None	replace
518	[BUG]  [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }  [CE]  cannot  find  symbol  GOLDEN_SECTION  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim  &&  goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }	  if(isMinim    ||    isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    continue;    }    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_SECTION	47	None	replace
519	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  *  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  *  1;	  double    fv    =    fx    *    1;    	compilable	  [FE]  AssertionError  	148	4	replace
520	[BUG]  [BUGGY]  double  fv  =  mid  *  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  *  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  *  1;	  double    fv    =    fx    *    1;    	compilable	  [FE]  AssertionError  	148	4	replace
521	[BUG]  [BUGGY]  if(isMinim)  {  double  fv  =  -fx;  double  fv  =  -fv;  }  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  double  fv  =  -fx;  double  fv  =  -fv;  }  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  double  fv  =  -fx;  double  fv  =  -fv;  }	  double    fv    =    -fx;    double    fv    =    -fx;    	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	74	None	replace
522	[BUG]  [BUGGY]  if(isMinim)  {  double  fv  =  -1;  double  fv  =  -fx;  }  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  double  fv  =  -1;  double  fv  =  -fx;  }  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  double  fv  =  -1;  double  fv  =  -fx;  }	  double    fv    =    -fx;    double    fv    =    -fx;    	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	74	None	replace
523	[BUG]  [BUGGY]  if(isMinim)  {  double  fv  =  -fx;  double  fv  =  -fv;  }  else  {  fv  =  -fx;  }  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  double  fv  =  -fx;  double  fv  =  -fv;  }  else  {  fv  =  -fx;  }  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  double  fv  =  -fx;  double  fv  =  -fv;  }  else  {  fv  =  -fx;  }	  double    fv    =    -fx;    double    fv    =    -fx;    	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	74	None	replace
524	[BUG]  [BUGGY]  MutableToJavaType(f,  isMinim)  {  throw  new  IllegalArgumentException( " ".equals(goalType));  }  [CE]  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  MutableToJavaType(f,  isMinim)  {  throw  new  IllegalArgumentException( " ".equals(goalType));  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	MutableToJavaType(f,  isMinim)  {  throw  new  IllegalArgumentException( " ".equals(goalType));  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ".equals(goalType));    }    	non-compiled	[CE]  	35	None	replace
525	[BUG]  [BUGGY]  MutableToJavaType(f,  isMinim)  {  throw  new  IllegalArgumentException( " ").equals(goalType));  }  [CE]  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  MutableToJavaType(f,  isMinim)  {  throw  new  IllegalArgumentException( " ").equals(goalType));  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	MutableToJavaType(f,  isMinim)  {  throw  new  IllegalArgumentException( " ").equals(goalType));  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ".equals(goalType));    }    	non-compiled	[CE]  	35	None	replace
526	[BUG]  [BUGGY]  MutableToJavaType(f,  isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  MutableToJavaType(f,  isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	MutableToJavaType(f,  isMinim)  {  throw  new  IllegalArgumentException( " ");  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ".equals(goalType));    }    	non-compiled	[CE]  	35	None	replace
527	[BUG]  [BUGGY]  MutableToJavaType(f,  isMinim)  {  throw  new  IllegalArgumentException( " "  +  equals(goalType));  }  [CE]  [FE]                        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  MutableToJavaType(f,  isMinim)  {  throw  new  IllegalArgumentException( " "  +  equals(goalType));  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	MutableToJavaType(f,  isMinim)  {  throw  new  IllegalArgumentException( " "  +  equals(goalType));  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ".equals(goalType));    }    	non-compiled	[CE]  	35	None	replace
528	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  fx  +  lo;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  +  fx  +  lo;	  double    fv    =    mid    +    fx;    	compilable	  [FE]  AssertionError  	79	4	replace
529	[BUG]  [BUGGY]  double  fv  =  mid  +  fx  +  lo;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  fx  +  lo;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  +  fx  +  lo;	  double    fv    =    mid    +    fx;    	compilable	  [FE]  AssertionError  	79	4	replace
530	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  fx  +  b;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  +  fx  +  b;	  double    fv    =    mid    +    fx;    	compilable	  [FE]  AssertionError  	79	4	replace
531	[BUG]  [BUGGY]  double  fv  =  mid  +  fx  +  b;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  fx  +  b;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  +  fx  +  b;	  double    fv    =    mid    +    fx;    	compilable	  [FE]  AssertionError  	79	4	replace
532	[BUG]  [BUGGY]  double  fv  =  fx  +  fw;  [CE]  cannot  find  symbol  fw  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  fw;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  +  fw;	  double    fv    =    fx    +    hi;    	non-compiled	[CE]  cannot  find  symbol  fw	121	None	replace
533	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  lo;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  +  lo;	  double    fv    =    fx    +    hi;    	compilable	  [FE]  AssertionError  	121	4	replace
534	[BUG]  [BUGGY]  double  fv  =  fx  +  lo;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  lo;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  +  lo;	  double    fv    =    fx    +    hi;    	compilable	  [FE]  AssertionError  	121	4	replace
535	[BUG]  [BUGGY]  if(fx  >  GOLDEN_SECTION)  {  fx  =  -w;  }  [CE]  cannot  find  symbol  fv  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(fx  >  GOLDEN_SECTION)  {  fx  =  -w;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(fx  >  GOLDEN_SECTION)  {  fx  =  -w;  }	  if(fx    >    GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  cannot  find  symbol  fv	22	None	replace
536	[BUG]  [BUGGY]  if(fx  >  GOLDEN_SECTION)  {  fx  =  -g;  }  [CE]  cannot  find  symbol  g  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(fx  >  GOLDEN_SECTION)  {  fx  =  -g;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(fx  >  GOLDEN_SECTION)  {  fx  =  -g;  }	  if(fx    >    GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  cannot  find  symbol  g	22	None	replace
537	[BUG]  [BUGGY]  b  =  f.getBooleanValue(m);  [CE]  cannot  find  symbol  m  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  f.getBooleanValue(m);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(m);	  b    =    f.getBooleanValue(targetType);    	non-compiled	[CE]  cannot  find  symbol  m	159	None	replace
538	[BUG]  [BUGGY]  if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	  if(goalType!=    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	113	None	replace
539	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.SECTION)  {  continue;  }  [CE]  cannot  find  symbol  SECTION  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.SECTION)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim  &&  goalType!=  GoalType.SECTION)  {  continue;  }	  if(isMinim)    {    continue;    }    	non-compiled	[CE]  cannot  find  symbol  SECTION	46	None	replace
540	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.round(a);  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.round(a);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.round(a);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  not  a  statement	80	None	replace
541	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.exp(-a);  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.exp(-a);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.exp(-a);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  not  a  statement	80	None	replace
542	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  eps;  b++)  {  eps  *  Math.  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  eps;  b++)  {  eps  *  Math.  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  eps;  b++)  {  eps  *  Math.	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  <identifier>  expected	80	None	replace
543	[BUG]  [BUGGY]  double  fv  =  mid  -  1;  Double  fv  =  fx  -  1;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  -  1;  Double  fv  =  fx  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  -  1;  Double  fv  =  fx  -  1;	  double    fv    =    fx    -    1;    Double    fv    =    fx    -    1;    	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	91	None	replace
544	[BUG]  [BUGGY]  if(isMinimum)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinimum)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinimum)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    	non-compiled	[CE]  reached  end  of  file  while  parsing	41	None	replace
545	[BUG]  [BUGGY]  if(goalType  ==  GoalType.SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]                        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    	non-compiled	[CE]  reached  end  of  file  while  parsing	41	None	replace
546	[BUG]  [BUGGY]  if(m  >  0.0)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]                          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(m  >  0.0)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(m  >  0.0)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    	non-compiled	[CE]  reached  end  of  file  while  parsing	41	None	replace
547	[BUG]  [BUGGY]  double  fv  =  isMinim?  min  :  GOLDEN_SECTION;  [CE]  min  has  private  access  in  AbstractUnivariateRealOptimizer  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  min  :  GOLDEN_SECTION;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  min  :  GOLDEN_SECTION;	  double    fv    =    isMinim;    	non-compiled	[CE]  min  has  private  access  in  AbstractUnivariateRealOptimizer	118	None	replace
548	[BUG]  [BUGGY]  fx  =  fx  +  1;  fv  =  fx  +  1;  [CE]  cannot  find  symbol  fv  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fx  =  fx  +  1;  fv  =  fx  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fx  =  fx  +  1;  fv  =  fx  +  1;	  double    fv    =    fx    +    1;    fv    =    fx    +    1;    	non-compiled	[CE]  cannot  find  symbol  fv	59	None	replace
549	[BUG]  [BUGGY]  fx  =  fx  +  1;  fv  =  fx  +  2;  [CE]  cannot  find  symbol  fv  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fx  =  fx  +  1;  fv  =  fx  +  2;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fx  =  fx  +  1;  fv  =  fx  +  2;	  double    fv    =    fx    +    1;    fv    =    fx    +    1;    	non-compiled	[CE]  cannot  find  symbol  fv	59	None	replace
550	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -a  +  b;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  -a  +  b;	  double    fv    =    -a;    	compilable	  [FE]  AssertionError  	15	4	replace
551	[BUG]  [BUGGY]  double  fv  =  -a  +  b;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -a  +  b;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  -a  +  b;	  double    fv    =    -a;    	compilable	  [FE]  AssertionError  	15	4	replace
552	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  *  b;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  *  b;	  double    fv    =    fx    +    b;    	compilable	  [FE]  AssertionError  	123	4	replace
553	[BUG]  [BUGGY]  double  fv  =  fx  *  b;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  *  b;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  *  b;	  double    fv    =    fx    +    b;    	compilable	  [FE]  AssertionError  	123	4	replace
554	[BUG]  [BUGGY]  double  fv  =  -fv;  [CE]  variable  fv  might  not  have  been  initialized  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -fv;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  -fv;	  double    fv    =    -goalType;    	non-compiled	[CE]  variable  fv  might  not  have  been  initialized	9	None	replace
555	[BUG]  [BUGGY]  if(isMinimum)  {  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinimum)  {  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinimum)  {  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	  double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	136	None	replace
556	[BUG]  [BUGGY]  if(!isMinimum)  {  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(!isMinimum)  {  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(!isMinimum)  {  double  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	  double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	136	None	replace
557	[BUG]  [BUGGY]  if(!isMinimum)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(!isMinimum)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(!isMinimum)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	  double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	136	None	replace
558	[BUG]  [BUGGY]  While(isMinim)  {  throw  new  IllegalArgumentException( " "  +  fx);  }  [CE]  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  While(isMinim)  {  throw  new  IllegalArgumentException( " "  +  fx);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	While(isMinim)  {  throw  new  IllegalArgumentException( " "  +  fx);  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ".equals(fx));    }    	non-compiled	[CE]  	34	None	replace
559	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(b,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  Math.max(b,  fx);	  double    fv    =    Math.max(a,    fx);    	compilable	  [FE]  AssertionError  	155	4	replace
560	[BUG]  [BUGGY]  double  fv  =  Math.max(b,  fx);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(b,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  Math.max(b,  fx);	  double    fv    =    Math.max(a,    fx);    	compilable	  [FE]  AssertionError  	155	4	replace
561	[BUG]  [BUGGY]  double  fv  =  fx  /  1;  double  fx  =  fx  /  1;  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  /  1;  double  fx  =  fx  /  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    /    1;    double  fx  =  fx  /  1;	  	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	50	None	add
562	[BUG]  [BUGGY]  if(isMinim)  {  while(t  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  while(t  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  while(t  ==  GoalType.GOLDEN_SECTION)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	  if(isMinim)    {    while(goalType    ==    GoalType.GOLDEN_SECTION)    {    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	17	None	replace
563	[BUG]  [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(mid));  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(mid));  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(mid));  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	129	None	replace
564	[BUG]  [BUGGY]  ble  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  ble  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	ble  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  if(isMinim)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
565	[BUG]  [BUGGY]  if(isMinim)  {  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  if(isMinim)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	108	None	replace
566	[BUG]  [BUGGY]  double  fv  =  mid  /  1;  double  fv  =  mid  /  2;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  /  1;  double  fv  =  mid  /  2;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    mid    /    1;    double  fv  =  mid  /  2;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	103	None	add
567	[BUG]  [BUGGY]  if(fx!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(fx!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(fx!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }	  if(goalType!=    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    return    false;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	126	None	replace
568	[BUG]  [BUGGY]  b  =  targetType.getBooleanValue(f,  a);  [CE]  cannot  find  symbol  targetType  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  targetType.getBooleanValue(f,  a);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  targetType.getBooleanValue(f,  a);	  b    =    f.getBooleanValue(goalType,    a);    	non-compiled	[CE]  cannot  find  symbol  targetType	8	None	replace
569	[BUG]  [BUGGY]  b  =  lo.getBooleanValue(f,  a);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  lo.getBooleanValue(f,  a);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  lo.getBooleanValue(f,  a);	  b    =    f.getBooleanValue(goalType,    a);    	non-compiled	[CE]  double  cannot  be  dereferenced	8	None	replace
570	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  -  1;  fv  =  fx  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  -  1;  fv  =  fx  -  1;	  double    fv    =    fx    -    1;    fv    =    fx    -    1;    	compilable	  [FE]  AssertionError  	93	4	replace
571	[BUG]  [BUGGY]  double  fv  =  mid  -  1;  fv  =  fx  -  1;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  -  1;  fv  =  fx  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  -  1;  fv  =  fx  -  1;	  double    fv    =    fx    -    1;    fv    =    fx    -    1;    	compilable	  [FE]  AssertionError  	93	4	replace
572	[BUG]  [BUGGY]  fx  =  fx  -  1;  fv  =  fx  -  1;  [CE]  cannot  find  symbol  fv  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fx  =  fx  -  1;  fv  =  fx  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fx  =  fx  -  1;  fv  =  fx  -  1;	  double    fv    =    fx    -    1;    fv    =    fx    -    1;    	non-compiled	[CE]  cannot  find  symbol  fv	93	None	replace
573	[BUG]  [BUGGY]  fv  =  mid  -  1;  fv  =  fx  -  1;  [CE]  cannot  find  symbol  fv  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fv  =  mid  -  1;  fv  =  fx  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fv  =  mid  -  1;  fv  =  fx  -  1;	  double    fv    =    fx    -    1;    fv    =    fx    -    1;    	non-compiled	[CE]  cannot  find  symbol  fv	93	None	replace
574	[BUG]  [BUGGY]  if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  [CE]  '.class'  expected  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =	  if(isMinim)    {    GoalType    goalType    =    GoalType.GOLDEN_SECTION;    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    	non-compiled	[CE]  '.class'  expected	110	None	replace
575	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(0,  mid);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  Math.max(0,  mid);	  double    fv    =    Math.max(0,    fx);    	compilable	  [FE]  AssertionError  	157	4	replace
576	[BUG]  [BUGGY]  double  fv  =  Math.max(0,  mid);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(0,  mid);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  Math.max(0,  mid);	  double    fv    =    Math.max(0,    fx);    	compilable	  [FE]  AssertionError  	157	4	replace
577	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(0,  fx  -  mid);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  Math.max(0,  fx  -  mid);	  double    fv    =    Math.max(0,    fx);    	compilable	  [FE]  AssertionError  	157	4	replace
578	[BUG]  [BUGGY]  double  fv  =  Math.max(0,  fx  -  mid);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(0,  fx  -  mid);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  Math.max(0,  fx  -  mid);	  double    fv    =    Math.max(0,    fx);    	compilable	  [FE]  AssertionError  	157	4	replace
579	[BUG]  [BUGGY]  b  =  f.getBooleanValue(v,  false);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  f.getBooleanValue(v,  false);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(v,  false);	  b    =    f.getBooleanValue(f,    false);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
580	[BUG]  [BUGGY]  b  =  f.getBooleanValue(f,  isMinimum);  [CE]  cannot  find  symbol  isMinimum  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  f.getBooleanValue(f,  isMinimum);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(f,  isMinimum);	  b    =    f.getBooleanValue(f,    false);    	non-compiled	[CE]  cannot  find  symbol  isMinimum	99	None	replace
581	[BUG]  [BUGGY]  if(!isMinim)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(!isMinim)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(!isMinim)  {  throw  new  IllegalArgumentException( " ".);  }	  if(!isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
582	[BUG]  [BUGGY]  if(isMinim)  {  double  fv  =  0;  double  fv  =  0;  }  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  double  fv  =  0;  double  fv  =  0;  }  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  double  fv  =  0;  double  fv  =  0;  }	  double    fv    =    0;    double    fv    =    0;    	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	36	None	replace
583	[BUG]  [BUGGY]  if(isMinim)  {  double  fv  =  0;  double  fv  =  0;  }  else  {  int  b  =  0;  for(int  i  =  mid;  i  <  b;  ++i)  {  f  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  double  fv  =  0;  double  fv  =  0;  }  else  {  int  b  =  0;  for(int  i  =  mid;  i  <  b;  ++i)  {  f  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  double  fv  =  0;  double  fv  =  0;  }  else  {  int  b  =  0;  for(int  i  =  mid;  i  <  b;  ++i)  {  f	  double    fv    =    0;    double    fv    =    0;    	non-compiled	[CE]  not  a  statement	36	None	replace
584	[BUG]  [BUGGY]  double  fv  =  fx  *  mid;  int  fv  =  fx  *  mid;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  *  mid;  int  fv  =  fx  *  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    *    mid;    int  fv  =  fx  *  mid;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	140	None	add
585	[BUG]  [BUGGY]  if(isMinim)  {  final  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximumIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  final  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximumIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  final  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximumIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  if(isMinim)    {    final    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	66	None	replace
586	[BUG]  [BUGGY]  Integer  fv  =  -fx;  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  Integer  fv  =  -fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	Integer  fv  =  -fx;	  double    fv    =    -fx;    int    fv    =    -fx;    	non-compiled	[CE]  incompatible  types	76	None	replace
587	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  a;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  GOLDEN_SECTION  :  a;	  double    fv    =    isMinim?    GOLDEN_SECTION    :    fx;    	compilable	  [FE]  AssertionError  	117	4	replace
588	[BUG]  [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  a;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  a;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  GOLDEN_SECTION  :  a;	  double    fv    =    isMinim?    GOLDEN_SECTION    :    fx;    	compilable	  [FE]  AssertionError  	117	4	replace
589	[BUG]  [BUGGY]  if(isMinim)  {  for(int  b  =  0;  b  <  e;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  for(int  b  =  0;  b  <  e;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  for(int  b  =  0;  b  <  e;  b++)  {  m  =  0.5  *  (a  +  b);  }	  if(isMinim)    {    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	67	None	replace
590	[BUG]  [BUGGY]  if(isMinim)  {  for(int  b  =  0;  b  <  mid;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  for(int  b  =  0;  b  <  mid;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  for(int  b  =  0;  b  <  mid;  b++)  {  m  =  0.5  *  (a  +  b);  }	  if(isMinim)    {    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	67	None	replace
591	[BUG]  [BUGGY]  if(isMinim)  {  for(int  b  =  0;  b  <  fx;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]                        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  for(int  b  =  0;  b  <  fx;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  for(int  b  =  0;  b  <  fx;  b++)  {  m  =  0.5  *  (a  +  b);  }	  if(isMinim)    {    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	67	None	replace
592	[BUG]  [BUGGY]  if(isMinim)  {  for(int  b  =  0;  b  <  w;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]                          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  for(int  b  =  0;  b  <  w;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  for(int  b  =  0;  b  <  w;  b++)  {  m  =  0.5  *  (a  +  b);  }	  if(isMinim)    {    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	67	None	replace
593	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b    	non-compiled	[CE]  ')'  expected	119	None	replace
594	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b  >>  GoalType.MAXIMIZE)  [CE]  '.class'  expected  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b  >>  GoalType.MAXIMIZE)  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b  >>  GoalType.MAXIMIZE)	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b    	non-compiled	[CE]  '.class'  expected	119	None	replace
595	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b  >>  GoalType.GOLDEN_SECTION  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b  >>  GoalType.GOLDEN_SECTION  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b  >>  GoalType.GOLDEN_SECTION	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b    	non-compiled	[CE]  ')'  expected	119	None	replace
596	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b  >>  GoalType.GOLDEN  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b  >>  GoalType.GOLDEN  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b  >>  GoalType.GOLDEN	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b    	non-compiled	[CE]  ')'  expected	119	None	replace
597	[BUG]  [BUGGY]  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximumIterationCount;  b++)  {  eps  *  Math.  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximumIterationCount;  b++)  {  eps  *  Math.  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximumIterationCount;  b++)  {  eps  *  Math.	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  <identifier>  expected	130	None	replace
598	[BUG]  [BUGGY]  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.round(  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.round(  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.round(	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  '.class'  expected	130	None	replace
599	[BUG]  [BUGGY]  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(a);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(a);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(a);  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  not  a  statement	130	None	replace
600	[BUG]  [BUGGY]  if(isMinim)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximumIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximumIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  fv  =  fx;  int  count  =  0;  while  (count  <  maximumIterationCount)  {  fx  =  -a;  }	  if(isMinim)    {    double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	111	None	replace
601	[BUG]  [BUGGY]  if(goalType  ==  GoalType.SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(a);  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(a);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(a);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.cos(a);    }    	non-compiled	[CE]  not  a  statement	151	None	replace
602	[BUG]  [BUGGY]  if(goalType  ==  GoalType.NONE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(a);  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.NONE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(a);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.NONE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(a);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.cos(a);    }    	non-compiled	[CE]  not  a  statement	151	None	replace
603	[BUG]  [BUGGY]  if(goalType  ==  GoalType.SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.floor(f);    }    	non-compiled	[CE]  not  a  statement	81	None	replace
604	[BUG]  [BUGGY]  if(goalType  ==  GoalType.NONE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.NONE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.NONE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.floor(f);    }    	non-compiled	[CE]  not  a  statement	81	None	replace
605	[BUG]  [BUGGY]  if(isMinim)  {  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    int    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  <identifier>  expected	131	None	replace
606	[BUG]  [BUGGY]  if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    int    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  '.class'  expected	131	None	replace
607	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  fx;  fv  =  fv  +  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  +  fx;  fv  =  fv  +  mid;	  double    fv    =    fx    +    mid;    fv    =    fx    +    mid;    	compilable	  [FE]  AssertionError  	97	4	replace
608	[BUG]  [BUGGY]  double  fv  =  mid  +  fx;  fv  =  fv  +  mid;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  fx;  fv  =  fv  +  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  +  fx;  fv  =  fv  +  mid;	  double    fv    =    fx    +    mid;    fv    =    fx    +    mid;    	compilable	  [FE]  AssertionError  	97	4	replace
609	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  fx;  fv  =  fv  +  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  mid  +  fx;  fv  =  fv  +  fx;	  double    fv    =    fx    +    mid;    fv    =    fx    +    mid;    	compilable	  [FE]  AssertionError  	97	4	replace
610	[BUG]  [BUGGY]  double  fv  =  mid  +  fx;  fv  =  fv  +  fx;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  mid  +  fx;  fv  =  fv  +  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  mid  +  fx;  fv  =  fv  +  fx;	  double    fv    =    fx    +    mid;    fv    =    fx    +    mid;    	compilable	  [FE]  AssertionError  	97	4	replace
611	[BUG]  [BUGGY]  if(isMaximumIterationCount)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  return  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMaximumIterationCount)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMaximumIterationCount)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  return  false;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(isMinim)    {    return    false;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	127	None	replace
612	[BUG]  [BUGGY]  if(goalType!=  GoalType.GOLDEN_SECTION)  {  if(isMinim)  {  return  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType!=  GoalType.GOLDEN_SECTION)  {  if(isMinim)  {  return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType!=  GoalType.GOLDEN_SECTION)  {  if(isMinim)  {  return  false;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(isMinim)    {    return    false;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	127	None	replace
613	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  Double  fv  =  mid  +  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	Double  fv  =  mid  +  fx;	  double    fv    =    fx    +    mid;    double    fv    =    fx    +    mid;    	compilable	  [FE]  AssertionError  	94	4	replace
614	[BUG]  [BUGGY]  Double  fv  =  mid  +  fx;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  Double  fv  =  mid  +  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	Double  fv  =  mid  +  fx;	  double    fv    =    fx    +    mid;    double    fv    =    fx    +    mid;    	compilable	  [FE]  AssertionError  	94	4	replace
615	[BUG]  [BUGGY]  double  d  =  -d;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  d  =  -d;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  d  =  -d;	  double    fv    =    -d;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	11	None	replace
616	[BUG]  [BUGGY]  if(isMinim)  {  if(fx  <  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(fx  <  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(fx  <  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(fx    <    GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	135	None	replace
617	[BUG]  [BUGGY]  if(isMinim)  {  if(!isMaximumIterationCount)  {  return  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(!isMaximumIterationCount)  {  return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(!isMaximumIterationCount)  {  return  false;  }	  if(isMinim)    {    if(!isMinim)    {    return    false;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	replace
618	[BUG]  [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(isMinim  ||  isMinim)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(isMinim  ||  isMinim)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.GOLDEN_SECTION)  {  if(isMinim  ||  isMinim)  {  continue;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(isMinim)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	107	None	replace
619	[BUG]  [BUGGY]  if(goalType  ==  GoalType.SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.SECTION)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.rint(m);    }    	non-compiled	[CE]  not  a  statement	83	None	replace
620	[BUG]  [BUGGY]  if(goalType  ==  GoalType.NONE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(goalType  ==  GoalType.NONE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(goalType  ==  GoalType.NONE)  {  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.rint(m);    }    	non-compiled	[CE]  not  a  statement	83	None	replace
621	[BUG]  [BUGGY]  double  fv  =  Math.max(a,  fx);  double  a  =  Math.max(a,  fx);  [CE]  variable  a  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(a,  fx);  double  a  =  Math.max(a,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    Math.max(a,    fx);    double  a  =  Math.max(a,  fx);	  	non-compiled	[CE]  variable  a  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	154	None	add
622	[BUG]  [BUGGY]  if(isMinim)return  true;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)return  true;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)return  true;  }	  if(isMinim)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
623	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  t;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  t;	  double    fv    =    hi;    	compilable	  [FE]  AssertionError  	55	4	replace
624	[BUG]  [BUGGY]  double  fv  =  t;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  t;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  t;	  double    fv    =    hi;    	compilable	  [FE]  AssertionError  	55	4	replace
625	[BUG]  [BUGGY]  int  fv  =  fx  *  1;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  fv  =  fx  *  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  fv  =  fx  *  1;	  double    fv    =    fx    +    1;    int    fv    =    fx    +    1;    	non-compiled	[CE]  possible  loss  of  precision	58	None	replace
626	[BUG]  [BUGGY]  if(isMinim)  {  for(int  b  =  0;  b  <  totalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  for(int  b  =  0;  b  <  totalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  for(int  b  =  0;  b  <  totalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  if(isMinim)    {    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	67	None	replace
627	[BUG]  [BUGGY]  if(isMaximumIterationCount)  {  if(isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMaximumIterationCount)  {  if(isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMaximumIterationCount)  {  if(isMinim)  {  throw  new  IllegalArgumentException( " ");  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	129	None	replace
628	[BUG]  [BUGGY]  double  fv  =  fx  /  1;  double  fv  =  fx  /  2;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  /  1;  double  fv  =  fx  /  2;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    fx    /    1;    double  fv  =  fx  /  2;	  	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	50	None	add
629	[BUG]  [BUGGY]  b  =  t.getBooleanValue(reserved);  [CE]  cannot  find  symbol  reserved  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  t.getBooleanValue(reserved);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  t.getBooleanValue(reserved);	  b    =    goalType.getBooleanValue(t);    	non-compiled	[CE]  cannot  find  symbol  reserved	102	None	replace
630	[BUG]  [BUGGY]  b  =  t.getBooleanValue(targetType);  [CE]  cannot  find  symbol  targetType  [FE]                        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  t.getBooleanValue(targetType);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  t.getBooleanValue(targetType);	  b    =    goalType.getBooleanValue(t);    	non-compiled	[CE]  cannot  find  symbol  targetType	102	None	replace
631	[BUG]  [BUGGY]  double  fv  =  a;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  a;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  a;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.abs(a);    }    	non-compiled	[CE]  not  a  statement	152	None	replace
632	[BUG]  [BUGGY]  int  fv  =  fv;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  fv  =  fv;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  fv  =  fv;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.abs(a);    }    	non-compiled	[CE]  not  a  statement	152	None	replace
633	[BUG]  [BUGGY]  while(isMinim)  {  if(!isMinim)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  while(isMinim)  {  if(!isMinim)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	while(isMinim)  {  if(!isMinim)  {  continue;  }	  if(isMinim)    {    if(!isMinim)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	45	None	replace
634	[BUG]  [BUGGY]  while(!isMinim)  {  if(!isMinim)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  while(!isMinim)  {  if(!isMinim)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	while(!isMinim)  {  if(!isMinim)  {  continue;  }	  if(isMinim)    {    if(!isMinim)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	45	None	replace
635	[BUG]  [BUGGY]  if(isMinim)  {  double  fv  =  0;  Double  fv  =  0;  }  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  double  fv  =  0;  Double  fv  =  0;  }  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  double  fv  =  0;  Double  fv  =  0;  }	  double    fv    =    0;    Double    fv    =    0;    	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	37	None	replace
636	[BUG]  [BUGGY]  if(isMinim)  {  double  fv  =  0;  Double  fv  =  0;  }  else  {  System.arraycopy(f,  0,  fv,  0,  fx);  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  double  fv  =  0;  Double  fv  =  0;  }  else  {  System.arraycopy(f,  0,  fv,  0,  fx);  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  double  fv  =  0;  Double  fv  =  0;  }  else  {  System.arraycopy(f,  0,  fv,  0,  fx);  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {	  double    fv    =    0;    Double    fv    =    0;    	non-compiled	[CE]  reached  end  of  file  while  parsing	37	None	replace
637	[BUG]  [BUGGY]  double  fv  =  isMinim?  1  :  mid;  double  fv  =  fv;  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  1  :  mid;  double  fv  =  fv;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  1  :  mid;  double  fv  =  fv;	  double    fv    =    mid;    double    fv    =    middle;    	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	63	None	replace
638	[BUG]  [BUGGY]  double  fv  =  isMinim?  mid  :  fv;  [CE]  variable  fv  might  not  have  been  initialized  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  mid  :  fv;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  mid  :  fv;	  double    fv    =    mid;    double    fv    =    middle;    	non-compiled	[CE]  variable  fv  might  not  have  been  initialized	63	None	replace
639	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  a  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  a  -  1;	  double    fv    =    fx    -    1;    double    fx    =    fx    -    1;    	compilable	  [FE]  AssertionError  	134	4	replace
640	[BUG]  [BUGGY]  double  fv  =  a  -  1;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  a  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  a  -  1;	  double    fv    =    fx    -    1;    double    fx    =    fx    -    1;    	compilable	  [FE]  AssertionError  	134	4	replace
641	[BUG]  [BUGGY]  if(isMaximumIterationCount)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMaximumIterationCount)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMaximumIterationCount)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    if(isMinim)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	107	None	replace
642	[BUG]  [BUGGY]  if(isMinim)  {  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    int    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  not  a  statement	131	None	replace
643	[BUG]  [BUGGY]  b  =  goalType.getBooleanValue(fx,  a);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  goalType.getBooleanValue(fx,  a);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goalType.getBooleanValue(fx,  a);	  b    =    goalType.getBooleanValue(fx);    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
644	[BUG]  [BUGGY]  double  fv  =  a;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  variable  count  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  a;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  a;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	  double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  variable  count  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	136	None	replace
645	[BUG]  [BUGGY]  If(isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  If(isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	If(isMinim)  {  throw  new  IllegalArgumentException( " ");  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	32	None	replace
646	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.min(a  +  b);  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.min(a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.min(a  +  b);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  not  a  statement	80	None	replace
647	[BUG]  [BUGGY]  if(isMinim  &&  isMaximum)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim  &&  isMaximum)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim  &&  isMaximum)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  continue;  }	  if(isMinim    ||    isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	47	None	replace
648	[BUG]  [BUGGY]  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(a);  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.    	non-compiled	[CE]  not  a  statement	130	None	replace
649	[BUG]  [BUGGY]  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  possible  loss  of  precision  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  possible  loss  of  precision	40	None	replace
650	[BUG]  [BUGGY]  double  fv  =  fv  +  mid;  [CE]  variable  fv  might  not  have  been  initialized  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fv  +  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fv  +  mid;	  double    fv    =    fx    +    mid;    double    fv    =    fx    +    middle;    	non-compiled	[CE]  variable  fv  might  not  have  been  initialized	96	None	replace
651	[BUG]  [BUGGY]  float  fv  =  -fx;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  float  fv  =  -fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	float  fv  =  -fx;	  double    fv    =    -fx;    int    fv    =    -fx;    	non-compiled	[CE]  possible  loss  of  precision	76	None	replace
652	[BUG]  [BUGGY]  b  =  this.goalType.getBooleanValue(f,  x);  [CE]  cannot  find  symbol  goalType  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  this.goalType.getBooleanValue(f,  x);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  this.goalType.getBooleanValue(f,  x);	  b    =    f.getBooleanValue(goalType,    x);    	non-compiled	[CE]  cannot  find  symbol  goalType	26	None	replace
653	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -a  *  b;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  -a  *  b;	  double    fv    =    -a;    	compilable	  [FE]  AssertionError  	15	4	replace
654	[BUG]  [BUGGY]  double  fv  =  -a  *  b;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  -a  *  b;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  -a  *  b;	  double    fv    =    -a;    	compilable	  [FE]  AssertionError  	15	4	replace
655	[BUG]  [BUGGY]  if(isMinim  ||  goalType!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim  ||  goalType!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim  ||  goalType!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }	  if(goalType!=    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    return    false;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	126	None	replace
656	[BUG]  [BUGGY]  if(b!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(b!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(b!=  GoalType.GOLDEN_SECTION)  {  if(!isMinim)  {  return  false;  }	  if(goalType!=    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    return    false;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	126	None	replace
657	[BUG]  [BUGGY]  if(isMinim)  {  double  fv  =  0;  fv  =  0;  }  [CE]  cannot  find  symbol  fv  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  double  fv  =  0;  fv  =  0;  }  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  double  fv  =  0;  fv  =  0;  }	  double    fv    =    0;    fv    =    0;    	non-compiled	[CE]  cannot  find  symbol  fv	39	None	replace
658	[BUG]  [BUGGY]  if(isMinim)  {  double  fv  =  0;  fv  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  fv  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  double  fv  =  0;  fv  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  double  fv  =  0;  fv  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  double    fv    =    0;    fv    =    0;    	non-compiled	[CE]  cannot  find  symbol  fv	39	None	replace
659	[BUG]  [BUGGY]  b  =  w.getBooleanValue(f,  goalType);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  w.getBooleanValue(f,  goalType);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  w.getBooleanValue(f,  goalType);	  b    =    goalType.getBooleanValue(f,    w);    	non-compiled	[CE]  double  cannot  be  dereferenced	25	None	replace
660	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  mid;  fv  =  fv  +  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  +  mid;  fv  =  fv  +  mid;	  double    fv    =    fx    +    mid;    fv    =    fx    +    mid;    	compilable	  [FE]  AssertionError  	97	4	replace
661	[BUG]  [BUGGY]  double  fv  =  fx  +  mid;  fv  =  fv  +  mid;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  mid;  fv  =  fv  +  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  +  mid;  fv  =  fv  +  mid;	  double    fv    =    fx    +    mid;    fv    =    fx    +    mid;    	compilable	  [FE]  AssertionError  	97	4	replace
662	[BUG]  [BUGGY]  if(isMinim  ||  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMaximum)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim  ||  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMaximum)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim  ||  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMaximum)  {  continue;  }	  if(isMinim    ||    goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	146	None	replace
663	[BUG]  [BUGGY]  b  =  f.getBooleanValue(votType);  [CE]  cannot  find  symbol  votType  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  f.getBooleanValue(votType);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(votType);	  b    =    f.getBooleanValue(targetType);    	non-compiled	[CE]  cannot  find  symbol  votType	159	None	replace
664	[BUG]  [BUGGY]  int  a  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  a  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  a  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.rint(m);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.rint(m);    }    	non-compiled	[CE]  not  a  statement	83	None	replace
665	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.round(m);  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.round(m);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.round(m);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.rint(m);    }    	non-compiled	[CE]  not  a  statement	83	None	replace
666	[BUG]  [BUGGY]  fx  =  -goalValue;  [CE]  cannot  find  symbol  goalValue  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  fx  =  -goalValue;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	fx  =  -goalValue;	  fx    =    -fx;    	non-compiled	[CE]  cannot  find  symbol  goalValue	19	None	replace
667	[BUG]  [BUGGY]  b  =  goalType.getBooleanValue(f,  f).booleanValue();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  goalType.getBooleanValue(f,  f).booleanValue();  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goalType.getBooleanValue(f,  f).booleanValue();	  b    =    f.getBooleanValue(f,    goalType);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
668	[BUG]  [BUGGY]  b  =  goalType.getBooleanValue(f,  fx);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  goalType.getBooleanValue(f,  fx);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  goalType.getBooleanValue(f,  fx);	  b    =    f.getBooleanValue(f,    goalType);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
669	[BUG]  [BUGGY]  if(isMinim)return  false;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)return  false;  }	  if(!isMinim)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
670	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  v  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  v  :  fx;	  double    fv    =    isMinim?    min    :    fx;    	compilable	  [FE]  AssertionError  	3	4	replace
671	[BUG]  [BUGGY]  double  fv  =  isMinim?  v  :  fx;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  v  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  v  :  fx;	  double    fv    =    isMinim?    min    :    fx;    	compilable	  [FE]  AssertionError  	3	4	replace
672	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  b  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  b  :  fx;	  double    fv    =    isMinim?    min    :    fx;    	compilable	  [FE]  AssertionError  	3	4	replace
673	[BUG]  [BUGGY]  double  fv  =  isMinim?  b  :  fx;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  b  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  b  :  fx;	  double    fv    =    isMinim?    min    :    fx;    	compilable	  [FE]  AssertionError  	3	4	replace
674	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  t  :  d;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  t  :  d;	  double    fv    =    isMinim?    t    :    fx;    	compilable	  [FE]  AssertionError  	138	4	replace
675	[BUG]  [BUGGY]  double  fv  =  isMinim?  t  :  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  t  :  d;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  t  :  d;	  double    fv    =    isMinim?    t    :    fx;    	compilable	  [FE]  AssertionError  	138	4	replace
676	[BUG]  [BUGGY]  double  fv  =  isMinim?  t  :  fv;  [CE]  variable  fv  might  not  have  been  initialized  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  t  :  fv;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  t  :  fv;	  double    fv    =    isMinim?    fx    :    fv;    	non-compiled	[CE]  variable  fv  might  not  have  been  initialized	139	None	replace
677	[BUG]  [BUGGY]  n  =  -fx;  n  =  -fx;  [CE]  cannot  find  symbol  n  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  n  =  -fx;  n  =  -fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	n  =  -fx;  n  =  -fx;	  double    fv    =    -fx;    fv    =    -fx;    	non-compiled	[CE]  cannot  find  symbol  n	77	None	replace
678	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  -  1;  fv  =  fv  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  -  1;  fv  =  fv  -  1;	  double    fv    =    fx    -    1;    fv    =    fx    -    1;    	compilable	  [FE]  AssertionError  	93	4	replace
679	[BUG]  [BUGGY]  double  fv  =  fx  -  1;  fv  =  fv  -  1;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  -  1;  fv  =  fv  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  -  1;  fv  =  fv  -  1;	  double    fv    =    fx    -    1;    fv    =    fx    -    1;    	compilable	  [FE]  AssertionError  	93	4	replace
680	[BUG]  [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)return  false;  }  [CE]  cannot  find  symbol  GOLDEN_SECTION  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)return  false;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim  &&  goalType  ==  GoalType.GOLDEN_SECTION)  {  if(!isMinim)return  false;  }	  if(isMinim    ||    goalType    ==    GoalType.GOLDEN_SECTION)    {    if(!isMinim)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_SECTION	149	None	replace
681	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  hi  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  hi  -  1;	  double    fv    =    mid    -    1;    	compilable	  [FE]  AssertionError  	49	4	replace
682	[BUG]  [BUGGY]  double  fv  =  hi  -  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  hi  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  hi  -  1;	  double    fv    =    mid    -    1;    	compilable	  [FE]  AssertionError  	49	4	replace
683	[BUG]  [BUGGY]  double  fv  =  max  -  1;  [CE]  max  has  private  access  in  AbstractUnivariateRealOptimizer  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  max  -  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  max  -  1;	  double    fv    =    mid    -    1;    	non-compiled	[CE]  max  has  private  access  in  AbstractUnivariateRealOptimizer	49	None	replace
684	[BUG]  [BUGGY]  int  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  possible  loss  of  precision  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  fv  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	  if(isMinim)    {    int    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  possible  loss  of  precision	18	None	replace
685	[BUG]  [BUGGY]  if(isMinim)  {  double  fv  =  -fx;  Double  fv  =  -fv;  }  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  double  fv  =  -fx;  Double  fv  =  -fv;  }  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  double  fv  =  -fx;  Double  fv  =  -fv;  }	  double    fv    =    -fx;    Double    fv    =    -fx;    	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	75	None	replace
686	[BUG]  [BUGGY]  if(isMinim)  {  double  fv  =  -fx;  Double  fv  =  -fv;  }  else  {  System.arraycopy(f,  0,  fv,  0,  fx);  }  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  double  fv  =  -fx;  Double  fv  =  -fv;  }  else  {  System.arraycopy(f,  0,  fv,  0,  fx);  }  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  double  fv  =  -fx;  Double  fv  =  -fv;  }  else  {  System.arraycopy(f,  0,  fv,  0,  fx);  }	  double    fv    =    -fx;    Double    fv    =    -fx;    	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	75	None	replace
687	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  b  :  GOLDEN_SECTION;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  b  :  GOLDEN_SECTION;	  double    fv    =    isMinim?    fx    :    GOLDEN_SECTION;    	compilable	  [FE]  AssertionError  	115	4	replace
688	[BUG]  [BUGGY]  double  fv  =  isMinim?  b  :  GOLDEN_SECTION;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  b  :  GOLDEN_SECTION;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  b  :  GOLDEN_SECTION;	  double    fv    =    isMinim?    fx    :    GOLDEN_SECTION;    	compilable	  [FE]  AssertionError  	115	4	replace
689	[BUG]  [BUGGY]  double  fv  =  isMinim?  fx  :  FOLDEN_SECTION;  [CE]  cannot  find  symbol  FOLDEN_SECTION  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  fx  :  FOLDEN_SECTION;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  fx  :  FOLDEN_SECTION;	  double    fv    =    isMinim?    fx    :    GOLDEN_SECTION;    	non-compiled	[CE]  cannot  find  symbol  FOLDEN_SECTION	115	None	replace
690	[BUG]  [BUGGY]  if(isMinim)  {  double  fv  =  0;  double  fv  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  double  fv  =  0;  double  fv  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  double  fv  =  0;  double  fv  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  double    fv    =    0;    double    fv    =    0;    	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	36	None	replace
691	[BUG]  [BUGGY]  if(isMinim)  {  double  fv  =  0;  double  fv  =  0;  }  else  {  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  fx  =  -b;  }  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  double  fv  =  0;  double  fv  =  0;  }  else  {  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  fx  =  -b;  }  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  double  fv  =  0;  double  fv  =  0;  }  else  {  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  fx  =  -b;  }	  double    fv    =    0;    double    fv    =    0;    	non-compiled	[CE]  reached  end  of  file  while  parsing	36	None	replace
692	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  w;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  +  w;	  double    fv    =    fx    +    min;    	compilable	  [FE]  AssertionError  	142	4	replace
693	[BUG]  [BUGGY]  double  fv  =  fx  +  w;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  +  w;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  +  w;	  double    fv    =    fx    +    min;    	compilable	  [FE]  AssertionError  	142	4	replace
694	[BUG]  [BUGGY]  if(isMinim)  {  final  double  fv  =  fw;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  final  double  fv  =  fw;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  final  double  fv  =  fw;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  (a  +  b);  }	  if(isMinim)    {    final    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	66	None	replace
695	[BUG]  [BUGGY]  b  =  v.getBooleanValue(f,  goalType);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  v.getBooleanValue(f,  goalType);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  v.getBooleanValue(f,  goalType);	  b    =    goalType.getBooleanValue(f,    v);    	non-compiled	[CE]  double  cannot  be  dereferenced	24	None	replace
696	[BUG]  [BUGGY]  b  =  f.getBooleanValue(v,  goalType);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  f.getBooleanValue(v,  goalType);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(v,  goalType);	  b    =    goalType.getBooleanValue(f,    v);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
697	[BUG]  [BUGGY]  if(fx  >  GOLDEN_SECTION)  {  fx  =  -a;  }  [CE]  cannot  find  symbol  fv  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(fx  >  GOLDEN_SECTION)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(fx  >  GOLDEN_SECTION)  {  fx  =  -a;  }	  if(fx    >    GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  cannot  find  symbol  fv	22	None	replace
698	[BUG]  [BUGGY]  if(fx  >  GOLDEN_SECTION)  {  fx  =  -gw;  }  [CE]  cannot  find  symbol  gw  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(fx  >  GOLDEN_SECTION)  {  fx  =  -gw;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(fx  >  GOLDEN_SECTION)  {  fx  =  -gw;  }	  if(fx    >    GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  cannot  find  symbol  gw	22	None	replace
699	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(0.0,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  Math.max(0.0,  fx);	  double    fv    =    Math.max(0,    fx);    	compilable	  [FE]  AssertionError  	157	4	replace
700	[BUG]  [BUGGY]  double  fv  =  Math.max(0.0,  fx);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(0.0,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  Math.max(0.0,  fx);	  double    fv    =    Math.max(0,    fx);    	compilable	  [FE]  AssertionError  	157	4	replace
701	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  hi  /  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  hi  /  1;	  double    fv    =    mid    /    1;    	compilable	  [FE]  AssertionError  	104	4	replace
702	[BUG]  [BUGGY]  double  fv  =  hi  /  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  hi  /  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  hi  /  1;	  double    fv    =    mid    /    1;    	compilable	  [FE]  AssertionError  	104	4	replace
703	[BUG]  [BUGGY]  double  fv  =  max  /  1;  [CE]  max  has  private  access  in  AbstractUnivariateRealOptimizer  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  max  /  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  max  /  1;	  double    fv    =    mid    /    1;    	non-compiled	[CE]  max  has  private  access  in  AbstractUnivariateRealOptimizer	104	None	replace
704	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximumIterationCount;  b++)  {  eps  *  Math.cos(a);  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximumIterationCount;  b++)  {  eps  *  Math.cos(a);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximumIterationCount;  b++)  {  eps  *  Math.cos(a);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.cos(a);    }    	non-compiled	[CE]  not  a  statement	151	None	replace
705	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(m);  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(m);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.cos(m);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.cos(a);    }    	non-compiled	[CE]  not  a  statement	151	None	replace
706	[BUG]  [BUGGY]  if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  GoalType  goalType  =  GoalType.GOLDEN_SECTION;  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  m  =  0.5  *  }	  if(isMinim)    {    GoalType    goalType    =    GoalType.GOLDEN_SECTION;    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
707	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  b;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  GOLDEN_SECTION  :  b;	  double    fv    =    isMinim?    GOLDEN_SECTION    :    fx;    	compilable	  [FE]  AssertionError  	117	4	replace
708	[BUG]  [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  b;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  b;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  GOLDEN_SECTION  :  b;	  double    fv    =    isMinim?    GOLDEN_SECTION    :    fx;    	compilable	  [FE]  AssertionError  	117	4	replace
709	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  0;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  isMinim?  GOLDEN_SECTION  :  0;	  double    fv    =    isMinim?    GOLDEN_SECTION    :    fx;    	compilable	  [FE]  AssertionError  	117	4	replace
710	[BUG]  [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  0;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  isMinim?  GOLDEN_SECTION  :  0;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  isMinim?  GOLDEN_SECTION  :  0;	  double    fv    =    isMinim?    GOLDEN_SECTION    :    fx;    	compilable	  [FE]  AssertionError  	117	4	replace
711	[BUG]  [BUGGY]  double  fv  =  fw  +  1;  [CE]  cannot  find  symbol  fw  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fw  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fw  +  1;	  double    fv    =    mid    +    1;    	non-compiled	[CE]  cannot  find  symbol  fw	69	None	replace
712	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  a  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  a  +  1;	  double    fv    =    mid    +    1;    	compilable	  [FE]  AssertionError  	69	4	replace
713	[BUG]  [BUGGY]  double  fv  =  a  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  a  +  1;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  a  +  1;	  double    fv    =    mid    +    1;    	compilable	  [FE]  AssertionError  	69	4	replace
714	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(g);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(g);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(g);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.abs(fx);    }    	non-compiled	[CE]  not  a  statement	82	None	replace
715	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(m);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(m);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.abs(m);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.abs(fx);    }    	non-compiled	[CE]  not  a  statement	82	None	replace
716	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  v;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  v;	  double    fv    =    isMinim;    	compilable	  [FE]  AssertionError  	118	4	replace
717	[BUG]  [BUGGY]  double  fv  =  v;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  v;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  v;	  double    fv    =    isMinim;    	compilable	  [FE]  AssertionError  	118	4	replace
718	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  a;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  a;	  double    fv    =    isMinim;    	compilable	  [FE]  AssertionError  	118	4	replace
719	[BUG]  [BUGGY]  double  fv  =  a;  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  a;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  a;	  double    fv    =    isMinim;    	compilable	  [FE]  AssertionError  	118	4	replace
720	[BUG]  [BUGGY]  if(isMinim)  {  double  fv  =  mid;  double  fv  =  fv;  }  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  double  fv  =  mid;  double  fv  =  fv;  }  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  double  fv  =  mid;  double  fv  =  fv;  }	  double    fv    =    mid;    double    fv    =    mid;    	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	60	None	replace
721	[BUG]  [BUGGY]  if(isMinim)  {  if(a  ==  GoalType.GOLDEN_SECTION)  {  continue;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  if(a  ==  GoalType.GOLDEN_SECTION)  {  continue;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  if(a  ==  GoalType.GOLDEN_SECTION)  {  continue;  }	  if(isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    continue;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	44	None	replace
722	[BUG]  [BUGGY]  if(isMinim)  {  double  fv  =  -fx;  double  fv  =  -fv;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  double  fv  =  -fx;  double  fv  =  -fv;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  double  fv  =  -fx;  double  fv  =  -fv;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  double    fv    =    -fx;    double    fv    =    -fx;    	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	74	None	replace
723	[BUG]  [BUGGY]  double  b  =  -b;  [CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  b  =  -b;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  b  =  -b;	  double    fv    =    -b;    	non-compiled	[CE]  variable  b  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	144	None	replace
724	[BUG]  [BUGGY]  b  =  f.getBooleanValue(goalType,  GoalType.MAXIMIZE);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  f.getBooleanValue(goalType,  GoalType.MAXIMIZE);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(goalType,  GoalType.MAXIMIZE);	  b    =    f.getBooleanValue(goalType,    a);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
725	[BUG]  [BUGGY]  b  =  f.getBooleanValue(f,  isMinim);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  f.getBooleanValue(f,  isMinim);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(f,  isMinim);	  b    =    goalType.getBooleanValue(f,    isMinim);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
726	[BUG]  [BUGGY]  if(isMinim)  {  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {	  if(isMinim)    {    if(!isMinim)    {    return    false;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	replace
727	[BUG]  [BUGGY]  double  fv  =  Math.max(a,  fx);  double  v  =  Math.max(a,  fx);  [CE]  variable  v  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(a,  fx);  double  v  =  Math.max(a,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double    fv    =    Math.max(a,    fx);    double  v  =  Math.max(a,  fx);	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	154	None	add
728	[BUG]  [BUGGY]  int  fv  =  fv;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  fv  =  fv;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  fv  =  fv;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(f);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.floor(f);    }    	non-compiled	[CE]  not  a  statement	81	None	replace
729	[BUG]  [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(a);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(a);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx;  int  count  =  0;  for(int  b  =  0;  b  <  maximalIterationCount;  b++)  {  eps  *  Math.floor(a);  }	  double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    eps    *    Math.floor(f);    }    	non-compiled	[CE]  not  a  statement	81	None	replace
730	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(w,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  Math.max(w,  fx);	  double    fv    =    Math.max(a,    fx);    	compilable	  [FE]  AssertionError  	155	4	replace
731	[BUG]  [BUGGY]  double  fv  =  Math.max(w,  fx);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(w,  fx);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  Math.max(w,  fx);	  double    fv    =    Math.max(a,    fx);    	compilable	  [FE]  AssertionError  	155	4	replace
732	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(a,  w);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  Math.max(a,  w);	  double    fv    =    Math.max(a,    fx);    	compilable	  [FE]  AssertionError  	155	4	replace
733	[BUG]  [BUGGY]  double  fv  =  Math.max(a,  w);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  Math.max(a,  w);  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  Math.max(a,  w);	  double    fv    =    Math.max(a,    fx);    	compilable	  [FE]  AssertionError  	155	4	replace
734	[BUG]  [BUGGY]  int  fv  =  fx  +  min;  [CE]  min  has  private  access  in  AbstractUnivariateRealOptimizer  [FE]        AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  int  fv  =  fx  +  min;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	int  fv  =  fx  +  min;	  double    fv    =    fx    +    mid;    int    fv    =    fx    +    mid;    	non-compiled	[CE]  min  has  private  access  in  AbstractUnivariateRealOptimizer	133	None	replace
735	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  /  GOLDEN_SECTION;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  /  GOLDEN_SECTION;	  double    fv    =    fx    /    1;    	compilable	  [FE]  AssertionError  	51	4	replace
736	[BUG]  [BUGGY]  double  fv  =  fx  /  GOLDEN_SECTION;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  /  GOLDEN_SECTION;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  /  GOLDEN_SECTION;	  double    fv    =    fx    /    1;    	compilable	  [FE]  AssertionError  	51	4	replace
737	[BUG]  [BUGGY]  if(isMinim)  {  double  fv  =  mid;  double  fv  =  hi;  }  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]            AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  double  fv  =  mid;  double  fv  =  hi;  }  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  double  fv  =  mid;  double  fv  =  hi;  }	  double    fv    =    mid;    double    fv    =    hi;    	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	62	None	replace
738	[BUG]  [BUGGY]  if(isMinim)  {  double  fv  =  mid;  double  fv  =  hi;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]              AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  double  fv  =  mid;  double  fv  =  hi;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  double  fv  =  mid;  double  fv  =  hi;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  double    fv    =    mid;    double    fv    =    hi;    	non-compiled	[CE]  variable  fv  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	62	None	replace
739	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  b  +  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  b  +  fx;	  double    fv    =    fx    +    b;    	compilable	  [FE]  AssertionError  	123	4	replace
740	[BUG]  [BUGGY]  double  fv  =  b  +  fx;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  b  +  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  b  +  fx;	  double    fv    =    fx    +    b;    	compilable	  [FE]  AssertionError  	123	4	replace
741	[BUG]  [BUGGY]  if(isMinim)  {  fv  =  x;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  fv  =  x;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  fv  =  x;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  fx  =  -a;  }	  if(isMinim)    {    double    fv    =    fx;    int    count    =    0;    while    (count    <    maximalIterationCount)    {    fx    =    -a;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	111	None	replace
742	[BUG]  [BUGGY]  b  =  f.getBooleanValue(vot);  [CE]  cannot  find  symbol  vot  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  b  =  f.getBooleanValue(vot);  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	b  =  f.getBooleanValue(vot);	  b    =    f.getBooleanValue(realType);    	non-compiled	[CE]  cannot  find  symbol  vot	158	None	replace
743	[BUG]  [BUGGY]  double  m  =  0.5  *  (a  +  b  >>  GoalType.GOLDEN_SECTION)?  fx  :  fx;  [CE]  cannot  find  symbol  GOLDEN_SECTION  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  m  =  0.5  *  (a  +  b  >>  GoalType.GOLDEN_SECTION)?  fx  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  m  =  0.5  *  (a  +  b  >>  GoalType.GOLDEN_SECTION)?  fx  :  fx;	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_SECTION	119	None	replace
744	[BUG]  [BUGGY]  m  =  0.5  *  (a  +  b  >>  GoalType.GOLDEN_SECTION)?  fx  :  fx;  [CE]  cannot  find  symbol  m  [FE]                      AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  m  =  0.5  *  (a  +  b  >>  GoalType.GOLDEN_SECTION)?  fx  :  fx;  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	m  =  0.5  *  (a  +  b  >>  GoalType.GOLDEN_SECTION)?  fx  :  fx;	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    double    fv    =    fx;    int    count    =    0;    for(int    b    =    0;    b    <    maximalIterationCount;    b++)    {    m    =    0.5    *    (a    +    b    	non-compiled	[CE]  cannot  find  symbol  m	119	None	replace
745	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  /  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  fx  /  mid;	  double    fv    =    fx    *    mid;    	compilable	  [FE]  AssertionError  	141	4	replace
746	[BUG]  [BUGGY]  double  fv  =  fx  /  mid;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fx  /  mid;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fx  /  mid;	  double    fv    =    fx    *    mid;    	compilable	  [FE]  AssertionError  	141	4	replace
747	[BUG]  [BUGGY]  double  fv  =  fw  +  fx;  [CE]  cannot  find  symbol  fw  [FE]    AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  fw  +  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  fw  +  fx;	  double    fv    =    mid    +    fx;    	non-compiled	[CE]  cannot  find  symbol  fw	79	None	replace
748	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  a  +  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	add	double  fv  =  a  +  fx;	  double    fv    =    mid    +    fx;    	compilable	  [FE]  AssertionError  	79	4	replace
749	[BUG]  [BUGGY]  double  fv  =  a  +  fx;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  double  fv  =  a  +  fx;  [BUGGY]      double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	double  fv  =  a  +  fx;	  double    fv    =    mid    +    fx;    	compilable	  [FE]  AssertionError  	79	4	replace
750	[BUG]  [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " "  +  fx);  }  [CE]  cannot  find  symbol  fv  [FE]                AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " "  +  fx);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  throw  new  IllegalArgumentException( " "  +  fx);  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ".equals(fx));    }    	non-compiled	[CE]  cannot  find  symbol  fv	34	None	replace
751	[BUG]  [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " ").equals(fx);  }  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " ").equals(fx);  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  throw  new  IllegalArgumentException( " ").equals(fx);  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ".equals(fx));    }    	non-compiled	[CE]  incompatible  types	34	None	replace
752	[BUG]  [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " "  +  fx.equals(goalType));  }  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }      [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " "  +  fx.equals(goalType));  }  [BUGGY]      double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  if  (Math.abs(x  -  m)  >  tol2  -  0.5  *  (b  -  a))  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	123	123	4	replace	if(isMinim)  {  throw  new  IllegalArgumentException( " "  +  fx.equals(goalType));  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ".equals(fx));    }    	non-compiled	[CE]  double  cannot  be  dereferenced	34	None	replace
