bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  ||  isMinim)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	if(isMinim  ||  isMinim)  {	  if(isMinim    &&    isMinim)    {    	compilable	  [FE]  AssertionError  	52	4	replace
2	[BUG]  [BUGGY]  if(isMinim  ||  isMinim)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  ||  isMinim)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  ||  isMinim)  {	  if(isMinim    &&    isMinim)    {    	compilable	  [FE]  AssertionError  	52	4	replace
3	[BUG]  [BUGGY]  if(isMinim  &&  isMinim  &&  mid)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isMinim  &&  mid)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  isMinim  &&  mid)  {	  if(isMinim    &&    isMinim)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	52	None	replace
4	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(f,  v);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeObjectiveValue(f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeObjectiveValue(f,  v);	          fx    =    computeObjectiveValue(f,    t);    Double    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
5	[BUG]  [BUGGY]  f  =  computeObjectiveValue(f,  x);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  f  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	f  =  computeObjectiveValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    f    =    computeObjectiveValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
6	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  w);  f  =  computeObjectiveValue(f,  x);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeObjectiveValue(f,  w);  f  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeObjectiveValue(f,  w);  f  =  computeObjectiveValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    f    =    computeObjectiveValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
7	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  d);  f  =  computeObjectiveValue(f,  x);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeObjectiveValue(f,  d);  f  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeObjectiveValue(f,  d);  f  =  computeObjectiveValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    f    =    computeObjectiveValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
8	[BUG]  [BUGGY]  f  =  computeObjectiveValue(f,  d);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  f  =  computeObjectiveValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	f  =  computeObjectiveValue(f,  d);	          t    =    computeObjectiveValue(f,    x);    f    =    computeObjectiveValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
9	[BUG]  [BUGGY]  fx  =  computeDimensionValue(f,  t);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeDimensionValue(f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeDimensionValue(f,  t);	          fx    =    computeObjectiveValue(f,    t);    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
10	[BUG]  [BUGGY]  fx  =  computeWidth(f,  t);  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeWidth(f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeWidth(f,  t);	          fx    =    computeObjectiveValue(f,    t);    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
11	[BUG]  [BUGGY]  if(isMinim)  {  a  =  mid;  b  =  lo;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  a  =  mid;  b  =  lo;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  a  =  mid;  b  =  lo;  }	  if(isMinim)    {    a    =    lo;    b    =    lo;    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
12	[BUG]  [BUGGY]  if(isMinim)  {  a  =  hi;  b  =  lo;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  a  =  hi;  b  =  lo;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  a  =  hi;  b  =  lo;  }	  if(isMinim)    {    a    =    lo;    b    =    lo;    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
13	[BUG]  [BUGGY]  if(isMinim)  {  a  =  GOLDEN_SECTION;  b  =  lo;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  a  =  GOLDEN_SECTION;  b  =  lo;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  a  =  GOLDEN_SECTION;  b  =  lo;  }	  if(isMinim)    {    a    =    lo;    b    =    lo;    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
14	[BUG]  [BUGGY]  int  t  =  computeObjectiveValue(f,  d);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  int  t  =  computeObjectiveValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	int  t  =  computeObjectiveValue(f,  d);	          t    =    computeObjectiveValue(f,    x);    int    t    =    computeObjectiveValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
15	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  mid);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeObjectiveValue(f,  mid);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeObjectiveValue(f,  mid);	          t    =    computeObjectiveValue(f,    x);    t    =    computeObjectiveValue(f,    y);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
16	[BUG]  [BUGGY]  if(fx!=  GoalType.SECTION)  {  fx  =  -fx;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx!=  GoalType.SECTION)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx!=  GoalType.SECTION)  {  fx  =  -fx;  }	  if(fx    ==    GoalType.SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  if(fx  ==  GoalType.SECTION  ||  fx  ==  GoalType.SECTION)  {  fx  =  -fx;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.SECTION  ||  fx  ==  GoalType.SECTION)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.SECTION  ||  fx  ==  GoalType.SECTION)  {  fx  =  -fx;  }	  if(fx    ==    GoalType.SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType!=    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)	  	compilable	  [FE]  AssertionError  	58	6	add
19	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType!=    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)	  	compilable	  [FE]  AssertionError  	58	6	add
20	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIM  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIM  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType!=    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIM	  	non-compiled	[CE]  ')'  expected	58	None	add
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType!=    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  	compilable	  [FE]  AssertionError  	58	6	add
22	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType!=    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  	compilable	  [FE]  AssertionError  	58	6	add
23	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType!=    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
24	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType!=    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)	  	compilable	  [FE]  AssertionError  	58	6	add
25	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType!=    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)	  	compilable	  [FE]  AssertionError  	58	6	add
26	[BUG]  [BUGGY]  ARRAY_SECTION  =  GOLDEN_SECTION;  b  =  lo;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  ARRAY_SECTION  =  GOLDEN_SECTION;  b  =  lo;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	ARRAY_SECTION  =  GOLDEN_SECTION;  b  =  lo;	  ARRAY_SECTION    =    fx;    b    =    lo;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
27	[BUG]  [BUGGY]  b  =  lo;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  b  =  lo;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	b  =  lo;	  ARRAY_SECTION    =    fx;    b    =    lo;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
28	[BUG]  [BUGGY]  ARRAY_SECTION  =  fx;  b  =  b;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  ARRAY_SECTION  =  fx;  b  =  b;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	ARRAY_SECTION  =  fx;  b  =  b;	  ARRAY_SECTION    =    fx;    b    =    lo;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
29	[BUG]  [BUGGY]  ARRAY_SECTION  =  a;  b  =  lo;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  ARRAY_SECTION  =  a;  b  =  lo;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	ARRAY_SECTION  =  a;  b  =  lo;	  ARRAY_SECTION    =    fx;    b    =    lo;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
30	[BUG]  [BUGGY]  If(isMinim  &&  goalType  ==  GoalType.MINIMIZE)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  If(isMinim  &&  goalType  ==  GoalType.MINIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	If(isMinim  &&  goalType  ==  GoalType.MINIMIZE)  {	  if(isMinim    &&    goalType    ==    GoalType.MINIMIZE)    {    If(isMinim    &&    goalType    ==    GoalType.MINIMIZE)    {    	non-compiled	[CE]  ';'  expected	32	None	replace
31	[BUG]  [BUGGY]  If(isMinim  &&  goalType!=  GoalType.MINIMIZE)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  If(isMinim  &&  goalType!=  GoalType.MINIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	If(isMinim  &&  goalType!=  GoalType.MINIMIZE)  {	  if(isMinim    &&    goalType    ==    GoalType.MINIMIZE)    {    If(isMinim    &&    goalType    ==    GoalType.MINIMIZE)    {    	non-compiled	[CE]  ';'  expected	32	None	replace
32	[BUG]  [BUGGY]  fx  =  -fx  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  -fx  +  1;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  -fx  +  1;	  fx    =    -fx;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
33	[BUG]  [BUGGY]  fx  =  -w;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  -w;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  -w;	  fx    =    -fx;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
34	[BUG]  [BUGGY]  fx  =  -d;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  -d;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  -d;	  fx    =    -fx;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
35	[BUG]  [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(fx));  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(fx));  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(fx));  }	  if(goalType    ==    GoalType.GOLDEN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
36	[BUG]  [BUGGY]  if(fx!=  GoalType.SECTION)  {  [CE]  cannot  find  symbol  SECTION  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx!=  GoalType.SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx!=  GoalType.SECTION)  {	  if(fx!=    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  SECTION	80	None	replace
37	[BUG]  [BUGGY]  if(fx!=  GoalType.NONE)  {  [CE]  cannot  find  symbol  NONE  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx!=  GoalType.NONE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx!=  GoalType.NONE)  {	  if(fx!=    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  NONE	80	None	replace
38	[BUG]  [BUGGY]  fx  =  computeIntegerValue(f,  d);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeIntegerValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeIntegerValue(f,  d);	  fx    =    computeIntegerValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
39	[BUG]  [BUGGY]  fx  =  computeIntegerValue(f,  w);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeIntegerValue(f,  w);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeIntegerValue(f,  w);	  fx    =    computeIntegerValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
40	[BUG]  [BUGGY]  fx  =  computeIntegerValue(f,  v);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeIntegerValue(f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeIntegerValue(f,  v);	  fx    =    computeIntegerValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
41	[BUG]  [BUGGY]  fx  =  computeIntegerValue(f,  y);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeIntegerValue(f,  y);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeIntegerValue(f,  y);	  fx    =    computeIntegerValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
42	[BUG]  [BUGGY]  While(t  ==  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  While(t  ==  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	While(t  ==  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }	  if(t    ==    GoalType.GOLDEN_SECTION)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	120	None	replace
43	[BUG]  [BUGGY]  fx  =  computeLocalValue(f,  w);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeLocalValue(f,  w);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeLocalValue(f,  w);	  fx    =    computeLocalValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
44	[BUG]  [BUGGY]  fx  =  computeLocalValue(f,  v);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeLocalValue(f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeLocalValue(f,  v);	  fx    =    computeLocalValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
45	[BUG]  [BUGGY]  fx  =  computeLocalValue(f,  d);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeLocalValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeLocalValue(f,  d);	  fx    =    computeLocalValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
46	[BUG]  [BUGGY]  fx  =  computeLocalValue(t,  f);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeLocalValue(t,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeLocalValue(t,  f);	  fx    =    computeLocalValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
47	[BUG]  [BUGGY]  if(isMinim)  {  if(fx  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [CE]  incomparable  types:  double  and  GoalType  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(fx  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  if(fx  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }	  if(isMinim)    {    if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    	non-compiled	[CE]  incomparable  types:  double  and  GoalType	29	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE  ||  goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE  ||  goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  if(isMinim)    {    if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    	compilable	  [FE]  AssertionError  	29	4	replace
49	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE  ||  goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE  ||  goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE  ||  goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  if(isMinim)    {    if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    	compilable	  [FE]  AssertionError  	29	4	replace
50	[BUG]  [BUGGY]  if(fx  <  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  <  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  <  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }	  if(fx    ==    GoalType.GOLDEN_SECTION)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
51	[BUG]  [BUGGY]  if(fx!=  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx!=  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx!=  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }	  if(fx    ==    GoalType.GOLDEN_SECTION)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
52	[BUG]  [BUGGY]  while(fx  <  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  while(fx  <  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	while(fx  <  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }	  if(fx    ==    GoalType.GOLDEN_SECTION)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
53	[BUG]  [BUGGY]  fx  =  computeFunctionValue(f,  w);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeFunctionValue(f,  w);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeFunctionValue(f,  w);	  fx    =    computeFunctionValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
54	[BUG]  [BUGGY]  fx  =  computeFunctionValue(f,  v);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeFunctionValue(f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeFunctionValue(f,  v);	  fx    =    computeFunctionValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
55	[BUG]  [BUGGY]  fx  =  computeFunctionValue(f,  d);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeFunctionValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeFunctionValue(f,  d);	  fx    =    computeFunctionValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
56	[BUG]  [BUGGY]  t  =  computeDistanceValue(f,  x);  v  =  computeObjectiveValue(f,  x);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeDistanceValue(f,  x);  v  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeDistanceValue(f,  x);  v  =  computeObjectiveValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    v    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
57	[BUG]  [BUGGY]  t  =  computeMeanValue(f,  x);  v  =  computeMeanValue(f,  x);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeMeanValue(f,  x);  v  =  computeMeanValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeMeanValue(f,  x);  v  =  computeMeanValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    v    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
58	[BUG]  [BUGGY]  t  =  computeIntValue(f,  x);  v  =  computeIntValue(f,  d);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeIntValue(f,  x);  v  =  computeIntValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeIntValue(f,  x);  v  =  computeIntValue(f,  d);	          t    =    computeObjectiveValue(f,    x);    v    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
59	[BUG]  [BUGGY]  t  =  computeDigits(f,  x);  v  =  computeObjectiveValue(f,  x);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeDigits(f,  x);  v  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeDigits(f,  x);  v  =  computeObjectiveValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    v    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
60	[BUG]  [BUGGY]  timeout  [FE]                      AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    b  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  b  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	                t        =        computeObjectiveValue(f,        x);        b    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  b  =  computeObjectiveValue(f,  x);	  timeout    	compilable	timeout	73	1	add
61	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    b  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  b  =  computeObjectiveValue(f,  x);  timeout  [FE]                      AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    b  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  b  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                t        =        computeObjectiveValue(f,        x);        b    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  b  =  computeObjectiveValue(f,  x);	  timeout    	compilable	timeout	73	1	add
62	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    b  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  y);  b  =  computeObjectiveValue(f,  x);  [CE]  cannot  find  symbol  y  [FE]                        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    b  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  y);  b  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                t        =        computeObjectiveValue(f,        x);        b    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  y);  b  =  computeObjectiveValue(f,  x);	  timeout    	non-compiled	[CE]  cannot  find  symbol  y	73	None	add
63	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    b  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  b  =  computeObjectiveValue(f,  y);  [CE]  cannot  find  symbol  y  [FE]                          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    b  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  b  =  computeObjectiveValue(f,  y);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                t        =        computeObjectiveValue(f,        x);        b    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  b  =  computeObjectiveValue(f,  y);	  timeout    	non-compiled	[CE]  cannot  find  symbol  y	73	None	add
64	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    b  =  computeObjectiveValue(f,  x);  T  =  computeObjectiveValue(f,  x);  b  =  computeObjectiveValue(f,  x);  [CE]  cannot  find  symbol  T  [FE]                            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    b  =  computeObjectiveValue(f,  x);  T  =  computeObjectiveValue(f,  x);  b  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                t        =        computeObjectiveValue(f,        x);        b    =    computeObjectiveValue(f,    x);    T  =  computeObjectiveValue(f,  x);  b  =  computeObjectiveValue(f,  x);	  timeout    	non-compiled	[CE]  cannot  find  symbol  T	73	None	add
65	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(f,  d,  w);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeObjectiveValue(f,  d,  w);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeObjectiveValue(f,  d,  w);	  fx    =    computeObjectiveValue(f,    d);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
66	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(d,  f);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeObjectiveValue(d,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeObjectiveValue(d,  f);	  fx    =    computeObjectiveValue(f,    d);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
67	[BUG]  [BUGGY]  if(!isMinim)  {  If(isMinim)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(!isMinim)  {  If(isMinim)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(!isMinim)  {  If(isMinim)  {	  if(isMinim)    {    If(isMinim)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
68	[BUG]  [BUGGY]  if(isFunction)  {  If(isFunction)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isFunction)  {  If(isFunction)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isFunction)  {  If(isFunction)  {	  if(isMinim)    {    If(isMinim)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
69	[BUG]  [BUGGY]  if(isScalar)  {  If(isScalar)  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isScalar)  {  If(isScalar)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isScalar)  {  If(isScalar)  {	  if(isMinim)    {    If(isMinim)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
70	[BUG]  [BUGGY]  While(isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  While(isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	While(isMinim)  {  throw  new  IllegalArgumentException( " ");  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	11	None	replace
71	[BUG]  [BUGGY]  While(isMinim  &&  isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  While(isMinim  &&  isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	While(isMinim  &&  isMinim)  {  throw  new  IllegalArgumentException( " ");  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	11	None	replace
72	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
73	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }	  	compilable	  [FE]  AssertionError  	56	4	add
74	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }	  	compilable	  [FE]  AssertionError  	56	4	add
75	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
76	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx	  	non-compiled	[CE]  not  a  statement	56	None	add
77	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  	compilable	  [FE]  AssertionError  	56	4	add
78	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  	compilable	  [FE]  AssertionError  	56	4	add
79	[BUG]  [BUGGY]  fx  =  -gw  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  -gw  +  1;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  -gw  +  1;	  fx    =    -gw;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
80	[BUG]  [BUGGY]  if(!isMinim)  {  if(!isMinim)  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(!isMinim)  {  if(!isMinim)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(!isMinim)    {    if(!isMinim)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	101	None	add
81	[BUG]  [BUGGY]  if(!isMinim)  {  If(!isMinim)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(!isMinim)  {  If(!isMinim)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(!isMinim)    {    If(!isMinim)  {	  	non-compiled	[CE]  ';'  expected	101	None	add
82	[BUG]  [BUGGY]  if(!isMinim)  {  if(!isMaxim)  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(!isMinim)  {  if(!isMaxim)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(!isMinim)    {    if(!isMaxim)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	101	None	add
83	[BUG]  [BUGGY]  t  =  computeInternalValue(f,  d);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeInternalValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeInternalValue(f,  d);	  t    =    computeInternalValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
84	[BUG]  [BUGGY]  t  =  computeInternalValue(f,  w);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeInternalValue(f,  w);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeInternalValue(f,  w);	  t    =    computeInternalValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
85	[BUG]  [BUGGY]  t  =  computeInternalValue(f,  v);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeInternalValue(f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeInternalValue(f,  v);	  t    =    computeInternalValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
86	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.GENERAL)  {  [CE]  cannot  find  symbol  GENERAL  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.GENERAL)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  goalType!=  GoalType.GENERAL)  {	  if(isMinim    &&    goalType    ==    GoalType.GENERAL)    {    	non-compiled	[CE]  cannot  find  symbol  GENERAL	117	None	replace
87	[BUG]  [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.GENERAL  ||  goalType  ==  GoalType.GOLDEN_SECTION)  {  [CE]  cannot  find  symbol  GENERAL  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.GENERAL  ||  goalType  ==  GoalType.GOLDEN_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  goalType  ==  GoalType.GENERAL  ||  goalType  ==  GoalType.GOLDEN_SECTION)  {	  if(isMinim    &&    goalType    ==    GoalType.GENERAL)    {    	non-compiled	[CE]  cannot  find  symbol  GENERAL	117	None	replace
88	[BUG]  [BUGGY]  fx  =  -l  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  -l  +  1;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  -l  +  1;	  fx    =    -l;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
89	[BUG]  [BUGGY]  fx  =  -g  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  -g  +  1;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  -g  +  1;	  fx    =    -g;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
90	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(f,  t);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  double  fx  =  computeObjectiveValue(f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	double  fx  =  computeObjectiveValue(f,  t);	          fx    =    computeObjectiveValue(f,    t);    double    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
91	[BUG]  [BUGGY]  if(fx  ==  GoalType.SEMI)  {  fx  =  -fx;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.SEMI)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.SEMI)  {  fx  =  -fx;  }	  if(goalType    ==    GoalType.SEMI)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
92	[BUG]  [BUGGY]  if(fx  ==  GoalType.SEMI  ||  goalType  ==  GoalType.SEMI)  {  fx  =  -fx;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.SEMI  ||  goalType  ==  GoalType.SEMI)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.SEMI  ||  goalType  ==  GoalType.SEMI)  {  fx  =  -fx;  }	  if(goalType    ==    GoalType.SEMI)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
93	[BUG]  [BUGGY]  if(fx  ==  GoalType.SECTION)  {  [CE]  cannot  find  symbol  SECTION  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.SECTION)  {	  if(fx    ==    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  SECTION	42	None	replace
94	[BUG]  [BUGGY]  if(fx  ==  GoalType.GOLDEN_SECTION  ||  fx  ==  GoalType.GOLDEN_SECTION)  {  [CE]  cannot  find  symbol  GOLDEN_SECTION  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.GOLDEN_SECTION  ||  fx  ==  GoalType.GOLDEN_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.GOLDEN_SECTION  ||  fx  ==  GoalType.GOLDEN_SECTION)  {	  if(fx    ==    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_SECTION	42	None	replace
95	[BUG]  [BUGGY]  if(fx  ==  GoalType.NONE)  {  [CE]  cannot  find  symbol  NONE  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.NONE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.NONE)  {	  if(fx    ==    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  NONE	42	None	replace
96	[BUG]  [BUGGY]  if(fx!=  GoalType.MINIMIZE)  {  [CE]  incomparable  types:  double  and  GoalType  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx!=  GoalType.MINIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx!=  GoalType.MINIMIZE)  {	  if(fx!=    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  incomparable  types:  double  and  GoalType	111	None	replace
97	[BUG]  [BUGGY]  if(fx!=  GoalType.MAXIMIZE  ||  fx!=  GoalType.MAXIMIZE)  {  [CE]  incomparable  types:  double  and  GoalType  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx!=  GoalType.MAXIMIZE  ||  fx!=  GoalType.MAXIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx!=  GoalType.MAXIMIZE  ||  fx!=  GoalType.MAXIMIZE)  {	  if(fx!=    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  incomparable  types:  double  and  GoalType	111	None	replace
98	[BUG]  [BUGGY]  int  fx  =  computeObjectiveValue(f,  t);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  int  fx  =  computeObjectiveValue(f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	int  fx  =  computeObjectiveValue(f,  t);	          fx    =    computeObjectiveValue(f,    t);    int    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
99	[BUG]  [BUGGY]  t  =  computeLocalValue(f,  v);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeLocalValue(f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeLocalValue(f,  v);	  t    =    computeObjectiveValue(f,    v);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
100	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  v,  w);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeObjectiveValue(f,  v,  w);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeObjectiveValue(f,  v,  w);	  t    =    computeObjectiveValue(f,    v);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
101	[BUG]  [BUGGY]  a  =  hi;  b  =  lo;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  a  =  hi;  b  =  lo;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	a  =  hi;  b  =  lo;	  a    =    lo;    b    =    lo;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
102	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  w,  d);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeObjectiveValue(f,  w,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeObjectiveValue(f,  w,  d);	  t    =    computeObjectiveValue(f,    w);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
103	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  y);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeObjectiveValue(f,  y);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeObjectiveValue(f,  y);	  t    =    computeObjectiveValue(f,    w);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
104	[BUG]  [BUGGY]  if(e!=  GoalType.SECTION)  {  [CE]  cannot  find  symbol  SECTION  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(e!=  GoalType.SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(e!=  GoalType.SECTION)  {	  if(e!=    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  SECTION	82	None	replace
105	[BUG]  [BUGGY]  if(e!=  GoalType.GOLDEN_DECTION)  {  [CE]  cannot  find  symbol  GOLDEN_DECTION  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(e!=  GoalType.GOLDEN_DECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(e!=  GoalType.GOLDEN_DECTION)  {	  if(e!=    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_DECTION	82	None	replace
106	[BUG]  [BUGGY]  if(e!=  GoalType.FOR)  {  [CE]  cannot  find  symbol  FOR  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(e!=  GoalType.FOR)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(e!=  GoalType.FOR)  {	  if(e!=    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  FOR	82	None	replace
107	[BUG]  [BUGGY]  if(isMinim  &&  isGOLDEN_EXTENDS)  {  [CE]  cannot  find  symbol  isGOLDEN_EXTENDS  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isGOLDEN_EXTENDS)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  isGOLDEN_EXTENDS)  {	  if(isMinim    &&    isGOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  isGOLDEN_EXTENDS	49	None	replace
108	[BUG]  [BUGGY]  if(isMinim  &&  isStandardFunctions)  {  [CE]  cannot  find  symbol  isStandardFunctions  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isStandardFunctions)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  isStandardFunctions)  {	  if(isMinim    &&    isGOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  isStandardFunctions	49	None	replace
109	[BUG]  [BUGGY]  if(isMinim  &&  isGOLDEN_FX)  {  [CE]  cannot  find  symbol  isGOLDEN_FX  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isGOLDEN_FX)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  isGOLDEN_FX)  {	  if(isMinim    &&    isGOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  isGOLDEN_FX	49	None	replace
110	[BUG]  [BUGGY]  timeout  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    v  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  v  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	                t        =        computeObjectiveValue(f,        x);        v    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  v  =  computeObjectiveValue(f,  x);	  timeout    	compilable	timeout	115	1	add
111	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    v  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  v  =  computeObjectiveValue(f,  x);  timeout  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    v  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  v  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                t        =        computeObjectiveValue(f,        x);        v    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  v  =  computeObjectiveValue(f,  x);	  timeout    	compilable	timeout	115	1	add
112	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    v  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  y);  v  =  computeObjectiveValue(f,  x);  [CE]  cannot  find  symbol  y  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    v  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  y);  v  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                t        =        computeObjectiveValue(f,        x);        v    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  y);  v  =  computeObjectiveValue(f,  x);	  timeout    	non-compiled	[CE]  cannot  find  symbol  y	115	None	add
113	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    v  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  v  =  computeObjectiveValue(f,  y);  [CE]  cannot  find  symbol  y  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    v  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  v  =  computeObjectiveValue(f,  y);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                t        =        computeObjectiveValue(f,        x);        v    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  v  =  computeObjectiveValue(f,  y);	  timeout    	non-compiled	[CE]  cannot  find  symbol  y	115	None	add
114	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    v  =  computeObjectiveValue(f,  x);  T  =  computeObjectiveValue(f,  x);  v  =  computeObjectiveValue(f,  x);  [CE]  cannot  find  symbol  T  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    v  =  computeObjectiveValue(f,  x);  T  =  computeObjectiveValue(f,  x);  v  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                t        =        computeObjectiveValue(f,        x);        v    =    computeObjectiveValue(f,    x);    T  =  computeObjectiveValue(f,  x);  v  =  computeObjectiveValue(f,  x);	  timeout    	non-compiled	[CE]  cannot  find  symbol  T	115	None	add
115	[BUG]  [BUGGY]  double  fx  =  -fx;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  double  fx  =  -fx;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	double  fx  =  -fx;	  if(goalType    ==    GoalType.GOLDEN)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
116	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)    {    if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	26	None	add
117	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)    {    if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	26	None	add
118	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(isMinim)  {  fx  =  -fx;  }  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(isMinim)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)    {    if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(isMinim)  {  fx  =  -fx;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	26	None	add
119	[BUG]  [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  ifx  =  computeObjectiveValue(f,  t);  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  ifx  =  computeObjectiveValue(f,  t);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  ifx  =  computeObjectiveValue(f,  t);  }	          fx    =    computeObjectiveValue(f,    t);    ifx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
120	[BUG]  [BUGGY]  a  =  -fx;  b  =  lo;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  a  =  -fx;  b  =  lo;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	a  =  -fx;  b  =  lo;	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    a    =    -fx;    b    =    lo;    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
121	[BUG]  [BUGGY]  if(isMinim)  {  a  =  -fx;  b  =  lo;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  a  =  -fx;  b  =  lo;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  a  =  -fx;  b  =  lo;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    a    =    -fx;    b    =    lo;    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
122	[BUG]  [BUGGY]  fx  =  -fx;  b  =  lo;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  -fx;  b  =  lo;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  -fx;  b  =  lo;	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    a    =    -fx;    b    =    lo;    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
123	[BUG]  [BUGGY]  fx  =  -gl  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  -gl  +  1;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  -gl  +  1;	  fx    =    -gl;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
124	[BUG]  [BUGGY]  fx  =  -gl.getValue();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  -gl.getValue();  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  -gl.getValue();	  fx    =    -gl;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
125	[BUG]  [BUGGY]  if(fx!=  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx!=  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx!=  GoalType.MINIMIZE)  {  fx  =  -fx;  }	  if(fx    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
126	[BUG]  [BUGGY]  if(fx  ==  GoalType.MINIMIZE  ||  fx  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.MINIMIZE  ||  fx  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.MINIMIZE  ||  fx  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  if(fx    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
127	[BUG]  [BUGGY]  t  =  computeRealFunction(f,  d);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeRealFunction(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeRealFunction(f,  d);	  t    =    computeRealFunction(f,    x);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
128	[BUG]  [BUGGY]  t  =  computeRealFunction(f,  w);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeRealFunction(f,  w);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeRealFunction(f,  w);	  t    =    computeRealFunction(f,    x);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
129	[BUG]  [BUGGY]  t  =  computeRealFunction(f,  v);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeRealFunction(f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeRealFunction(f,  v);	  t    =    computeRealFunction(f,    x);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
130	[BUG]  [BUGGY]  t  =  computeRealFunction(f,  e);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeRealFunction(f,  e);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeRealFunction(f,  e);	  t    =    computeRealFunction(f,    x);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
131	[BUG]  [BUGGY]  if(fx  ==  GoalType.MIN_VALUE)  {  fx  =  -fx;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.MIN_VALUE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.MIN_VALUE)  {  fx  =  -fx;  }	  if(fx    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
132	[BUG]  [BUGGY]  if(e  ==  GoalType.SECTION)  {  [CE]  cannot  find  symbol  SECTION  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(e  ==  GoalType.SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(e  ==  GoalType.SECTION)  {	  if(e    ==    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  SECTION	44	None	replace
133	[BUG]  [BUGGY]  if(e  ==  GoalType.FOR)  {  [CE]  cannot  find  symbol  FOR  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(e  ==  GoalType.FOR)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(e  ==  GoalType.FOR)  {	  if(e    ==    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  FOR	44	None	replace
134	[BUG]  [BUGGY]  if(e  ==  GoalType.TOP)  {  [CE]  cannot  find  symbol  TOP  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(e  ==  GoalType.TOP)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(e  ==  GoalType.TOP)  {	  if(e    ==    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  TOP	44	None	replace
135	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.SECTION)  {  [CE]  cannot  find  symbol  SECTION  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  goalType!=  GoalType.SECTION)  {	  if(isMinim    &&    goalType    ==    GoalType.MINIMIZE)    {    if(isMinim    &&    goalType!=    GoalType.MINIMIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SECTION	33	None	replace
136	[BUG]  [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.FUNCTION)  {  [CE]  cannot  find  symbol  FUNCTION  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.FUNCTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  goalType  ==  GoalType.FUNCTION)  {	  if(isMinim    &&    goalType    ==    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  FUNCTION	13	None	replace
137	[BUG]  [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.SECTION)  {  [CE]  cannot  find  symbol  SECTION  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  goalType  ==  GoalType.SECTION)  {	  if(isMinim    &&    goalType    ==    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  SECTION	13	None	replace
138	[BUG]  [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.GLOBAL_SECTION)  {  [CE]  cannot  find  symbol  GLOBAL_SECTION  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.GLOBAL_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  goalType  ==  GoalType.GLOBAL_SECTION)  {	  if(isMinim    &&    goalType    ==    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GLOBAL_SECTION	13	None	replace
139	[BUG]  [BUGGY]  fx  =  computeDigits(f,  w);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeDigits(f,  w);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeDigits(f,  w);	  fx    =    computeDigits(f,    t);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
140	[BUG]  [BUGGY]  fx  =  computeDigits(f,  v);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeDigits(f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeDigits(f,  v);	  fx    =    computeDigits(f,    t);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
141	[BUG]  [BUGGY]  fx  =  computeDigits(f,  d);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeDigits(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeDigits(f,  d);	  fx    =    computeDigits(f,    t);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
142	[BUG]  [BUGGY]  fx  =  computeDigits(f,  e);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeDigits(f,  e);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeDigits(f,  e);	  fx    =    computeDigits(f,    t);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
143	[BUG]  [BUGGY]  t  =  computeDouble(f,  x);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeDouble(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeDouble(f,  x);	          t    =    computeObjectiveValue(f,    x);    t    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
144	[BUG]  [BUGGY]  t  =  computeDistanceValue(f,  x);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeDistanceValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeDistanceValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    t    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
145	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  d,  w);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeObjectiveValue(f,  d,  w);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeObjectiveValue(f,  d,  w);	  t    =    computeObjectiveValue(f,    d);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
146	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  d,  v);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeObjectiveValue(f,  d,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeObjectiveValue(f,  d,  v);	  t    =    computeObjectiveValue(f,    d);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
147	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.MINIMIZE)  {  if(isMinim  &&  goalType!=  GoalType.MINIMIZE)  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.MINIMIZE)  {  if(isMinim  &&  goalType!=  GoalType.MINIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim    &&    goalType!=    GoalType.MINIMIZE)    {    if(isMinim  &&  goalType!=  GoalType.MINIMIZE)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	84	None	add
148	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.MINIMIZE)  {  if(isMinim  &&  goalType  ==  GoalType.MINIMIZE)  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.MINIMIZE)  {  if(isMinim  &&  goalType  ==  GoalType.MINIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim    &&    goalType!=    GoalType.MINIMIZE)    {    if(isMinim  &&  goalType  ==  GoalType.MINIMIZE)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	84	None	add
149	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.MINIMIZE)  {  if(isMinim  &&  goalType  >=  GoalType.MINIMIZE)  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.MINIMIZE)  {  if(isMinim  &&  goalType  >=  GoalType.MINIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim    &&    goalType!=    GoalType.MINIMIZE)    {    if(isMinim  &&  goalType  >=  GoalType.MINIMIZE)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	84	None	add
150	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.MINIMIZE)  {  If(isMinim  &&  goalType!=  GoalType.MINIMIZE)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.MINIMIZE)  {  If(isMinim  &&  goalType!=  GoalType.MINIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim    &&    goalType!=    GoalType.MINIMIZE)    {    If(isMinim  &&  goalType!=  GoalType.MINIMIZE)  {	  	non-compiled	[CE]  ';'  expected	84	None	add
151	[BUG]  [BUGGY]  if(isMinim  &&  isMaximum  ||  isGOLDEN_SECTION)  {  [CE]  cannot  find  symbol  isMaximum  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isMaximum  ||  isGOLDEN_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  isMaximum  ||  isGOLDEN_SECTION)  {	  if(isMinim    &&    isMaximum)    {    	non-compiled	[CE]  cannot  find  symbol  isMaximum	53	None	replace
152	[BUG]  [BUGGY]  if(isMinim  &&  isMaximum  ||  isMaximum)  {  [CE]  cannot  find  symbol  isMaximum  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isMaximum  ||  isMaximum)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  isMaximum  ||  isMaximum)  {	  if(isMinim    &&    isMaximum)    {    	non-compiled	[CE]  cannot  find  symbol  isMaximum	53	None	replace
153	[BUG]  [BUGGY]  if(isMinim)  {  a  =  mid;  b  =  lo;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  a  =  mid;  b  =  lo;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  a  =  mid;  b  =  lo;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  a    =    mid;    b    =    lo;    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
154	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	if(isMinim)  {  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    	compilable	  [FE]  AssertionError  	59	4	replace
155	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    	compilable	  [FE]  AssertionError  	59	4	replace
156	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)    {    if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	28	None	add
157	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  If(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  If(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)    {    if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    If(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }	  	non-compiled	[CE]  ';'  expected	28	None	add
158	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(isMinim)  {  fx  =  -fx;  }  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(isMinim)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)    {    if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    if(isMinim)  {  fx  =  -fx;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	28	None	add
159	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)    {    if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    if(isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	28	None	add
160	[BUG]  [BUGGY]  if(isMinim)  {  fx  =  -gw;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  fx  =  -gw;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  fx  =  -gw;  }	  if(fx    ==    GoalType.GOLDEN_SECTION)    {    fx    =    -gw;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
161	[BUG]  [BUGGY]  if(gl!=  GoalType.GOLDEN_SECTION)  {  fx  =  -gl;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(gl!=  GoalType.GOLDEN_SECTION)  {  fx  =  -gl;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(gl!=  GoalType.GOLDEN_SECTION)  {  fx  =  -gl;  }	  if(gl    ==    GoalType.GOLDEN_SECTION)    {    fx    =    -gl;    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
162	[BUG]  [BUGGY]  if(gl  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(gl  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(gl  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }	  if(gl    ==    GoalType.GOLDEN_SECTION)    {    fx    =    -gl;    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
163	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MINIMUM)  {  fx  =  -fx;  }  [CE]  cannot  find  symbol  MINIMUM  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MINIMUM)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  if(goalType  ==  GoalType.MINIMUM)  {  fx  =  -fx;  }	          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    	non-compiled	[CE]  cannot  find  symbol  MINIMUM	55	None	replace
164	[BUG]  [BUGGY]  if(!isMinim  &&  isGOLDEN_SECTION)  {  [CE]  cannot  find  symbol  isGOLDEN_SECTION  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(!isMinim  &&  isGOLDEN_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(!isMinim  &&  isGOLDEN_SECTION)  {	  if(!isMinim)    {    	non-compiled	[CE]  cannot  find  symbol  isGOLDEN_SECTION	102	None	replace
165	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(!isMinim  &&  fx!=  GOLDEN_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	if(!isMinim  &&  fx!=  GOLDEN_SECTION)  {	  if(!isMinim)    {    	compilable	  [FE]  AssertionError  	102	6	replace
166	[BUG]  [BUGGY]  if(!isMinim  &&  fx!=  GOLDEN_SECTION)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(!isMinim  &&  fx!=  GOLDEN_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(!isMinim  &&  fx!=  GOLDEN_SECTION)  {	  if(!isMinim)    {    	compilable	  [FE]  AssertionError  	102	6	replace
167	[BUG]  [BUGGY]  fx  =  -fw;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  -fw;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  -fw;	  fx    =    -n;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
168	[BUG]  [BUGGY]  if(fx!=  GOLDEN_SECTION)  {  a  =  fx;  b  =  lo;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx!=  GOLDEN_SECTION)  {  a  =  fx;  b  =  lo;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx!=  GOLDEN_SECTION)  {  a  =  fx;  b  =  lo;  }	  a    =    fx;    b    =    lo;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
169	[BUG]  [BUGGY]  if(fx  ==  GOLDEN_SECTION)  {  a  =  fx;  b  =  lo;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GOLDEN_SECTION)  {  a  =  fx;  b  =  lo;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GOLDEN_SECTION)  {  a  =  fx;  b  =  lo;  }	  a    =    fx;    b    =    lo;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
170	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -gl;  }  [CE]  cannot  find  symbol  gl  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -gl;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -gl;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -gl;    }    	non-compiled	[CE]  cannot  find  symbol  gl	21	None	replace
171	[BUG]  [BUGGY]  gl  =  -gl;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  gl  =  -gl;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	gl  =  -gl;	  if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -gl;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
172	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -gl;  }  [CE]  cannot  find  symbol  gl  [FE]                      AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -gl;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -gl;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -gl;    }    	non-compiled	[CE]  cannot  find  symbol  gl	21	None	replace
173	[BUG]  [BUGGY]  if(isMinim  &&  isMinim)  {  if(isMinim  &&  isMinim)  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isMinim)  {  if(isMinim  &&  isMinim)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim    &&    isMinim)    {    if(isMinim  &&  isMinim)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	51	None	add
174	[BUG]  [BUGGY]  if(isMinim  &&  isMinim)  {  If(isMinim  &&  isMinim)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isMinim)  {  If(isMinim  &&  isMinim)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim    &&    isMinim)    {    If(isMinim  &&  isMinim)  {	  	non-compiled	[CE]  ';'  expected	51	None	add
175	[BUG]  [BUGGY]  if(isMinim  &&  isMinim)  {  if(isMaxim  &&  isMinim)  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isMinim)  {  if(isMaxim  &&  isMinim)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim    &&    isMinim)    {    if(isMaxim  &&  isMinim)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	51	None	add
176	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.MAXIMIZE)  {  if(isMinim  &&  goalType!=  GoalType.MAXIMIZE)  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.MAXIMIZE)  {  if(isMinim  &&  goalType!=  GoalType.MAXIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim    &&    goalType!=    GoalType.MAXIMIZE)    {    if(isMinim  &&  goalType!=  GoalType.MAXIMIZE)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	add
177	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.MAXIMIZE)  {  if(isMinim  &&  goalType  ==  GoalType.MAXIMIZE)  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.MAXIMIZE)  {  if(isMinim  &&  goalType  ==  GoalType.MAXIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim    &&    goalType!=    GoalType.MAXIMIZE)    {    if(isMinim  &&  goalType  ==  GoalType.MAXIMIZE)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	add
178	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.MAXIMIZE)  {  if(isMinim  &&  goalType  >=  GoalType.MAXIMIZE)  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.MAXIMIZE)  {  if(isMinim  &&  goalType  >=  GoalType.MAXIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim    &&    goalType!=    GoalType.MAXIMIZE)    {    if(isMinim  &&  goalType  >=  GoalType.MAXIMIZE)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	add
179	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.MAXIMIZE)  {  if(isMinim  &&  goalType  >>  GoalType.MAXIMIZE)  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.MAXIMIZE)  {  if(isMinim  &&  goalType  >>  GoalType.MAXIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim    &&    goalType!=    GoalType.MAXIMIZE)    {    if(isMinim  &&  goalType  >>  GoalType.MAXIMIZE)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	add
180	[BUG]  [BUGGY]  if(fx  ==  GoalType.MINIMIZE  &&  fx  ==  GoalType.MAXIMIZE)  {  [CE]  incomparable  types:  double  and  GoalType  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.MINIMIZE  &&  fx  ==  GoalType.MAXIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.MINIMIZE  &&  fx  ==  GoalType.MAXIMIZE)  {	  if(fx    ==    GoalType.MINIMIZE    ||    fx    ==    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  incomparable  types:  double  and  GoalType	45	None	replace
181	[BUG]  [BUGGY]  if(fx!=  GoalType.MINIMIZE  ||  fx  ==  GoalType.MAXIMIZE)  {  [CE]  incomparable  types:  double  and  GoalType  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx!=  GoalType.MINIMIZE  ||  fx  ==  GoalType.MAXIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx!=  GoalType.MINIMIZE  ||  fx  ==  GoalType.MAXIMIZE)  {	  if(fx    ==    GoalType.MINIMIZE    ||    fx    ==    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  incomparable  types:  double  and  GoalType	45	None	replace
182	[BUG]  [BUGGY]  if(fx  <  GoalType.MINIMIZE  ||  fx  ==  GoalType.MAXIMIZE)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  <  GoalType.MINIMIZE  ||  fx  ==  GoalType.MAXIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  <  GoalType.MINIMIZE  ||  fx  ==  GoalType.MAXIMIZE)  {	  if(fx    ==    GoalType.MINIMIZE    ||    fx    ==    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	45	None	replace
183	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  w);  m  =  computeObjectiveValue(f,  x);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeObjectiveValue(f,  w);  m  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeObjectiveValue(f,  w);  m  =  computeObjectiveValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    m    =    computeObjectiveValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
184	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  v);  m  =  computeObjectiveValue(f,  x);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeObjectiveValue(f,  v);  m  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeObjectiveValue(f,  v);  m  =  computeObjectiveValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    m    =    computeObjectiveValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
185	[BUG]  [BUGGY]  fx  =  computeIntValue(f,  d);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeIntValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeIntValue(f,  d);	  fx    =    computeIntValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
186	[BUG]  [BUGGY]  fx  =  computeIntValue(f,  w);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeIntValue(f,  w);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeIntValue(f,  w);	  fx    =    computeIntValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
187	[BUG]  [BUGGY]  fx  =  computeIntValue(f,  v);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeIntValue(f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeIntValue(f,  v);	  fx    =    computeIntValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
188	[BUG]  [BUGGY]  fx  =  computeIntValue(f,  y);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeIntValue(f,  y);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeIntValue(f,  y);	  fx    =    computeIntValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
189	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(f,  w,  d);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeObjectiveValue(f,  w,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeObjectiveValue(f,  w,  d);	  fx    =    computeObjectiveValue(f,    w);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
190	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(f,  y);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeObjectiveValue(f,  y);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeObjectiveValue(f,  y);	  fx    =    computeObjectiveValue(f,    w);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
191	[BUG]  [BUGGY]  if(t!=  GoalType.SECTION)  {  [CE]  cannot  find  symbol  SECTION  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(t!=  GoalType.SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(t!=  GoalType.SECTION)  {	  if(t!=    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  SECTION	83	None	replace
192	[BUG]  [BUGGY]  if(t!=  GoalType.FOR)  {  [CE]  cannot  find  symbol  FOR  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(t!=  GoalType.FOR)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(t!=  GoalType.FOR)  {	  if(t!=    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  FOR	83	None	replace
193	[BUG]  [BUGGY]  if(isMinim  ||  isGOLDEN_SECTION)  {  [CE]  cannot  find  symbol  isGOLDEN_SECTION  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  ||  isGOLDEN_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  ||  isGOLDEN_SECTION)  {	  if(isMinim)    {    if(isMinim)    {    	non-compiled	[CE]  cannot  find  symbol  isGOLDEN_SECTION	61	None	replace
194	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.MINIMUM)  {  [CE]  cannot  find  symbol  MINIMUM  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.MINIMUM)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  goalType!=  GoalType.MINIMUM)  {	  if(isMinim    &&    goalType    ==    GoalType.MAXIMIZE)    {    if(isMinim    &&    goalType!=    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  cannot  find  symbol  MINIMUM	10	None	replace
195	[BUG]  [BUGGY]  if(glType  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(glType  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(glType  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }	  if(glType    ==    GoalType.GOLDEN_SECTION)    {    fx    =    -gl;    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
196	[BUG]  [BUGGY]  if(fx  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -gl;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -gl;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -gl;  }	  if(glType    ==    GoalType.GOLDEN_SECTION)    {    fx    =    -gl;    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
197	[BUG]  [BUGGY]  if(isMinim)  {  fx  =  -gl;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  fx  =  -gl;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  fx  =  -gl;  }	  if(glType    ==    GoalType.GOLDEN_SECTION)    {    fx    =    -gl;    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
198	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(!isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	if(!isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    If(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    	compilable	  [FE]  AssertionError  	60	6	replace
199	[BUG]  [BUGGY]  if(!isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(!isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(!isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    If(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    	compilable	  [FE]  AssertionError  	60	6	replace
200	[BUG]  [BUGGY]  t  =  computeInternalValue(f,  x);  b  =  computeInternalValue(f,  x);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeInternalValue(f,  x);  b  =  computeInternalValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeInternalValue(f,  x);  b  =  computeInternalValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    b    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
201	[BUG]  [BUGGY]  t  =  computeIntermediateValue(f,  x);  b  =  computeIntermediateValue(f,  x);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeIntermediateValue(f,  x);  b  =  computeIntermediateValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeIntermediateValue(f,  x);  b  =  computeIntermediateValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    b    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
202	[BUG]  [BUGGY]  t  =  computeDistanceValue(f,  x);  b  =  computeObjectiveValue(f,  x);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeDistanceValue(f,  x);  b  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeDistanceValue(f,  x);  b  =  computeObjectiveValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    b    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
203	[BUG]  [BUGGY]  t  =  computeDigits(f,  x);  b  =  computeObjectiveValue(f,  x);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeDigits(f,  x);  b  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeDigits(f,  x);  b  =  computeObjectiveValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    b    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
204	[BUG]  [BUGGY]  t  =  computeIntermediateValue(f,  d);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeIntermediateValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeIntermediateValue(f,  d);	  t    =    computeIntermediateValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
205	[BUG]  [BUGGY]  t  =  computeIntermediateValue(f,  v);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeIntermediateValue(f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeIntermediateValue(f,  v);	  t    =    computeIntermediateValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
206	[BUG]  [BUGGY]  t  =  computeIntermediateValue(f,  w);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeIntermediateValue(f,  w);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeIntermediateValue(f,  w);	  t    =    computeIntermediateValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
207	[BUG]  [BUGGY]  t  =  computeIntermediateValue(f,  y);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeIntermediateValue(f,  y);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeIntermediateValue(f,  y);	  t    =    computeIntermediateValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
208	[BUG]  [BUGGY]  (isMinim  &&  isMinimum))  {  fx  =  -fx;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  (isMinim  &&  isMinimum))  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	(isMinim  &&  isMinimum))  {  fx  =  -fx;  }	  if(isMinim)    {    fx    =    -fx;    }    	non-compiled	[CE]  not  a  statement	6	None	replace
209	[BUG]  [BUGGY]  if(isMinim)  {  fx  =  -d;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  fx  =  -d;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  fx  =  -d;  }	  if(isMinim)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
210	[BUG]  [BUGGY]  if(isMinim  &&  max  &&  isMaximumIterationCount)  {  [CE]  max  has  private  access  in  AbstractUnivariateRealOptimizer  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  max  &&  isMaximumIterationCount)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  max  &&  isMaximumIterationCount)  {	  if(isMinim    &&    isMinim    &&    isMaximumIterationCount)    {    	non-compiled	[CE]  max  has  private  access  in  AbstractUnivariateRealOptimizer	114	None	replace
211	[BUG]  [BUGGY]  if(isMinim  &&  isMinim  &&  maximalIterationCount)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isMinim  &&  maximalIterationCount)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  isMinim  &&  maximalIterationCount)  {	  if(isMinim    &&    isMinim    &&    isMaximumIterationCount)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	114	None	replace
212	[BUG]  [BUGGY]  t  =  computeLocalValue(f,  d);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeLocalValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeLocalValue(f,  d);	  t    =    computeLocalValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
213	[BUG]  [BUGGY]  t  =  computeLocalValue(f,  w);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeLocalValue(f,  w);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeLocalValue(f,  w);	  t    =    computeLocalValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
214	[BUG]  [BUGGY]  m  =  0.5  *  (w  +  b);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  m  =  0.5  *  (w  +  b);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	m  =  0.5  *  (w  +  b);	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    m    =    0.5    *    (w    +    b);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
215	[BUG]  [BUGGY]  m  =  0.5  *  (d  +  b);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  m  =  0.5  *  (d  +  b);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	m  =  0.5  *  (d  +  b);	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    m    =    0.5    *    (w    +    b);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
216	[BUG]  [BUGGY]  While(fx!=  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  While(fx!=  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	While(fx!=  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }	  if(fx    ==    GoalType.GOLDEN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	96	None	replace
217	[BUG]  [BUGGY]  if(fx  ==  GoalType.GOLDEN_SECTION)  {  a  =  -fx;  b  =  lo;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.GOLDEN_SECTION)  {  a  =  -fx;  b  =  lo;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.GOLDEN_SECTION)  {  a  =  -fx;  b  =  lo;  }	  if(goalType    ==    GoalType.GOLDEN)    {    a    =    -fx;    b    =    lo;    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
218	[BUG]  [BUGGY]  if(fx  ==  GoalType.GOLDEN)  {  a  =  -fx;  b  =  lo;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.GOLDEN)  {  a  =  -fx;  b  =  lo;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.GOLDEN)  {  a  =  -fx;  b  =  lo;  }	  if(goalType    ==    GoalType.GOLDEN)    {    a    =    -fx;    b    =    lo;    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
219	[BUG]  [BUGGY]  m  =  0.5  *  (a  +  fx);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  m  =  0.5  *  (a  +  fx);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	m  =  0.5  *  (a  +  fx);	  if(goalType    ==    GoalType.GOLDEN)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
220	[BUG]  [BUGGY]  if(b  ==  GoalType.GOLDEN_SECTION)  {  m  =  0.5  *  (a  +  fx);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(b  ==  GoalType.GOLDEN_SECTION)  {  m  =  0.5  *  (a  +  fx);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(b  ==  GoalType.GOLDEN_SECTION)  {  m  =  0.5  *  (a  +  fx);  }	  if(b    ==    GoalType.GOLDEN_SECTION)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
221	[BUG]  [BUGGY]  if(b  ==  GoalType.GOLDEN_SECTION)  {  m  =  0.5  *  (a  +  b,  fx);  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(b  ==  GoalType.GOLDEN_SECTION)  {  m  =  0.5  *  (a  +  b,  fx);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(b  ==  GoalType.GOLDEN_SECTION)  {  m  =  0.5  *  (a  +  b,  fx);  }	  if(b    ==    GoalType.GOLDEN_SECTION)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  ')'  expected	118	None	replace
222	[BUG]  [BUGGY]  if(isMinim  ||  isMaxim)  {  [CE]  cannot  find  symbol  isMaxim  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  ||  isMaxim)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  ||  isMaxim)  {	  if(isMinim)    {    if(isMaxim)    {    	non-compiled	[CE]  cannot  find  symbol  isMaxim	63	None	replace
223	[BUG]  [BUGGY]  if(isMinim  &&  isMaxim)  {  [CE]  cannot  find  symbol  isMaxim  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isMaxim)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  isMaxim)  {	  if(isMinim)    {    if(isMaxim)    {    	non-compiled	[CE]  cannot  find  symbol  isMaxim	63	None	replace
224	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          fx    =    computeObjectiveValue(f,    t);    fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	                fx        =        computeObjectiveValue(f,        t);        fx    =    computeObjectiveValue(f,    t);    fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);	  	compilable	  [FE]  AssertionError  	75	6	add
225	[BUG]  [BUGGY]          fx    =    computeObjectiveValue(f,    t);    fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          fx    =    computeObjectiveValue(f,    t);    fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                fx        =        computeObjectiveValue(f,        t);        fx    =    computeObjectiveValue(f,    t);    fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);	  	compilable	  [FE]  AssertionError  	75	6	add
226	[BUG]  [BUGGY]          fx    =    computeObjectiveValue(f,    t);    fx  =  computeObjectiveValue(f,  t);  int  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          fx    =    computeObjectiveValue(f,    t);    fx  =  computeObjectiveValue(f,  t);  int  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                fx        =        computeObjectiveValue(f,        t);        fx    =    computeObjectiveValue(f,    t);    int  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);	  	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	75	None	add
227	[BUG]  [BUGGY]          fx    =    computeObjectiveValue(f,    t);    fx  =  computeObjectiveValue(f,  t);  double  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          fx    =    computeObjectiveValue(f,    t);    fx  =  computeObjectiveValue(f,  t);  double  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                fx        =        computeObjectiveValue(f,        t);        fx    =    computeObjectiveValue(f,    t);    double  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);	  	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	75	None	add
228	[BUG]  [BUGGY]          fx    =    computeObjectiveValue(f,    t);    fx  =  computeObjectiveValue(f,  t);  fx  =  calculateObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          fx    =    computeObjectiveValue(f,    t);    fx  =  computeObjectiveValue(f,  t);  fx  =  calculateObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                fx        =        computeObjectiveValue(f,        t);        fx    =    computeObjectiveValue(f,    t);    fx  =  calculateObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);	  	non-compiled	[CE]  cannot  find  symbol	75	None	add
229	[BUG]  [BUGGY]  timeout  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);	  timeout    	compilable	timeout	68	1	add
230	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  timeout  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);	  timeout    	compilable	timeout	68	1	add
231	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  y);  t  =  computeObjectiveValue(f,  x);  [CE]  cannot  find  symbol  y  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  y);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  y);  t  =  computeObjectiveValue(f,  x);	  timeout    	non-compiled	[CE]  cannot  find  symbol  y	68	None	add
232	[BUG]  [BUGGY]  timeout  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  x);	  timeout    	compilable	timeout	68	1	add
233	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  x);  timeout  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  x);	  timeout    	compilable	timeout	68	1	add
234	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  y);  [CE]  cannot  find  symbol  y  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  y);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  y);	  timeout    	non-compiled	[CE]  cannot  find  symbol  y	68	None	add
235	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  X);  t  =  computeObjectiveValue(f,  x);  [CE]  cannot  find  symbol  X  [FE]                      AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  X);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  X);  t  =  computeObjectiveValue(f,  x);	  timeout    	non-compiled	[CE]  cannot  find  symbol  X	68	None	add
236	[BUG]  [BUGGY]  If(isMinim  &&  goalType  ==  GoalType.MAXIMIZE)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  If(isMinim  &&  goalType  ==  GoalType.MAXIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	If(isMinim  &&  goalType  ==  GoalType.MAXIMIZE)  {	  if(isMinim    &&    goalType    ==    GoalType.MAXIMIZE)    {    If(isMinim    &&    goalType    ==    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
237	[BUG]  [BUGGY]  If(isMinim  &&  goalType!=  GoalType.MAXIMIZE)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  If(isMinim  &&  goalType!=  GoalType.MAXIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	If(isMinim  &&  goalType!=  GoalType.MAXIMIZE)  {	  if(isMinim    &&    goalType    ==    GoalType.MAXIMIZE)    {    If(isMinim    &&    goalType    ==    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
238	[BUG]  [BUGGY]  if(fx  ==  GoalType.MAXIMIZE  &&  fx  ==  GoalType.MINIMIZE)  {  [CE]  incomparable  types:  double  and  GoalType  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.MAXIMIZE  &&  fx  ==  GoalType.MINIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.MAXIMIZE  &&  fx  ==  GoalType.MINIMIZE)  {	  if(fx    ==    GoalType.MAXIMIZE    ||    fx    ==    GoalType.MINIMIZE)    {    	non-compiled	[CE]  incomparable  types:  double  and  GoalType	48	None	replace
239	[BUG]  [BUGGY]  if(fx  <  GoalType.MAXIMIZE  ||  fx  ==  GoalType.MINIMIZE)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  <  GoalType.MAXIMIZE  ||  fx  ==  GoalType.MINIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  <  GoalType.MAXIMIZE  ||  fx  ==  GoalType.MINIMIZE)  {	  if(fx    ==    GoalType.MAXIMIZE    ||    fx    ==    GoalType.MINIMIZE)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	48	None	replace
240	[BUG]  [BUGGY]  m  =  0.5  *  (a  +  b,  v);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  m  =  0.5  *  (a  +  b,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	m  =  0.5  *  (a  +  b,  v);	  m    =    0.5    *    (a    +    b);    	non-compiled	[CE]  ')'  expected	1	None	replace
241	[BUG]  [BUGGY]  if(t  ==  GoalType.SECTION)  {  [CE]  cannot  find  symbol  SECTION  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(t  ==  GoalType.SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(t  ==  GoalType.SECTION)  {	  if(t    ==    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  SECTION	43	None	replace
242	[BUG]  [BUGGY]  if(t  ==  GoalType.FOR)  {  [CE]  cannot  find  symbol  FOR  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(t  ==  GoalType.FOR)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(t  ==  GoalType.FOR)  {	  if(t    ==    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  FOR	43	None	replace
243	[BUG]  [BUGGY]  if(fx  ==  GoalType.MAXIMIZE  ||  fx  ==  GoalType.GOLDEN_SECTION)  {  [CE]  incomparable  types:  double  and  GoalType  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.MAXIMIZE  ||  fx  ==  GoalType.GOLDEN_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.MAXIMIZE  ||  fx  ==  GoalType.GOLDEN_SECTION)  {	  if(fx    ==    GoalType.GOLDEN_SECTION    ||    fx    ==    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  incomparable  types:  double  and  GoalType	103	None	replace
244	[BUG]  [BUGGY]  if(fx  ==  GoalType.SECTION  ||  fx  ==  GoalType.MAXIMIZE)  {  [CE]  cannot  find  symbol  SECTION  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.SECTION  ||  fx  ==  GoalType.MAXIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.SECTION  ||  fx  ==  GoalType.MAXIMIZE)  {	  if(fx    ==    GoalType.GOLDEN_SECTION    ||    fx    ==    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SECTION	103	None	replace
245	[BUG]  [BUGGY]  if(fx  ==  GoalType.MINIMIZE  ||  fx  ==  GoalType.GOLDEN_SECTION)  {  [CE]  incomparable  types:  double  and  GoalType  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.MINIMIZE  ||  fx  ==  GoalType.GOLDEN_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.MINIMIZE  ||  fx  ==  GoalType.GOLDEN_SECTION)  {	  if(fx    ==    GoalType.GOLDEN_SECTION    ||    fx    ==    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  incomparable  types:  double  and  GoalType	103	None	replace
246	[BUG]  [BUGGY]  if(fx  ==  GoalType.GOLDEN_SECTION  ||  fx  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.GOLDEN_SECTION  ||  fx  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.GOLDEN_SECTION  ||  fx  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  if(fx    ==    GoalType.GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
247	[BUG]  [BUGGY]  if(fx  ==  GoalType.MAXIMIZE  &&  fx  ==  GoalType.MAXIMIZE)  {  [CE]  incomparable  types:  double  and  GoalType  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.MAXIMIZE  &&  fx  ==  GoalType.MAXIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.MAXIMIZE  &&  fx  ==  GoalType.MAXIMIZE)  {	  if(fx    ==    GoalType.MAXIMIZE    ||    fx    ==    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  incomparable  types:  double  and  GoalType	46	None	replace
248	[BUG]  [BUGGY]  if(fx  <  GoalType.MAXIMIZE  ||  fx  ==  GoalType.MAXIMIZE)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  <  GoalType.MAXIMIZE  ||  fx  ==  GoalType.MAXIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  <  GoalType.MAXIMIZE  ||  fx  ==  GoalType.MAXIMIZE)  {	  if(fx    ==    GoalType.MAXIMIZE    ||    fx    ==    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	46	None	replace
249	[BUG]  [BUGGY]  a  =  b;  b  =  lo;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  a  =  b;  b  =  lo;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	a  =  b;  b  =  lo;	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    a    =    b;    b    =    lo;    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
250	[BUG]  [BUGGY]  if(isMinim)  {  a  =  b;  b  =  lo;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  a  =  b;  b  =  lo;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  a  =  b;  b  =  lo;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    a    =    b;    b    =    lo;    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
251	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.NONE)  {  [CE]  cannot  find  symbol  NONE  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.NONE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  goalType!=  GoalType.NONE)  {	  if(isMinim    &&    goalType!=    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  NONE	81	None	replace
252	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.GLOBAL_SECTION)  {  [CE]  cannot  find  symbol  GLOBAL_SECTION  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.GLOBAL_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  goalType!=  GoalType.GLOBAL_SECTION)  {	  if(isMinim    &&    goalType!=    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GLOBAL_SECTION	81	None	replace
253	[BUG]  [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.GOLDEN_SECTION)  {  a  =  mid;  b  =  lo;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.GOLDEN_SECTION)  {  a  =  mid;  b  =  lo;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  goalType  ==  GoalType.GOLDEN_SECTION)  {  a  =  mid;  b  =  lo;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    a    =    mid;    b    =    lo;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
254	[BUG]  [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.GOLDEN_SECTION  ||  goalType  ==  GoalType.GOLDEN_SECTION)  {  a  =  mid;  b  =  lo;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.GOLDEN_SECTION  ||  goalType  ==  GoalType.GOLDEN_SECTION)  {  a  =  mid;  b  =  lo;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  goalType  ==  GoalType.GOLDEN_SECTION  ||  goalType  ==  GoalType.GOLDEN_SECTION)  {  a  =  mid;  b  =  lo;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    a    =    mid;    b    =    lo;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
255	[BUG]  [BUGGY]  if(fx  <  GoalType.MAXIMIZE  ||  fx  >  GoalType.MAXIMIZE)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  <  GoalType.MAXIMIZE  ||  fx  >  GoalType.MAXIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  <  GoalType.MAXIMIZE  ||  fx  >  GoalType.MAXIMIZE)  {	  if(fx    <    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	47	None	replace
256	[BUG]  [BUGGY]  if(fx  >  GoalType.MAXIMIZE)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  >  GoalType.MAXIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  >  GoalType.MAXIMIZE)  {	  if(fx    <    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	47	None	replace
257	[BUG]  [BUGGY]  if(fx  >=  GoalType.MAXIMIZE)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  >=  GoalType.MAXIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  >=  GoalType.MAXIMIZE)  {	  if(fx    <    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	47	None	replace
258	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIM  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIM  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIM	  	non-compiled	[CE]  ')'  expected	54	None	add
259	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)	  	compilable	  [FE]  AssertionError  	54	4	add
260	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)	  	compilable	  [FE]  AssertionError  	54	4	add
261	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
262	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  	compilable	  [FE]  AssertionError  	54	4	add
263	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  	compilable	  [FE]  AssertionError  	54	4	add
264	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx	  	non-compiled	[CE]  not  a  statement	54	None	add
265	[BUG]  [BUGGY]  if(isMinim  &&  maximalIterationCount)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  maximalIterationCount)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  maximalIterationCount)  {	  if(isMinim    &&    isMaximumIterationCount)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	50	None	replace
266	[BUG]  [BUGGY]  if(isMinim  &&  maximumIterationCount)  {  [CE]  cannot  find  symbol  maximumIterationCount  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  maximumIterationCount)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  maximumIterationCount)  {	  if(isMinim    &&    isMaximumIterationCount)    {    	non-compiled	[CE]  cannot  find  symbol  maximumIterationCount	50	None	replace
267	[BUG]  [BUGGY]  if(isMinim  &&  maximIterationCount)  {  [CE]  cannot  find  symbol  maximIterationCount  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  maximIterationCount)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  maximIterationCount)  {	  if(isMinim    &&    isMaximumIterationCount)    {    	non-compiled	[CE]  cannot  find  symbol  maximIterationCount	50	None	replace
268	[BUG]  [BUGGY]  fx  =  -1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  -1;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  -1;	  fx    =    -ll;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
269	[BUG]  [BUGGY]  m  =  0.5  *  (w  +  fx);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  m  =  0.5  *  (w  +  fx);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	m  =  0.5  *  (w  +  fx);	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    m    =    0.5    *    (a    +    fx);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
270	[BUG]  [BUGGY]  if(e  ==  GoalType.INTEGER)  {  [CE]  cannot  find  symbol  INTEGER  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(e  ==  GoalType.INTEGER)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(e  ==  GoalType.INTEGER)  {	  if(e    ==    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  INTEGER	44	None	replace
271	[BUG]  [BUGGY]  if(e  ==  GoalType.GOLDEN_FOR)  {  [CE]  cannot  find  symbol  GOLDEN_FOR  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(e  ==  GoalType.GOLDEN_FOR)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(e  ==  GoalType.GOLDEN_FOR)  {	  if(e    ==    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_FOR	44	None	replace
272	[BUG]  [BUGGY]  timeout  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  b  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    b  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);	  timeout    	compilable	timeout	68	1	add
273	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  b  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  timeout  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  b  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    b  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);	  timeout    	compilable	timeout	68	1	add
274	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }  [CE]  cannot  find  symbol  GOLDEN_SECTION  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }	  if(isMinim)    {    if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_SECTION	27	None	replace
275	[BUG]  [BUGGY]  if(isMinim)  {  if(fx  <  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(fx  <  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  if(fx  <  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  if(isMinim)    {    if(fx    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	30	None	replace
276	[BUG]  [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  int  fx  =  computeObjectiveValue(f,  t);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  int  fx  =  computeObjectiveValue(f,  t);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  int  fx  =  computeObjectiveValue(f,  t);  }	          fx    =    computeObjectiveValue(f,    t);    int    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
277	[BUG]  [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  int  fx  =  computeObjectiveValue(f,  v);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  int  fx  =  computeObjectiveValue(f,  v);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  int  fx  =  computeObjectiveValue(f,  v);  }	          fx    =    computeObjectiveValue(f,    t);    int    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
278	[BUG]  [BUGGY]  if(t  ==  GoalType.FUNCTION)  {  [CE]  cannot  find  symbol  FUNCTION  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(t  ==  GoalType.FUNCTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(t  ==  GoalType.FUNCTION)  {	  if(t    ==    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  FUNCTION	43	None	replace
279	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }	  	compilable	  [FE]  AssertionError  	56	6	add
280	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }	  	compilable	  [FE]  AssertionError  	56	6	add
281	[BUG]  [BUGGY]  if(fx!=  GoalType.GOLDEN_FACTOR)  {  [CE]  cannot  find  symbol  GOLDEN_FACTOR  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx!=  GoalType.GOLDEN_FACTOR)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx!=  GoalType.GOLDEN_FACTOR)  {	  if(fx!=    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_FACTOR	80	None	replace
282	[BUG]  [BUGGY]  if(goalType  ==  GoalType.SYNTHETIC)  {  fx  =  -w;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(goalType  ==  GoalType.SYNTHETIC)  {  fx  =  -w;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(goalType  ==  GoalType.SYNTHETIC)  {  fx  =  -w;  }	  if(goalType    ==    GoalType.SYNTHETIC)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
283	[BUG]  [BUGGY]  if(fx!=  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx!=  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx!=  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }	  if(fx    ==    GoalType.GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
284	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  int  isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  int  isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)    {    if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    int  isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  	non-compiled	[CE]  ';'  expected	26	None	add
285	[BUG]  [BUGGY]  n  =  -n;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  n  =  -n;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	n  =  -n;	  fx    =    -n;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
286	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  d);  m  =  computeObjectiveValue(f,  x);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeObjectiveValue(f,  d);  m  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeObjectiveValue(f,  d);  m  =  computeObjectiveValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    m    =    computeObjectiveValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
287	[BUG]  [BUGGY]  if(isMinim  &&  isGOLDEN_FOR)  {  [CE]  cannot  find  symbol  isGOLDEN_FOR  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isGOLDEN_FOR)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  isGOLDEN_FOR)  {	  if(isMinim    &&    isGOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  isGOLDEN_FOR	49	None	replace
288	[BUG]  [BUGGY]  if(isMinim  &&  maxIterationCount)  {  [CE]  cannot  find  symbol  maxIterationCount  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  maxIterationCount)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  maxIterationCount)  {	  if(isMinim    &&    isMaximumIterationCount)    {    	non-compiled	[CE]  cannot  find  symbol  maxIterationCount	50	None	replace
289	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  int  isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  int  isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)    {    if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    int  isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }	  	non-compiled	[CE]  ';'  expected	28	None	add
290	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  while(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  while(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)    {    if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    while(isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	28	None	add
291	[BUG]  [BUGGY]  if(isMaximumIterationCount)  {  If(isMinim)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMaximumIterationCount)  {  If(isMinim)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMaximumIterationCount)  {  If(isMinim)  {	  if(isMinim)    {    If(isMinim)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
292	[BUG]  [BUGGY]  if(isSecond)  {  If(isSecond)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isSecond)  {  If(isSecond)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isSecond)  {  If(isSecond)  {	  if(isMinim)    {    If(isMinim)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
293	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.FUNCTION)  {  [CE]  cannot  find  symbol  FUNCTION  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.FUNCTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  goalType!=  GoalType.FUNCTION)  {	  if(isMinim    &&    goalType    ==    GoalType.MAXIMIZE)    {    if(isMinim    &&    goalType!=    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  cannot  find  symbol  FUNCTION	10	None	replace
294	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(f,  f);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeObjectiveValue(f,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeObjectiveValue(f,  f);	          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    If(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
295	[BUG]  [BUGGY]  fw  =  computeObjectiveValue(f,  t);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fw  =  computeObjectiveValue(f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fw  =  computeObjectiveValue(f,  t);	          fx    =    computeObjectiveValue(f,    t);    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
296	[BUG]  [BUGGY]  fx  =  computeVariableValue(f,  t);  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeVariableValue(f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeVariableValue(f,  t);	          fx    =    computeObjectiveValue(f,    t);    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
297	[BUG]  [BUGGY]  fx  =  -gl  +  mid;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  -gl  +  mid;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  -gl  +  mid;	  fx    =    -gl;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
298	[BUG]  [BUGGY]  if(e!=  GoalType.GOLDEN_FACTOR)  {  [CE]  cannot  find  symbol  GOLDEN_FACTOR  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(e!=  GoalType.GOLDEN_FACTOR)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(e!=  GoalType.GOLDEN_FACTOR)  {	  if(e!=    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_FACTOR	82	None	replace
299	[BUG]  [BUGGY]  if(e!=  GoalType.GOLDEN_FOR)  {  [CE]  cannot  find  symbol  GOLDEN_FOR  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(e!=  GoalType.GOLDEN_FOR)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(e!=  GoalType.GOLDEN_FOR)  {	  if(e!=    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_FOR	82	None	replace
300	[BUG]  [BUGGY]  if(!isMinim)  {  fx  =  -fx;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(!isMinim)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(!isMinim)  {  fx  =  -fx;  }	  if(isMinim)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
301	[BUG]  [BUGGY]  if(isMinim)  {  fx  =  -1;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  fx  =  -1;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  fx  =  -1;  }	  if(isMinim)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
302	[BUG]  [BUGGY]  if(fx  ==  GoalType.GOLDEN_FOR  ||  fx  ==  GoalType.MAXIMIZE)  {  [CE]  cannot  find  symbol  GOLDEN_FOR  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.GOLDEN_FOR  ||  fx  ==  GoalType.MAXIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.GOLDEN_FOR  ||  fx  ==  GoalType.MAXIMIZE)  {	  if(fx    ==    GoalType.GOLDEN_SECTION    ||    fx    ==    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_FOR	103	None	replace
303	[BUG]  [BUGGY]  if(fx  ==  GoalType.GOLDEN_FACTOR  ||  fx  ==  GoalType.MAXIMIZE)  {  [CE]  cannot  find  symbol  GOLDEN_FACTOR  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.GOLDEN_FACTOR  ||  fx  ==  GoalType.MAXIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.GOLDEN_FACTOR  ||  fx  ==  GoalType.MAXIMIZE)  {	  if(fx    ==    GoalType.GOLDEN_SECTION    ||    fx    ==    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_FACTOR	103	None	replace
304	[BUG]  [BUGGY]  t  =  computeInternalValue(f,  y);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeInternalValue(f,  y);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeInternalValue(f,  y);	  t    =    computeInternalValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
305	[BUG]  [BUGGY]  if(goalType!=  GoalType.GOLDEN_SECTION)  {  a  =  mid;  b  =  lo;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(goalType!=  GoalType.GOLDEN_SECTION)  {  a  =  mid;  b  =  lo;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(goalType!=  GoalType.GOLDEN_SECTION)  {  a  =  mid;  b  =  lo;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    a    =    hi;    b    =    lo;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
306	[BUG]  [BUGGY]  g  =  -g;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  g  =  -g;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	g  =  -g;	  fx    =    -g;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
307	[BUG]  [BUGGY]  fx  =  -g0;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  -g0;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  -g0;	  fx    =    -g;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
308	[BUG]  [BUGGY]  if(fx  <  GoalType.MINIMIZE  ||  fx  >  GoalType.MAXIMIZE)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  <  GoalType.MINIMIZE  ||  fx  >  GoalType.MAXIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  <  GoalType.MINIMIZE  ||  fx  >  GoalType.MAXIMIZE)  {	  if(fx    ==    GoalType.MINIMIZE    ||    fx    ==    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	45	None	replace
309	[BUG]  [BUGGY]  safeThan  <  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  safeThan  <  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	safeThan  <  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }	  if(t    ==    GoalType.GOLDEN_SECTION)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	120	None	replace
310	[BUG]  [BUGGY]  NullPointer  t  =  GoalType.GOLDEN_SECTION;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  NullPointer  t  =  GoalType.GOLDEN_SECTION;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	NullPointer  t  =  GoalType.GOLDEN_SECTION;	  if(t    ==    GoalType.GOLDEN_SECTION)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
311	[BUG]  [BUGGY]  taskType  =  GoalType.GOLDEN_SECTION;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  taskType  =  GoalType.GOLDEN_SECTION;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	taskType  =  GoalType.GOLDEN_SECTION;	  if(t    ==    GoalType.GOLDEN_SECTION)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
312	[BUG]  [BUGGY]  if(fx  <  GoalType.GOLDEN_SECTION)  {  [CE]  cannot  find  symbol  GOLDEN_SECTION  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  <  GoalType.GOLDEN_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  <  GoalType.GOLDEN_SECTION)  {	  if(fx    <    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_SECTION	47	None	replace
313	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.MINIMIZE)  {  if(isMinim  &&  goalType  >>  GoalType.MINIMIZE)  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.MINIMIZE)  {  if(isMinim  &&  goalType  >>  GoalType.MINIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim    &&    goalType!=    GoalType.MINIMIZE)    {    if(isMinim  &&  goalType  >>  GoalType.MINIMIZE)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	84	None	add
314	[BUG]  [BUGGY]  m  =  0.5  *  (l  +  b);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  m  =  0.5  *  (l  +  b);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	m  =  0.5  *  (l  +  b);	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    m    =    0.5    *    (w    +    b);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
315	[BUG]  [BUGGY]  ARRAY_SECTION  =  b;  b  =  lo;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  ARRAY_SECTION  =  b;  b  =  lo;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	ARRAY_SECTION  =  b;  b  =  lo;	  ARRAY_SECTION    =    fx;    b    =    lo;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
316	[BUG]  [BUGGY]  ARRAY_SECTION  =  lo;  b  =  fx;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  ARRAY_SECTION  =  lo;  b  =  fx;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	ARRAY_SECTION  =  lo;  b  =  fx;	  ARRAY_SECTION    =    fx;    b    =    lo;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
317	[BUG]  [BUGGY]  if(fx  ==  GoalType.FUNCTION)  {  [CE]  cannot  find  symbol  FUNCTION  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.FUNCTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.FUNCTION)  {	  if(fx    ==    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  FUNCTION	42	None	replace
318	[BUG]  [BUGGY]  fx  =  -fx  +  mid;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  -fx  +  mid;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  -fx  +  mid;	  fx    =    -fx;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
319	[BUG]  [BUGGY]  if(fx  ==  GoalType.SECTION)  {  fx  =  -1;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.SECTION)  {  fx  =  -1;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.SECTION)  {  fx  =  -1;  }	  if(fx    ==    GoalType.SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
320	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType!=    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  	compilable	  [FE]  AssertionError  	58	4	add
321	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType!=    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  	compilable	  [FE]  AssertionError  	58	4	add
322	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType!=    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)	  	compilable	  [FE]  AssertionError  	58	4	add
323	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType!=    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)	  	compilable	  [FE]  AssertionError  	58	4	add
324	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType!=    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
325	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType!=    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx	  	non-compiled	[CE]  not  a  statement	58	None	add
326	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIM  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIM  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType!=    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIM	  	non-compiled	[CE]  ')'  expected	58	None	add
327	[BUG]  [BUGGY]  a  =  lo;  b  =  fx;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  a  =  lo;  b  =  fx;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	a  =  lo;  b  =  fx;	  a    =    fx;    b    =    lo;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
328	[BUG]  [BUGGY]  t  =  computeInternalValue(f,  x);  v  =  computeInternalValue(f,  x);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeInternalValue(f,  x);  v  =  computeInternalValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeInternalValue(f,  x);  v  =  computeInternalValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    v    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
329	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  d);  v  =  computeObjectiveValue(f,  d);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeObjectiveValue(f,  d);  v  =  computeObjectiveValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeObjectiveValue(f,  d);  v  =  computeObjectiveValue(f,  d);	          t    =    computeObjectiveValue(f,    x);    v    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
330	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  x);  v  =  computeObjectiveValue(f,  d);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeObjectiveValue(f,  x);  v  =  computeObjectiveValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeObjectiveValue(f,  x);  v  =  computeObjectiveValue(f,  d);	          t    =    computeObjectiveValue(f,    x);    v    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
331	[BUG]  [BUGGY]  if(gl!=  GoalType.MAXIMIZE)  {  fx  =  -gl;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(gl!=  GoalType.MAXIMIZE)  {  fx  =  -gl;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(gl!=  GoalType.MAXIMIZE)  {  fx  =  -gl;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -gl;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
332	[BUG]  [BUGGY]  if(gl!=  GoalType.MINIMIZE)  {  fx  =  -gl;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(gl!=  GoalType.MINIMIZE)  {  fx  =  -gl;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(gl!=  GoalType.MINIMIZE)  {  fx  =  -gl;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -gl;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
333	[BUG]  [BUGGY]  m  =  0.5  *  (lo  +  b);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  m  =  0.5  *  (lo  +  b);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	m  =  0.5  *  (lo  +  b);	  if(b    ==    GoalType.GOLDEN_SECTION)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
334	[BUG]  [BUGGY]  if(isMinim  &&  isMinim)  {  if(isMinim  &&  isMaxim)  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isMinim)  {  if(isMinim  &&  isMaxim)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim    &&    isMinim)    {    if(isMinim  &&  isMaxim)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	51	None	add
335	[BUG]  [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  (fx  =  computeObjectiveValue(f,  v);  }  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  (fx  =  computeObjectiveValue(f,  v);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  (fx  =  computeObjectiveValue(f,  v);  }	          fx    =    computeObjectiveValue(f,    t);    (fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  ')'  expected	98	None	replace
336	[BUG]  [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  (fx  =  computeObjectiveValue(f,  t);  }  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  (fx  =  computeObjectiveValue(f,  t);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  (fx  =  computeObjectiveValue(f,  t);  }	          fx    =    computeObjectiveValue(f,    t);    (fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  ')'  expected	98	None	replace
337	[BUG]  [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  }	          fx    =    computeObjectiveValue(f,    t);    (fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
338	[BUG]  [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  v);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  v);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  v);  }	          fx    =    computeObjectiveValue(f,    t);    (fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
339	[BUG]  [BUGGY]  if(fx  <  GoalType.MAXIMIZE  ||  fx  >  GoalType.MINIMIZE)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  <  GoalType.MAXIMIZE  ||  fx  >  GoalType.MINIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  <  GoalType.MAXIMIZE  ||  fx  >  GoalType.MINIMIZE)  {	  if(fx    ==    GoalType.MAXIMIZE    ||    fx    ==    GoalType.MINIMIZE)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	48	None	replace
340	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  x);  f  =  computeObjectiveValue(f,  v);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeObjectiveValue(f,  x);  f  =  computeObjectiveValue(f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeObjectiveValue(f,  x);  f  =  computeObjectiveValue(f,  v);	          t    =    computeObjectiveValue(f,    x);    f    =    computeObjectiveValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
341	[BUG]  [BUGGY]  m  =  0.5  *  (lo  +  fx);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  m  =  0.5  *  (lo  +  fx);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	m  =  0.5  *  (lo  +  fx);	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    m    =    0.5    *    (a    +    fx);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
342	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.GOLDEN_FOR)  {  [CE]  cannot  find  symbol  GOLDEN_FOR  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.GOLDEN_FOR)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  goalType!=  GoalType.GOLDEN_FOR)  {	  if(isMinim    &&    goalType!=    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_FOR	81	None	replace
343	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(!isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	if(!isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }	  if(isMinim)    {    if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    	compilable	  [FE]  AssertionError  	29	4	replace
344	[BUG]  [BUGGY]  if(!isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(!isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(!isMinim)  {  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }	  if(isMinim)    {    if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    	compilable	  [FE]  AssertionError  	29	4	replace
345	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(goalType!=  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	if(isMinim)  {  if(goalType!=  GoalType.MINIMIZE)  {  fx  =  -fx;  }	  if(isMinim)    {    if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    	compilable	  [FE]  AssertionError  	29	4	replace
346	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType!=  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(goalType!=  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  if(goalType!=  GoalType.MINIMIZE)  {  fx  =  -fx;  }	  if(isMinim)    {    if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    	compilable	  [FE]  AssertionError  	29	4	replace
347	[BUG]  [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(v));  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(v));  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(v));  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
348	[BUG]  [BUGGY]  m  =  0.5  *  (b  +  a);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  m  =  0.5  *  (b  +  a);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	m  =  0.5  *  (b  +  a);	  m    =    0.5    *    (a    +    b);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
349	[BUG]  [BUGGY]  if(fx!=  GoalType.GOLDEN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx!=  GoalType.GOLDEN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx!=  GoalType.GOLDEN)  {  throw  new  IllegalArgumentException( " ");  }	  if(fx    ==    GoalType.GOLDEN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
350	[BUG]  [BUGGY]  if(fx  <  GoalType.GOLDEN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  <  GoalType.GOLDEN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  <  GoalType.GOLDEN)  {  throw  new  IllegalArgumentException( " ");  }	  if(fx    ==    GoalType.GOLDEN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
351	[BUG]  [BUGGY]          fx    =    computeObjectiveValue(f,    t);    fx  =  computeObjectiveValue(f,  t);  Fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  [CE]  cannot  find  symbol  Fx  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          fx    =    computeObjectiveValue(f,    t);    fx  =  computeObjectiveValue(f,  t);  Fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                fx        =        computeObjectiveValue(f,        t);        fx    =    computeObjectiveValue(f,    t);    Fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);	  	non-compiled	[CE]  cannot  find  symbol  Fx	75	None	add
352	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.MAXIMIZE)  {  If(isMinim  &&  goalType!=  GoalType.MAXIMIZE)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.MAXIMIZE)  {  If(isMinim  &&  goalType!=  GoalType.MAXIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim    &&    goalType!=    GoalType.MAXIMIZE)    {    If(isMinim  &&  goalType!=  GoalType.MAXIMIZE)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
353	[BUG]  [BUGGY]  if(gw  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -gw;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(gw  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -gw;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(gw  ==  GoalType.GOLDEN_SECTION)  {  fx  =  -gw;  }	  if(fx    ==    GoalType.GOLDEN_SECTION)    {    fx    =    -gw;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
354	[BUG]  [BUGGY]  if(isMaxim)  {  [CE]  cannot  find  symbol  isMaxim  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMaxim)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMaxim)  {	  if(isMinim)    {    if(isMaxim)    {    	non-compiled	[CE]  cannot  find  symbol  isMaxim	63	None	replace
355	[BUG]  [BUGGY]  if(isMinim  &&  t!=  GoalType.GOLDEN_SECTION)  {  [CE]  cannot  find  symbol  GOLDEN_SECTION  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  t!=  GoalType.GOLDEN_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  t!=  GoalType.GOLDEN_SECTION)  {	  if(t!=    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_SECTION	83	None	replace
356	[BUG]  [BUGGY]  if(t!=  GoalType.GOLDEN_FACTOR)  {  [CE]  cannot  find  symbol  GOLDEN_FACTOR  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(t!=  GoalType.GOLDEN_FACTOR)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(t!=  GoalType.GOLDEN_FACTOR)  {	  if(t!=    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_FACTOR	83	None	replace
357	[BUG]  [BUGGY]  t  =  computeIntValue(f,  x);  b  =  computeIntValue(f,  x);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeIntValue(f,  x);  b  =  computeIntValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeIntValue(f,  x);  b  =  computeIntValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    b    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
358	[BUG]  [BUGGY]  t  =  computeVariableValue(f,  x);  b  =  computeVariableValue(f,  d);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeVariableValue(f,  x);  b  =  computeVariableValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeVariableValue(f,  x);  b  =  computeVariableValue(f,  d);	          t    =    computeObjectiveValue(f,    x);    b    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
359	[BUG]  [BUGGY]  t  =  computeVariableValue(f,  x);  b  =  computeVariableValue(f,  v);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeVariableValue(f,  x);  b  =  computeVariableValue(f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeVariableValue(f,  x);  b  =  computeVariableValue(f,  v);	          t    =    computeObjectiveValue(f,    x);    b    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
360	[BUG]  [BUGGY]  if(isMinim  &&  max)  {  [CE]  max  has  private  access  in  AbstractUnivariateRealOptimizer  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  max)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  max)  {	  if(isMinim    &&    isMaximum)    {    	non-compiled	[CE]  max  has  private  access  in  AbstractUnivariateRealOptimizer	53	None	replace
361	[BUG]  [BUGGY]  if(isMinim  &&  hi)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  hi)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  hi)  {	  if(isMinim    &&    isMaximum)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	53	None	replace
362	[BUG]  [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  ifx  =  computeObjectiveValue(f,  v);  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  ifx  =  computeObjectiveValue(f,  v);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  ifx  =  computeObjectiveValue(f,  v);  }	          fx    =    computeObjectiveValue(f,    t);    ifx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
363	[BUG]  [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  ifx  =  computeObjectiveValue(f,  w);  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  ifx  =  computeObjectiveValue(f,  w);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  ifx  =  computeObjectiveValue(f,  w);  }	          fx    =    computeObjectiveValue(f,    t);    ifx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
364	[BUG]  [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  ifx  =  computeObjectiveValue(f,  d);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  ifx  =  computeObjectiveValue(f,  d);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  ifx  =  computeObjectiveValue(f,  d);  }	          fx    =    computeObjectiveValue(f,    t);    ifx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
365	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(!isMinim  &&  hi  >  fx)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	if(!isMinim  &&  hi  >  fx)  {	  if(!isMinim)    {    	compilable	  [FE]  AssertionError  	102	5	replace
366	[BUG]  [BUGGY]  if(!isMinim  &&  hi  >  fx)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(!isMinim  &&  hi  >  fx)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(!isMinim  &&  hi  >  fx)  {	  if(!isMinim)    {    	compilable	  [FE]  AssertionError  	102	5	replace
367	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  <  0)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	if(fx  <  0)  {	  if(isMinim)    {    if(isMinim)    {    	compilable	  [FE]  AssertionError  	61	6	replace
368	[BUG]  [BUGGY]  if(fx  <  0)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  <  0)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  <  0)  {	  if(isMinim)    {    if(isMinim)    {    	compilable	  [FE]  AssertionError  	61	6	replace
369	[BUG]  [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.GOLDEN_FOR)  {  [CE]  cannot  find  symbol  GOLDEN_FOR  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.GOLDEN_FOR)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  goalType  ==  GoalType.GOLDEN_FOR)  {	  if(isMinim    &&    goalType    ==    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_FOR	13	None	replace
370	[BUG]  [BUGGY]  if(fx  <  GoalType.SECTION)  {  fx  =  -fx;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  <  GoalType.SECTION)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  <  GoalType.SECTION)  {  fx  =  -fx;  }	  if(fx    ==    GoalType.SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
371	[BUG]  [BUGGY]  fx  =  -f;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  -f;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  -f;	  fx    =    -n;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
372	[BUG]  [BUGGY]  if(isMinimum  &&  isMaximum)  {  [CE]  cannot  find  symbol  isMinimum  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinimum  &&  isMaximum)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinimum  &&  isMaximum)  {	  if(isMinim    &&    isMaximum)    {    	non-compiled	[CE]  cannot  find  symbol  isMinimum	53	None	replace
373	[BUG]  [BUGGY]  if(isMinim  &&  isMinimum)  {  [CE]  cannot  find  symbol  isMinimum  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isMinimum)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  isMinimum)  {	  if(isMinim    &&    isMaximum)    {    	non-compiled	[CE]  cannot  find  symbol  isMinimum	53	None	replace
374	[BUG]  [BUGGY]  if(isMinim  &&  isSecond)  {  [CE]  cannot  find  symbol  isSecond  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isSecond)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  isSecond)  {	  if(isMinim    &&    isMaximum)    {    	non-compiled	[CE]  cannot  find  symbol  isSecond	53	None	replace
375	[BUG]  [BUGGY]  fx  =  computeFunctionValue(f,  fw);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeFunctionValue(f,  fw);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeFunctionValue(f,  fw);	  fx    =    computeFunctionValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
376	[BUG]  [BUGGY]  gw  =  -gw;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  gw  =  -gw;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	gw  =  -gw;	  fx    =    -gw;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
377	[BUG]  [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  Double  fx  =  computeObjectiveValue(f,  t);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  Double  fx  =  computeObjectiveValue(f,  t);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  Double  fx  =  computeObjectiveValue(f,  t);  }	          fx    =    computeObjectiveValue(f,    t);    Double    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
378	[BUG]  [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  }  else  {  fx  =  computeObjectiveValue(f,  t);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  }  else  {  fx  =  computeObjectiveValue(f,  t);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  }  else  {  fx  =  computeObjectiveValue(f,  t);  }	          fx    =    computeObjectiveValue(f,    t);    Double    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
379	[BUG]  [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  double  fx  =  computeObjectiveValue(f,  t);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  double  fx  =  computeObjectiveValue(f,  t);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  fx  =  computeObjectiveValue(f,  t);  double  fx  =  computeObjectiveValue(f,  t);  }	          fx    =    computeObjectiveValue(f,    t);    Double    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
380	[BUG]  [BUGGY]  if(e!=  GoalType.GOLDEN_VARIABLE)  {  [CE]  cannot  find  symbol  GOLDEN_VARIABLE  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(e!=  GoalType.GOLDEN_VARIABLE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(e!=  GoalType.GOLDEN_VARIABLE)  {	  if(e!=    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_VARIABLE	82	None	replace
381	[BUG]  [BUGGY]  if(e!=  GoalType.GOLDEN_FIRE)  {  [CE]  cannot  find  symbol  GOLDEN_FIRE  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(e!=  GoalType.GOLDEN_FIRE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(e!=  GoalType.GOLDEN_FIRE)  {	  if(e!=    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_FIRE	82	None	replace
382	[BUG]  [BUGGY]  if(fx!=  GoalType.GOLDEN_FOR)  {  [CE]  cannot  find  symbol  GOLDEN_FOR  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx!=  GoalType.GOLDEN_FOR)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx!=  GoalType.GOLDEN_FOR)  {	  if(fx!=    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_FOR	80	None	replace
383	[BUG]  [BUGGY]  if(fx!=  GoalType.GOLDEN_VARIABLE)  {  [CE]  cannot  find  symbol  GOLDEN_VARIABLE  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx!=  GoalType.GOLDEN_VARIABLE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx!=  GoalType.GOLDEN_VARIABLE)  {	  if(fx!=    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_VARIABLE	80	None	replace
384	[BUG]  [BUGGY]  if(t!=  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(t!=  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(t!=  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }	  if(t    ==    GoalType.GOLDEN_SECTION)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
385	[BUG]  [BUGGY]  if(t  <  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(t  <  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(t  <  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }	  if(t    ==    GoalType.GOLDEN_SECTION)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
386	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.GOLDEN_SECTION)  {  If(isMinim  &&  goalType  ==  GoalType.MINIMIZE)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.GOLDEN_SECTION)  {  If(isMinim  &&  goalType  ==  GoalType.MINIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  goalType!=  GoalType.GOLDEN_SECTION)  {  If(isMinim  &&  goalType  ==  GoalType.MINIMIZE)  {	  if(isMinim    &&    goalType    ==    GoalType.MINIMIZE)    {    If(isMinim    &&    goalType    ==    GoalType.MINIMIZE)    {    	non-compiled	[CE]  ';'  expected	32	None	replace
387	[BUG]  [BUGGY]  if(isMinim  &&  isStandardFunction)  {  [CE]  cannot  find  symbol  isStandardFunction  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isStandardFunction)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  isStandardFunction)  {	  if(isMinim    &&    isGOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  isStandardFunction	49	None	replace
388	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  <  eps)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	if(fx  <  eps)  {	  if(isMinim)    {    if(isMinim)    {    	compilable	  [FE]  AssertionError  	61	6	replace
389	[BUG]  [BUGGY]  if(fx  <  eps)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  <  eps)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  <  eps)  {	  if(isMinim)    {    if(isMinim)    {    	compilable	  [FE]  AssertionError  	61	6	replace
390	[BUG]  [BUGGY]  fx  =  computeLocalValue(f,  y);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeLocalValue(f,  y);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeLocalValue(f,  y);	  fx    =    computeLocalValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
391	[BUG]  [BUGGY]  if(isMinim  &&  isIterationCount  &&  isMaximumIterationCount)  {  [CE]  cannot  find  symbol  isIterationCount  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isIterationCount  &&  isMaximumIterationCount)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  isIterationCount  &&  isMaximumIterationCount)  {	  if(isMinim    &&    isMinim    &&    isMaximumIterationCount)    {    	non-compiled	[CE]  cannot  find  symbol  isIterationCount	114	None	replace
392	[BUG]  [BUGGY]  if(fx  <  GoalType.GOLDEN_SECTION  ||  fx  ==  GoalType.MAXIMIZE)  {  [CE]  cannot  find  symbol  GOLDEN_SECTION  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  <  GoalType.GOLDEN_SECTION  ||  fx  ==  GoalType.MAXIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  <  GoalType.GOLDEN_SECTION  ||  fx  ==  GoalType.MAXIMIZE)  {	  if(fx    ==    GoalType.GOLDEN_SECTION    ||    fx    ==    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_SECTION	103	None	replace
393	[BUG]  [BUGGY]  if(fx!=  GoalType.GOLDEN_SECTION  ||  fx  ==  GoalType.MAXIMIZE)  {  [CE]  cannot  find  symbol  GOLDEN_SECTION  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx!=  GoalType.GOLDEN_SECTION  ||  fx  ==  GoalType.MAXIMIZE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx!=  GoalType.GOLDEN_SECTION  ||  fx  ==  GoalType.MAXIMIZE)  {	  if(fx    ==    GoalType.GOLDEN_SECTION    ||    fx    ==    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_SECTION	103	None	replace
394	[BUG]  [BUGGY]  if(isMinim  &&  isMinimim  &&  goalType!=  GoalType.GOLDEN_SECTION)  {  [CE]  cannot  find  symbol  isMinimim  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isMinimim  &&  goalType!=  GoalType.GOLDEN_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  isMinimim  &&  goalType!=  GoalType.GOLDEN_SECTION)  {	  if(isMinim    &&    goalType    ==    GoalType.MINIMIZE)    {    if(isMinim    &&    goalType    ==    GoalType.MINIMIZE)    {    	non-compiled	[CE]  cannot  find  symbol  isMinimim	31	None	replace
395	[BUG]  [BUGGY]  if(isMinim  &&  isMinimum  &&  goalType  ==  GoalType.GOLDEN_SECTION)  {  [CE]  cannot  find  symbol  isMinimum  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isMinimum  &&  goalType  ==  GoalType.GOLDEN_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  isMinimum  &&  goalType  ==  GoalType.GOLDEN_SECTION)  {	  if(isMinim    &&    goalType    ==    GoalType.MINIMIZE)    {    if(isMinim    &&    goalType    ==    GoalType.MINIMIZE)    {    	non-compiled	[CE]  cannot  find  symbol  isMinimum	31	None	replace
396	[BUG]  [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  a  =  -b;  b  =  lo;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  a  =  -b;  b  =  lo;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(goalType  ==  GoalType.GOLDEN_SECTION)  {  a  =  -b;  b  =  lo;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    a    =    -fx;    b    =    lo;    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
397	[BUG]  [BUGGY]  if(b  ==  GoalType.GOLDEN_SECTION)  {  m  =  0.5  *  (w  +  b);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(b  ==  GoalType.GOLDEN_SECTION)  {  m  =  0.5  *  (w  +  b);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(b  ==  GoalType.GOLDEN_SECTION)  {  m  =  0.5  *  (w  +  b);  }	  if(b    ==    GoalType.GOLDEN_SECTION)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
398	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  	compilable	  [FE]  AssertionError  	56	4	add
399	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  	compilable	  [FE]  AssertionError  	56	4	add
400	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
401	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MINIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
402	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  v);  f  =  computeObjectiveValue(f,  x);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeObjectiveValue(f,  v);  f  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeObjectiveValue(f,  v);  f  =  computeObjectiveValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    f    =    computeObjectiveValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
403	[BUG]  [BUGGY]  m  =  0.5  *  (a  +  v);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  m  =  0.5  *  (a  +  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	m  =  0.5  *  (a  +  v);	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    m    =    0.5    *    (a    +    fx);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
404	[BUG]  [BUGGY]  if(gl  ==  GoalType.MAXIMIZE)  {  fx  =  -gl;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(gl  ==  GoalType.MAXIMIZE)  {  fx  =  -gl;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(gl  ==  GoalType.MAXIMIZE)  {  fx  =  -gl;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -gl;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
405	[BUG]  [BUGGY]  if(goalType  ==  GoalType.SYNTHETIC  ||  goalType  ==  GoalType.SYNTHETIC)  {  fx  =  -fx;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(goalType  ==  GoalType.SYNTHETIC  ||  goalType  ==  GoalType.SYNTHETIC)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(goalType  ==  GoalType.SYNTHETIC  ||  goalType  ==  GoalType.SYNTHETIC)  {  fx  =  -fx;  }	  if(goalType    ==    GoalType.SYNTHETIC)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
406	[BUG]  [BUGGY]  t  =  computeIntValue(f,  x);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeIntValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeIntValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    t    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
407	[BUG]  [BUGGY]  t  =  computeNumberValue(f,  x);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeNumberValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeNumberValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    t    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
408	[BUG]  [BUGGY]  if(fx  ==  GoalType.GOLDEN_FOR)  {  [CE]  cannot  find  symbol  GOLDEN_FOR  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.GOLDEN_FOR)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.GOLDEN_FOR)  {	  if(fx    ==    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_FOR	42	None	replace
409	[BUG]  [BUGGY]  if(fx  ==  GoalType.GOLDEN_VARIABLE)  {  [CE]  cannot  find  symbol  GOLDEN_VARIABLE  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.GOLDEN_VARIABLE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.GOLDEN_VARIABLE)  {	  if(fx    ==    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_VARIABLE	42	None	replace
410	[BUG]  [BUGGY]  t  =  computeLocalValue(f,  x,  v);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeLocalValue(f,  x,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeLocalValue(f,  x,  v);	  t    =    computeLocalValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
411	[BUG]  [BUGGY]  if(isMinimum)  {  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinimum)  {  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinimum)  {  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  }	          fx    =    computeObjectiveValue(f,    t);    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
412	[BUG]  [BUGGY]  if(t  >  0)  {  fx  =  computeObjectiveValue(f,  t);  }  else  {  fx  =  computeObjectiveValue(f,  t);  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(t  >  0)  {  fx  =  computeObjectiveValue(f,  t);  }  else  {  fx  =  computeObjectiveValue(f,  t);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(t  >  0)  {  fx  =  computeObjectiveValue(f,  t);  }  else  {  fx  =  computeObjectiveValue(f,  t);  }	          fx    =    computeObjectiveValue(f,    t);    (fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
413	[BUG]  [BUGGY]  if(t  >  0)  {  fx  =  computeObjectiveValue(f,  t);  int  fx  =  computeObjectiveValue(f,  t);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(t  >  0)  {  fx  =  computeObjectiveValue(f,  t);  int  fx  =  computeObjectiveValue(f,  t);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(t  >  0)  {  fx  =  computeObjectiveValue(f,  t);  int  fx  =  computeObjectiveValue(f,  t);  }	          fx    =    computeObjectiveValue(f,    t);    int    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
414	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  w);  t  =  computeObjectiveValue(f,  x);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeObjectiveValue(f,  w);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeObjectiveValue(f,  w);  t  =  computeObjectiveValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    m    =    computeObjectiveValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
415	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  v);  t  =  computeObjectiveValue(f,  x);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeObjectiveValue(f,  v);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeObjectiveValue(f,  v);  t  =  computeObjectiveValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    m    =    computeObjectiveValue(f,    x);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
416	[BUG]  [BUGGY]  if(t!=  GoalType.GOLDEN_FOR)  {  [CE]  cannot  find  symbol  GOLDEN_FOR  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(t!=  GoalType.GOLDEN_FOR)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(t!=  GoalType.GOLDEN_FOR)  {	  if(t!=    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_FOR	83	None	replace
417	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    b  =  computeObjectiveValue(f,  x);  int  t  =  computeObjectiveValue(f,  x);  b  =  computeObjectiveValue(f,  x);  [CE]  variable  t  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                      AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    b  =  computeObjectiveValue(f,  x);  int  t  =  computeObjectiveValue(f,  x);  b  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                t        =        computeObjectiveValue(f,        x);        b    =    computeObjectiveValue(f,    x);    int  t  =  computeObjectiveValue(f,  x);  b  =  computeObjectiveValue(f,  x);	  timeout    	non-compiled	[CE]  variable  t  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	73	None	add
418	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  w);  v  =  computeObjectiveValue(f,  x);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeObjectiveValue(f,  w);  v  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeObjectiveValue(f,  w);  v  =  computeObjectiveValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    v    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
419	[BUG]  [BUGGY]  if(isMinim)  {  t  =  computeObjectiveValue(f,  x);  v  =  computeObjectiveValue(f,  v);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  t  =  computeObjectiveValue(f,  x);  v  =  computeObjectiveValue(f,  v);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  t  =  computeObjectiveValue(f,  x);  v  =  computeObjectiveValue(f,  v);  }	          t    =    computeObjectiveValue(f,    x);    v    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
420	[BUG]  [BUGGY]  t  =  computeIntValue(f,  x);  v  =  computeIntValue(f,  x);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeIntValue(f,  x);  v  =  computeIntValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeIntValue(f,  x);  v  =  computeIntValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    v    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
421	[BUG]  [BUGGY]  t  =  computeRealFunction(f,  eps);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeRealFunction(f,  eps);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeRealFunction(f,  eps);	  t    =    computeRealFunction(f,    x);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
422	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    v  =  computeObjectiveValue(f,  x);  int  t  =  computeObjectiveValue(f,  x);  v  =  computeObjectiveValue(f,  x);  [CE]  variable  t  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    v  =  computeObjectiveValue(f,  x);  int  t  =  computeObjectiveValue(f,  x);  v  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                t        =        computeObjectiveValue(f,        x);        v    =    computeObjectiveValue(f,    x);    int  t  =  computeObjectiveValue(f,  x);  v  =  computeObjectiveValue(f,  x);	  timeout    	non-compiled	[CE]  variable  t  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	115	None	add
423	[BUG]  [BUGGY]  timeout  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  v);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  v);  t  =  computeObjectiveValue(f,  x);	  timeout    	compilable	timeout	68	1	add
424	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  v);  t  =  computeObjectiveValue(f,  x);  timeout  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  v);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  v);  t  =  computeObjectiveValue(f,  x);	  timeout    	compilable	timeout	68	1	add
425	[BUG]  [BUGGY]  if(isMinim  &&  isMinim  &&  fx  <  =  GOLDEN_SECTION)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isMinim  &&  fx  <  =  GOLDEN_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  isMinim  &&  fx  <  =  GOLDEN_SECTION)  {	  if(isMinim    &&    isMinim)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
426	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isMinim  &&  fx  >  GOLDEN_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	if(isMinim  &&  isMinim  &&  fx  >  GOLDEN_SECTION)  {	  if(isMinim    &&    isMinim)    {    	compilable	  [FE]  AssertionError  	52	4	replace
427	[BUG]  [BUGGY]  if(isMinim  &&  isMinim  &&  fx  >  GOLDEN_SECTION)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isMinim  &&  fx  >  GOLDEN_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  isMinim  &&  fx  >  GOLDEN_SECTION)  {	  if(isMinim    &&    isMinim)    {    	compilable	  [FE]  AssertionError  	52	4	replace
428	[BUG]  [BUGGY]  if(isMinim  &&  isMinim  &&  fw  >  GOLDEN_SECTION)  {  [CE]  cannot  find  symbol  fw  [FE]        AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  isMinim  &&  fw  >  GOLDEN_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  isMinim  &&  fw  >  GOLDEN_SECTION)  {	  if(isMinim    &&    isMinim)    {    	non-compiled	[CE]  cannot  find  symbol  fw	52	None	replace
429	[BUG]  [BUGGY]  if(fx  ==  GoalType.SEMI)  {  if(goalType  ==  GoalType.SEMI)  {  fx  =  -fx;  }  [CE]  cannot  find  symbol  SEMI  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  ==  GoalType.SEMI)  {  if(goalType  ==  GoalType.SEMI)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  ==  GoalType.SEMI)  {  if(goalType  ==  GoalType.SEMI)  {  fx  =  -fx;  }	  if(goalType    ==    GoalType.SEMI)    {    fx    =    -fx;    }    	non-compiled	[CE]  cannot  find  symbol  SEMI	25	None	replace
430	[BUG]  [BUGGY]  if(fx  <  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  <  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  <  GoalType.GOLDEN_SECTION)  {  fx  =  -fx;  }	  if(fx    ==    GoalType.GOLDEN_SECTION)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
431	[BUG]  [BUGGY]  t  =  computeNumberValue(f,  x);  b  =  computeNumberValue(f,  x);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeNumberValue(f,  x);  b  =  computeNumberValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeNumberValue(f,  x);  b  =  computeNumberValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    b    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
432	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  d);  b  =  computeObjectiveValue(f,  x);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeObjectiveValue(f,  d);  b  =  computeObjectiveValue(f,  x);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeObjectiveValue(f,  d);  b  =  computeObjectiveValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    b    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
433	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  x);  b  =  computeObjectiveValue(f,  d);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  t  =  computeObjectiveValue(f,  x);  b  =  computeObjectiveValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	t  =  computeObjectiveValue(f,  x);  b  =  computeObjectiveValue(f,  d);	          t    =    computeObjectiveValue(f,    x);    b    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
434	[BUG]  [BUGGY]  if(b  ==  GoalType.GOLDEN)  {  m  =  0.5  *  (a  +  b);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(b  ==  GoalType.GOLDEN)  {  m  =  0.5  *  (a  +  b);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(b  ==  GoalType.GOLDEN)  {  m  =  0.5  *  (a  +  b);  }	  if(goalType    ==    GoalType.GOLDEN)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
435	[BUG]  [BUGGY]  if(b  ==  GoalType.GOLDEN)  {  m  =  0.5  *  (a  +  fx);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(b  ==  GoalType.GOLDEN)  {  m  =  0.5  *  (a  +  fx);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(b  ==  GoalType.GOLDEN)  {  m  =  0.5  *  (a  +  fx);  }	  if(goalType    ==    GoalType.GOLDEN)    {    m    =    0.5    *    (a    +    b);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
436	[BUG]  [BUGGY]  if(e  ==  GoalType.GOLDEN_VARIABLE)  {  [CE]  cannot  find  symbol  GOLDEN_VARIABLE  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(e  ==  GoalType.GOLDEN_VARIABLE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(e  ==  GoalType.GOLDEN_VARIABLE)  {	  if(e    ==    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_VARIABLE	44	None	replace
437	[BUG]  [BUGGY]  if(e  ==  GoalType.GOLDEN_FX)  {  [CE]  cannot  find  symbol  GOLDEN_FX  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(e  ==  GoalType.GOLDEN_FX)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(e  ==  GoalType.GOLDEN_FX)  {	  if(e    ==    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_FX	44	None	replace
438	[BUG]  [BUGGY]  l  =  -l;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  l  =  -l;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	l  =  -l;	  fx    =    -l;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
439	[BUG]  [BUGGY]  if(isMinim)  {  fx  =  -l;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  fx  =  -l;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  fx  =  -l;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  fx    =    -l;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
440	[BUG]  [BUGGY]  if(isFunction)  {  If(isMinim)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isFunction)  {  If(isMinim)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isFunction)  {  If(isMinim)  {	  if(isMinim)    {    If(isMinim)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
441	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(!isMinim  &&  fx  >  GOLDEN_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	if(!isMinim  &&  fx  >  GOLDEN_SECTION)  {	  if(!isMinim)    {    	compilable	  [FE]  AssertionError  	102	4	replace
442	[BUG]  [BUGGY]  if(!isMinim  &&  fx  >  GOLDEN_SECTION)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(!isMinim  &&  fx  >  GOLDEN_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(!isMinim  &&  fx  >  GOLDEN_SECTION)  {	  if(!isMinim)    {    	compilable	  [FE]  AssertionError  	102	4	replace
443	[BUG]  [BUGGY]  if(!isMinim  &&  fx  <  =  GOLDEN_SECTION)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(!isMinim  &&  fx  <  =  GOLDEN_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(!isMinim  &&  fx  <  =  GOLDEN_SECTION)  {	  if(!isMinim)    {    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
444	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  If(isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  If(isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)    {    if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    If(isMinim)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  	non-compiled	[CE]  ';'  expected	26	None	add
445	[BUG]  [BUGGY]  if(fx  <  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  <  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  <  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  if(fx    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
446	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  	compilable	  [FE]  AssertionError  	54	4	add
447	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  	compilable	  [FE]  AssertionError  	54	4	add
448	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
449	[BUG]  [BUGGY]  a  =  lo;  b  =  b;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  a  =  lo;  b  =  b;  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	a  =  lo;  b  =  b;	  a    =    mid;    b    =    lo;    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
450	[BUG]  [BUGGY]  fx  =  computeDigits(f,  eps);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  fx  =  computeDigits(f,  eps);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	fx  =  computeDigits(f,  eps);	  fx    =    computeDigits(f,    t);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
451	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.GOLDEN_FACTOR)  {  [CE]  cannot  find  symbol  GOLDEN_FACTOR  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.GOLDEN_FACTOR)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  goalType!=  GoalType.GOLDEN_FACTOR)  {	  if(isMinim    &&    goalType!=    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_FACTOR	81	None	replace
452	[BUG]  [BUGGY]  if(isMinim  &&  goalType!=  GoalType.GOLDEN_VARIABLE)  {  [CE]  cannot  find  symbol  GOLDEN_VARIABLE  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType!=  GoalType.GOLDEN_VARIABLE)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  goalType!=  GoalType.GOLDEN_VARIABLE)  {	  if(isMinim    &&    goalType!=    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_VARIABLE	81	None	replace
453	[BUG]  [BUGGY]  if(isMinim)  {  if(fx!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [CE]  incomparable  types:  double  and  GoalType  [FE]            AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  if(fx!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  if(fx!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  if(isMinim)    {    if(fx    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    	non-compiled	[CE]  incomparable  types:  double  and  GoalType	30	None	replace
454	[BUG]  [BUGGY]  if(fx  <  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  <  GoalType.MINIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  <  GoalType.MINIMIZE)  {  fx  =  -fx;  }	  if(fx    ==    GoalType.MINIMIZE)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
455	[BUG]  [BUGGY]  while(isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  while(isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	while(isMinim)  {  throw  new  IllegalArgumentException( " ");  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
456	[BUG]  [BUGGY]  if(isMinim)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim)  {  throw  new  IllegalStateException( " ");  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
457	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType!=    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  	compilable	  [FE]  AssertionError  	58	6	add
458	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType!=    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  	compilable	  [FE]  AssertionError  	58	6	add
459	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType!=    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
460	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	add	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType!=    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  	compilable	  [FE]  AssertionError  	58	4	add
461	[BUG]  [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]          if(goalType    ==    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	                if(goalType        ==        GoalType.MAXIMIZE)        {        fx        =        -fx;        }        if(goalType!=    GoalType.MAXIMIZE)    {    fx    =    -fx;    }    if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  if(goalType!=  GoalType.MAXIMIZE)  {  fx  =  -fx;  }	  	compilable	  [FE]  AssertionError  	58	4	add
462	[BUG]  [BUGGY]  if(t  ==  GoalType.GOLDEN_FOR)  {  [CE]  cannot  find  symbol  GOLDEN_FOR  [FE]              AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(t  ==  GoalType.GOLDEN_FOR)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(t  ==  GoalType.GOLDEN_FOR)  {	  if(t    ==    GoalType.GOLDEN_SECTION)    {    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_FOR	43	None	replace
463	[BUG]  [BUGGY]  if(fx  >=  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(fx  >=  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(fx  >=  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }	  if(fx    ==    GoalType.GOLDEN_SECTION)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
464	[BUG]  [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.GENERAL_SECTION)  {  [CE]  cannot  find  symbol  GENERAL_SECTION  [FE]        AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.GENERAL_SECTION)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  goalType  ==  GoalType.GENERAL_SECTION)  {	  if(isMinim    &&    goalType    ==    GoalType.GENERAL)    {    	non-compiled	[CE]  cannot  find  symbol  GENERAL_SECTION	117	None	replace
465	[BUG]  [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.GENERAL  ||  goalType  ==  GoalType.GENERAL)  {  [CE]  cannot  find  symbol  GENERAL  [FE]          AssertionError      [CONTEXT]      a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(f,  x);      [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.GENERAL  ||  goalType  ==  GoalType.GENERAL)  {  [BUGGY]      fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  final  double  tol2  =  2  *  tol1;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	120	120	4	replace	if(isMinim  &&  goalType  ==  GoalType.GENERAL  ||  goalType  ==  GoalType.GENERAL)  {	  if(isMinim    &&    goalType    ==    GoalType.GENERAL)    {    	non-compiled	[CE]  cannot  find  symbol  GENERAL	117	None	replace
