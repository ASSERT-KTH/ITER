bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  if(eps  <  0)  {  [BUGGY]  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	99	99	4	add	if(eps  <  0)  {	if  (eps  <=  0)  {  	compilable	  [FE]  AssertionError  	27	4	replace
2	[BUG]  [BUGGY]  if(eps  <  0)  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  if(eps  <  0)  {  [BUGGY]  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	99	99	4	replace	if(eps  <  0)  {	if  (eps  <=  0)  {  	compilable	  [FE]  AssertionError  	27	4	replace
3	[BUG]  [BUGGY]  [FE]  NotStrictlyPositiveException  [FE]      AssertionError  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  if(eps  >  0)  {  [BUGGY]  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	99	99	4	add	if(eps  >  0)  {	if  (eps  <=  0)  {  	compilable	  [FE]  NotStrictlyPositiveException  	27	7	replace
4	[BUG]  [BUGGY]  if(eps  >  0)  {  [FE]  NotStrictlyPositiveException  [FE]      AssertionError  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  if(eps  >  0)  {  [BUGGY]  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	99	99	4	replace	if(eps  >  0)  {	if  (eps  <=  0)  {  	compilable	  [FE]  NotStrictlyPositiveException  	27	7	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    [BUGGY]  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	99	99	4	replace	  	if  (eps  <=  0)  {  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
6	[BUG]  [BUGGY]    int  count  =  getCount();  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    int  count  =  getCount();  [BUGGY]  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	99	99	4	replace	    int  count  =  getCount();		non-compiled	[CE]  cannot  find  symbol	28	None	add
7	[BUG]  [BUGGY]    int  count  =  Math.min(eps.length,  b);  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    int  count  =  Math.min(eps.length,  b);  [BUGGY]  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	99	99	4	replace	    int  count  =  Math.min(eps.length,  b);		non-compiled	[CE]  double  cannot  be  dereferenced	28	None	add
8	[BUG]  [BUGGY]    int  count  =  eps.size();  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    int  count  =  eps.size();  [BUGGY]  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	99	99	4	replace	    int  count  =  eps.size();		non-compiled	[CE]  double  cannot  be  dereferenced	28	None	add
9	[BUG]  [BUGGY]    int  count  =  Math.min(eps.size()  -  1);  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    int  count  =  Math.min(eps.size()  -  1);  [BUGGY]  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	99	99	4	replace	    int  count  =  Math.min(eps.size()  -  1);		non-compiled	[CE]  double  cannot  be  dereferenced	28	None	add
10	[BUG]  [BUGGY]    int  eps  =  Math.min(eps,  b);  [CE]  variable  eps  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]            AssertionError  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    int  eps  =  Math.min(eps,  b);  [BUGGY]  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	99	99	4	replace	    int  eps  =  Math.min(eps,  b);		non-compiled	[CE]  variable  eps  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	28	None	add
11	[BUG]  [BUGGY]    int  count  =  Math.min(eps.length,  t);  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    int  count  =  Math.min(eps.length,  t);  [BUGGY]  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	99	99	4	replace	    int  count  =  Math.min(eps.length,  t);		non-compiled	[CE]  double  cannot  be  dereferenced	28	None	add
12	[BUG]  [BUGGY]    int  count  =  Math.min(eps.length,  mid);  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    int  count  =  Math.min(eps.length,  mid);  [BUGGY]  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	99	99	4	replace	    int  count  =  Math.min(eps.length,  mid);		non-compiled	[CE]  double  cannot  be  dereferenced	28	None	add
13	[BUG]  [BUGGY]    int  count  =  Math.min(eps.size(),  b);  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    int  count  =  Math.min(eps.size(),  b);  [BUGGY]  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	99	99	4	replace	    int  count  =  Math.min(eps.size(),  b);		non-compiled	[CE]  double  cannot  be  dereferenced	28	None	add
14	[BUG]  [BUGGY]    int  count  =  Math.min(eps,  t);  [CE]  possible  loss  of  precision  [FE]    AssertionError  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    int  count  =  Math.min(eps,  t);  [BUGGY]  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	99	99	4	replace	    int  count  =  Math.min(eps,  t);		non-compiled	[CE]  possible  loss  of  precision	28	None	add
15	[BUG]  [BUGGY]    int  count  =  Math.min(eps,  b);  [CE]  cannot  find  symbol  b  [FE]      AssertionError  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    int  count  =  Math.min(eps,  b);  [BUGGY]  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	99	99	4	replace	    int  count  =  Math.min(eps,  b);		non-compiled	[CE]  cannot  find  symbol  b	28	None	add
16	[BUG]  [BUGGY]  [FE]  NotStrictlyPositiveException  [FE]        AssertionError  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    eps  =  Math.min(0,  t);  [BUGGY]  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	99	99	4	add	    eps  =  Math.min(0,  t);		compilable	  [FE]  NotStrictlyPositiveException  	28	7	add
17	[BUG]  [BUGGY]    eps  =  Math.min(0,  t);  [FE]  NotStrictlyPositiveException  [FE]        AssertionError  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    eps  =  Math.min(0,  t);  [BUGGY]  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	99	99	4	replace	    eps  =  Math.min(0,  t);		compilable	  [FE]  NotStrictlyPositiveException  	28	7	add
18	[BUG]  [BUGGY]    int  count  =  Math.min(lo,  b);  [CE]  cannot  find  symbol  b  [FE]          AssertionError  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    int  count  =  Math.min(lo,  b);  [BUGGY]  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	99	99	4	replace	    int  count  =  Math.min(lo,  b);		non-compiled	[CE]  cannot  find  symbol  b	28	None	add
