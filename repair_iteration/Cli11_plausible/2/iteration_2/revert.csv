projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,option,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,option,options.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555pw.flush();
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buff.toString());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buff);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,option,group.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){appendOption(buff,option,options.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){appendOption(buff,option,option.isRequired());}else{buffer.append('n');}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){appendOption(buff,option,option.isRequired());}else{buffer.append("n");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){appendOption(buff,option,option.isRequired());}else{buffer.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){appendOption(buff,option,option.isRequired());}else{appendOptionGroup(buff,group);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555i.remove();
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.isRequired()){appendOption(buff,option);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.isRequired()){buff.append(";");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.isRequired()){buff.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(i.hasNext()){i.remove();}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(i.hasNext()){buff.remove();}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(i.hasNext()){i.remove();}else{appendOption(buff,option);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555buff.append(";");
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.isRequired()){buff.append(";n");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){appendOption(buff,group,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,options.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppendOption(buff,option,options.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,option,options.isSelected());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,option,options.isRight());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buff.toString()+width);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(app.toString());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buffer.toString());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,option);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){appendOption(buff,option);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppendOption(buff,option);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){buff.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555buff.append(",");
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(options.isRequired()){appendOption(buff,option,options.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555pw.write('ufffd');
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555pw.write('n');
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555pw.write("n");
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){appendOption(buff,option,group.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,option,group.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppendOption(buff,option,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppUtil.appendOption(buff,option,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,option,option.isRequired());}else{appendOptionGroup(buff,group);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator==null){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,selector,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,width,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,option,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buff,width);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(width);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buffer,width);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(app);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555Appender.appendOption(buff,option,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group!=null){if(option.isRequired()){appendOption(buff,option,option.isRequired());}else{buffer.append('n');}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.isEmpty()){appendOption(buff,option,option.isRequired());}else{buffer.append('n');}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group!=null){if(option.isRequired()){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,option.toString());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,option.getOptionType());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.isRequired()){buff.append(",",group);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,option,options.isSelectedGroup());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){appendOption(buff,group,option.isRequired());}else{appendOptionGroup(buff,group);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555i.remove(group);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555i.remove(0);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555i.clear();
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(option,group,buff.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group,option.getOptions());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group,option.isRequired(),width);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null){appendOption(buff,group,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group!=null){if(option.isRequired()){appendOption(buff,option,option.isRequired());}else{buffer.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.isEmpty()){appendOption(buff,option,option.isRequired());}else{buffer.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group!=null){if(option.isRequired()){appendOption(buff,option,option.isRequired());}else{buffer.append("n");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.isEmpty()){appendOption(buff,option,option.isRequired());}else{buffer.append("n");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null){appendOption(buff,option,options.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.isRequired()||group.isRequired()){buff.append(";");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){appendOption(buff,option,group.isRequired());}else{buffer.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555pw.close();
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.isRequired()){appendOption(buff,option,option.isRequired());}else{buffer.append('n');}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.isEmpty()){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.isRequired()&&option.isRequired()){buff.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.isRequired()||group.isRequired()){buff.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator.isRequired()){appendOption(buff,option,option.isRequired());}else{appendOptionGroup(buff,group);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator.isRequired()){appendOption(buff,group,option.isRequired());}else{appendOptionGroup(buff,group);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(!processedGroups.contains(option)){appendOption(buff,option);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(!processedGroups.contains(buff)){appendOption(buff,option);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(!processedGroups.contains(group)){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(i.hasNext()){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(!processedGroups.contains(group)){appendOption(buff,option,options.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(i.hasNext()){buff.remove();}else{append("");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(i.hasNext()){buff.remove();}else{buffer.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group,option.toString());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group,option.cloneTree());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group,option.required());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppendOption(buff,group,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,option.required());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null&&option.isRequired()){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator==null){appendOption(buff,option,options.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555pw.write('/');
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555pw.write(':');
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555pw.write('.');
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buff.length);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,option,group.isRequired(),width);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,preferred,group.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555buff.append(",").append(group);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppendOption(buff,option,group.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppUtil.appendOption(buff,option,group.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppUtilities.appendOption(buff,option,group.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group,options.getOptions());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,option,option.getOptions());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,selector,option.getOptions());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppendOption(buff,options,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,option,group.getOptionType());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,option,option.getOptionType());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,selector,option.getOptionType());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,width,option.required());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group,option.required(),width);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group,options.required());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.hasNext()){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555buff.append(",n");
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555pw.write(">");
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555pw.write("<");
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555pw.write("");
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){if(!processedGroups.contains(option)){appendOption(buff,option);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(!processedGroups.contains(group)){appendOption(buff,option);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buff,width,group);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buff,width,comparator);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buff,width+1);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(i.hasNext()){buff.clear();}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(i.hasNext()){i.clear();}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator.isEmpty()){appendOption(buff,option,option.isRequired());}else{buffer.append("n");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.isRequired()){append(buff,group.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.isRequired()){append(buff,group.isRequired());}else{optList.add(buff);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,options.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(i.next());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator.isRequired()){appendOption(buff,option,option.isRequired());}else{buffer.append('n');}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator.isRequired()){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppUtil.appendOption(buff,group,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppUtilities.appendOption(buff,group,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555i.remove(option);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555i.remove(optList);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555buff.append(";n");
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null){buff.append(";");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null){buff.append(";");}else{appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555Appender.appendOption(buff,group,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555Appender.appendOption(buff,option,group.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555Appender.appendOption(buff,width,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555Appender.appendOption(pw,option,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null){if(!processedGroups.contains(group)){appendOption(buff,option,options.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator==null){if(!processedGroups.contains(group)){appendOption(buff,option,options.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.isRequired()&&group.isRequired()){buff.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group,options.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppUtil.append(buff,option,buff.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(app.toString()+width);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(group.toString());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(app.getPadding());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buffer,width,group);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buffer,width,comparator);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buffer,width,optionComparator);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppendOption(buff,optList,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppendOption(buff,option,i.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buffer.toString()+width);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,options.isSelectedGroup());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,option,group.isSelectedGroup());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,option.isSelectedGroup());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(i.hasNext()){buff.remove();}else{appendOption(buff,option);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(i.hasNext()){appendOption(buff,option);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(pw,option,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,options.isRight());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,option,options.isEmpty());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,option,options.isLeft());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,width,options.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,selector,options.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppendOption(buff,group);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppendOption(buff,option,group);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buff.toString()+width,group);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buff.toString()+width,comparator);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buff.toString()+width,app);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buff.toString()+width,buff);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null){if(option.isRequired()){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){if(group!=null){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555pw.write('n',width);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555pw.write('0');
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){if(option.isRequired()){appendOption(buff,option,option.isRequired());}else{buffer.append("n");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null){if(option.isRequired()){appendOption(buff,option,option.isRequired());}else{buffer.append("n");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){if(option.isRequired()){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()||option.isRequired()){appendOption(buff,option);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){if(option.isRequired()){appendOption(buff,option,option.isRequired());}else{buffer.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null){if(option.isRequired()){appendOption(buff,option,option.isRequired());}else{buffer.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555buff.remove();
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555luate(buff,i.next()){buff.remove();}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555pull.remove();
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()||group.isRequired()){buff.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,option,group.toString());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,options.toString());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,selector,option.toString());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,width);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,width);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,width,group);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,options);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null){if(option.isRequired()){appendOption(buff,option,option.isRequired());}else{buffer.append('n');}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){if(option.isRequired()){appendOption(buff,option,option.isRequired());}else{buffer.append('n');}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(i.hasNext()){buff.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.hasNext()){buff.remove();}else{buffer.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(i.hasNext()){buffer.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator.isEmpty()){appendOption(buff,option,option.isRequired());}else{buffer.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator.isEmpty()){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,options.required());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,option.required(),width);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,selector,option.required());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,width,group.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(pw,width,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.isRequired()&&group.isRequired()){buff.append(";");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.isRequired()||group.isEmpty()){buff.append(";");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppendOption(buff,group,options.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppendOption(buff,option,options.isRequired(),group);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,selector,group.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(option,selector,buff.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()||option.isRequired()){buff.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator.isEmpty()){appendOption(buff,option,option.isRequired());}else{buffer.append('n');}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){if(!processedGroups.contains(buff)){appendOption(buff,option);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){if(!processedGroups.contains(group)){appendOption(buff,option);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,width,option.cloneTree());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,selector,option.cloneTree());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(option,group,buff.cloneTree());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(i.hasNext()){buff.remove(0);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null){if(!processedGroups.contains(group)){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555pw.skipChildren();
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppUtil.appendOption(pw,option,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppUtil.appendOption(buff,selector,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,options.isSelected());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isSelected()){appendOption(buff,option,options.isSelected());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group,options.isSelected());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,width,option.isRequired(),width);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group,option.isRequired(),width,true);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group,option.isRequired(),width,false);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group,options.isRequired(),width);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,width,option.toString());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(option,group,buff.toString());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,option,group.toString());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buff,app);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(width,app);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(app,width);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){appendOption(buff,option);}else{appendOptionGroup(buff,group);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(width,comparator);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(width+1);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(group);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optList.contains(group)){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555Appender.appendOption(option,buff,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555buff.append("}");
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppendOption(option,buff,options.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppUtil.appendOption(option,buff,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){appendOption(buff,group,option.required());}else{appendOptionGroup(buff,group);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(option,buff,group.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.hasNext()){i.remove();}else{appendOption(buff,option);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.hasNext()){buff.remove();}else{append("");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.isRequired()||option.isRequired()){buff.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,option,option.toString());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(option,group,buff.toString());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555i.remove(1);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null){appendOption(buff,group,option.isRequired());}else{appendOptionGroup(buff,group);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group.getName());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group.toString());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group,optionComparator.cloneTree());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(option,group,buffer.cloneTree());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,width,option.isRequired(),option);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group,option.getRequired(),width);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(app.toPlainString());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group!=null){appendOption(buff,option,option.isRequired());}else{buffer.append('n');}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group!=null){appendOption(buff,option,options.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buff.toString()+width,optionComparator);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optList!=null){if(option.isRequired()){appendOption(buff,option,option.isRequired());}else{buffer.append('n');}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optList!=null){if(option.isRequired()){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,optionComparator);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,true);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(options.isRequired()){appendOption(buff,group,options.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optList!=null){if(option.isRequired()){appendOption(buff,option,option.isRequired());}else{buffer.append("n");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555pw.write('#');
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(";n");
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(option,width,buff.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buffer,width,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null){if(group.isEmpty()){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null){if(group.isEmpty()){appendOption(buff,option,option.isRequired());}else{buffer.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,option,options.isSelected(),group);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optList.contains(option)){appendOption(buff,option,options.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(width,buff);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group!=null){if(group.isRequired()){appendOption(buff,option,option.isRequired());}else{buffer.append('n');}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(option,buff.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group!=null){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppendOption(option,buff,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppendOption(buff,option,option.isRequired(),group);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(option,group,buff.required());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(i.hasNext()){buff.add(group);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){appendOption(buff,group,option.isRequired());}else{buffer.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,option.getOptionType(),width);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,options.getOptionType());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555pw.write('>');
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(option,group,buffer.toString());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(option,group,buff.getOptions());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(option,group,buffer.getOptions());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,option.getOptions());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()){appendOption(buff,option);}else{buffer.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,option,option.required());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(i.hasNext()){appendOption(buff,group,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buffer,width+1);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buffer.toPlainString());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group!=null){if(option.isRequired()){appendOption(buff,option,options.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(option,buff,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(option,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(!processedGroups.contains(buff)){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(!processedGroups.isEmpty()){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,option.toString(),options.toString());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.isRequired()){AppendOption(buff,option);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(pw!=null){pw.close();}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(pw!=null){pw.close();}else{buffer.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(pw!=null){pw.close();}else{buffer.append('n');}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(processedGroups.contains(group)){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null&&option.isRequired()){appendOption(buff,group,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group,options.cloneTree());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,option,group.cloneTree());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.isRequired()){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null){if(group.isRequired()){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555OptListoptionComparator=(OptionComparator)i.next();
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555OptListoptionComparator=i.next();
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555pw.write("]");
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator.isSelected()){appendOption(buff,option,option.isRequired());}else{appendOptionGroup(buff,group);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(processedGroups.contains(option)){appendOption(buff,option);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(processedGroups.contains(group)){appendOption(buff,option);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,width-1,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,0,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isSelectedGroup()){appendOption(buff,option,options.isSelectedGroup());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isSelectedGroup()){appendOption(buff,option,options.isSelectedGroup());}else{buffer.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,i);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,false);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,selectedGroup,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator.isAutoRange()){appendOption(buff,group,option.isRequired());}else{appendOptionGroup(buff,group);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator.isRequired()){appendOption(buff,group,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(!processedGroups.contains(option)){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,option.getOptionType(),true);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,option.getOptionType(),options);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null){appendOption(buff,option,option.isRequired());}else{appendOptionGroup(buff,group);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(processedGroups.contains(group)){appendOption(buff,option,options.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(i.hasNext()){appendOption(buff,option,options.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null){appendOption(buff,group,options.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(group.hasOption(option)){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator==null){appendOption(buff,group,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null){appendOption(buff,option);}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group,optionComparator.getOptions());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppendOptionBuff(buff,option,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null){if(!optionComparator.isRequired()){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(option.isRequired()||group!=null){appendOption(buff,option,option.isRequired());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(!processedGroups.contains(option)){appendOption(buff,option,option.isRequired());}else{buffer.append('n');}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555AppendOption(buff,preferred,option.isRequired());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group,option.required(),preferred);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group,option.isRequired(),width,defaultLeftPad);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(buff.hasNext()){buff.remove();}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555append(buff,group,options.toString());
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null){appendOption(buff,option,options.isSelected());}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(optionComparator!=null){appendOption(buff,option,options.isSelected());}else{buffer.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,group,option.required(),preferred);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555buff.append(';');
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(buffer.toString(),width);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555PrintWriterpw=newPrintWriter(width,group);
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(buff.hasNext()){buffer.append(",");}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555pw.write('-');
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555if(i.hasNext()){buff.append('n');}
projects/Cli11/src/java/org/apache/commons/cli/HelpFormatter.java555appendOption(buff,option,options.isVertical());
