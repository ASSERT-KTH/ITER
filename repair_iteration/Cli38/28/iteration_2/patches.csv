bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  handleArguments(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArguments(cmd,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArguments(cmd,  stopAtNonOption);	  handleArguments(cmd);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
2	[BUG]  [BUGGY]  handleArgument(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(cmd,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(cmd,  stopAtNonOption);	  handleArguments(cmd);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
3	[BUG]  [BUGGY]  handleArguments(cmd,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArguments(cmd,  expectedOpts);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArguments(cmd,  expectedOpts);	  handleArguments(cmd);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
4	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleOption(options);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleOption(options);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleOption(options);  }	  handleOption(options);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
5	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  handleOption(options);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(!stopAtNonOption)  {  handleOption(options);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(!stopAtNonOption)  {  handleOption(options);  }	  handleOption(options);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
6	[BUG]  [BUGGY]  handleOption(options,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOption(options,  expectedOpts);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOption(options,  expectedOpts);	  handleOption(options);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
7	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleOption(options);  }  else  {  expectedOpts.add(options);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleOption(options);  }  else  {  expectedOpts.add(options);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleOption(options);  }  else  {  expectedOpts.add(options);  }	  handleOption(options);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
8	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(currentOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.parseOption(currentOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.parseOption(currentOption);	  Option    cmd    =    currentOption.parseOption(options);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
9	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(arguments);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.parseOption(arguments);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.parseOption(arguments);	  Option    cmd    =    currentOption.parseOption(options);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
10	[BUG]  [BUGGY]  Option  cmd  =  optionGroup.parseOption(options);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  optionGroup.parseOption(options);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  optionGroup.parseOption(options);	  Option    cmd    =    currentOption.parseOption(options);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
11	[BUG]  [BUGGY]  handleArgumentOpts(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgumentOpts(cmd,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgumentOpts(cmd,  stopAtNonOption);	  handleArgumentOpts(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
12	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleArgumentOpts(properties,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleArgumentOpts(properties,  stopAtNonOption);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleArgumentOpts(properties,  stopAtNonOption);  }	  handleArgumentOpts(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
13	[BUG]  [BUGGY]  handleArgumentOpts(properties,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgumentOpts(properties,  stopAtNonOption,  expectedOpts);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgumentOpts(properties,  stopAtNonOption,  expectedOpts);	  handleArgumentOpts(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
14	[BUG]  [BUGGY]  handleArgumentOpts(properties,  stopAtNonOption,  cmd);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgumentOpts(properties,  stopAtNonOption,  cmd);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgumentOpts(properties,  stopAtNonOption,  cmd);	  handleArgumentOpts(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
15	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(argument,  null);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.parse(argument,  null);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.parse(argument,  null);	  Option    cmd    =    currentOption.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
16	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(argument,  true);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.parse(argument,  true);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.parse(argument,  true);	  Option    cmd    =    currentOption.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
17	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(argument,  group);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.parse(argument,  group);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.parse(argument,  group);	  Option    cmd    =    currentOption.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
18	[BUG]  [BUGGY]  handleOption(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOption(cmd,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOption(cmd,  stopAtNonOption);	  handleOption(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
19	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleOption(properties,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleOption(properties,  stopAtNonOption);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleOption(properties,  stopAtNonOption);  }	  handleOption(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
20	[BUG]  [BUGGY]  handleOption(properties,  stopAtNonOption,  cmd);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOption(properties,  stopAtNonOption,  cmd);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOption(properties,  stopAtNonOption,  cmd);	  handleOption(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
21	[BUG]  [BUGGY]  handleOption(properties,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOption(properties,  stopAtNonOption,  expectedOpts);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOption(properties,  stopAtNonOption,  expectedOpts);	  handleOption(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
22	[BUG]  [BUGGY]  handleArgument(properties,  cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(properties,  cmd,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(properties,  cmd,  stopAtNonOption);	  handleArgument(properties,    cmd);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
23	[BUG]  [BUGGY]  handleArgument(properties,  options);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(properties,  options);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(properties,  options);	  handleArgument(properties,    cmd);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
24	[BUG]  [BUGGY]  handleArgument(properties,  option);  [CE]  illegal  start  of  type  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(properties,  option);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(properties,  option);	  handleArgument(properties,    cmd);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
25	[BUG]  [BUGGY]  handleArguments(properties,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArguments(properties,  expectedOpts,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArguments(properties,  expectedOpts,  stopAtNonOption);	  handleArguments(properties,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
26	[BUG]  [BUGGY]  handleArguments(properties,  currentOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArguments(properties,  currentOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArguments(properties,  currentOption);	  handleArguments(properties,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
27	[BUG]  [BUGGY]  handleArguments(properties,  expectedOpts,  currentToken);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArguments(properties,  expectedOpts,  currentToken);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArguments(properties,  expectedOpts,  currentToken);	  handleArguments(properties,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
28	[BUG]  [BUGGY]  handleArgument(properties,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(properties,  expectedOpts,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(properties,  expectedOpts,  stopAtNonOption);	  handleArgument(properties,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
29	[BUG]  [BUGGY]  handleArgument(cmd,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(cmd,  expectedOpts);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(cmd,  expectedOpts);	  handleArgument(properties,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
30	[BUG]  [BUGGY]  handleArgument(properties,  currentOption);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(properties,  currentOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(properties,  currentOption);	  handleArgument(properties,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
31	[BUG]  [BUGGY]  handleArgument(properties,  expectedOpts,  currentToken);  [CE]  illegal  start  of  type  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(properties,  expectedOpts,  currentToken);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(properties,  expectedOpts,  currentToken);	  handleArgument(properties,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
32	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(argument);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  group  =  options.getOptionGroup(argument);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  group  =  options.getOptionGroup(argument);	  Option    group    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
33	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  group  =  options.getOptionGroup(currentToken,  expectedOpts);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  group  =  options.getOptionGroup(currentToken,  expectedOpts);	  Option    group    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
34	[BUG]  [BUGGY]  Option  group  =  currentOption.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  group  =  currentOption.getOptionGroup(options);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  group  =  currentOption.getOptionGroup(options);	  Option    group    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
35	[BUG]  [BUGGY]  handleOptions(options,  cmd);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOptions(options,  cmd);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOptions(options,  cmd);	  handleOptions(properties,    cmd);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
36	[BUG]  [BUGGY]  handleOptions(cmd,  properties);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOptions(cmd,  properties);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOptions(cmd,  properties);	  handleOptions(properties,    cmd);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
37	[BUG]  [BUGGY]  handleOptions(properties,  options);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOptions(properties,  options);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOptions(properties,  options);	  handleOptions(properties,    cmd);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
38	[BUG]  [BUGGY]  handleOptions(properties,  cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOptions(properties,  cmd,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOptions(properties,  cmd,  stopAtNonOption);	  handleOptions(properties,    cmd);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
39	[BUG]  [BUGGY]  OptionGroup  group  =  currentOption.getGroup(options);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  OptionGroup  group  =  currentOption.getGroup(options);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	OptionGroup  group  =  currentOption.getGroup(options);	  OptionGroup    group    =    options.getGroup(currentOption);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
40	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  OptionGroup  group  =  options.getGroup(currentOption,  expectedOpts);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	OptionGroup  group  =  options.getGroup(currentOption,  expectedOpts);	  OptionGroup    group    =    options.getGroup(currentOption);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
41	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(argument,  options);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.getOption(argument,  options);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.getOption(argument,  options);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
42	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  argument);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.getOption(currentToken,  argument);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.getOption(currentToken,  argument);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
43	[BUG]  [BUGGY]  Option  cmd  =  currentToken.getOption(argument);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentToken.getOption(argument);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentToken.getOption(argument);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
44	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  stopAtNonOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.getOption(argument,  currentToken,  stopAtNonOption);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
45	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(defaultToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  group  =  options.getOptionGroup(defaultToken,  expectedOpts);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  group  =  options.getOptionGroup(defaultToken,  expectedOpts);	  Option    group    =    options.getOptionGroup(defaultToken);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
46	[BUG]  [BUGGY]  Option  cmd  =  options.parse(arguments[currentToken]);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.parse(arguments[currentToken]);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.parse(arguments[currentToken]);	  Option    cmd    =    options.parse(arguments[currentOption]);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
47	[BUG]  [BUGGY]  Option  cmd  =  options.parse(arguments[0]);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.parse(arguments[0]);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.parse(arguments[0]);	  Option    cmd    =    options.parse(arguments[currentOption]);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
48	[BUG]  [BUGGY]  Option  cmd  =  options.parse(arguments[currentOption  +  1]);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.parse(arguments[currentOption  +  1]);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.parse(arguments[currentOption  +  1]);	  Option    cmd    =    options.parse(arguments[currentOption]);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
49	[BUG]  [BUGGY]  parseOption(properties,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  parseOption(properties,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	parseOption(properties,  stopAtNonOption);	  parseOption(properties);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
50	[BUG]  [BUGGY]  parseOption(options);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  parseOption(options);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	parseOption(options);	  parseOption(properties);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
51	[BUG]  [BUGGY]  parseOption(cmd);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  parseOption(cmd);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	parseOption(cmd);	  parseOption(properties);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
52	[BUG]  [BUGGY]  parse(properties,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  parse(properties,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	parse(properties,  stopAtNonOption);	  parseOption(properties);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
53	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleOptions(options);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleOptions(options);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleOptions(options);  }	  handleOptions(options);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
54	[BUG]  [BUGGY]  handleOptions(options,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOptions(options,  expectedOpts);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOptions(options,  expectedOpts);	  handleOptions(options);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
55	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleOptions(options);  }  else  {  expectedOpts.addAll(options);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleOptions(options);  }  else  {  expectedOpts.addAll(options);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleOptions(options);  }  else  {  expectedOpts.addAll(options);  }	  handleOptions(options);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
56	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleOptions(options);  }  else  {  expectedOpts.add(options);  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleOptions(options);  }  else  {  expectedOpts.add(options);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleOptions(options);  }  else  {  expectedOpts.add(options);  }	  handleOptions(options);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
57	[BUG]  [BUGGY]  Option  cmd  =  options.parse(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.parse(currentToken,  expectedOpts);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.parse(currentToken,  expectedOpts);	  Option    cmd    =    options.parse(currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
58	[BUG]  [BUGGY]  Option  cmd  =  options.parse(currentOption,  arguments);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.parse(currentOption,  arguments);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.parse(currentOption,  arguments);	  Option    cmd    =    options.parse(currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
59	[BUG]  [BUGGY]  Option  cmd  =  options.parse(currentOption,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.parse(currentOption,  expectedOpts,  stopAtNonOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.parse(currentOption,  expectedOpts,  stopAtNonOption);	  Option    cmd    =    options.parse(currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
60	[BUG]  [BUGGY]  Option  cmd  =  options.parse(currentOption,  expectedOpts,  skipParsing);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.parse(currentOption,  expectedOpts,  skipParsing);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.parse(currentOption,  expectedOpts,  skipParsing);	  Option    cmd    =    options.parse(currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
61	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  arguments);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.getOption(currentToken,  arguments);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.getOption(currentToken,  arguments);	  Option    cmd    =    options.getOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
62	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.getOption(currentToken,  expectedOpts,  stopAtNonOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.getOption(currentToken,  expectedOpts,  stopAtNonOption);	  Option    cmd    =    options.getOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
63	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.getOption(argument,  expectedOpts);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.getOption(argument,  expectedOpts);	  Option    cmd    =    options.getOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
64	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  stopAtNonOption,  group);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.getOption(argument,  stopAtNonOption,  group);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.getOption(argument,  stopAtNonOption,  group);	  Option    cmd    =    options.getOption(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
65	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.getOption(argument,  stopAtNonOption,  expectedOpts);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.getOption(argument,  stopAtNonOption,  expectedOpts);	  Option    cmd    =    options.getOption(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
66	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  OptionGroup  group  =  options.getGroup(currentToken,  expectedOpts);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	OptionGroup  group  =  options.getGroup(currentToken,  expectedOpts);	  OptionGroup    group    =    options.getGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
67	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(arguments);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  OptionGroup  group  =  options.getGroup(arguments);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	OptionGroup  group  =  options.getGroup(arguments);	  OptionGroup    group    =    options.getGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
68	[BUG]  [BUGGY]  Options  cmd  =  currentOption.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Options  cmd  =  currentOption.getOptionGroup();  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Options  cmd  =  currentOption.getOptionGroup();	  Options    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
69	[BUG]  [BUGGY]  Options  cmd  =  group.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Options  cmd  =  group.getOptionGroup();  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Options  cmd  =  group.getOptionGroup();	  Options    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
70	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.getOptionGroup();  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.getOptionGroup();	  Options    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
71	[BUG]  [BUGGY]  Options  cmd  =  currentOption.getOption();  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Options  cmd  =  currentOption.getOption();  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Options  cmd  =  currentOption.getOption();	  Options    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
72	[BUG]  [BUGGY]  Options  cmd  =  currentOption.getParser();  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Options  cmd  =  currentOption.getParser();  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Options  cmd  =  currentOption.getParser();	  Options    cmd    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
73	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getParser();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.getParser();  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.getParser();	  Options    cmd    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
74	[BUG]  [BUGGY]  if(options!=  null)  {  handleArgumentOpts(options);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(options!=  null)  {  handleArgumentOpts(options);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(options!=  null)  {  handleArgumentOpts(options);  }	  handleArgumentOpts(options);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
75	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleArgumentOpts(options);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleArgumentOpts(options);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleArgumentOpts(options);  }	  handleArgumentOpts(options);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
76	[BUG]  [BUGGY]  handleArgumentOpts(options,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgumentOpts(options,  expectedOpts);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgumentOpts(options,  expectedOpts);	  handleArgumentOpts(options);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
77	[BUG]  [BUGGY]  Option  cmd  =  currentToken.parse(currentOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentToken.parse(currentOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentToken.parse(currentOption);	  Option    cmd    =    currentOption.parse(currentToken);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
78	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(arguments);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.parse(arguments);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.parse(arguments);	  Option    cmd    =    currentOption.parse(currentToken);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
79	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(arguments[currentToken]);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.parse(arguments[currentToken]);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.parse(arguments[currentToken]);	  Option    cmd    =    currentOption.parse(currentToken);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
80	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.parse(argument,  currentToken);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.parse(argument,  currentToken);	  Option    cmd    =    options.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
81	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.parse(argument,  currentOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.parse(argument,  currentOption);	  Option    cmd    =    options.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
82	[BUG]  [BUGGY]  handleOptions(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOptions(cmd,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOptions(cmd,  stopAtNonOption);	  handleOptions(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
83	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleOptions(properties,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleOptions(properties,  stopAtNonOption);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleOptions(properties,  stopAtNonOption);  }	  handleOptions(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
84	[BUG]  [BUGGY]  handleOptions(options,  properties,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOptions(options,  properties,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOptions(options,  properties,  stopAtNonOption);	  handleOptions(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
85	[BUG]  [BUGGY]  handleArgumentOpts(cmd,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgumentOpts(cmd,  expectedOpts);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgumentOpts(cmd,  expectedOpts);	  handleArgumentOpts(cmd);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
86	[BUG]  [BUGGY]  handleArgumentOpts(currentOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgumentOpts(currentOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgumentOpts(currentOption);	  handleArgumentOpts(cmd);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
87	[BUG]  [BUGGY]  ||  cmd!=  null)  {  handleRequiredOptions(properties);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  ||  cmd!=  null)  {  handleRequiredOptions(properties);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	||  cmd!=  null)  {  handleRequiredOptions(properties);  }	  if(cmd!=    null)    {    handleRequiredOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
88	[BUG]  [BUGGY]  if(cmd  ==  null)  {  handleRequiredOptions(properties,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(cmd  ==  null)  {  handleRequiredOptions(properties,  stopAtNonOption);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(cmd  ==  null)  {  handleRequiredOptions(properties,  stopAtNonOption);  }	  if(cmd!=    null)    {    handleRequiredOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
89	[BUG]  [BUGGY]  if(cmd  ==  null)  {  handleProperties(properties,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(cmd  ==  null)  {  handleProperties(properties,  stopAtNonOption);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(cmd  ==  null)  {  handleProperties(properties,  stopAtNonOption);  }	  if(cmd!=    null)    {    handleProperties(properties,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
90	[BUG]  [BUGGY]  ||  cmd!=  null)  {  handleProperties(properties,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  ||  cmd!=  null)  {  handleProperties(properties,  stopAtNonOption);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	||  cmd!=  null)  {  handleProperties(properties,  stopAtNonOption);  }	  if(cmd!=    null)    {    handleProperties(properties,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
91	[BUG]  [BUGGY]  options.handleProperties(properties,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  options.handleProperties(properties,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	options.handleProperties(properties,  stopAtNonOption);	  if(cmd!=    null)    {    handleProperties(properties,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
92	[BUG]  [BUGGY]  ||  cmd  ==  null)  {  handleProperties(properties);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  ||  cmd  ==  null)  {  handleProperties(properties);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	||  cmd  ==  null)  {  handleProperties(properties);  }	  if(cmd    ==    null)    {    handleProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
93	[BUG]  [BUGGY]  handleArgument(cmd,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(cmd,  blockAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(cmd,  blockAtNonOption);	  handleArgument(properties,    blockAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
94	[BUG]  [BUGGY]  handleArgument(properties,  blockAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(properties,  blockAtNonOption,  expectedOpts);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(properties,  blockAtNonOption,  expectedOpts);	  handleArgument(properties,    blockAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
95	[BUG]  [BUGGY]  if(blockAtNonOption)  {  handleArgument(properties,  blockAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(blockAtNonOption)  {  handleArgument(properties,  blockAtNonOption);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(blockAtNonOption)  {  handleArgument(properties,  blockAtNonOption);  }	  handleArgument(properties,    blockAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
96	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionCmd();  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.getOptionCmd();  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.getOptionCmd();	  Option    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
97	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.getOption();  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.getOption();	  Option    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
98	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionCurrent();  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.getOptionCurrent();  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.getOptionCurrent();	  Option    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
99	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	OptionGroup  group  =  options.getOptionGroup(currentToken);	  OptionGroup    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
100	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(true);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(true);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	OptionGroup  group  =  options.getOptionGroup(true);	  OptionGroup    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
101	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	OptionGroup  group  =  options.getOptionGroup(options);	  OptionGroup    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
102	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(currentToken,  arguments);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.parseOption(currentToken,  arguments);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.parseOption(currentToken,  arguments);	  Option    cmd    =    options.parseOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
103	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(currentToken,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.parseOption(currentToken,  expectedOpts,  stopAtNonOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.parseOption(currentToken,  expectedOpts,  stopAtNonOption);	  Option    cmd    =    options.parseOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
104	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(currentToken,  argument);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.parseOption(currentToken,  argument);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.parseOption(currentToken,  argument);	  Option    cmd    =    options.parseOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
105	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.parseOption(argument,  expectedOpts);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.parseOption(argument,  expectedOpts);	  Option    cmd    =    options.parseOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
106	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleArguments(properties,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleArguments(properties,  stopAtNonOption);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleArguments(properties,  stopAtNonOption);  }	  handleArguments(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
107	[BUG]  [BUGGY]  handleArguments(properties,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArguments(properties,  stopAtNonOption,  expectedOpts);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArguments(properties,  stopAtNonOption,  expectedOpts);	  handleArguments(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
108	[BUG]  [BUGGY]  handleArguments(properties,  stopAtNonOption,  cmd);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArguments(properties,  stopAtNonOption,  cmd);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArguments(properties,  stopAtNonOption,  cmd);	  handleArguments(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
109	[BUG]  [BUGGY]  handleArgument(arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(arguments,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(arguments,  stopAtNonOption);	  handleArgument(arguments);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
110	[BUG]  [BUGGY]  handleArgument(arguments,  currentOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(arguments,  currentOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(arguments,  currentOption);	  handleArgument(arguments);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
111	[BUG]  [BUGGY]  handleArgument(arguments,  null);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(arguments,  null);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(arguments,  null);	  handleArgument(arguments);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
112	[BUG]  [BUGGY]  handleArgument(currentOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(currentOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(currentOption);	  handleArgument(cmd);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
113	[BUG]  [BUGGY]  handleArgument(currentToken);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(currentToken);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(currentToken);	  handleArgument(cmd);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
114	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  OptionGroup  group  =  options.getGroup(argument,  currentOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	OptionGroup  group  =  options.getGroup(argument,  currentOption);	  OptionGroup    group    =    options.getGroup(argument);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
115	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  OptionGroup  group  =  options.getGroup(argument,  currentToken);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	OptionGroup  group  =  options.getGroup(argument,  currentToken);	  OptionGroup    group    =    options.getGroup(argument);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
116	[BUG]  [BUGGY]  Option  group  =  options.getGroup(currentToken);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  group  =  options.getGroup(currentToken);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  group  =  options.getGroup(currentToken);	  Option    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
117	[BUG]  [BUGGY]  Option  group  =  options.getGroup(currentOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  group  =  options.getGroup(currentOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  group  =  options.getGroup(currentOption);	  Option    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
118	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleOption(cmd);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleOption(cmd);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleOption(cmd);  }	  handleOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
119	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleOption(cmd);  }  else  {  expectedOpts.add(currentToken);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleOption(cmd);  }  else  {  expectedOpts.add(currentToken);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleOption(cmd);  }  else  {  expectedOpts.add(currentToken);  }	  handleOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
120	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleOption(cmd);  }  else  {  expectedOpts.add(currentOption);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleOption(cmd);  }  else  {  expectedOpts.add(currentOption);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleOption(cmd);  }  else  {  expectedOpts.add(currentOption);  }	  handleOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
121	[BUG]  [BUGGY]  if(options!=  null)  {  handleArguments(options);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(options!=  null)  {  handleArguments(options);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(options!=  null)  {  handleArguments(options);  }	  handleArguments(options);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
122	[BUG]  [BUGGY]  handleArguments(options,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArguments(options,  expectedOpts);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArguments(options,  expectedOpts);	  handleArguments(options);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
123	[BUG]  [BUGGY]  if(options!=  null)  {  handleArguments(options);  }  else  {  expectedOpts.addAll(options);  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(options!=  null)  {  handleArguments(options);  }  else  {  expectedOpts.addAll(options);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(options!=  null)  {  handleArguments(options);  }  else  {  expectedOpts.addAll(options);  }	  handleArguments(options);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
124	[BUG]  [BUGGY]  handleOption(cmd,  options);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOption(cmd,  options);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOption(cmd,  options);	  handleOption(cmd,    properties);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
125	[BUG]  [BUGGY]  handleOption(options,  cmd);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOption(options,  cmd);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOption(options,  cmd);	  handleOption(cmd,    properties);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
126	[BUG]  [BUGGY]  handleOption(cmd,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOption(cmd,  expectedOpts);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOption(cmd,  expectedOpts);	  handleOption(cmd,    properties);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
127	[BUG]  [BUGGY]  handleOption(properties,  cmd);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOption(properties,  cmd);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOption(properties,  cmd);	  handleOption(cmd,    properties);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
128	[BUG]  [BUGGY]  ||  cmd  ==  null)  {  handleProperties(properties,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  ||  cmd  ==  null)  {  handleProperties(properties,  stopAtNonOption);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	||  cmd  ==  null)  {  handleProperties(properties,  stopAtNonOption);  }	  ||    cmd!=    null)    {    handleProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
129	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOptions();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.getOptions();  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.getOptions();	  Option    cmd    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
130	[BUG]  [BUGGY]  handleArgumentOpts(properties,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgumentOpts(properties,  expectedOpts,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgumentOpts(properties,  expectedOpts,  stopAtNonOption);	  handleArgumentOpts(properties,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
131	[BUG]  [BUGGY]  handleArgumentOpts(properties,  cmd);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgumentOpts(properties,  cmd);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgumentOpts(properties,  cmd);	  handleArgumentOpts(properties,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
132	[BUG]  [BUGGY]  handleArgumentOpts(properties,  currentOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgumentOpts(properties,  currentOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgumentOpts(properties,  currentOption);	  handleArgumentOpts(properties,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
133	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.parseOption(argument,  currentToken);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.parseOption(argument,  currentToken);	  Option    cmd    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
134	[BUG]  [BUGGY]  Options  cmd  =  options.getOption(currentOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Options  cmd  =  options.getOption(currentOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Options  cmd  =  options.getOption(currentOption);	  Options    cmd    =    currentOption.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
135	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.getOption(currentOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.getOption(currentOption);	  Options    cmd    =    currentOption.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
136	[BUG]  [BUGGY]  Options  cmd  =  options.getOption(currentToken,  argument);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Options  cmd  =  options.getOption(currentToken,  argument);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Options  cmd  =  options.getOption(currentToken,  argument);	  Options    cmd    =    options.getOption(currentToken,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
137	[BUG]  [BUGGY]  Options  cmd  =  options.getOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Options  cmd  =  options.getOption(argument,  stopAtNonOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Options  cmd  =  options.getOption(argument,  stopAtNonOption);	  Options    cmd    =    options.getOption(currentToken,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
138	[BUG]  [BUGGY]  Options  cmd  =  options.getOption(currentToken,  arguments);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Options  cmd  =  options.getOption(currentToken,  arguments);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Options  cmd  =  options.getOption(currentToken,  arguments);	  Options    cmd    =    options.getOption(currentToken,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
139	[BUG]  [BUGGY]  handleArgument(cmd,  options);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(cmd,  options);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(cmd,  options);	  handleArgument(cmd,    properties);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
140	[BUG]  [BUGGY]  handleArgument(cmd,  properties,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(cmd,  properties,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(cmd,  properties,  stopAtNonOption);	  handleArgument(cmd,    properties);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
141	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  currentOption  =  options.getOption(argument,  stopAtNonOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  currentOption  =  options.getOption(argument,  stopAtNonOption);	  Option    currentOption    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
142	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  currentOption  =  options.getOption(argument,  expectedOpts);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  currentOption  =  options.getOption(argument,  expectedOpts);	  Option    currentOption    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
143	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(argument,  null);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  currentOption  =  options.getOption(argument,  null);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  currentOption  =  options.getOption(argument,  null);	  Option    currentOption    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
144	[BUG]  [BUGGY]  handleArgument(properties,  stopAtNonOption,  cmd);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(properties,  stopAtNonOption,  cmd);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(properties,  stopAtNonOption,  cmd);	  handleArgument(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
145	[BUG]  [BUGGY]  handleArgument(properties,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(properties,  stopAtNonOption,  expectedOpts);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(properties,  stopAtNonOption,  expectedOpts);	  handleArgument(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
146	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleArgument(properties,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleArgument(properties,  stopAtNonOption);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleArgument(properties,  stopAtNonOption);  }	  handleArgument(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
147	[BUG]  [BUGGY]  handleArgumentOpts(cmd,  options);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgumentOpts(cmd,  options);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgumentOpts(cmd,  options);	  handleArgumentOpts(cmd,    properties);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
148	[BUG]  [BUGGY]  handleArgumentOpts(cmd,  properties,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgumentOpts(cmd,  properties,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgumentOpts(cmd,  properties,  stopAtNonOption);	  handleArgumentOpts(cmd,    properties);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
149	[BUG]  [BUGGY]  ||  cmd  ==  null)  {  handleRequiredOptions(properties);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  ||  cmd  ==  null)  {  handleRequiredOptions(properties);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	||  cmd  ==  null)  {  handleRequiredOptions(properties);  }	  if(cmd    ==    null)    {    handleRequiredOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
150	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(false);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  group  =  options.getOptionGroup(false);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  group  =  options.getOptionGroup(false);	  Option    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
151	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(true,  false);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  group  =  options.getOptionGroup(true,  false);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  group  =  options.getOptionGroup(true,  false);	  Option    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
152	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(false,  false);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  group  =  options.getOptionGroup(false,  false);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  group  =  options.getOptionGroup(false,  false);	  Option    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
153	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleOptions(cmd);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleOptions(cmd);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleOptions(cmd);  }	  handleOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
154	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleOptions(cmd);  }  else  {  expectedOpts.add(currentToken);  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleOptions(cmd);  }  else  {  expectedOpts.add(currentToken);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleOptions(cmd);  }  else  {  expectedOpts.add(currentToken);  }	  handleOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
155	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleOptions(cmd);  }  else  {  expectedOpts.add(currentOption);  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleOptions(cmd);  }  else  {  expectedOpts.add(currentOption);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleOptions(cmd);  }  else  {  expectedOpts.add(currentOption);  }	  handleOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
156	[BUG]  [BUGGY]  Option  cmd  =  optionGroup.getOption(options);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  optionGroup.getOption(options);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  optionGroup.getOption(options);	  Option    cmd    =    currentOption.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
157	[BUG]  [BUGGY]  Option  cmd  =  optionGroup.parseOption(currentToken);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  optionGroup.parseOption(currentToken);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  optionGroup.parseOption(currentToken);	  Option    cmd    =    currentToken.parseOption(options);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
158	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleOption(defaultOption);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleOption(defaultOption);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleOption(defaultOption);  }	  handleOption(defaultOption);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
159	[BUG]  [BUGGY]  handleOption(currentOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOption(currentOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOption(currentOption);	  handleOption(defaultOption);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
160	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleOption(defaultOption);  }  else  {  expectedOpts.add(defaultOption);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleOption(defaultOption);  }  else  {  expectedOpts.add(defaultOption);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleOption(defaultOption);  }  else  {  expectedOpts.add(defaultOption);  }	  handleOption(defaultOption);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
161	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleOption(defaultOption);  }  else  {  expectedOpts.add(currentToken);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleOption(defaultOption);  }  else  {  expectedOpts.add(currentToken);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleOption(defaultOption);  }  else  {  expectedOpts.add(currentToken);  }	  handleOption(defaultOption);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
162	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  stopAtNonOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.parseOption(argument,  stopAtNonOption);	  Option    cmd    =    currentOption.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
163	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  null);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  null);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.parseOption(argument,  null);	  Option    cmd    =    currentOption.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
164	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  true);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  true);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.parseOption(argument,  true);	  Option    cmd    =    currentOption.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
165	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.parse(argument,  stopAtNonOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.parse(argument,  stopAtNonOption);	  Option    cmd    =    options.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
166	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.parse(argument,  expectedOpts);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.parse(argument,  expectedOpts);	  Option    cmd    =    options.parse(currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
167	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.getOption(options,  stopAtNonOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.getOption(options,  stopAtNonOption);	  Option    cmd    =    currentOption.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
168	[BUG]  [BUGGY]  parseOptions(options);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  parseOptions(options);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	parseOptions(options);	  handleArguments(options);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
169	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleArgumentOpts(options);  }  else  {  expectedOpts  =  options.getOptions();  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleArgumentOpts(options);  }  else  {  expectedOpts  =  options.getOptions();  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleArgumentOpts(options);  }  else  {  expectedOpts  =  options.getOptions();  }	  handleArgumentOpts(options);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
170	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleOptions(options);  }  else  {  expectedOpts  =  options.getOptions();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleOptions(options);  }  else  {  expectedOpts  =  options.getOptions();  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleOptions(options);  }  else  {  expectedOpts  =  options.getOptions();  }	  handleOptions(options);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
171	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleOptions(options);  }  else  {  expectedOpts  =  null;  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleOptions(options);  }  else  {  expectedOpts  =  null;  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleOptions(options);  }  else  {  expectedOpts  =  null;  }	  handleOptions(options);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
172	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(defaultToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  group  =  options.getOptionGroup(defaultToken,  stopAtNonOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  group  =  options.getOptionGroup(defaultToken,  stopAtNonOption);	  Option    group    =    options.getOptionGroup(defaultToken);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
173	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.parse(argument,  stopAtNonOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.parse(argument,  stopAtNonOption);	  Option    cmd    =    currentOption.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
174	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(argument)+  1;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  currentOption  =  options.getOption(argument)+  1;  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  currentOption  =  options.getOption(argument)+  1;	  Option    currentOption    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
175	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  null);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.getOption(currentToken,  null);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.getOption(currentToken,  null);	  Option    cmd    =    options.getOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
176	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  group  =  options.getOptionGroup(currentToken,  stopAtNonOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  group  =  options.getOptionGroup(currentToken,  stopAtNonOption);	  Option    group    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
177	[BUG]  [BUGGY]  Option  cmd  =  group.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  group.getOptionGroup();  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  group.getOptionGroup();	  Option    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
178	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionArg(group);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.getOptionArg(group);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.getOptionArg(group);	  Option    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
179	[BUG]  [BUGGY]  handleArgumentOpts(options,  cmd);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgumentOpts(options,  cmd);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgumentOpts(options,  cmd);	  handleArgumentOpts(cmd,    properties);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
180	[BUG]  [BUGGY]  handleArgument(properties,  blockAtNonOption,  cmd);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(properties,  blockAtNonOption,  cmd);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(properties,  blockAtNonOption,  cmd);	  handleArgument(properties,    blockAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
181	[BUG]  [BUGGY]  if(cmd!=  null)  {  handleRequiredOptions(properties,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(cmd!=  null)  {  handleRequiredOptions(properties,  stopAtNonOption);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(cmd!=  null)  {  handleRequiredOptions(properties,  stopAtNonOption);  }	  if(cmd    ==    null)    {    handleRequiredOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
182	[BUG]  [BUGGY]  handleArgument(cmd,  property);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(cmd,  property);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(cmd,  property);	  handleArgument(properties,    cmd);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
183	[BUG]  [BUGGY]  handleArgument(options,  cmd);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(options,  cmd);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(options,  cmd);	  handleArgument(properties,    cmd);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
184	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(argument);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.getOption(argument);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.getOption(argument);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
185	[BUG]  [BUGGY]  handleArgumentOpts(currentToken);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgumentOpts(currentToken);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgumentOpts(currentToken);	  handleArgumentOpts(cmd);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
186	[BUG]  [BUGGY]  handleOption(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOption(options,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOption(options,  stopAtNonOption);	  handleOption(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
187	[BUG]  [BUGGY]  if(stopAtNonOption)handleOption(properties,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)handleOption(properties,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)handleOption(properties,  stopAtNonOption);	  handleOption(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
188	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(arguments[0]);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.parse(arguments[0]);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.parse(arguments[0]);	  Option    cmd    =    options.parse(arguments[currentOption]);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
189	[BUG]  [BUGGY]  handleArguments(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArguments(options,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArguments(options,  stopAtNonOption);	  handleArguments(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
190	[BUG]  [BUGGY]  handleOption(currentToken);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOption(currentToken);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOption(currentToken);	  handleOption(defaultOption);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
191	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleOption(defaultOption);  }  else  {  defaultOption  =  null;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleOption(defaultOption);  }  else  {  defaultOption  =  null;  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleOption(defaultOption);  }  else  {  defaultOption  =  null;  }	  handleOption(defaultOption);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
192	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.getOption(currentToken,  stopAtNonOption,  expectedOpts);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.getOption(currentToken,  stopAtNonOption,  expectedOpts);	  Option    cmd    =    options.getOption(currentToken,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
193	[BUG]  [BUGGY]  options.handleRequiredOptions(properties);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  options.handleRequiredOptions(properties);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	options.handleRequiredOptions(properties);	  if(cmd!=    null)    {    handleRequiredOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
194	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(true,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  group  =  options.getOptionGroup(true,  stopAtNonOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  group  =  options.getOptionGroup(true,  stopAtNonOption);	  Option    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
195	[BUG]  [BUGGY]  handleArgument(argument);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(argument);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(argument);	  handleArgument(cmd);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
196	[BUG]  [BUGGY]  handleArgument(cmd,  arguments);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(cmd,  arguments);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(cmd,  arguments);	  handleArgument(cmd,    properties);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
197	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.getOption(stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.getOption(stopAtNonOption);	  if(cmd!=    null)    {    handleProperties(properties,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
198	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.parseOption(argument,  stopAtNonOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.parseOption(argument,  stopAtNonOption);	  Option    cmd    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
199	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  OptionGroup  group  =  options.getGroup(argument,  stopAtNonOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	OptionGroup  group  =  options.getGroup(argument,  stopAtNonOption);	  OptionGroup    group    =    options.getGroup(argument);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
200	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleArgument(arguments);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleArgument(arguments);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleArgument(arguments);  }	  handleArgument(arguments);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
201	[BUG]  [BUGGY]  handleArg(arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArg(arguments,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArg(arguments,  stopAtNonOption);	  handleArgument(arguments);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
202	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(defaultToken);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(defaultToken);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	OptionGroup  group  =  options.getOptionGroup(defaultToken);	  OptionGroup    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
203	[BUG]  [BUGGY]  handleOption(options,  properties);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOption(options,  properties);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOption(options,  properties);	  handleOption(cmd,    properties);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
204	[BUG]  [BUGGY]  Option  cmd  =  optionGroup.parse(options);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  optionGroup.parse(options);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  optionGroup.parse(options);	  Option    cmd    =    currentOption.parse(options);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
205	[BUG]  [BUGGY]  if(cmd  ==  null)  {  handleOptions(properties);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(cmd  ==  null)  {  handleOptions(properties);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(cmd  ==  null)  {  handleOptions(properties);  }	  if(cmd    ==    null)    {    handleProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
206	[BUG]  [BUGGY]  if(cmd!=  null)  {  handleOptions(properties);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(cmd!=  null)  {  handleOptions(properties);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(cmd!=  null)  {  handleOptions(properties);  }	  if(cmd    ==    null)    {    handleProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
207	[BUG]  [BUGGY]  handleOptions(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOptions(options,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOptions(options,  stopAtNonOption);	  handleOptions(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
208	[BUG]  [BUGGY]  handleArgument(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(options,  stopAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(options,  stopAtNonOption);	  handleArgument(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
209	[BUG]  [BUGGY]  handleOption(properties,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOption(properties,  blockAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOption(properties,  blockAtNonOption);	  handleOption(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
210	[BUG]  [BUGGY]  handleOption(properties,  options);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOption(properties,  options);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOption(properties,  options);	  handleOption(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
211	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getGroup(argument);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  OptionGroup  currentOption  =  options.getGroup(argument);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	OptionGroup  currentOption  =  options.getGroup(argument);	  OptionGroup    group    =    options.getGroup(currentOption);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
212	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseValue(currentToken);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.parseValue(currentToken);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.parseValue(currentToken);	  Option    cmd    =    currentOption.parse(currentToken);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
213	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.parse();  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.parse();	  Option    cmd    =    currentOption.parse(currentToken);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
214	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(argument,  block);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  currentOption  =  options.getOption(argument,  block);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  currentOption  =  options.getOption(argument,  block);	  Option    currentOption    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
215	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(cmd);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  group  =  options.getOptionGroup(cmd);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  group  =  options.getOptionGroup(cmd);	  Option    group    =    options.getOptionGroup(defaultToken);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
216	[BUG]  [BUGGY]  if(options!=  null)  {  handleArgumentOpts(options);  }  else  {  expectedOpts.add(options);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(options!=  null)  {  handleArgumentOpts(options);  }  else  {  expectedOpts.add(options);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(options!=  null)  {  handleArgumentOpts(options);  }  else  {  expectedOpts.add(options);  }	  handleArgumentOpts(options);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
217	[BUG]  [BUGGY]  if(cmd!=  null)  {  handleProperties(properties,  blockAtNonOption);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(cmd!=  null)  {  handleProperties(properties,  blockAtNonOption);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(cmd!=  null)  {  handleProperties(properties,  blockAtNonOption);  }	  if(cmd!=    null)    {    handleProperties(properties,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
218	[BUG]  [BUGGY]  if(cmd!=  null)  {  handleProperties(properties,  stopAtNonOption,  expectedOpts);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(cmd!=  null)  {  handleProperties(properties,  stopAtNonOption,  expectedOpts);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(cmd!=  null)  {  handleProperties(properties,  stopAtNonOption,  expectedOpts);  }	  if(cmd!=    null)    {    handleProperties(properties,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
219	[BUG]  [BUGGY]  handleOptions(properties,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOptions(properties,  blockAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOptions(properties,  blockAtNonOption);	  handleOptions(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
220	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  preferredOpts);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.getOption(currentToken,  preferredOpts);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.getOption(currentToken,  preferredOpts);	  Option    cmd    =    options.getOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
221	[BUG]  [BUGGY]  Options  cmd  =  options.getOptionCmd();  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Options  cmd  =  options.getOptionCmd();  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Options  cmd  =  options.getOptionCmd();	  Options    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
222	[BUG]  [BUGGY]  handleArguments(properties,  expectedOpts,  currentOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArguments(properties,  expectedOpts,  currentOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArguments(properties,  expectedOpts,  currentOption);	  handleArguments(properties,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
223	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  handleOptions(options);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(!stopAtNonOption)  {  handleOptions(options);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(!stopAtNonOption)  {  handleOptions(options);  }	  handleOptions(options);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
224	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  handleOptions(options);  }  else  {  expectedOpts.add(options);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(!stopAtNonOption)  {  handleOptions(options);  }  else  {  expectedOpts.add(options);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(!stopAtNonOption)  {  handleOptions(options);  }  else  {  expectedOpts.add(options);  }	  handleOptions(options);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
225	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  handleOptions(options);  }  else  {  expectedOpts.addAll(options);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(!stopAtNonOption)  {  handleOptions(options);  }  else  {  expectedOpts.addAll(options);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(!stopAtNonOption)  {  handleOptions(options);  }  else  {  expectedOpts.addAll(options);  }	  handleOptions(options);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
226	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(true,  null);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  group  =  options.getOptionGroup(true,  null);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  group  =  options.getOptionGroup(true,  null);	  Option    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
227	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(null);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  group  =  options.getOptionGroup(null);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  group  =  options.getOptionGroup(null);	  Option    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
228	[BUG]  [BUGGY]  handleArgument(properties,  expectedOpts,  currentOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(properties,  expectedOpts,  currentOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(properties,  expectedOpts,  currentOption);	  handleArgument(properties,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
229	[BUG]  [BUGGY]  &&  cmd!=  null)  {  handleProperties(properties);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  &&  cmd!=  null)  {  handleProperties(properties);  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	&&  cmd!=  null)  {  handleProperties(properties);  }	  ||    cmd!=    null)    {    handleProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
230	[BUG]  [BUGGY]  handleArgumentOpts(properties,  expectedOpts,  currentToken);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgumentOpts(properties,  expectedOpts,  currentToken);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgumentOpts(properties,  expectedOpts,  currentToken);	  handleArgumentOpts(properties,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
231	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  group);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  group);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.parseOption(argument,  group);	  Option    cmd    =    currentOption.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
232	[BUG]  [BUGGY]  handleArguments(properties,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArguments(properties,  blockAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArguments(properties,  blockAtNonOption);	  handleArguments(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
233	[BUG]  [BUGGY]  handleArgumentOpts(cmd,  currentToken);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgumentOpts(cmd,  currentToken);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgumentOpts(cmd,  currentToken);	  handleArgumentOpts(cmd);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
234	[BUG]  [BUGGY]  handleArgument(properties,  block);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(properties,  block);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(properties,  block);	  handleArgument(properties,    cmd);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
235	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(currentToken,  preferredOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.parseOption(currentToken,  preferredOpts);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.parseOption(currentToken,  preferredOpts);	  Option    cmd    =    options.parseOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
236	[BUG]  [BUGGY]  handleOption(cmd,  currentToken,  properties);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOption(cmd,  currentToken,  properties);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOption(cmd,  currentToken,  properties);	  handleOption(cmd,    properties);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
237	[BUG]  [BUGGY]  Option  cmd  =  options.parse(arguments[currentOption],  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.parse(arguments[currentOption],  stopAtNonOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.parse(arguments[currentOption],  stopAtNonOption);	  Option    cmd    =    options.parse(arguments[currentOption]);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
238	[BUG]  [BUGGY]  handleArgument(properties,  blockAtNonOption,  group);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(properties,  blockAtNonOption,  group);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(properties,  blockAtNonOption,  group);	  handleArgument(properties,    blockAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
239	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(argument.toString());  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  OptionGroup  group  =  options.getGroup(argument.toString());  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	OptionGroup  group  =  options.getGroup(argument.toString());	  OptionGroup    group    =    options.getGroup(argument);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
240	[BUG]  [BUGGY]  handleArgument(cmd,  currentToken);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(cmd,  currentToken);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(cmd,  currentToken);	  handleArgument(cmd);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
241	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleOption(options);  }  else  {  expectedOpts  =  new  ArrayList  <  Option>();  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  if(stopAtNonOption)  {  handleOption(options);  }  else  {  expectedOpts  =  new  ArrayList  <  Option>();  }  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	if(stopAtNonOption)  {  handleOption(options);  }  else  {  expectedOpts  =  new  ArrayList  <  Option>();  }	  handleOption(options);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
242	[BUG]  [BUGGY]  handleOption(defaultOption,  cmd);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleOption(defaultOption,  cmd);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleOption(defaultOption,  cmd);	  handleOption(defaultOption);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
243	[BUG]  [BUGGY]  handleArgument(defaultOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(defaultOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(defaultOption);	  handleOption(defaultOption);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
244	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(argument,  block);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.parse(argument,  block);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.parse(argument,  block);	  Option    cmd    =    currentOption.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
245	[BUG]  [BUGGY]  handleArgument(arguments,  currentToken);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgument(arguments,  currentToken);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgument(arguments,  currentToken);	  handleArgument(arguments);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
246	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(options,  group);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.getOption(options,  group);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.getOption(options,  group);	  Option    cmd    =    currentOption.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
247	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(options,  options);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  currentOption.getOption(options,  options);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  currentOption.getOption(options,  options);	  Option    cmd    =    currentOption.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
248	[BUG]  [BUGGY]  handleArgumentOpts(properties,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  handleArgumentOpts(properties,  blockAtNonOption);  [BUGGY]        checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	handleArgumentOpts(properties,  blockAtNonOption);	  handleArgumentOpts(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
249	[BUG]  [BUGGY]  Option  group  =  options.getArgumentGroup();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  group  =  options.getArgumentGroup();  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  group  =  options.getArgumentGroup();	  Option    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
250	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.getOption(argument,  blockAtNonOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.getOption(argument,  blockAtNonOption);	  Option    cmd    =    options.getOption(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
251	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  this.stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();        [BUGGY]  Option  cmd  =  options.getOption(argument,  this.stopAtNonOption);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	128	128	1	replace	Option  cmd  =  options.getOption(argument,  this.stopAtNonOption);	  Option    cmd    =    options.getOption(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
