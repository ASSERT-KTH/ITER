bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    if(options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
2	[BUG]  [BUGGY]    if(options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    if(options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
3	[BUG]  [BUGGY]    if(options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    if(options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
4	[BUG]  [BUGGY]    if(options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    if(options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
5	[BUG]  [BUGGY]    if(options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    if(options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
6	[BUG]  [BUGGY]  else  if(getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if(getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
7	[BUG]  [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
8	[BUG]  [BUGGY]  else  if(getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if(getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
9	[BUG]  [BUGGY]    if(options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    if(options.getMatchingOptions(t).isEmpty())  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
10	[BUG]  [BUGGY]  else  if(getPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if(getPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(getPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
11	[BUG]  [BUGGY]  else  if(t!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if(t!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(t!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
12	[BUG]  [BUGGY]    if(t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    if(t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
13	[BUG]  [BUGGY]    if(t  ==  null  ||!t.equals( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(t  ==  null  ||!t.equals( "- "))  {  return  true;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    if(t  ==  null  ||!t.equals( "- "))  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
14	[BUG]  [BUGGY]    if(t!=  null)  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(t!=  null)  {  expectedOpts.add(t);  return  true;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    if(t!=  null)  {  expectedOpts.add(t);  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
15	[BUG]  [BUGGY]    if(t!=  null)  {  expectedOpts.add(t);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(t!=  null)  {  expectedOpts.add(t);  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    if(t!=  null)  {  expectedOpts.add(t);  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
16	[BUG]  [BUGGY]    if(t.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(t.startsWith( "- "))  {  return  true;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    if(t.startsWith( "- "))  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
