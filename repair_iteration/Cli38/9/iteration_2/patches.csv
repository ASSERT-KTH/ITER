bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  t  =  options.getMatchingOptions(t);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  t  =  options.getMatchingOptions(t);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	t  =  options.getMatchingOptions(t);	  t    =    expectedOpts.get(t);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
2	[BUG]  [BUGGY]  t  =  expectedOpts.get(pos);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  t  =  expectedOpts.get(pos);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	t  =  expectedOpts.get(pos);	  t    =    expectedOpts.get(t);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
3	[BUG]  [BUGGY]  t  =  options.getMatchingOption(t);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  t  =  options.getMatchingOption(t);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	t  =  options.getMatchingOption(t);	  t    =    expectedOpts.get(t);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
4	[BUG]  [BUGGY]  ||  expectedOpts!=  null  &&!expectedOpts.contains(t))  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  expectedOpts!=  null  &&!expectedOpts.contains(t))  {  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  expectedOpts!=  null  &&!expectedOpts.contains(t))  {	  ||    expectedOpts!=    null    ||!expectedOpts.contains(t))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
5	[BUG]  [BUGGY]  else  if(t!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(t!=  null  &&!token.startsWith( "-- "))  {	  else    if(token!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
6	[BUG]  [BUGGY]  else  if(token!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(token!=  null  &&!token.startsWith( "- "))  {	  else    if(token!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
7	[BUG]  [BUGGY]  Option  options  =  options.getOptions(t,  pos);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  options  =  options.getOptions(t,  pos);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  options  =  options.getOptions(t,  pos);	  Option    options    =    options.getOptions(t);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
8	[BUG]  [BUGGY]  Option  options  =  options.getOptions(t,  value);  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  options  =  options.getOptions(t,  value);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  options  =  options.getOptions(t,  value);	  Option    options    =    options.getOptions(t);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
9	[BUG]  [BUGGY]  Option  options  =  options.getOptions(t,  token);  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  options  =  options.getOptions(t,  token);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  options  =  options.getOptions(t,  token);	  Option    options    =    options.getOptions(t);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
10	[BUG]  [BUGGY]  if(t!=  null  &&!t.equals( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null  &&!t.equals( "- "))  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&!t.equals( "- "))  {  return  false;  }	  if(t    ==    null    &&!t.equals(   "-       "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
11	[BUG]  [BUGGY]  ||  t.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  t.startsWith( "- "))  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  t.startsWith( "- "))  {  return  false;  }	  ||    t.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
12	[BUG]  [BUGGY]  ||  token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  token.startsWith( "- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  token.startsWith( "- "))  {  return  true;  }	  ||    t.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
13	[BUG]  [BUGGY]  else  if(getPrefix(t)!=  null  &&!token.equals( "- "))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(getPrefix(t)!=  null  &&!token.equals( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(getPrefix(t)!=  null  &&!token.equals( "- "))  {	  else    if(getPrefix(t)!=    null    &&!token.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
14	[BUG]  [BUGGY]  else  if(getPrefix(t)  ==  null  &&!token.equals( "-- "))  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(getPrefix(t)  ==  null  &&!token.equals( "-- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(getPrefix(t)  ==  null  &&!token.equals( "-- "))  {	  else    if(getPrefix(t)!=    null    &&!token.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
15	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(t,  token);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  option  =  options.getOption(t,  token);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  value);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(t,  value);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  option  =  options.getOption(t,  value);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  pos);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(t,  pos);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  option  =  options.getOption(t,  pos);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	  if(options.getMatchingOptions(t)!=    null    &&!options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
19	[BUG]  [BUGGY]  if(expectedOpts!=  null)  {  if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(expectedOpts!=  null)  {  if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(expectedOpts!=  null)  {  if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();	  if(options.getMatchingOptions(t)!=    null    &&!options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
20	[BUG]  [BUGGY]  if(expectedOpts!=  null)  {  if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(expectedOpts!=  null)  {  if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(expectedOpts!=  null)  {  if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	  if(options.getMatchingOptions(t)!=    null    &&!options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
21	[BUG]  [BUGGY]  else  if(t!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(t!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {	  else    if(token!=    null    &&    getLongPrefix(t)!=    null    &&!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
22	[BUG]  [BUGGY]  Option  option  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(token);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  option  =  options.getOption(token);	  Option    option    =    options.getOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
23	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentToken);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(currentToken);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  option  =  options.getOption(currentToken);	  Option    option    =    options.getOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
24	[BUG]  [BUGGY]  option  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  option  =  options.getOption(t);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	option  =  options.getOption(t);	  Option    option    =    options.getOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
25	[BUG]  [BUGGY]  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  throw  new  IllegalArgumentException( " ");  }	  if(token.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
26	[BUG]  [BUGGY]  ||!token.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||!token.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||!token.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }	  ||    token.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
27	[BUG]  [BUGGY]  ||  token.startsWith(t))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  token.startsWith(t))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  token.startsWith(t))  {  throw  new  IllegalArgumentException( " ");  }	  ||    token.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
28	[BUG]  [BUGGY]  options.getMatchingOption(t).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOption(t).isEmpty())  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOption(t).isEmpty())  {  return  false;  }	  options.getMatchingOptions(t).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
29	[BUG]  [BUGGY]  ||  options.getMatchingOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getMatchingOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getMatchingOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    false;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
30	[BUG]  [BUGGY]  ||  options.getOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    false;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
31	[BUG]  [BUGGY]  if(t!=  null  &&!t.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null  &&!t.startsWith( "- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&!t.startsWith( "- "))  {  return  true;  }	  if(t!=    null    &&!t.equals(   "-       "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
32	[BUG]  [BUGGY]  AssertionError.error(t,  pos)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  AssertionError.error(t,  pos)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	AssertionError.error(t,  pos)  {  throw  new  IllegalArgumentException( " ");  }	  aught(t,    pos)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
33	[BUG]  [BUGGY]  AssertionError.warning(t,  pos)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  AssertionError.warning(t,  pos)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	AssertionError.warning(t,  pos)  {  throw  new  IllegalArgumentException( " ");  }	  aught(t,    pos)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
34	[BUG]  [BUGGY]  aught(pos,  t)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  aught(pos,  t)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	aught(pos,  t)  {  throw  new  IllegalArgumentException( " ");  }	  aught(t,    pos)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
35	[BUG]  [BUGGY]  ||  token.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ",  pos);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  token.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ",  pos);  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  token.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ",  pos);  }	  ||    t.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ",    pos);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
36	[BUG]  [BUGGY]  ||  t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " "  +  t,  pos);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " "  +  t,  pos);  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " "  +  t,  pos);  }	  ||    t.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ",    pos);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
37	[BUG]  [BUGGY]  Option  cmd  =  options.getMatchingOption(t,  token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getMatchingOption(t,  token);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  cmd  =  options.getMatchingOption(t,  token);	  Option    cmd    =    options.getMatchingOption(t);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
38	[BUG]  [BUGGY]  Option  cmd  =  options.getMatchingOption(t,  value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getMatchingOption(t,  value);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  cmd  =  options.getMatchingOption(t,  value);	  Option    cmd    =    options.getMatchingOption(t);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
39	[BUG]  [BUGGY]  Option  cmd  =  options.getMatchingOption(t,  pos);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getMatchingOption(t,  pos);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  cmd  =  options.getMatchingOption(t,  pos);	  Option    cmd    =    options.getMatchingOption(t);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  ||  expectedOpts!=  null  &&!expectedOpts.contains(t);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  expectedOpts!=  null  &&!expectedOpts.contains(t);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  expectedOpts!=  null  &&!expectedOpts.contains(t);	  ||    expectedOpts!=    null    ||!expectedOpts.contains(t);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
41	[BUG]  [BUGGY]  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
42	[BUG]  [BUGGY]  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
43	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)  ==  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t)  ==  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)  ==  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
44	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }	  if(options.getLongPrefix(t)!=    null    &&!token.startsWith(   "--       "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
45	[BUG]  [BUGGY]  ||  options.getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }	  if(options.getLongPrefix(t)!=    null    &&!token.startsWith(   "--       "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
46	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty())  {  if(token!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t).isEmpty())  {  if(token!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t).isEmpty())  {  if(token!=  null  &&!token.startsWith( "-- "))  {  return  true;  }	  if(options.getLongPrefix(t)!=    null    &&!token.startsWith(   "--       "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
47	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOption(t,  pos);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  expectedOpts  =  options.getOption(t,  pos);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  expectedOpts  =  options.getOption(t,  pos);	  Option    expectedOpts    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
48	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOption(t,  token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  expectedOpts  =  options.getOption(t,  token);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  expectedOpts  =  options.getOption(t,  token);	  Option    expectedOpts    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
49	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOption(t,  value);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  expectedOpts  =  options.getOption(t,  value);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  expectedOpts  =  options.getOption(t,  value);	  Option    expectedOpts    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
50	[BUG]  [BUGGY]  else  if(getLongPrefix(t)  ==  null  ||!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(getLongPrefix(t)  ==  null  ||!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(getLongPrefix(t)  ==  null  ||!token.startsWith( "- "))  {	  else    if(getLongPrefix(t)    ==    null    &&!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
51	[BUG]  [BUGGY]  else  if(token  ==  null  &&  getLongPrefix(t)  ==  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(token  ==  null  &&  getLongPrefix(t)  ==  null  &&!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(token  ==  null  &&  getLongPrefix(t)  ==  null  &&!token.startsWith( "- "))  {	  else    if(getLongPrefix(t)    ==    null    &&!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
52	[BUG]  [BUGGY]  if(t!=  null  ||!t.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null  ||!t.startsWith( "- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  ||!t.startsWith( "- "))  {  return  true;  }	  if(t    ==    null    ||!t.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
53	[BUG]  [BUGGY]  if(t  ==  null  &&!t.startsWith( "-   "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t  ==  null  &&!t.startsWith( "-   "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t  ==  null  &&!t.startsWith( "-   "))  {  return  true;  }	  if(t    ==    null    ||!t.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
54	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	  if(options.getMatchingOptions(t).isEmpty()    ||    expectedOpts.size()    >    0)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
55	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  <  2)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  <  2)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  <  2)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }	  if(options.getMatchingOptions(t).isEmpty()    ||    expectedOpts.length    >    0)    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
56	[BUG]  [BUGGY]  options.getMatchingOption(t).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOption(t).isEmpty())  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOption(t).isEmpty())  {  return  true;  }	  options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
57	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty())  {  if(optName!=  null)  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t).isEmpty())  {  if(optName!=  null)  {  expectedOpts.add(t);  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t).isEmpty())  {  if(optName!=  null)  {  expectedOpts.add(t);  return  true;  }	  if(optName!=    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
58	[BUG]  [BUGGY]  if(options!=  null)  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options!=  null)  {  expectedOpts.add(t);  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options!=  null)  {  expectedOpts.add(t);  return  true;  }	  if(optName!=    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
59	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  expectedOpts.add(t);  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)!=  null)  {  expectedOpts.add(t);  return  true;  }	  if(optName!=    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
60	[BUG]  [BUGGY]  t  =  expectedOpts.indexOf(t)+  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  t  =  expectedOpts.indexOf(t)+  1;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	t  =  expectedOpts.indexOf(t)+  1;	  t    =    expectedOpts.indexOf(t);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
61	[BUG]  [BUGGY]  t  =  options.indexOf(t);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  t  =  options.indexOf(t);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	t  =  options.indexOf(t);	  t    =    expectedOpts.indexOf(t);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
62	[BUG]  [BUGGY]  t  =  expectedOpts.indexOf(t  +  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  t  =  expectedOpts.indexOf(t  +  1);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	t  =  expectedOpts.indexOf(t  +  1);	  t    =    expectedOpts.indexOf(t);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
63	[BUG]  [BUGGY]  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-   "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-   "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(getLongPrefix(token)!=  null  &&!token.startsWith( "-   "))  {  return  true;  }	  if(token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
64	[BUG]  [BUGGY]  if(t!=  null  ||!t.startsWith( "- "))  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null  ||!t.startsWith( "- "))  {  expectedOpts.add(t);  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  ||!t.startsWith( "- "))  {  expectedOpts.add(t);  return  true;  }	  if(t!=    null    &&!t.startsWith(   "-   "))    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
65	[BUG]  [BUGGY]  if(t!=  null  &&!t.startsWith( "- "))  {  expectedOpts.add(t);  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null  &&!t.startsWith( "- "))  {  expectedOpts.add(t);  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&!t.startsWith( "- "))  {  expectedOpts.add(t);  return  false;  }	  if(t!=    null    &&!t.startsWith(   "-   "))    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
66	[BUG]  [BUGGY]  While(t.startsWith( "- ")||  t.startsWith( "-- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  While(t.startsWith( "- ")||  t.startsWith( "-- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	While(t.startsWith( "- ")||  t.startsWith( "-- "))  {  throw  new  IllegalArgumentException( " ");  }	  While(t.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
67	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)  ==  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t)  ==  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)  ==  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
68	[BUG]  [BUGGY]  if(token!=  null  &&!token.startsWith( "- "))  {  expectedOpts.add(t);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(token!=  null  &&!token.startsWith( "- "))  {  expectedOpts.add(t);  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(token!=  null  &&!token.startsWith( "- "))  {  expectedOpts.add(t);  }	  if(t!=    null    &&!token.startsWith(   "-   "))    {    expectedOpts.add(t);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
69	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty()  &&  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t).isEmpty()  &&  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty()  &&  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true	  options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
70	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  token.length;  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  token.length;  pos++)  {  return  true  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  token.length;  pos++)  {  return  true	  options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
71	[BUG]  [BUGGY]  else  if(getLongPrefix(t)  ==  null  ||!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(getLongPrefix(t)  ==  null  ||!token.startsWith( "-- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(getLongPrefix(t)  ==  null  ||!token.startsWith( "-- "))  {	  else    if(getLongPrefix(t)    ==    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
72	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;	  options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
73	[BUG]  [BUGGY]  ||  expectedOpts.isEmpty())  {  for(int  pos  =  0;  pos  <  options.size();  pos++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  expectedOpts.isEmpty())  {  for(int  pos  =  0;  pos  <  options.size();  pos++)  {  continue;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  expectedOpts.isEmpty())  {  for(int  pos  =  0;  pos  <  options.size();  pos++)  {  continue;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
74	[BUG]  [BUGGY]  ||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
75	[BUG]  [BUGGY]  ||  expectedOpts.size()  ==  pos)  {  for(int  pos  =  0;  pos  <  options.getMatchingOptions().size();  pos++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  expectedOpts.size()  ==  pos)  {  for(int  pos  =  0;  pos  <  options.getMatchingOptions().size();  pos++)  {  continue;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  expectedOpts.size()  ==  pos)  {  for(int  pos  =  0;  pos  <  options.getMatchingOptions().size();  pos++)  {  continue;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
76	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty()  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t).isEmpty()  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty()  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	  options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
77	[BUG]  [BUGGY]  options.getMatchingOptions(t).isNullOrEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t).isNullOrEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isNullOrEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	  options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
78	[BUG]  [BUGGY]  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
79	[BUG]  [BUGGY]  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
80	[BUG]  [BUGGY]  ||  expectedOpts.isEmpty())  {  for(int  pos  =  0;  pos  <  options.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  expectedOpts.isEmpty())  {  for(int  pos  =  0;  pos  <  options.size();  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  expectedOpts.isEmpty())  {  for(int  pos  =  0;  pos  <  options.size();  pos++)  {  return  false;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
81	[BUG]  [BUGGY]  ||  expectedOpts.size()  ==  pos)  {  for(int  pos  =  0;  pos  <  options.getMatchingOptions().size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  expectedOpts.size()  ==  pos)  {  for(int  pos  =  0;  pos  <  options.getMatchingOptions().size();  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  expectedOpts.size()  ==  pos)  {  for(int  pos  =  0;  pos  <  options.getMatchingOptions().size();  pos++)  {  return  false;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
82	[BUG]  [BUGGY]  ||  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  options.getMatchingOptions(t).isEmpty())  {  return  false;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
83	[BUG]  [BUGGY]  if(token!=  null  &&!token.equals( "- "))  {  expectedOpts.add(t);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(token!=  null  &&!token.equals( "- "))  {  expectedOpts.add(t);  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(token!=  null  &&!token.equals( "- "))  {  expectedOpts.add(t);  }	  if(t!=    null    &&!token.equals(   "-   "))    {    expectedOpts.add(t);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
84	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty()  &&  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t).isEmpty()  &&  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty()  &&  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }	  options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
85	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  token.length;  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  token.length;  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  token.length;  pos++)  {  return  true;  }	  options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
86	[BUG]  [BUGGY]  else  if(t!=  null  &&  getLongPrefix(t)!=  null  &&!token.equals( "- "))  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t!=  null  &&  getLongPrefix(t)!=  null  &&!token.equals( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(t!=  null  &&  getLongPrefix(t)!=  null  &&!token.equals( "- "))  {	  else    if(t!=    null    &&    getLongPrefix(t)!=    null    &&!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
87	[BUG]  [BUGGY]  else  if(t!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(t!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	  else    if(token!=    null    &&    getPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
88	[BUG]  [BUGGY]  else  if(token!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(token!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "- "))  {	  else    if(token!=    null    &&    getPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
89	[BUG]  [BUGGY]  Option  options  =  options.getMatchingOption(t,  pos);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  options  =  options.getMatchingOption(t,  pos);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  options  =  options.getMatchingOption(t,  pos);	  Option    options    =    options.getMatchingOption(t);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
90	[BUG]  [BUGGY]  Option  options  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  options  =  options.getOption(t);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  options  =  options.getOption(t);	  Option    options    =    options.getMatchingOption(t);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
91	[BUG]  [BUGGY]  Option  expectedOpt  =  options.getMatchingOption(t,  pos);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  expectedOpt  =  options.getMatchingOption(t,  pos);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  expectedOpt  =  options.getMatchingOption(t,  pos);	  Option    expectedOpt    =    options.getMatchingOption(t);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
92	[BUG]  [BUGGY]  Option  expectedOpt  =  options.getMatchingOption(t,  token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  expectedOpt  =  options.getMatchingOption(t,  token);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  expectedOpt  =  options.getMatchingOption(t,  token);	  Option    expectedOpt    =    options.getMatchingOption(t);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
93	[BUG]  [BUGGY]  Option  expectedOpt  =  options.getMatchingOption(t,  value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  expectedOpt  =  options.getMatchingOption(t,  value);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  expectedOpt  =  options.getMatchingOption(t,  value);	  Option    expectedOpt    =    options.getMatchingOption(t);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
94	[BUG]  [BUGGY]  if(token!=  null  &&!token.startsWith( "- "))  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(token!=  null  &&!token.startsWith( "- "))  {  expectedOpts.add(t);  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(token!=  null  &&!token.startsWith( "- "))  {  expectedOpts.add(t);  return  true;  }	  if(t!=    null    &&!token.startsWith(   "-   "))    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
95	[BUG]  [BUGGY]  if(token!=  null  ||!token.startsWith( "- "))  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(token!=  null  ||!token.startsWith( "- "))  {  expectedOpts.add(t);  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(token!=  null  ||!token.startsWith( "- "))  {  expectedOpts.add(t);  return  true;  }	  if(t!=    null    &&!token.startsWith(   "-   "))    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
96	[BUG]  [BUGGY]  ||  t.startsWith( "--))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  t.startsWith( "--))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  t.startsWith( "--))  {  return  true;  }	  if(t.startsWith(   "-   ")||    t.startsWith(   "--))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
97	[BUG]  [BUGGY]  if(t.startsWith( "- ")&&  t.startsWith( "--))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t.startsWith( "- ")&&  t.startsWith( "--))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t.startsWith( "- ")&&  t.startsWith( "--))  {  return  true;  }	  if(t.startsWith(   "-   ")||    t.startsWith(   "--))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
98	[BUG]  [BUGGY]  ||  t.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  t.startsWith( "-- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  t.startsWith( "-- "))  {  return  true;  }	  if(t.startsWith(   "-   ")||    t.startsWith(   "--))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
99	[BUG]  [BUGGY]  if(options.getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }	  if(options.getMatchingOptions(t).isEmpty())    {    if(t!=    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
100	[BUG]  [BUGGY]  ||  options.getMatchingOptions(t).isEmpty())  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getMatchingOptions(t).isEmpty())  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getMatchingOptions(t).isEmpty())  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }	  if(options.getMatchingOptions(t).isEmpty())    {    if(t!=    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
101	[BUG]  [BUGGY]  if(options.getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  if(t!=  null)  {  expectedOpts.add(t);  return  true  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  if(t!=  null)  {  expectedOpts.add(t);  return  true  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  if(t!=  null)  {  expectedOpts.add(t);  return  true	  if(options.getMatchingOptions(t).isEmpty())    {    if(t!=    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
102	[BUG]  [BUGGY]  else  if(getPrefix(t)  ==  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(getPrefix(t)  ==  null  &&!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(getPrefix(t)  ==  null  &&!token.startsWith( "- "))  {	  else    if(getPrefix(t)    ==    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
103	[BUG]  [BUGGY]  if(t.startsWith( "- ")&&  t.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t.startsWith( "- ")&&  t.startsWith( "- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t.startsWith( "- ")&&  t.startsWith( "- "))  {  return  true;  }	  if(t.startsWith(   "-   ")||    t.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
104	[BUG]  [BUGGY]  if(t.startsWith( "- ")||  t.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t.startsWith( "- ")||  t.startsWith( "- "))  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t.startsWith( "- ")||  t.startsWith( "- "))  {  return  false;  }	  if(t.startsWith(   "-   ")||    t.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
105	[BUG]  [BUGGY]  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }	  if(options.getMatchingOptions(t).isEmpty()    ||    expectedOpts.length    >    0)    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
106	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  <  2)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  <  2)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  <  2)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }	  if(options.getMatchingOptions(t).isEmpty()    ||    expectedOpts.length    >    0)    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
107	[BUG]  [BUGGY]  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
108	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)  ==  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t)  ==  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)  ==  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
109	[BUG]  [BUGGY]  else  if(token!=  null  &&  getOptionPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&  getOptionPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(token!=  null  &&  getOptionPrefix(t)!=  null  &&!token.startsWith( "- "))  {	  else    if(token!=    null    &&    getOptionPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
110	[BUG]  [BUGGY]  else  if(t!=  null  &&  getOptionPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t!=  null  &&  getOptionPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(t!=  null  &&  getOptionPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	  else    if(token!=    null    &&    getOptionPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
111	[BUG]  [BUGGY]  ||  expectedOpts.isEmpty())  {  for(int  pos  =  0;  pos  <  options.size();  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  expectedOpts.isEmpty())  {  for(int  pos  =  0;  pos  <  options.size();  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  expectedOpts.isEmpty())  {  for(int  pos  =  0;  pos  <  options.size();  pos++)  {  return  true;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
112	[BUG]  [BUGGY]  ||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
113	[BUG]  [BUGGY]  ||  expectedOpts.size()  ==  pos)  {  for(int  pos  =  0;  pos  <  options.getMatchingOptions().size();  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  expectedOpts.size()  ==  pos)  {  for(int  pos  =  0;  pos  <  options.getMatchingOptions().size();  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  expectedOpts.size()  ==  pos)  {  for(int  pos  =  0;  pos  <  options.getMatchingOptions().size();  pos++)  {  return  true;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
114	[BUG]  [BUGGY]  expectedOpts.add(t);  return  false;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  expectedOpts.add(t);  return  false;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	expectedOpts.add(t);  return  false;	  expectedOpts.add(t);    return    true;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
115	[BUG]  [BUGGY]  expectOpts.add(t);  return  false;  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  expectOpts.add(t);  return  false;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	expectOpts.add(t);  return  false;	  expectedOpts.add(t);    return    true;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
116	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)!=  null)  {  return  false;  }	  if(options.getMatchingOptions(t)!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
117	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t)  ==  null)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)  ==  null)  {  return  true;  }	  if(options.getMatchingOptions(t)!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
118	[BUG]  [BUGGY]  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }	  if(options.getMatchingOptions(t).isEmpty()    ||    expectedOpts.size()    >    0)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
119	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }	  if(options.getMatchingOptions(t).isEmpty()    ||    expectedOpts.size()    >    0)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
120	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty()  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t).isEmpty()  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty()  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }	  if(options.getMatchingOptions(t).isEmpty()    ||    expectedOpts.size()    >    0)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
121	[BUG]  [BUGGY]  else  if(t  ==  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t  ==  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(t  ==  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {	  else    if(t    ==    null    &&    getLongPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
122	[BUG]  [BUGGY]  else  if(t  ==  null  ||  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t  ==  null  ||  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(t  ==  null  ||  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	  else    if(t    ==    null    &&    getLongPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
123	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getMatchingOption(t,  pos);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  expectedOpts  =  options.getMatchingOption(t,  pos);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  expectedOpts  =  options.getMatchingOption(t,  pos);	  Option    expectedOpts    =    options.getMatchingOption(t);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
124	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getMatchingOption(t,  token);  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  expectedOpts  =  options.getMatchingOption(t,  token);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  expectedOpts  =  options.getMatchingOption(t,  token);	  Option    expectedOpts    =    options.getMatchingOption(t);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
125	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getMatchingOption(t,  value);  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  expectedOpts  =  options.getMatchingOption(t,  value);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  expectedOpts  =  options.getMatchingOption(t,  value);	  Option    expectedOpts    =    options.getMatchingOption(t);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
126	[BUG]  [BUGGY]  if(t!=  null  ||!t.equals( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null  ||!t.equals( "- "))  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  ||!t.equals( "- "))  {  return  false;  }	  if(t!=    null    ||!t.equals(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
127	[BUG]  [BUGGY]  ||  t.startsWith( "-- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  t.startsWith( "-- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  t.startsWith( "-- "))  {  throw  new  IllegalArgumentException( " ");  }	  if(t.startsWith(   "-   ")||    t.startsWith(   "--   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
128	[BUG]  [BUGGY]  if(t.startsWith( "- ")&&  t.startsWith( "-- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t.startsWith( "- ")&&  t.startsWith( "-- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t.startsWith( "- ")&&  t.startsWith( "-- "))  {  throw  new  IllegalArgumentException( " ");  }	  if(t.startsWith(   "-   ")||    t.startsWith(   "--   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
129	[BUG]  [BUGGY]  ||  token.startsWith( "-- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  token.startsWith( "-- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  token.startsWith( "-- "))  {  throw  new  IllegalArgumentException( " ");  }	  if(t.startsWith(   "-   ")||    t.startsWith(   "--   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
130	[BUG]  [BUGGY]  ||  expectedOpts.contains(t))  {  expectedOpts.add(t);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  expectedOpts.contains(t))  {  expectedOpts.add(t);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  expectedOpts.contains(t))  {  expectedOpts.add(t);	  if(t!=    null    &&    expectedOpts.contains(t))    {    expectedOpts.add(t);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
131	[BUG]  [BUGGY]  t  =  expectedOpts.contains(t);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  t  =  expectedOpts.contains(t);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	t  =  expectedOpts.contains(t);	  if(t!=    null    &&    expectedOpts.contains(t))    {    expectedOpts.add(t);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
132	[BUG]  [BUGGY]  options.getMatchingOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }	  options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
133	[BUG]  [BUGGY]  expectedOpts.add(t,  value);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  expectedOpts.add(t,  value);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	expectedOpts.add(t,  value);	  expectedOpts.add(t);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
134	[BUG]  [BUGGY]  expectedOpts.add(t,  pos);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  expectedOpts.add(t,  pos);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	expectedOpts.add(t,  pos);	  expectedOpts.add(t);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
135	[BUG]  [BUGGY]  expectedOpts.add(t  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  expectedOpts.add(t  +  1);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	expectedOpts.add(t  +  1);	  expectedOpts.add(t);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
136	[BUG]  [BUGGY]  aught(t,  pos,  true)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  aught(t,  pos,  true)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	aught(t,  pos,  true)  {  throw  new  IllegalArgumentException( " ");  }	  aught(t,    pos,    false)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
137	[BUG]  [BUGGY]  AssertionError.error(t,  pos,  false)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  AssertionError.error(t,  pos,  false)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	AssertionError.error(t,  pos,  false)  {  throw  new  IllegalArgumentException( " ");  }	  aught(t,    pos,    false)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
138	[BUG]  [BUGGY]  AssertionError.warning(t,  pos,  false)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  AssertionError.warning(t,  pos,  false)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	AssertionError.warning(t,  pos,  false)  {  throw  new  IllegalArgumentException( " ");  }	  aught(t,    pos,    false)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
139	[BUG]  [BUGGY]  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
140	[BUG]  [BUGGY]  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true	  if(options.getMatchingOptions(t)!=    null    &&!options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
141	[BUG]  [BUGGY]  if(options.getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true	  if(options.getMatchingOptions(t)!=    null    &&!options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
142	[BUG]  [BUGGY]  if(expectedOpts!=  null)  {  if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(expectedOpts!=  null)  {  if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(expectedOpts!=  null)  {  if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true	  if(options.getMatchingOptions(t)!=    null    &&!options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
143	[BUG]  [BUGGY]  if(t!=  null)  {  expectedOpts.remove(t);  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null)  {  expectedOpts.remove(t);  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null)  {  expectedOpts.remove(t);  return  false;  }	  if(t!=    null)    {    expectedOpts.add(t);    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
144	[BUG]  [BUGGY]  if(t!=  null)  {  expectedOpts.contains(t);  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null)  {  expectedOpts.contains(t);  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null)  {  expectedOpts.contains(t);  return  false;  }	  if(t!=    null)    {    expectedOpts.add(t);    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
145	[BUG]  [BUGGY]  Option  options  =  options.getMatchingOptions(t,  pos);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  options  =  options.getMatchingOptions(t,  pos);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  options  =  options.getMatchingOptions(t,  pos);	  Option    options    =    options.getMatchingOptions(t);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
146	[BUG]  [BUGGY]  Option  options  =  options.getMatchingOptions(t,  value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  options  =  options.getMatchingOptions(t,  value);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  options  =  options.getMatchingOptions(t,  value);	  Option    options    =    options.getMatchingOptions(t);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
147	[BUG]  [BUGGY]  ||  options.getMatchingOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getMatchingOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getMatchingOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
148	[BUG]  [BUGGY]  ||  options.getOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
149	[BUG]  [BUGGY]  ||  options.getLongPrefix(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getLongPrefix(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getLongPrefix(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
150	[BUG]  [BUGGY]  if(t!=  null  ||!t.equals( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null  ||!t.equals( "-- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  ||!t.equals( "-- "))  {  return  true;  }	  if(t!=    null    &&!t.equals(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
151	[BUG]  [BUGGY]  if(t!=  null  &&!t.equals( "-- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null  &&!t.equals( "-- "))  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&!t.equals( "-- "))  {  return  false;  }	  if(t!=    null    &&!t.equals(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
152	[BUG]  [BUGGY]  ||  options.getMatchingOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getMatchingOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getMatchingOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
153	[BUG]  [BUGGY]  ||  options.getOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
154	[BUG]  [BUGGY]  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {	  if(options.getMatchingOptions(t)!=    null    &&!options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
155	[BUG]  [BUGGY]  if(options.getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue	  if(options.getMatchingOptions(t)!=    null    &&!options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
156	[BUG]  [BUGGY]  options.getMatchingOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true	  options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
157	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty()  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t).isEmpty()  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty()  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true	  options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
158	[BUG]  [BUGGY]  if(t.startsWith( "- ")&&  t.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t.startsWith( "- ")&&  t.startsWith( "-- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t.startsWith( "- ")&&  t.startsWith( "-- "))  {  return  true;  }	  if(t.startsWith(   "-   ")||    t.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
159	[BUG]  [BUGGY]  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  return  true;  }	  if(t.startsWith(   "-   ")||    t.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
160	[BUG]  [BUGGY]  else  if(token  ==  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(token  ==  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(token  ==  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	  else    if(t    ==    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
161	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(t,  value);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  currentOption  =  options.getOption(t,  value);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  currentOption  =  options.getOption(t,  value);	  Option    currentOption    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
162	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(t,  token);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  currentOption  =  options.getOption(t,  token);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  currentOption  =  options.getOption(t,  token);	  Option    currentOption    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
163	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(t,  pos);  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  currentOption  =  options.getOption(t,  pos);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  currentOption  =  options.getOption(t,  pos);	  Option    currentOption    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
164	[BUG]  [BUGGY]  ||  options.getOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
165	[BUG]  [BUGGY]  if(t  ==  null)  {  expectedOpts.add(t);  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t  ==  null)  {  expectedOpts.add(t);  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t  ==  null)  {  expectedOpts.add(t);  return  false;  }	  if(t    ==    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
166	[BUG]  [BUGGY]  While(t!=  null  &&  token.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  While(t!=  null  &&  token.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	While(t!=  null  &&  token.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }	  While(t.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
167	[BUG]  [BUGGY]  ||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
168	[BUG]  [BUGGY]  ||  options.getOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
169	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	  if(options.getMatchingOptions(t).isEmpty()    ||    expectedOpts.size()    >    0)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
170	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)  ==  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t)  ==  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)  ==  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
171	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty())  {  aught(t,  pos,  false)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t).isEmpty())  {  aught(t,  pos,  false)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t).isEmpty())  {  aught(t,  pos,  false)  {  throw  new  IllegalArgumentException( " ");  }	  aught(t,    pos,    false)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
172	[BUG]  [BUGGY]  if(optName!=  null)  {  aught(t,  pos,  false)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(optName!=  null)  {  aught(t,  pos,  false)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(optName!=  null)  {  aught(t,  pos,  false)  {  throw  new  IllegalArgumentException( " ");  }	  aught(t,    pos,    false)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
173	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t).isEmpty())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t).isEmpty())  {  throw  new  IllegalArgumentException( " ");  }	  aught(t,    pos,    false)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
174	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty()  &&  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t).isEmpty()  &&  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty()  &&  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }	  if(options.getMatchingOptions(t).isEmpty()    ||    expectedOpts.length    >    0)    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
175	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  ==  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  ==  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  ==  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }	  if(options.getMatchingOptions(t).isEmpty()    ||    expectedOpts.length    >    0)    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
176	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }	  if(options.getMatchingOptions(t).isEmpty()    ||    expectedOpts.length    >    0)    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
177	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty())  {  if(t!=  null)  {  expectedOpts.add(t);  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t).isEmpty())  {  if(t!=  null)  {  expectedOpts.add(t);  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t).isEmpty())  {  if(t!=  null)  {  expectedOpts.add(t);  return  false;  }	  if(t!=    null)    {    expectedOpts.add(t);    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
178	[BUG]  [BUGGY]  if(optName!=  null)  {  expectedOpts.add(t);  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(optName!=  null)  {  expectedOpts.add(t);  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(optName!=  null)  {  expectedOpts.add(t);  return  false;  }	  if(t!=    null)    {    expectedOpts.add(t);    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
179	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  expectedOpts.add(t);  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  expectedOpts.add(t);  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)!=  null)  {  expectedOpts.add(t);  return  false;  }	  if(t!=    null)    {    expectedOpts.add(t);    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
180	[BUG]  [BUGGY]  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
181	[BUG]  [BUGGY]  options.getOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }	  options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
182	[BUG]  [BUGGY]  if(options.getLongPrefix(token)  ==  null  &&!options.getMatchingOptions(t).isEmpty())  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getLongPrefix(token)  ==  null  &&!options.getMatchingOptions(t).isEmpty())  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getLongPrefix(token)  ==  null  &&!options.getMatchingOptions(t).isEmpty())  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }	  if(options.getMatchingOptions(t).isEmpty())    {    if(t!=    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
183	[BUG]  [BUGGY]  if(options.getLongPrefix(token)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getLongPrefix(token)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getLongPrefix(token)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }	  if(options.getMatchingOptions(t).isEmpty())    {    if(t!=    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
184	[BUG]  [BUGGY]  ||!t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||!t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||!t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }	  ||    t.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
185	[BUG]  [BUGGY]  if(t.startsWith( "- ")||  t.endsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t.startsWith( "- ")||  t.endsWith( "-- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t.startsWith( "- ")||  t.endsWith( "-- "))  {  return  true;  }	  if(t.startsWith(   "-   ")||    t.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
186	[BUG]  [BUGGY]  ||  expectedOpts  ==  null  ||!expectedOpts.contains(t))  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  expectedOpts  ==  null  ||!expectedOpts.contains(t))  {  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  expectedOpts  ==  null  ||!expectedOpts.contains(t))  {	  ||    expectedOpts!=    null    ||!expectedOpts.contains(t))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
187	[BUG]  [BUGGY]  ||  options.getOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
188	[BUG]  [BUGGY]  ||!t.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||!t.startsWith( "- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||!t.startsWith( "- "))  {  return  true;  }	  if(t    ==    null    ||!t.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
189	[BUG]  [BUGGY]  ||  options.getOptions().isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getOptions().isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getOptions().isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
190	[BUG]  [BUGGY]  t  =  option.indexOf(t);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  t  =  option.indexOf(t);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	t  =  option.indexOf(t);	  t    =    expectedOpts.indexOf(t);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
191	[BUG]  [BUGGY]  options.getMatchingOptions(t)!=  null  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t)!=  null  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t)!=  null  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true	  options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
192	[BUG]  [BUGGY]  ||  options.getOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
193	[BUG]  [BUGGY]  ||  options.getOptions().isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getOptions().isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getOptions().isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
194	[BUG]  [BUGGY]  ||  options.getOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
195	[BUG]  [BUGGY]  if(options.getLongPrefix(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getLongPrefix(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getLongPrefix(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true	  if(options.getMatchingOptions(t)!=    null    &&!options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
196	[BUG]  [BUGGY]  if(token!=  null)  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(token!=  null)  {  expectedOpts.add(t);  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(token!=  null)  {  expectedOpts.add(t);  return  true;  }	  if(t!=    null    &&!token.startsWith(   "-   "))    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
197	[BUG]  [BUGGY]  ||  options.getOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
198	[BUG]  [BUGGY]  if(token.startsWith( "- ")||  token.startsWith( "--))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(token.startsWith( "- ")||  token.startsWith( "--))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(token.startsWith( "- ")||  token.startsWith( "--))  {  throw  new  IllegalArgumentException( " ");  }	  if(token.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
199	[BUG]  [BUGGY]  options.getOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true	  options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
200	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  if(options.getLongPrefix(t)!=    null    &&!token.startsWith(   "--       "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
201	[BUG]  [BUGGY]  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
202	[BUG]  [BUGGY]  options.getMatchingOptions(t)!=  null  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t)!=  null  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t)!=  null  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
203	[BUG]  [BUGGY]  if(t  ==  null  ||  token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t  ==  null  ||  token.startsWith( "- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t  ==  null  ||  token.startsWith( "- "))  {  return  true;  }	  if(token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
204	[BUG]  [BUGGY]  if(token.startsWith( "- ")||  token.startsWith( "--))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(token.startsWith( "- ")||  token.startsWith( "--))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(token.startsWith( "- ")||  token.startsWith( "--))  {  return  true;  }	  if(token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
205	[BUG]  [BUGGY]  Option  option  =  options.getOption(value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(value);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  option  =  options.getOption(value);	  Option    option    =    options.getOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
206	[BUG]  [BUGGY]  Option  option  =  options.getOption(options.getLongPrefix(t));  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(options.getLongPrefix(t));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  option  =  options.getOption(options.getLongPrefix(t));	  Option    option    =    options.getOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
207	[BUG]  [BUGGY]  if(optName!=  null)  {  aught(t,  pos)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(optName!=  null)  {  aught(t,  pos)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(optName!=  null)  {  aught(t,  pos)  {  throw  new  IllegalArgumentException( " ");  }	  aught(t,    pos)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
208	[BUG]  [BUGGY]  if(optName  ==  null)  {  aught(t,  pos)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(optName  ==  null)  {  aught(t,  pos)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(optName  ==  null)  {  aught(t,  pos)  {  throw  new  IllegalArgumentException( " ");  }	  aught(t,    pos)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
209	[BUG]  [BUGGY]  options.getOptions(t).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getOptions(t).isEmpty())  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getOptions(t).isEmpty())  {  return  false;  }	  options.getMatchingOptions(t).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
210	[BUG]  [BUGGY]  options.getOptions(opt).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getOptions(opt).isEmpty())  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getOptions(opt).isEmpty())  {  return  false;  }	  options.getMatchingOptions(t).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
211	[BUG]  [BUGGY]  options.getOption(t).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getOption(t).isEmpty())  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getOption(t).isEmpty())  {  return  false;  }	  options.getMatchingOptions(t).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
212	[BUG]  [BUGGY]  if(t!=  null  &&!t.equals( "- "))  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null  &&!t.equals( "- "))  {  expectedOpts.add(t);  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&!t.equals( "- "))  {  expectedOpts.add(t);  return  true;  }	  if(t!=    null    &&!t.startsWith(   "-   "))    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
213	[BUG]  [BUGGY]  if(t!=  null  &&!t.endsWith( "- "))  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null  &&!t.endsWith( "- "))  {  expectedOpts.add(t);  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&!t.endsWith( "- "))  {  expectedOpts.add(t);  return  true;  }	  if(t!=    null    &&!t.startsWith(   "-   "))    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
214	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty()  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t).isEmpty()  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty()  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue	  if(options.getMatchingOptions(t).isEmpty()    ||    expectedOpts.size()    >    0)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
215	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue	  if(options.getMatchingOptions(t).isEmpty()    ||    expectedOpts.size()    >    0)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
216	[BUG]  [BUGGY]  t  =  options.get(t);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  t  =  options.get(t);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	t  =  options.get(t);	  t    =    expectedOpts.get(t);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
217	[BUG]  [BUGGY]  t  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  t  =  options.getOption(t);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	t  =  options.getOption(t);	  t    =    expectedOpts.get(t);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
218	[BUG]  [BUGGY]  options.getOptions(t).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getOptions(t).isEmpty())  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getOptions(t).isEmpty())  {  return  true;  }	  options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
219	[BUG]  [BUGGY]  options.getOption(t).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getOption(t).isEmpty())  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getOption(t).isEmpty())  {  return  true;  }	  options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
220	[BUG]  [BUGGY]  else  if(t!=  null  &&  getTokenPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t!=  null  &&  getTokenPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(t!=  null  &&  getTokenPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	  else    if(t!=    null    &&    getLongPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
221	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  ==  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  ==  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  ==  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }	  if(options.getMatchingOptions(t).isEmpty()    ||    expectedOpts.length    >    0)    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
222	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true	  if(options.getMatchingOptions(t).isEmpty()    ||    expectedOpts.length    >    0)    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
223	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue	  options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
224	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty())  {  if(t  ==  null)  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t).isEmpty())  {  if(t  ==  null)  {  expectedOpts.add(t);  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t).isEmpty())  {  if(t  ==  null)  {  expectedOpts.add(t);  return  true;  }	  if(t    ==    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
225	[BUG]  [BUGGY]  Option  options  =  options.getMatchingOption(t,  value);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  options  =  options.getMatchingOption(t,  value);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  options  =  options.getMatchingOption(t,  value);	  Option    options    =    options.getMatchingOption(t);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
226	[BUG]  [BUGGY]  if(options.getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {	  if(options.getMatchingOptions(t)!=    null    &&!options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
227	[BUG]  [BUGGY]  if(options.getOption(t)!=  null  &&!options.getOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getOption(t)!=  null  &&!options.getOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getOption(t)!=  null  &&!options.getOption(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue	  if(options.getMatchingOptions(t)!=    null    &&!options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
228	[BUG]  [BUGGY]  if(expectedOpts!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(expectedOpts!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(expectedOpts!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue	  if(options.getMatchingOptions(t)!=    null    &&!options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
229	[BUG]  [BUGGY]  if(t!=  null  &&  expectedOpts.containsKey(t))  {  expectedOpts.add(t);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null  &&  expectedOpts.containsKey(t))  {  expectedOpts.add(t);  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&  expectedOpts.containsKey(t))  {  expectedOpts.add(t);  }	  if(t!=    null    &&    expectedOpts.contains(t))    {    expectedOpts.add(t);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
230	[BUG]  [BUGGY]  if(t!=  null  &&  expectedOpts.contains(token))  {  expectedOpts.add(t);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null  &&  expectedOpts.contains(token))  {  expectedOpts.add(t);  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&  expectedOpts.contains(token))  {  expectedOpts.add(t);  }	  if(t!=    null    &&    expectedOpts.contains(t))    {    expectedOpts.add(t);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
231	[BUG]  [BUGGY]  expectedOpts.add(t);  return  null;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  expectedOpts.add(t);  return  null;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	expectedOpts.add(t);  return  null;	  expectedOpts.add(t);    return    true;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
232	[BUG]  [BUGGY]  t  =  options.getOptions(t);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  t  =  options.getOptions(t);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	t  =  options.getOptions(t);	  t    =    expectedOpts.get(t);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
233	[BUG]  [BUGGY]  options.getMatchingOptions(t))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t))  {  return  true;  }	  options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
234	[BUG]  [BUGGY]  if(t!=  null  &&!token.equals( "- "))  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null  &&!token.equals( "- "))  {  expectedOpts.add(t);  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&!token.equals( "- "))  {  expectedOpts.add(t);  return  true;  }	  if(t!=    null    &&!token.startsWith(   "-   "))    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
235	[BUG]  [BUGGY]  if(options.getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	  if(options.getMatchingOptions(t)!=    null    &&!options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
236	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false	  if(options.getMatchingOptions(t)!=    null    &&!options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
237	[BUG]  [BUGGY]  if(options.getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false	  if(options.getMatchingOptions(t)!=    null    &&!options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
238	[BUG]  [BUGGY]  ||  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
239	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)!=  null  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
240	[BUG]  [BUGGY]  else  if(t!=  null  &&  getOptionPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t!=  null  &&  getOptionPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(t!=  null  &&  getOptionPrefix(t)!=  null  &&!token.startsWith( "- "))  {	  else    if(token!=    null    &&    getOptionPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
241	[BUG]  [BUGGY]  ||  t.startsWith( ". "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  t.startsWith( ". "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  t.startsWith( ". "))  {  throw  new  IllegalArgumentException( " ");  }	  ||    t.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
242	[BUG]  [BUGGY]  &&  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  &&  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	&&  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
243	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()!=  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()!=  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()!=  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	  if(options.getMatchingOptions(t).isEmpty()    ||    expectedOpts.size()    >    0)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
244	[BUG]  [BUGGY]  ||  token.startsWith(t))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  token.startsWith(t))  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  token.startsWith(t))  {  return  false;  }	  ||    token.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
245	[BUG]  [BUGGY]  ||  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
246	[BUG]  [BUGGY]  ||  expectedOpts.isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  expectedOpts.isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  expectedOpts.isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
247	[BUG]  [BUGGY]  ||  expectedOpts.size()  >  pos)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  expectedOpts.size()  >  pos)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  expectedOpts.size()  >  pos)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
248	[BUG]  [BUGGY]  if(options.getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  if(options.getLongPrefix(t)!=    null    &&!token.startsWith(   "--       "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
249	[BUG]  [BUGGY]  if(t!=  null  &&!t.startsWith( "0 "))  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null  &&!t.startsWith( "0 "))  {  expectedOpts.add(t);  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&!t.startsWith( "0 "))  {  expectedOpts.add(t);  return  true;  }	  if(t!=    null    &&!t.startsWith(   "-   "))    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
250	[BUG]  [BUGGY]  if(t.startsWith( "- ")||  t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t.startsWith( "- ")||  t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t.startsWith( "- ")||  t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }	  if(t.startsWith(   "-   ")||    t.startsWith(   "--   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
251	[BUG]  [BUGGY]  &&  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  &&  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	&&  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
252	[BUG]  [BUGGY]  if(t!=  null  &&!t.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null  &&!t.startsWith( "-- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&!t.startsWith( "-- "))  {  return  true;  }	  if(t    ==    null    ||!t.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
253	[BUG]  [BUGGY]  ||  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
254	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)!=  null  &&  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
255	[BUG]  [BUGGY]  if(t!=  null  &&  expectedOpts.contains(t)||  t.startsWith( "- "))  {  expectedOpts.add(t);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null  &&  expectedOpts.contains(t)||  t.startsWith( "- "))  {  expectedOpts.add(t);  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&  expectedOpts.contains(t)||  t.startsWith( "- "))  {  expectedOpts.add(t);  }	  if(t!=    null    &&    expectedOpts.contains(t))    {    expectedOpts.add(t);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
256	[BUG]  [BUGGY]  if(t!=  null  &&  expectedOpts.contains(t)||!token.startsWith( "- "))  {  expectedOpts.add(t);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null  &&  expectedOpts.contains(t)||!token.startsWith( "- "))  {  expectedOpts.add(t);  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&  expectedOpts.contains(t)||!token.startsWith( "- "))  {  expectedOpts.add(t);  }	  if(t!=    null    &&    expectedOpts.contains(t))    {    expectedOpts.add(t);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
257	[BUG]  [BUGGY]  if(t!=  null  &&  token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null  &&  token.startsWith( "- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&  token.startsWith( "- "))  {  return  true;  }	  if(token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
258	[BUG]  [BUGGY]  if(!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(!token.startsWith( "- "))  {  return  true;  }	  if(token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
259	[BUG]  [BUGGY]  t  =  token.indexOf(t);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  t  =  token.indexOf(t);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	t  =  token.indexOf(t);	  t    =    expectedOpts.indexOf(t);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
260	[BUG]  [BUGGY]  else  if(t!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(t!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "- "))  {	  else    if(token!=    null    &&    getPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
261	[BUG]  [BUGGY]  Option  option  =  options.getOptionValue(t);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  option  =  options.getOptionValue(t);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  option  =  options.getOptionValue(t);	  Option    option    =    options.getOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
262	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  optName);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(t,  optName);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  option  =  options.getOption(t,  optName);	  Option    option    =    options.getOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
263	[BUG]  [BUGGY]  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getOption(t);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getOption(t);	  Option    option    =    options.getOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
264	[BUG]  [BUGGY]  &&  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  &&  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	&&  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
265	[BUG]  [BUGGY]  if(t  ==  null  ||  expectedOpts.contains(t))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t  ==  null  ||  expectedOpts.contains(t))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t  ==  null  ||  expectedOpts.contains(t))  {  return  true;  }	  if(t    ==    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
266	[BUG]  [BUGGY]  if(t  ==  null  ||  expectedOpts.contains(t))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t  ==  null  ||  expectedOpts.contains(t))  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t  ==  null  ||  expectedOpts.contains(t))  {  return  false;  }	  if(t    ==    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
267	[BUG]  [BUGGY]  t  =  t.trim();  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  t  =  t.trim();  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	t  =  t.trim();	  if(t    ==    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
268	[BUG]  [BUGGY]  ||  expectedOpts  ==  null  ||!expectedOpts.contains(t);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  expectedOpts  ==  null  ||!expectedOpts.contains(t);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  expectedOpts  ==  null  ||!expectedOpts.contains(t);	  ||    expectedOpts!=    null    ||!expectedOpts.contains(t);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
269	[BUG]  [BUGGY]  ||  t.startsWith( ". "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  t.startsWith( ". "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  t.startsWith( ". "))  {  return  true;  }	  ||    t.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
270	[BUG]  [BUGGY]  if(options.getOption(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getOption(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getOption(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true	  if(options.getMatchingOptions(t)!=    null    &&!options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
271	[BUG]  [BUGGY]  options.getMatchingOptions(t))  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t))  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t))  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }	  options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
272	[BUG]  [BUGGY]  options.getMatchingOptions(t))  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t))  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t))  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }	  options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
273	[BUG]  [BUGGY]  options.getMatchingOptions(t))  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t))  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t))  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true	  options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
274	[BUG]  [BUGGY]  ||  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
275	[BUG]  [BUGGY]  ||  expectedOpts.isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  expectedOpts.isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  expectedOpts.isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
276	[BUG]  [BUGGY]  &&  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  &&  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	&&  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
277	[BUG]  [BUGGY]  else  if(t  ==  null  ||  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t  ==  null  ||  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(t  ==  null  ||  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {	  else    if(t    ==    null    &&    getLongPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
278	[BUG]  [BUGGY]  ||  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
279	[BUG]  [BUGGY]  ||  expectedOpts.isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  expectedOpts.isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  expectedOpts.isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }	  ||    options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
280	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()  <  =  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()  <  =  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()  <  =  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }	  if(options.getMatchingOptions(t).isEmpty()    ||    expectedOpts.size()    >    0)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
281	[BUG]  [BUGGY]  else  if(getPrefix(t)  ==  null  ||!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(getPrefix(t)  ==  null  ||!token.startsWith( "-- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(getPrefix(t)  ==  null  ||!token.startsWith( "-- "))  {	  else    if(getPrefix(t)    ==    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
282	[BUG]  [BUGGY]  ExpectedOpts.this.expectedOpts.add(t);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ExpectedOpts.this.expectedOpts.add(t);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	ExpectedOpts.this.expectedOpts.add(t);	  if(t!=    null    &&!token.startsWith(   "-   "))    {    expectedOpts.add(t);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
283	[BUG]  [BUGGY]  ||  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
284	[BUG]  [BUGGY]  Option  options  =  options.getOptions(t,  getLongPrefix(token));  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  options  =  options.getOptions(t,  getLongPrefix(token));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  options  =  options.getOptions(t,  getLongPrefix(token));	  Option    options    =    options.getOptions(t);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
285	[BUG]  [BUGGY]  if(t!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  aught(t,    pos)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
286	[BUG]  [BUGGY]  aught(t,  pos)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  aught(t,  pos)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	aught(t,  pos)  {  return  true;  }	  aught(t,    pos)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
287	[BUG]  [BUGGY]  Option  cmd  =  options.getMatchingOption(t,  getLongPrefix(token));  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getMatchingOption(t,  getLongPrefix(token));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  cmd  =  options.getMatchingOption(t,  getLongPrefix(token));	  Option    cmd    =    options.getMatchingOption(t);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
288	[BUG]  [BUGGY]  else  if(token!=  null  &&!token.equals( "-- "))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&!token.equals( "-- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(token!=  null  &&!token.equals( "-- "))  {	  else    if(getPrefix(t)!=    null    &&!token.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
289	[BUG]  [BUGGY]  aught(pos,  t,  false)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  aught(pos,  t,  false)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	aught(pos,  t,  false)  {  throw  new  IllegalArgumentException( " ");  }	  aught(t,    pos,    false)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
290	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	throw  new  IllegalArgumentException( " ");	  aught(t,    pos,    false)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
291	[BUG]  [BUGGY]  if(t.startsWith( "0 ")||  t.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t.startsWith( "0 ")||  t.startsWith( "- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t.startsWith( "0 ")||  t.startsWith( "- "))  {  return  true;  }	  if(t.startsWith(   "-   ")||    t.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
292	[BUG]  [BUGGY]  if(t!=  null  &&!t.equals( "- "))  {  expectedOpts.add(t);  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null  &&!t.equals( "- "))  {  expectedOpts.add(t);  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&!t.equals( "- "))  {  expectedOpts.add(t);  return  false;  }	  if(t!=    null)    {    expectedOpts.add(t);    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
293	[BUG]  [BUGGY]  if(t!=  null  &&!token.startsWith( "- "))  {  expectedOpts.add(t);  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null  &&!token.startsWith( "- "))  {  expectedOpts.add(t);  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&!token.startsWith( "- "))  {  expectedOpts.add(t);  return  false;  }	  if(t!=    null)    {    expectedOpts.add(t);    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
294	[BUG]  [BUGGY]  options.getMatchingOptions(t))  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t))  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t))  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	  options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
295	[BUG]  [BUGGY]  ||  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
296	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)!=  null  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
297	[BUG]  [BUGGY]  else  if(t!=  null  &&  getTokenPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t!=  null  &&  getTokenPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(t!=  null  &&  getTokenPrefix(t)!=  null  &&!token.startsWith( "- "))  {	  else    if(t!=    null    &&    getLongPrefix(t)!=    null    &&!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
298	[BUG]  [BUGGY]  ||  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  ||  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
299	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)  ==  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t)  ==  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)  ==  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
300	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)!=  null  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }	  if(options.getMatchingOptions(t)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
301	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getMatchingOption(t,  getLongPrefix(token));  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  expectedOpts  =  options.getMatchingOption(t,  getLongPrefix(token));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  expectedOpts  =  options.getMatchingOption(t,  getLongPrefix(token));	  Option    expectedOpts    =    options.getMatchingOption(t);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
302	[BUG]  [BUGGY]  While(t.startsWith( "- ")||  t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  While(t.startsWith( "- ")||  t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	While(t.startsWith( "- ")||  t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }	  While(t.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
303	[BUG]  [BUGGY]  if(options.getLongPrefix(token)!=  null  &&!token.startsWith( "--   "))  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getLongPrefix(token)!=  null  &&!token.startsWith( "--   "))  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getLongPrefix(token)!=  null  &&!token.startsWith( "--   "))  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }	  if(options.getMatchingOptions(t).isEmpty())    {    if(t!=    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
304	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)!=  null)  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }	  if(options.getMatchingOptions(t).isEmpty())    {    if(t!=    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
305	[BUG]  [BUGGY]  if(options.getOption(t)!=  null)  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getOption(t)!=  null)  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getOption(t)!=  null)  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }	  if(options.getMatchingOptions(t).isEmpty())    {    if(t!=    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
306	[BUG]  [BUGGY]  options.getMatchingOptions(t))  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t))  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t))  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true	  options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
307	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty())  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t).isEmpty())  {  expectedOpts.add(t);  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t).isEmpty())  {  expectedOpts.add(t);  return  true;  }	  if(optName!=    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
308	[BUG]  [BUGGY]  options.getMatchingOptions(t))  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t))  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t))  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }	  options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
309	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {	  if(options.getMatchingOptions(t)!=    null    &&!options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
310	[BUG]  [BUGGY]  if(options.getOption(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(options.getOption(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getOption(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue	  if(options.getMatchingOptions(t)!=    null    &&!options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
311	[BUG]  [BUGGY]  if(t.endsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t.endsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t.endsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }	  if(token.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
312	[BUG]  [BUGGY]  options.getMatchingOptions(t))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  options.getMatchingOptions(t))  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t))  {  return  false;  }	  options.getMatchingOptions(t).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
