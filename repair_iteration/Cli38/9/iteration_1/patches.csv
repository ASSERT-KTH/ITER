bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  else  if(token!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(token!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(token!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	  else    if(getLongPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2	[BUG]  [BUGGY]  if(t!=  null)  {  expectedOpts.add(t);  return  false;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(t!=  null)  {  expectedOpts.add(t);  return  false;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null)  {  expectedOpts.add(t);  return  false;  }	      if(t!=    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
3	[BUG]  [BUGGY]  if(t  ==  null)  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(t  ==  null)  {  expectedOpts.add(t);  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t  ==  null)  {  expectedOpts.add(t);  return  true;  }	      if(t!=    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
4	[BUG]  [BUGGY]  expectedOpts.add(t);  return  true;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  expectedOpts.add(t);  return  true;  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	expectedOpts.add(t);  return  true;	      if(t!=    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
5	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty())  {  return  true;  }	      if(options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
6	[BUG]  [BUGGY]  Option  cmd  =  options.getMatchingOption(t);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  cmd  =  options.getMatchingOption(t);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  cmd  =  options.getMatchingOption(t);	      if(options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
7	[BUG]  [BUGGY]  Option  option  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  option  =  options.getOption(t);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  option  =  options.getOption(t);	      if(options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty())  {  return  false;  }	      if(options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  ||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  ||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  ||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  ||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
12	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
13	[BUG]  [BUGGY]  expectedOpts.add(t);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  expectedOpts.add(t);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	expectedOpts.add(t);	      if(t!=    null)    {    expectedOpts.add(t);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
14	[BUG]  [BUGGY]  ||  expectedOpts!=  null  ||!expectedOpts.contains(t);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  ||  expectedOpts!=  null  ||!expectedOpts.contains(t);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  expectedOpts!=  null  ||!expectedOpts.contains(t);	      if(t!=    null)    {    expectedOpts.add(t);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
15	[BUG]  [BUGGY]  ||  expectedOpts!=  null  ||!expectedOpts.contains(t))  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  ||  expectedOpts!=  null  ||!expectedOpts.contains(t))  {  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  expectedOpts!=  null  ||!expectedOpts.contains(t))  {	      if(t!=    null)    {    expectedOpts.add(t);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
16	[BUG]  [BUGGY]  ||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  ||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  ||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  ||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
19	[BUG]  [BUGGY]  else  if(getPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(getPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(getPrefix(t)!=  null  &&!token.startsWith( "- "))  {	  else    if(getPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
20	[BUG]  [BUGGY]  else  if(token!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(token!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(token!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	  else    if(getPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
21	[BUG]  [BUGGY]  ||  t.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  ||  t.startsWith( "- "))  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  t.startsWith( "- "))  {  return  true;  }	      if(t.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
22	[BUG]  [BUGGY]  if(t.startsWith( "- ")||  t.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(t.startsWith( "- ")||  t.startsWith( "-- "))  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t.startsWith( "- ")||  t.startsWith( "-- "))  {  return  true;  }	      if(t.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
23	[BUG]  [BUGGY]  if(token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(token.startsWith( "- "))  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(token.startsWith( "- "))  {  return  true;  }	      if(t.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
24	[BUG]  [BUGGY]  ||  t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  ||  t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }	      if(t.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
25	[BUG]  [BUGGY]  ||  token.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  ||  token.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  token.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }	      if(t.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
26	[BUG]  [BUGGY]  While(t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  While(t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	While(t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }	      if(t.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
27	[BUG]  [BUGGY]  else  if(t!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(t!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(t!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	  else    if(t!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
28	[BUG]  [BUGGY]  else  if(t!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(t!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(t!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {	  else    if(t!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
29	[BUG]  [BUGGY]  else  if(token!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(token!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(token!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {	  else    if(t!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
30	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
31	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
32	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getMatchingOption(t);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  expectedOpts  =  options.getMatchingOption(t);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  expectedOpts  =  options.getMatchingOption(t);	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
33	[BUG]  [BUGGY]  else  if(getLongPrefix(t)  ==  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(getLongPrefix(t)  ==  null  &&!token.startsWith( "- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(getLongPrefix(t)  ==  null  &&!token.startsWith( "- "))  {	  else    if(getLongPrefix(t)!=    null    &&!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
34	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
35	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
36	[BUG]  [BUGGY]  if(t!=  null  ||!t.equals( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(t!=  null  ||!t.equals( "- "))  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  ||!t.equals( "- "))  {  return  true;  }	      if(t    ==    null    ||!t.equals(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
37	[BUG]  [BUGGY]  if(t!=  null  &&!t.equals( "-   "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(t!=  null  &&!t.equals( "-   "))  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&!t.equals( "-   "))  {  return  true;  }	      if(t    ==    null    ||!t.equals(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
38	[BUG]  [BUGGY]  if(t  ==  null  &&!t.equals( "-   "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(t  ==  null  &&!t.equals( "-   "))  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t  ==  null  &&!t.equals( "-   "))  {  return  true;  }	      if(t    ==    null    ||!t.equals(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
39	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
40	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
41	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty())  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(options.getMatchingOptions(t).isEmpty())  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t).isEmpty())  {  if(t!=  null)  {  expectedOpts.add(t);  return  true;  }	      if(t!=    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
42	[BUG]  [BUGGY]  if(optName!=  null)  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(optName!=  null)  {  expectedOpts.add(t);  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(optName!=  null)  {  expectedOpts.add(t);  return  true;  }	      if(t!=    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
43	[BUG]  [BUGGY]  Option  expectedOpt  =  options.getMatchingOption(t);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  expectedOpt  =  options.getMatchingOption(t);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  expectedOpt  =  options.getMatchingOption(t);	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
44	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  expectedOpts  =  options.getOption(t);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  expectedOpts  =  options.getOption(t);	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
45	[BUG]  [BUGGY]  if(token.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(token.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(token.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }	      if(t.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
46	[BUG]  [BUGGY]  if(t.startsWith( "- ")||  t.startsWith( "-- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(t.startsWith( "- ")||  t.startsWith( "-- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t.startsWith( "- ")||  t.startsWith( "-- "))  {  throw  new  IllegalArgumentException( " ");  }	      if(t.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
47	[BUG]  [BUGGY]  Option  options  =  options.getMatchingOption(t);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  options  =  options.getMatchingOption(t);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  options  =  options.getMatchingOption(t);	      if(options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
48	[BUG]  [BUGGY]  Option  options  =  options.getMatchingOptions(t);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  options  =  options.getMatchingOptions(t);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  options  =  options.getMatchingOptions(t);	      if(options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
49	[BUG]  [BUGGY]  Option  option  =  options.getOption(optName);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  option  =  options.getOption(optName);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  option  =  options.getOption(optName);	      if(options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
50	[BUG]  [BUGGY]  else  if(getPrefix(t)!=  null  &&!token.equals( "-- "))  {  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(getPrefix(t)!=  null  &&!token.equals( "-- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(getPrefix(t)!=  null  &&!token.equals( "-- "))  {	  else    if(getPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
51	[BUG]  [BUGGY]  if(t.startsWith( "- ")||  t.startsWith( "--))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(t.startsWith( "- ")||  t.startsWith( "--))  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t.startsWith( "- ")||  t.startsWith( "--))  {  return  true;  }	      if(t.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
52	[BUG]  [BUGGY]  t  =  expectedOpts.get(t);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  t  =  expectedOpts.get(t);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	t  =  expectedOpts.get(t);	      if(t!=    null)    {    expectedOpts.add(t);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
53	[BUG]  [BUGGY]  t  =  expectedOpts.indexOf(t);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  t  =  expectedOpts.indexOf(t);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	t  =  expectedOpts.indexOf(t);	      if(t!=    null)    {    expectedOpts.add(t);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
54	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  currentOption  =  options.getOption(t);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  currentOption  =  options.getOption(t);	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
55	[BUG]  [BUGGY]  Option  options  =  options.getOptions(t);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  options  =  options.getOptions(t);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	Option  options  =  options.getOptions(t);	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
56	[BUG]  [BUGGY]  else  if(getLongPrefix(t)  ==  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(getLongPrefix(t)  ==  null  &&!token.startsWith( "-- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(getLongPrefix(t)  ==  null  &&!token.startsWith( "-- "))  {	  else    if(getLongPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
57	[BUG]  [BUGGY]  else  if(token!=  null  &&  getOptionPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(token!=  null  &&  getOptionPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(token!=  null  &&  getOptionPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	  else    if(token!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
58	[BUG]  [BUGGY]  if(t!=  null  &&!t.equals( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(t!=  null  &&!t.equals( "-- "))  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&!t.equals( "-- "))  {  return  true;  }	      if(t    ==    null    ||!t.equals(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
59	[BUG]  [BUGGY]  ||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  ||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
60	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true;  }	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
61	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  true	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
62	[BUG]  [BUGGY]  if(t!=  null  &&!t.startsWith( "- "))  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(t!=  null  &&!t.startsWith( "- "))  {  expectedOpts.add(t);  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&!t.startsWith( "- "))  {  expectedOpts.add(t);  return  true;  }	      if(t!=    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
63	[BUG]  [BUGGY]  if(t!=  null  &&!token.startsWith( "- "))  {  expectedOpts.add(t);  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(t!=  null  &&!token.startsWith( "- "))  {  expectedOpts.add(t);  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&!token.startsWith( "- "))  {  expectedOpts.add(t);  return  true;  }	      if(t!=    null)    {    expectedOpts.add(t);    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
64	[BUG]  [BUGGY]  ||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  ||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
65	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
66	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  return  false;  }	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
67	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  false;  }	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
68	[BUG]  [BUGGY]  else  if(token!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(token!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(token!=  null  &&!token.startsWith( "-- "))  {	  else    if(getPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
69	[BUG]  [BUGGY]  else  if(getPrefix(t)  ==  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(getPrefix(t)  ==  null  &&!token.startsWith( "-- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(getPrefix(t)  ==  null  &&!token.startsWith( "-- "))  {	  else    if(getPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
70	[BUG]  [BUGGY]  aught(t,  pos)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  aught(t,  pos)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	aught(t,  pos)  {  throw  new  IllegalArgumentException( " ");  }	      if(t.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
71	[BUG]  [BUGGY]  aught(t,  pos,  false)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  aught(t,  pos,  false)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	aught(t,  pos,  false)  {  throw  new  IllegalArgumentException( " ");  }	      if(t.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
72	[BUG]  [BUGGY]  ||  t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ",  pos);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  ||  t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ",  pos);  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  t.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ",  pos);  }	      if(t.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
73	[BUG]  [BUGGY]  if(t!=  null  &&  expectedOpts.contains(t))  {  expectedOpts.add(t);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(t!=  null  &&  expectedOpts.contains(t))  {  expectedOpts.add(t);  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&  expectedOpts.contains(t))  {  expectedOpts.add(t);  }	      if(t!=    null)    {    expectedOpts.add(t);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
74	[BUG]  [BUGGY]  if(t!=  null  &&!token.startsWith( "- "))  {  expectedOpts.add(t);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(t!=  null  &&!token.startsWith( "- "))  {  expectedOpts.add(t);  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&!token.startsWith( "- "))  {  expectedOpts.add(t);  }	      if(t!=    null)    {    expectedOpts.add(t);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
75	[BUG]  [BUGGY]  if(t!=  null  &&!token.equals( "- "))  {  expectedOpts.add(t);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(t!=  null  &&!token.equals( "- "))  {  expectedOpts.add(t);  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t!=  null  &&!token.equals( "- "))  {  expectedOpts.add(t);  }	      if(t!=    null)    {    expectedOpts.add(t);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
76	[BUG]  [BUGGY]  else  if(t  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(t  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(t  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {	  else    if(token!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
77	[BUG]  [BUGGY]  ||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  ||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	||  options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
78	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue;  }	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
79	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  continue	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
80	[BUG]  [BUGGY]  if(t.startsWith( "- ")||  t.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(t.startsWith( "- ")||  t.startsWith( "- "))  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t.startsWith( "- ")||  t.startsWith( "- "))  {  return  true;  }	      if(t.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
81	[BUG]  [BUGGY]  if(t  ==  null  ||!t.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(t  ==  null  ||!t.startsWith( "- "))  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(t  ==  null  ||!t.startsWith( "- "))  {  return  true;  }	      if(t.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
82	[BUG]  [BUGGY]  if(options.getLongPrefix(t)!=  null  &&!token.startsWith( "--   "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(options.getLongPrefix(t)!=  null  &&!token.startsWith( "--   "))  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getLongPrefix(t)!=  null  &&!token.startsWith( "--   "))  {  return  true;  }	      if(options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
83	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)!=  null)  {  return  true;  }	      if(options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
84	[BUG]  [BUGGY]  else  if(t  ==  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(t  ==  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(t  ==  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	  else    if(t!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
85	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
86	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	if(options.getMatchingOptions(t).isEmpty()  ||  expectedOpts.length  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.length;  pos++)  {  return  true;  }	      if(options.getMatchingOptions(t).isEmpty())    {    for(int    pos    =    0;    pos    <    expectedOpts.length;    pos++)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
