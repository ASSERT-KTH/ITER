projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(options.getMatchingOptions(t).isEmpty()){for(intpos=0;pos<expectedOpts.size();pos++){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(options.getMatchingOptions(t).isEmpty()){for(intpos=0;pos<expectedOpts.size();pos++){returnfalse;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(options.getMatchingOptions(t).isEmpty()){for(intpos=0;pos<expectedOpts.length;pos++){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(options.getMatchingOptions(t).isEmpty()){for(intpos=0;pos<expectedOpts.size();pos++){continue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(options.getMatchingOptions(t).isEmpty()){for(intpos=0;pos<expectedOpts.length;pos++){returnfalse;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334elseif(getLongPrefix(token)!=null&&!token.startsWith("--")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334elseif(getLongPrefix(t)!=null&&!token.startsWith("--")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334elseif(token!=null&&getLongPrefix(token)!=null&&!token.startsWith("--")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334elseif(getLongPrefix(t)!=null&&!token.startsWith("-")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(options.getMatchingOptions(t).isEmpty()){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334elseif(getPrefix(t)!=null&&!token.startsWith("--")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334elseif(t!=null&&getLongPrefix(token)!=null&&!token.startsWith("--")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(t.startsWith("-")){thrownewIllegalArgumentException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(t==null||!t.equals("-")){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(t!=null){expectedOpts.add(t);returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(t!=null){expectedOpts.add(t);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(t.startsWith("-")){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334elseif(token!=null&&getLongPrefix(t)!=null&&!token.startsWith("--")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(t!=null){expectedOpts.add(t);returnfalse;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(t==null){expectedOpts.add(t);returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334expectedOpts.add(t);returntrue;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334options.getMatchingOptions(t).isEmpty()){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334Optioncmd=options.getMatchingOption(t);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334Optionoption=options.getOption(t);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334options.getMatchingOptions(t).isEmpty()){returnfalse;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334||options.getMatchingOptions(t).isEmpty()){for(intpos=0;pos<expectedOpts.length;pos++){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334options.getMatchingOptions(t).isEmpty()){for(intpos=0;pos<expectedOpts.length;pos++){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334||options.getMatchingOptions(t).isEmpty()){for(intpos=0;pos<expectedOpts.length;pos++){returntrue
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334options.getMatchingOptions(t).isEmpty()){for(intpos=0;pos<expectedOpts.length;pos++){returntrue
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334expectedOpts.add(t);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334||expectedOpts!=null||!expectedOpts.contains(t);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334||expectedOpts!=null||!expectedOpts.contains(t)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334||options.getMatchingOptions(t).isEmpty()){for(intpos=0;pos<expectedOpts.length;pos++){returnfalse;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(options.getMatchingOptions(t)!=null){for(intpos=0;pos<expectedOpts.length;pos++){returnfalse;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334||options.getMatchingOptions(t).isEmpty()){for(intpos=0;pos<expectedOpts.length;pos++){returnfalse;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334elseif(getPrefix(t)!=null&&!token.startsWith("-")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334elseif(token!=null&&getPrefix(t)!=null&&!token.startsWith("--")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334||t.startsWith("-")){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(t.startsWith("-")||t.startsWith("--")){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(token.startsWith("-")){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334||t.startsWith("-")){thrownewIllegalArgumentException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334||token.startsWith("-")){thrownewIllegalArgumentException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334While(t.startsWith("-")){thrownewIllegalArgumentException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334elseif(t!=null&&getLongPrefix(t)!=null&&!token.startsWith("--")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334elseif(t!=null&&getLongPrefix(t)!=null&&!token.startsWith("-")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334elseif(token!=null&&getLongPrefix(t)!=null&&!token.startsWith("-")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334options.getMatchingOptions(t).isEmpty()){for(intpos=0;pos<expectedOpts.size();pos++){continue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(options.getMatchingOptions(t).isEmpty()||expectedOpts.size()>0){for(intpos=0;pos<expectedOpts.size();pos++){continue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334OptionexpectedOpts=options.getMatchingOption(t);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334elseif(getLongPrefix(t)==null&&!token.startsWith("-")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334options.getMatchingOptions(t).isEmpty()){for(intpos=0;pos<expectedOpts.size();pos++){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334options.getMatchingOptions(t).isEmpty()){for(intpos=0;pos<expectedOpts.size();pos++){returntrue
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(t!=null||!t.equals("-")){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(t!=null&&!t.equals("-")){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(t==null&&!t.equals("-")){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334options.getMatchingOptions(t).isEmpty()){for(intpos=0;pos<expectedOpts.size();pos++){returnfalse;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(options.getMatchingOptions(t).isEmpty()||expectedOpts.size()>0){for(intpos=0;pos<expectedOpts.size();pos++){returnfalse;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(options.getMatchingOptions(t).isEmpty()){if(t!=null){expectedOpts.add(t);returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(optName!=null){expectedOpts.add(t);returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334OptionexpectedOpt=options.getMatchingOption(t);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334OptionexpectedOpts=options.getOption(t);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(token.startsWith("-")){thrownewIllegalArgumentException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(t.startsWith("-")||t.startsWith("--")){thrownewIllegalArgumentException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334Optionoptions=options.getMatchingOption(t);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334Optionoptions=options.getMatchingOptions(t);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334Optionoption=options.getOption(optName);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334elseif(getPrefix(t)!=null&&!token.equals("--")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(t.startsWith("-")||t.startsWith("--)){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334t=expectedOpts.get(t);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334t=expectedOpts.indexOf(t);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334OptioncurrentOption=options.getOption(t);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334Optionoptions=options.getOptions(t);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334elseif(getLongPrefix(t)==null&&!token.startsWith("--")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334elseif(token!=null&&getOptionPrefix(t)!=null&&!token.startsWith("--")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(t!=null&&!t.equals("--")){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334||options.getMatchingOptions(t).isEmpty()){for(intpos=0;pos<expectedOpts.size();pos++){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(options.getMatchingOptions(t)!=null){for(intpos=0;pos<expectedOpts.size();pos++){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(options.getMatchingOptions(t)!=null&&!options.getMatchingOptions(t).isEmpty()){for(intpos=0;pos<expectedOpts.size();pos++){returntrue
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(t!=null&&!t.startsWith("-")){expectedOpts.add(t);returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(t!=null&&!token.startsWith("-")){expectedOpts.add(t);returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334||options.getMatchingOptions(t).isEmpty()){for(intpos=0;pos<expectedOpts.size();pos++){returnfalse;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(options.getMatchingOptions(t)!=null){for(intpos=0;pos<expectedOpts.size();pos++){returnfalse;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(options.getMatchingOptions(t)!=null&&!options.getMatchingOptions(t).isEmpty()){for(intpos=0;pos<expectedOpts.size();pos++){returnfalse;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(options.getMatchingOptions(t).isEmpty()||expectedOpts.length>0){for(intpos=0;pos<expectedOpts.length;pos++){returnfalse;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334elseif(token!=null&&!token.startsWith("--")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334elseif(getPrefix(t)==null&&!token.startsWith("--")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334aught(t,pos){thrownewIllegalArgumentException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334aught(t,pos,false){thrownewIllegalArgumentException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334||t.startsWith("-")){thrownewIllegalArgumentException("",pos);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(t!=null&&expectedOpts.contains(t)){expectedOpts.add(t);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(t!=null&&!token.startsWith("-")){expectedOpts.add(t);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(t!=null&&!token.equals("-")){expectedOpts.add(t);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334elseif(t==null&&getLongPrefix(token)!=null&&!token.startsWith("--")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334||options.getMatchingOptions(t).isEmpty()){for(intpos=0;pos<expectedOpts.size();pos++){continue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(options.getMatchingOptions(t)!=null){for(intpos=0;pos<expectedOpts.size();pos++){continue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(options.getMatchingOptions(t)!=null&&!options.getMatchingOptions(t).isEmpty()){for(intpos=0;pos<expectedOpts.size();pos++){continue
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(t.startsWith("-")||t.startsWith("-")){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(t==null||!t.startsWith("-")){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(options.getLongPrefix(t)!=null&&!token.startsWith("--")){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(options.getMatchingOptions(t)!=null){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334elseif(t==null&&getLongPrefix(t)!=null&&!token.startsWith("--")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(options.getMatchingOptions(t)!=null){for(intpos=0;pos<expectedOpts.length;pos++){returntrue;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java334if(options.getMatchingOptions(t).isEmpty()||expectedOpts.length>0){for(intpos=0;pos<expectedOpts.length;pos++){returntrue;}
