bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(group);  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    Option  cmd  =  options.getOption(group);  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	    Option  cmd  =  options.getOption(group);		non-compiled	[CE]  illegal  start  of  type	47	None	add
2	[BUG]  [BUGGY]    if(stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    if(stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	    if(stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }		non-compiled	[CE]  illegal  start  of  type	47	None	add
3	[BUG]  [BUGGY]    Option  cmd  =(Option)group.getOption(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    Option  cmd  =(Option)group.getOption(options.getRequiredOptions());  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	    Option  cmd  =(Option)group.getOption(options.getRequiredOptions());		non-compiled	[CE]  illegal  start  of  type	47	None	add
4	[BUG]  [BUGGY]    if(stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    if(stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	    if(stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }		non-compiled	[CE]  illegal  start  of  type	47	None	add
5	[BUG]  [BUGGY]    if(stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    if(stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd  =  new  CommandLine();  }  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	    if(stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd  =  new  CommandLine();  }		non-compiled	[CE]  illegal  start  of  type	47	None	add
6	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser());  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]  cmd  =  new  CommandLine(group.getParser());  [BUGGY]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(group.getParser());	cmd  =  new  CommandLine();  	non-compiled	[CE]  illegal  start  of  type	46	None	replace
7	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group);  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]  cmd  =  new  CommandLine(group);  [BUGGY]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(group);	cmd  =  new  CommandLine();  	non-compiled	[CE]  illegal  start  of  type	46	None	replace
8	[BUG]  [BUGGY]  cmd  =  new  CommandLine(null);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]  cmd  =  new  CommandLine(null);  [BUGGY]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(null);	cmd  =  new  CommandLine();  	non-compiled	[CE]  illegal  start  of  type	46	None	replace
9	[BUG]  [BUGGY]    if(stopAtNonOption)  {  Option  option  =  options.getOption(currentToken);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    if(stopAtNonOption)  {  Option  option  =  options.getOption(currentToken);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	    if(stopAtNonOption)  {  Option  option  =  options.getOption(currentToken);  if(option!=  null)  {  cmd  =  new  CommandLine();  }		non-compiled	[CE]  illegal  start  of  type	47	None	add
10	[BUG]  [BUGGY]    if(stopAtNonOption)  {  Option  option  =  options.getOption(group);  if(option!=  null)  {  skipParsing  =  false;  }  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    if(stopAtNonOption)  {  Option  option  =  options.getOption(group);  if(option!=  null)  {  skipParsing  =  false;  }  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	    if(stopAtNonOption)  {  Option  option  =  options.getOption(group);  if(option!=  null)  {  skipParsing  =  false;  }		non-compiled	[CE]  illegal  start  of  type	47	None	add
11	[BUG]  [BUGGY]    if(stopAtNonOption)  {  Option  option  =  options.getOption(null);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    if(stopAtNonOption)  {  Option  option  =  options.getOption(null);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	    if(stopAtNonOption)  {  Option  option  =  options.getOption(null);  if(option!=  null)  {  cmd  =  new  CommandLine();  }		non-compiled	[CE]  illegal  start  of  type	47	None	add
12	[BUG]  [BUGGY]    if(stopAtNonOption)  {  Option  option  =  options.getOption(group);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    if(stopAtNonOption)  {  Option  option  =  options.getOption(group);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	    if(stopAtNonOption)  {  Option  option  =  options.getOption(group);  if(option!=  null)  {  cmd  =  new  CommandLine();  }		non-compiled	[CE]  illegal  start  of  type	47	None	add
13	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken);  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]  cmd  =  new  CommandLine(currentToken);  [BUGGY]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(currentToken);	cmd  =  new  CommandLine();  	non-compiled	[CE]  illegal  start  of  type	46	None	replace
14	[BUG]  [BUGGY]  cmd  =  new  CommandLine(true);  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]  cmd  =  new  CommandLine(true);  [BUGGY]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(true);	cmd  =  new  CommandLine();  	non-compiled	[CE]  illegal  start  of  type	46	None	replace
15	[BUG]  [BUGGY]  cmd  =  new  CommandLine(options);  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]  cmd  =  new  CommandLine(options);  [BUGGY]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(options);	cmd  =  new  CommandLine();  	non-compiled	[CE]  illegal  start  of  type	46	None	replace
16	[BUG]  [BUGGY]    if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	    if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }		non-compiled	[CE]  illegal  start  of  type	47	None	add
17	[BUG]  [BUGGY]    if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	    if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }		non-compiled	[CE]  illegal  start  of  type	47	None	add
18	[BUG]  [BUGGY]    if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	    if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }		non-compiled	[CE]  illegal  start  of  type	47	None	add
19	[BUG]  [BUGGY]    if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener());  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener());  }  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	    if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener());  }		non-compiled	[CE]  illegal  start  of  type	47	None	add
20	[BUG]  [BUGGY]    if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener(this));  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener(this));  }  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	    if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener(this));  }		non-compiled	[CE]  illegal  start  of  type	47	None	add
