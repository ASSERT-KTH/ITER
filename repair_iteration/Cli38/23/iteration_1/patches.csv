bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  cmd  =(Option)group.getOption(options.getRequiredOptions(),  expectedOpts);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  Option  cmd  =(Option)group.getOption(options.getRequiredOptions(),  expectedOpts);  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	Option  cmd  =(Option)group.getOption(options.getRequiredOptions(),  expectedOpts);	      Option    cmd    =(Option)group.getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  Option  cmd  =(Option)group.getOption(options.getRequiredOptions(),  true);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  Option  cmd  =(Option)group.getOption(options.getRequiredOptions(),  true);  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	Option  cmd  =(Option)group.getOption(options.getRequiredOptions(),  true);	      Option    cmd    =(Option)group.getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  Option  cmd  =(Option)group.getOption(options.getRequiredOptions(),  false);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  Option  cmd  =(Option)group.getOption(options.getRequiredOptions(),  false);  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	Option  cmd  =(Option)group.getOption(options.getRequiredOptions(),  false);	      Option    cmd    =(Option)group.getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener());  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener());  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener());  }	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(new    ChangeListener());    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
5	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(new    ChangeListener());    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
6	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(expectedOpts  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  if(expectedOpts  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  if(expectedOpts  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(new    ChangeListener());    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
7	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(expectedOpts  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.add  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  if(expectedOpts  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.add  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  if(expectedOpts  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.add	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(new    ChangeListener());    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
8	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }	      if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
9	[BUG]  [BUGGY]  options.addChangeListener(this);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  options.addChangeListener(this);  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	options.addChangeListener(this);	      if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  properties.getOptions())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  properties.getOptions())  {  cmd.addChangeListener(this);  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  for(Option  option  :  properties.getOptions())  {  cmd.addChangeListener(this);  }	      if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(new  String[]  {  }  );  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(new  String[]  {  }  );  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(new  String[]  {  }  );  }	      if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
13	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  cmd.setSelected(null);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  ||  stopAtNonOption)  {  cmd.setSelected(null);  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	||  stopAtNonOption)  {  cmd.setSelected(null);	      if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
14	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  cmd  =  new  CommandLine(currentToken,  expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(currentToken,  expectedOpts);	  cmd    =    new    CommandLine(currentToken);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
15	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken,  skipParsing);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  cmd  =  new  CommandLine(currentToken,  skipParsing);  [BUGGY]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(currentToken,  skipParsing);	  cmd    =    new    CommandLine(currentToken);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
16	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  cmd  =  new  CommandLine(currentOption);  [BUGGY]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(currentOption);	  cmd    =    new    CommandLine(currentToken);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
17	[BUG]  [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener(this));  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener(this));  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener(this));  }	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(new    ChangeListener(this));    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
18	[BUG]  [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener(  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener(  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener(	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(new    ChangeListener(this));    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
19	[BUG]  [BUGGY]  Option  option  =  options.getOption(group);  if(option!=  null)  {  skipParsing  =  false;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  Option  option  =  options.getOption(group);  if(option!=  null)  {  skipParsing  =  false;  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	Option  option  =  options.getOption(group);  if(option!=  null)  {  skipParsing  =  false;  }	      if(stopAtNonOption)    {    Option    option    =    options.getOption(group);    if(option!=    null)    {    skipParsing    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
20	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  Option  option  =  options.getOption(group);  if(option!=  null)  {  skipParsing  =  false;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(!stopAtNonOption)  {  Option  option  =  options.getOption(group);  if(option!=  null)  {  skipParsing  =  false;  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(!stopAtNonOption)  {  Option  option  =  options.getOption(group);  if(option!=  null)  {  skipParsing  =  false;  }	      if(stopAtNonOption)    {    Option    option    =    options.getOption(group);    if(option!=    null)    {    skipParsing    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
21	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Option  option  =  options.getOption(group,  expectedOpts);  if(option!=  null)  {  skipParsing  =  false;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  Option  option  =  options.getOption(group,  expectedOpts);  if(option!=  null)  {  skipParsing  =  false;  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  Option  option  =  options.getOption(group,  expectedOpts);  if(option!=  null)  {  skipParsing  =  false;  }	      if(stopAtNonOption)    {    Option    option    =    options.getOption(group);    if(option!=    null)    {    skipParsing    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
22	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentToken);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  Option  option  =  options.getOption(currentToken);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	Option  option  =  options.getOption(currentToken);  if(option!=  null)  {  cmd  =  new  CommandLine();  }	      if(stopAtNonOption)    {    Option    option    =    options.getOption(currentToken);    if(option!=    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
23	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  Option  option  =  options.getOption(currentToken);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(!stopAtNonOption)  {  Option  option  =  options.getOption(currentToken);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(!stopAtNonOption)  {  Option  option  =  options.getOption(currentToken);  if(option!=  null)  {  cmd  =  new  CommandLine();  }	      if(stopAtNonOption)    {    Option    option    =    options.getOption(currentToken);    if(option!=    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
24	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  Option  option  =  options.getOption(currentToken);  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	Option  option  =  options.getOption(currentToken);	      if(stopAtNonOption)    {    Option    option    =    options.getOption(currentToken);    if(option!=    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  Option  cmd  =  options.getOption(currentToken);  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	Option  cmd  =  options.getOption(currentToken);	      Option    cmd    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
26	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(group,  expectedOpts);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  Option  cmd  =  options.getOption(group,  expectedOpts);  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	Option  cmd  =  options.getOption(group,  expectedOpts);	      Option    cmd    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
27	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(group,  0);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  Option  cmd  =  options.getOption(group,  0);  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	Option  cmd  =  options.getOption(group,  0);	      Option    cmd    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
28	[BUG]  [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
29	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(expectedOpts  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.addChangeListen  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  if(expectedOpts  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.addChangeListen  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  if(expectedOpts  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.addChangeListen	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
30	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.addChangeListen  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.addChangeListen  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.addChangeListen	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
31	[BUG]  [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
32	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  currentOption);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  currentOption);  [BUGGY]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  currentOption);	  cmd    =    new    CommandLine(group.getParser());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
33	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  currentToken);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  currentToken);  [BUGGY]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  currentToken);	  cmd    =    new    CommandLine(group.getParser());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  true);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  true);  [BUGGY]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  true);	  cmd    =    new    CommandLine(group.getParser());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
35	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  options);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  options);  [BUGGY]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  options);	  cmd    =    new    CommandLine(group.getParser());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
36	[BUG]  [BUGGY]  options.setOption(stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  options.setOption(stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd  =  new  CommandLine();  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	options.setOption(stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd  =  new  CommandLine();  }	      if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getOptionGroups())  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getOptionGroups())  {  cmd  =  new  CommandLine();  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  for(Option  option  :  options.getOptionGroups())  {  cmd  =  new  CommandLine();  }	      if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  options.setOption(stopAtNonOption)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  options.setOption(stopAtNonOption)  {  cmd  =  new  CommandLine();  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	options.setOption(stopAtNonOption)  {  cmd  =  new  CommandLine();  }	      if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions());  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  cmd  =  new  CommandLine(group.getOptions());  [BUGGY]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions());	  cmd    =    new    CommandLine(null);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
40	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(expectedOpts  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addCh  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  if(expectedOpts  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addCh  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  if(expectedOpts  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addCh	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
41	[BUG]  [BUGGY]  Option  option  =  options.getOption(null);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  Option  option  =  options.getOption(null);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	Option  option  =  options.getOption(null);  if(option!=  null)  {  cmd  =  new  CommandLine();  }	      if(stopAtNonOption)    {    Option    option    =    options.getOption(null);    if(option!=    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
42	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  Option  option  =  options.getOption(null);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(!stopAtNonOption)  {  Option  option  =  options.getOption(null);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(!stopAtNonOption)  {  Option  option  =  options.getOption(null);  if(option!=  null)  {  cmd  =  new  CommandLine();  }	      if(stopAtNonOption)    {    Option    option    =    options.getOption(null);    if(option!=    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
43	[BUG]  [BUGGY]  cmd  =  new  CommandLine(options,  group);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  cmd  =  new  CommandLine(options,  group);  [BUGGY]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(options,  group);	  cmd    =    new    CommandLine(options);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
44	[BUG]  [BUGGY]  Option  option  =  options.getOption(group);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  Option  option  =  options.getOption(group);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	Option  option  =  options.getOption(group);  if(option!=  null)  {  cmd  =  new  CommandLine();  }	      if(stopAtNonOption)    {    Option    option    =    options.getOption(group);    if(option!=    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
45	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Options  option  =  options.getOption(group);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  Options  option  =  options.getOption(group);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  Options  option  =  options.getOption(group);  if(option!=  null)  {  cmd  =  new  CommandLine();  }	      if(stopAtNonOption)    {    Option    option    =    options.getOption(group);    if(option!=    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
46	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Option  option  =  options.getOption(group,  expectedOpts);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  Option  option  =  options.getOption(group,  expectedOpts);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  Option  option  =  options.getOption(group,  expectedOpts);  if(option!=  null)  {  cmd  =  new  CommandLine();  }	      if(stopAtNonOption)    {    Option    option    =    options.getOption(group);    if(option!=    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
47	[BUG]  [BUGGY]  cmd  =  new  CommandLine(false);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  cmd  =  new  CommandLine(false);  [BUGGY]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(false);	  cmd    =    new    CommandLine(true);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
48	[BUG]  [BUGGY]  cmd  =  new  CommandLine(true,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  cmd  =  new  CommandLine(true,  stopAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(true,  stopAtNonOption);	  cmd    =    new    CommandLine(true);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
49	[BUG]  [BUGGY]  cmd  =  new  CommandLine(false,  group);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  cmd  =  new  CommandLine(false,  group);  [BUGGY]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(false,  group);	  cmd    =    new    CommandLine(true);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
50	[BUG]  [BUGGY]  cmd  =  new  CommandLine(false,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  cmd  =  new  CommandLine(false,  stopAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(false,  stopAtNonOption);	  cmd    =    new    CommandLine(true);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
51	[BUG]  [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
52	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
53	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(expectedOpts  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setS  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  if(expectedOpts  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setS  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  if(expectedOpts  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setS	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
54	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(expectedOpts  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.set  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  if(expectedOpts  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.set  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  if(expectedOpts  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.set	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
55	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  cmd  =  new  CommandLine(group,  stopAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(group,  stopAtNonOption);	  cmd    =    new    CommandLine(group);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
56	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getRequiredOptions())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getRequiredOptions())  {  cmd.setSelected(null);  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  for(Option  option  :  options.getRequiredOptions())  {  cmd.setSelected(null);  }	      if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
57	[BUG]  [BUGGY]  Option  option  =  options.getOption(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  Option  option  =  options.getOption(options.getRequiredOptions());  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	Option  option  =  options.getOption(options.getRequiredOptions());	      if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
58	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  stopAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  stopAtNonOption);	  cmd    =    new    CommandLine(group.getParser());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
59	[BUG]  [BUGGY]  if(skipParsing)  {  Option  option  =  options.getOption(group);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(skipParsing)  {  Option  option  =  options.getOption(group);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(skipParsing)  {  Option  option  =  options.getOption(group);  if(option!=  null)  {  cmd  =  new  CommandLine();  }	      if(stopAtNonOption)    {    Option    option    =    options.getOption(group);    if(option!=    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
60	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Option  option  =  options.getOption(group,  cmd);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  Option  option  =  options.getOption(group,  cmd);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  Option  option  =  options.getOption(group,  cmd);  if(option!=  null)  {  cmd  =  new  CommandLine();  }	      if(stopAtNonOption)    {    Option    option    =    options.getOption(group);    if(option!=    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
61	[BUG]  [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
62	[BUG]  [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
63	[BUG]  [BUGGY]  cmd  =  new  CommandLine(null,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  cmd  =  new  CommandLine(null,  stopAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(null,  stopAtNonOption);	  cmd    =    new    CommandLine(null);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
64	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Option  option  =  options.getOption(group);  if(option!=  null)  {  skippeParsing  =  false;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  Option  option  =  options.getOption(group);  if(option!=  null)  {  skippeParsing  =  false;  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  Option  option  =  options.getOption(group);  if(option!=  null)  {  skippeParsing  =  false;  }	      if(stopAtNonOption)    {    Option    option    =    options.getOption(group);    if(option!=    null)    {    skipParsing    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
65	[BUG]  [BUGGY]  Option  cmd  =(Option)group.getOption(options.getRequiredOptions(),  null);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  Option  cmd  =(Option)group.getOption(options.getRequiredOptions(),  null);  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	Option  cmd  =(Option)group.getOption(options.getRequiredOptions(),  null);	      Option    cmd    =(Option)group.getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
66	[BUG]  [BUGGY]  Option  cmd  =(Option)group.getOption(options.getRequiredOptions(),  group);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  Option  cmd  =(Option)group.getOption(options.getRequiredOptions(),  group);  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	Option  cmd  =(Option)group.getOption(options.getRequiredOptions(),  group);	      Option    cmd    =(Option)group.getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
67	[BUG]  [BUGGY]  cmd  =  new  CommandLine(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  cmd  =  new  CommandLine(options,  stopAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(options,  stopAtNonOption);	  cmd    =    new    CommandLine(options);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
68	[BUG]  [BUGGY]  if(skipParsing)  {  Option  option  =  options.getOption(null);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(skipParsing)  {  Option  option  =  options.getOption(null);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(skipParsing)  {  Option  option  =  options.getOption(null);  if(option!=  null)  {  cmd  =  new  CommandLine();  }	      if(stopAtNonOption)    {    Option    option    =    options.getOption(null);    if(option!=    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
69	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getRequiredOptions())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getRequiredOptions())  {  cmd.addChangeListener(this);  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  for(Option  option  :  options.getRequiredOptions())  {  cmd.addChangeListener(this);  }	      if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
70	[BUG]  [BUGGY]  Option  option  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  Option  option  =  options.getOptions();  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	Option  option  =  options.getOptions();	      if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
71	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  Option  cmd  =  options.getOption(group,  stopAtNonOption);  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	Option  cmd  =  options.getOption(group,  stopAtNonOption);	      Option    cmd    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
72	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentOption);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  Option  cmd  =  options.getOption(currentOption);  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	Option  cmd  =  options.getOption(currentOption);	      Option    cmd    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
73	[BUG]  [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener()  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener()  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener()	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(new    ChangeListener());    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
74	[BUG]  [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListen  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListen  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListen	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(new    ChangeListener());    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
75	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getRequiredOptions())  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getRequiredOptions())  {  cmd  =  new  CommandLine();  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  for(Option  option  :  options.getRequiredOptions())  {  cmd  =  new  CommandLine();  }	      if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
76	[BUG]  [BUGGY]  if(skipParsing)  {  Option  option  =  options.getOption(currentToken);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(skipParsing)  {  Option  option  =  options.getOption(currentToken);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(skipParsing)  {  Option  option  =  options.getOption(currentToken);  if(option!=  null)  {  cmd  =  new  CommandLine();  }	      if(stopAtNonOption)    {    Option    option    =    options.getOption(currentToken);    if(option!=    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
77	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Option  currentToken  =  options.getOption(currentToken);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  Option  currentToken  =  options.getOption(currentToken);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  Option  currentToken  =  options.getOption(currentToken);  if(option!=  null)  {  cmd  =  new  CommandLine();  }	      if(stopAtNonOption)    {    Option    option    =    options.getOption(currentToken);    if(option!=    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
78	[BUG]  [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener(this)  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener(this)  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener(this)	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(new    ChangeListener(this));    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
79	[BUG]  [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(new    ChangeListener(this));    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
80	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  cmd  =  new  CommandLine(currentToken,  stopAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(currentToken,  stopAtNonOption);	  cmd    =    new    CommandLine(currentToken);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
81	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken,  currentOption);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  cmd  =  new  CommandLine(currentToken,  currentOption);  [BUGGY]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(currentToken,  currentOption);	  cmd    =    new    CommandLine(currentToken);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
82	[BUG]  [BUGGY]  cmd  =  new  CommandLine(options,  currentToken);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  cmd  =  new  CommandLine(options,  currentToken);  [BUGGY]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(options,  currentToken);	  cmd    =    new    CommandLine(options);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
83	[BUG]  [BUGGY]  Option  cmd  =(Option)group.getOption(options.getRequiredOptions(),  currentToken);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  Option  cmd  =(Option)group.getOption(options.getRequiredOptions(),  currentToken);  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	Option  cmd  =(Option)group.getOption(options.getRequiredOptions(),  currentToken);	      Option    cmd    =(Option)group.getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
84	[BUG]  [BUGGY]  if(skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
85	[BUG]  [BUGGY]  if(skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
86	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(group);  if(option!=  null)  {  skipParsing  =  false;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(group);  if(option!=  null)  {  skipParsing  =  false;  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	OptionGroup  group  =  options.getOptionGroup(group);  if(option!=  null)  {  skipParsing  =  false;  }	      if(stopAtNonOption)    {    Option    option    =    options.getOption(group);    if(option!=    null)    {    skipParsing    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
87	[BUG]  [BUGGY]  Option  group  =  options.getOption(group);  if(option!=  null)  {  skipParsing  =  false;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  Option  group  =  options.getOption(group);  if(option!=  null)  {  skipParsing  =  false;  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	Option  group  =  options.getOption(group);  if(option!=  null)  {  skipParsing  =  false;  }	      if(stopAtNonOption)    {    Option    option    =    options.getOption(group);    if(option!=    null)    {    skipParsing    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
88	[BUG]  [BUGGY]  cmd  =  new  CommandLine(cmd);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  cmd  =  new  CommandLine(cmd);  [BUGGY]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(cmd);	  cmd    =    new    CommandLine(group);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
89	[BUG]  [BUGGY]  Option  option  =  options.getOption(group);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  Option  option  =  options.getOption(group);  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	Option  option  =  options.getOption(group);	      if(stopAtNonOption)    {    Option    option    =    options.getOption(group);    if(option!=    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
90	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(group);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(group);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	OptionGroup  group  =  options.getOptionGroup(group);  if(option!=  null)  {  cmd  =  new  CommandLine();  }	      if(stopAtNonOption)    {    Option    option    =    options.getOption(group);    if(option!=    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
91	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(group.getName());  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  Option  cmd  =  options.getOption(group.getName());  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	Option  cmd  =  options.getOption(group.getName());	      Option    cmd    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
92	[BUG]  [BUGGY]  if(option!=  null)  {  Option  option  =  options.getOption(null);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(option!=  null)  {  Option  option  =  options.getOption(null);  if(option!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(option!=  null)  {  Option  option  =  options.getOption(null);  if(option!=  null)  {  cmd  =  new  CommandLine();  }	      if(stopAtNonOption)    {    Option    option    =    options.getOption(null);    if(option!=    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
93	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
94	[BUG]  [BUGGY]  if(skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
95	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getOptionArguments())  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getOptionArguments())  {  cmd  =  new  CommandLine();  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  for(Option  option  :  options.getOptionArguments())  {  cmd  =  new  CommandLine();  }	      if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
96	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  group);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  group);  [BUGGY]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  group);	  cmd    =    new    CommandLine(group.getParser());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
97	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	Option  option  =  options.getOption(option);	      if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
98	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getOptionOpts())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getOptionOpts())  {  cmd.addChangeListener(this);  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(stopAtNonOption)  {  for(Option  option  :  options.getOptionOpts())  {  cmd.addChangeListener(this);  }	      if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
99	[BUG]  [BUGGY]  if(skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener());  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }    [BUGGY]  if(skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener());  }  [BUGGY]    cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	114	114	1	replace	if(skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(new  ChangeListener());  }	      if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(new    ChangeListener());    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
