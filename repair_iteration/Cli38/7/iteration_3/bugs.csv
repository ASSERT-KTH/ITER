bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  options  =  options.getOption(pos,  token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  options  =  options.getOption(pos,  token);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOption(pos,  token);	  Option    options    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
2	[BUG]  [BUGGY]  Option  options  =  options.getOption(pos  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  options  =  options.getOption(pos  +  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOption(pos  +  1);	  Option    options    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
3	[BUG]  [BUGGY]  Option  options  =  options.getOption(pos  -  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  options  =  options.getOption(pos  -  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOption(pos  -  1);	  Option    options    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
4	[BUG]  [BUGGY]  pos  =  token.indexOf( "= ",  pos  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  pos  =  token.indexOf( "= ",  pos  +  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	pos  =  token.indexOf( "= ",  pos  +  1);	  pos    =    token.indexOf(   "=       ",    pos);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
5	[BUG]  [BUGGY]  pos  =  token.indexOf( "= ",  0);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  pos  =  token.indexOf( "= ",  0);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	pos  =  token.indexOf( "= ",  0);	  pos    =    token.indexOf(   "=       ",    pos);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
6	[BUG]  [BUGGY]  pos  =  token.indexOf( "=? ",  pos);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  pos  =  token.indexOf( "=? ",  pos);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	pos  =  token.indexOf( "=? ",  pos);	  pos    =    token.indexOf(   "=       ",    pos);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
7	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos  +  1  -  pos);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(pos  +  1  -  pos);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(pos  +  1  -  pos);	  Option    option    =    options.getOption(pos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
8	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos  -  1  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(pos  -  1  +  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(pos  -  1  +  1);	  Option    option    =    options.getOption(pos    -    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
9	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos  -  1L);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(pos  -  1L);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(pos  -  1L);	  Option    option    =    options.getOption(pos    -    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
10	[BUG]  [BUGGY]  Option  options  =  options.getOptions(pos  -  1  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  options  =  options.getOptions(pos  -  1  +  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOptions(pos  -  1  +  1);	  Option    options    =    options.getOptions(pos    -    1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  Option  options  =  options.getOptions(pos  -  1,  token);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  options  =  options.getOptions(pos  -  1,  token);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOptions(pos  -  1,  token);	  Option    options    =    options.getOptions(pos    -    1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  option  =  options.getOption(pos  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  option  =  options.getOption(pos  +  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	option  =  options.getOption(pos  +  1);	  option    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
13	[BUG]  [BUGGY]  option  =  options.getOption(pos,  token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  option  =  options.getOption(pos,  token);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	option  =  options.getOption(pos,  token);	  option    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
14	[BUG]  [BUGGY]  option  =  options.getOption(pos  -  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  option  =  options.getOption(pos  -  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	option  =  options.getOption(pos  -  1);	  option    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  String  t  =  token!=  null?  token  :  token.substring(0,  pos  +  1));  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token!=  null?  token  :  token.substring(0,  pos  +  1));  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token!=  null?  token  :  token.substring(0,  pos  +  1));	  String    t    =    token!=    null?    token    :    token.substring(0,    pos));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
16	[BUG]  [BUGGY]  String  t  =  token!=  null?  token  :  token.substring(0,  pos).trim());  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token!=  null?  token  :  token.substring(0,  pos).trim());  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token!=  null?  token  :  token.substring(0,  pos).trim());	  String    t    =    token!=    null?    token    :    token.substring(0,    pos));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
17	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "=?   ");  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  int  pos  =  token.lastIndexOf( "=?   ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	int  pos  =  token.lastIndexOf( "=?   ");	  int    pos    =    token.indexOf(   "=?   ");    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
18	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "=?   ",  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  int  pos  =  token.indexOf( "=?   ",  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	int  pos  =  token.indexOf( "=?   ",  1);	  int    pos    =    token.indexOf(   "=?   ");    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
19	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "- ");  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  int  pos  =  token.lastIndexOf( "- ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	int  pos  =  token.lastIndexOf( "- ");	  int    pos    =    token.lastIndexOf(   "=   ");    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
20	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "= ".length());  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  int  pos  =  token.lastIndexOf( "= ".length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	int  pos  =  token.lastIndexOf( "= ".length());	  int    pos    =    token.lastIndexOf(   "=   ");    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
21	[BUG]  [BUGGY]  int  t  =  token.lastIndexOf( "= ");  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  int  t  =  token.lastIndexOf( "= ");  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	int  t  =  token.lastIndexOf( "= ");	  int    t    =    token.indexOf(   "=   ");    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
22	[BUG]  [BUGGY]  int  t  =  token.indexOf( "- ");  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  int  t  =  token.indexOf( "- ");  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	int  t  =  token.indexOf( "- ");	  int    t    =    token.indexOf(   "=   ");    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
23	[BUG]  [BUGGY]  int  t  =  token.indexOf( "=? ");  [CE]  illegal  start  of  expression  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  int  t  =  token.indexOf( "=? ");  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	int  t  =  token.indexOf( "=? ");	  int    t    =    token.indexOf(   "=   ");    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
24	[BUG]  [BUGGY]  String  t  =  token  ==  null?  token  :  token.substring(0,  pos).trim();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token  ==  null?  token  :  token.substring(0,  pos).trim();  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token  ==  null?  token  :  token.substring(0,  pos).trim();	  String    t    =    token!=    null?    token    :    token.substring(0,    pos).trim();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
25	[BUG]  [BUGGY]  String  t  =  token!=  null?  token  :  token.substring(pos,  pos).trim();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token!=  null?  token  :  token.substring(pos,  pos).trim();  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token!=  null?  token  :  token.substring(pos,  pos).trim();	  String    t    =    token!=    null?    token    :    token.substring(0,    pos).trim();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
26	[BUG]  [BUGGY]  String  t  =  token!=  null?  token  :  token.substring(0,  pos  +  1).trim();  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token!=  null?  token  :  token.substring(0,  pos  +  1).trim();  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token!=  null?  token  :  token.substring(0,  pos  +  1).trim();	  String    t    =    token!=    null?    token    :    token.substring(0,    pos).trim();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
27	[BUG]  [BUGGY]  String  t  =  token!=  -1?  token  :  token.substring(0,  pos  +  2);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token!=  -1?  token  :  token.substring(0,  pos  +  2);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token!=  -1?  token  :  token.substring(0,  pos  +  2);	  String    t    =    token!=    -1?    token    :    token.substring(0,    pos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
28	[BUG]  [BUGGY]  pos  =  token.indexOf('=',  pos);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  pos  =  token.indexOf('=',  pos);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	pos  =  token.indexOf('=',  pos);	  pos    =    token.indexOf('=');    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
29	[BUG]  [BUGGY]  pos  =  token.indexOf('=')+  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  pos  =  token.indexOf('=')+  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	pos  =  token.indexOf('=')+  1;	  pos    =    token.indexOf('=');    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
30	[BUG]  [BUGGY]  pos  =  token.lastIndexOf('=');  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  pos  =  token.lastIndexOf('=');  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	pos  =  token.lastIndexOf('=');	  pos    =    token.indexOf('=');    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
31	[BUG]  [BUGGY]  Option  options  =  options.getOptions(pos  +  1  -  pos);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  options  =  options.getOptions(pos  +  1  -  pos);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOptions(pos  +  1  -  pos);	  Option    options    =    options.getOptions(pos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
32	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos,  pos);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(pos,  pos);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(pos,  pos);	  Option    option    =    options.getOption(pos,    token);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
33	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos,  token  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(pos,  token  +  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(pos,  token  +  1);	  Option    option    =    options.getOption(pos,    token);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
34	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(pos,  pos  +  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(pos,  pos  +  1);	  Option    option    =    options.getOption(pos,    token);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
35	[BUG]  [BUGGY]  char  t  =  token.charAt(0)  ==  -1?  token  :  token.substring(0,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  char  t  =  token.charAt(0)  ==  -1?  token  :  token.substring(0,  pos  +  1);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	char  t  =  token.charAt(0)  ==  -1?  token  :  token.substring(0,  pos  +  1);	  char    t    =    token.charAt(0)    ==    -1?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
36	[BUG]  [BUGGY]  char  t  =  token.charAt(pos)  ==  -1?  token  :  token.substring(0,  pos);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  char  t  =  token.charAt(pos)  ==  -1?  token  :  token.substring(0,  pos);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	char  t  =  token.charAt(pos)  ==  -1?  token  :  token.substring(0,  pos);	  char    t    =    token.charAt(0)    ==    -1?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
37	[BUG]  [BUGGY]  pos  =  token.lastIndexOf( "=? ");  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  pos  =  token.lastIndexOf( "=? ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	pos  =  token.lastIndexOf( "=? ");	  pos    =    token.lastIndexOf(   "=   ");    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
38	[BUG]  [BUGGY]  Option  option  =  options.getOption(p,  pos);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(p,  pos);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(p,  pos);	  Option    option    =    options.getOption(p);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
39	[BUG]  [BUGGY]  char  t  =  token.charAt(0)!=  -1?  token  :  token.substring(0,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  char  t  =  token.charAt(0)!=  -1?  token  :  token.substring(0,  pos  +  1);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	char  t  =  token.charAt(0)!=  -1?  token  :  token.substring(0,  pos  +  1);	  char    t    =    token.charAt(0)!=    -1?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
40	[BUG]  [BUGGY]  char  t  =  token.charAt(pos)!=  -1?  token  :  token.substring(0,  pos);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  char  t  =  token.charAt(pos)!=  -1?  token  :  token.substring(0,  pos);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	char  t  =  token.charAt(pos)!=  -1?  token  :  token.substring(0,  pos);	  char    t    =    token.charAt(0)!=    -1?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
41	[BUG]  [BUGGY]  pos  =  token.indexOf( "=?   ",  0);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  pos  =  token.indexOf( "=?   ",  0);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	pos  =  token.indexOf( "=?   ",  0);	  pos    =    token.indexOf(   "=?   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
42	[BUG]  [BUGGY]  String  t  =  token.length()  ==  1?  token  :  token.substring(0,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token.length()  ==  1?  token  :  token.substring(0,  pos  +  1);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token.length()  ==  1?  token  :  token.substring(0,  pos  +  1);	  String    t    =    token.length()    ==    1?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
43	[BUG]  [BUGGY]  String  t  =  token.length()  ==  1?  token  :  token.substring(0,  pos));  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token.length()  ==  1?  token  :  token.substring(0,  pos));  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token.length()  ==  1?  token  :  token.substring(0,  pos));	  String    t    =    token.length()    ==    1?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
44	[BUG]  [BUGGY]  String  t  =  token!=  -1?  token  :  token.substring(0,  pos  +  1));  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token!=  -1?  token  :  token.substring(0,  pos  +  1));  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token!=  -1?  token  :  token.substring(0,  pos  +  1));	  String    t    =    token!=    -1?    token    :    token.substring(0,    pos));    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
45	[BUG]  [BUGGY]  String  t  =  token  ==  -1?  token  :  token.substring(0,  pos));  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token  ==  -1?  token  :  token.substring(0,  pos));  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token  ==  -1?  token  :  token.substring(0,  pos));	  String    t    =    token!=    -1?    token    :    token.substring(0,    pos));    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
46	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf('=');  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  int  pos  =  token.lastIndexOf('=');  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	int  pos  =  token.lastIndexOf('=');	  int    pos    =    token.indexOf('=');    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
47	[BUG]  [BUGGY]  int  pos  =  token.indexOf('=')+  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  int  pos  =  token.indexOf('=')+  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	int  pos  =  token.indexOf('=')+  1;	  int    pos    =    token.indexOf('=');    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
48	[BUG]  [BUGGY]  int  pos  =  token.indexOf('=',  0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  int  pos  =  token.indexOf('=',  0);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	int  pos  =  token.indexOf('=',  0);	  int    pos    =    token.indexOf('=');    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
49	[BUG]  [BUGGY]  String  t  =  token  ==  null?  token  :  token.substring(0,  pos  +  1));  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token  ==  null?  token  :  token.substring(0,  pos  +  1));  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token  ==  null?  token  :  token.substring(0,  pos  +  1));	  String    t    =    token    ==    null?    token    :    token.substring(0,    pos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
50	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  pos);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  options  =  options.getOptions(token,  pos);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOptions(token,  pos);	  Option    options    =    options.getOptions(optName,    pos);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
51	[BUG]  [BUGGY]  Option  options  =  options.getOptions(pos,  optName);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  options  =  options.getOptions(pos,  optName);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOptions(pos,  optName);	  Option    options    =    options.getOptions(optName,    pos);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
52	[BUG]  [BUGGY]  Options  options  =  options.getOptions(token,  pos);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Options  options  =  options.getOptions(token,  pos);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Options  options  =  options.getOptions(token,  pos);	  Option    options    =    options.getOptions(optName,    pos);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
53	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(token,  pos  +  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(token,  pos  +  1);	  Option    option    =    options.getOption(token,    pos);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
54	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  pos  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(token,  pos  -  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(token,  pos  -  1);	  Option    option    =    options.getOption(token,    pos);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
55	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  0);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(token,  0);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(token,  0);	  Option    option    =    options.getOption(token,    pos);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
56	[BUG]  [BUGGY]  Option  options  =  options.getOptions(pos,  pos);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  options  =  options.getOptions(pos,  pos);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOptions(pos,  pos);	  Option    options    =    options.getOptions(pos,    token);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
57	[BUG]  [BUGGY]  Option  options  =  options.getOptions(pos,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  options  =  options.getOptions(pos,  pos  +  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOptions(pos,  pos  +  1);	  Option    options    =    options.getOptions(pos,    token);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
58	[BUG]  [BUGGY]  Option  options  =  options.getOptions(pos,  token  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  options  =  options.getOptions(pos,  token  +  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOptions(pos,  token  +  1);	  Option    options    =    options.getOptions(pos,    token);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
59	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos)+  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(pos)+  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(pos)+  1;	  Option    option    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
60	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)/  1;  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(token)/  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(token)/  1;	  Option    option    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
61	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)+  2;  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(token)+  2;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(token)+  2;	  Option    option    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(pos);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  options  =  currentOption.getOption(pos);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  currentOption.getOption(pos);	  Option    options    =    option.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
63	[BUG]  [BUGGY]  Option  options  =  option.getOption(pos  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  options  =  option.getOption(pos  +  1);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  option.getOption(pos  +  1);	  Option    options    =    option.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
64	[BUG]  [BUGGY]  Option  option  =  options.getOption(optionName,  pos);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(optionName,  pos);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(optionName,  pos);	  Option    option    =    options.getOption(optionName);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
65	[BUG]  [BUGGY]  t  =  options.getOption(pos  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  t  =  options.getOption(pos  +  1);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	t  =  options.getOption(pos  +  1);	  t    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
66	[BUG]  [BUGGY]  t  =  options.getOption(pos,  token);  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  t  =  options.getOption(pos,  token);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	t  =  options.getOption(pos,  token);	  t    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
67	[BUG]  [BUGGY]  t  =  options.getOption(pos,  value);  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  t  =  options.getOption(pos,  value);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	t  =  options.getOption(pos,  value);	  t    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
68	[BUG]  [BUGGY]  String  t  =  token.length()  ==  0?  token  :  token.substring(0,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token.length()  ==  0?  token  :  token.substring(0,  pos  +  1);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token.length()  ==  0?  token  :  token.substring(0,  pos  +  1);	  String    t    =    token.length()    ==    0?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
69	[BUG]  [BUGGY]  String  t  =  token.length()  ==  0?  token  :  token.substring(0,  pos  +  2);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token.length()  ==  0?  token  :  token.substring(0,  pos  +  2);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token.length()  ==  0?  token  :  token.substring(0,  pos  +  2);	  String    t    =    token.length()    ==    0?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
70	[BUG]  [BUGGY]  Options  options  =  options.getOptions(pos  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Options  options  =  options.getOptions(pos  +  1);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Options  options  =  options.getOptions(pos  +  1);	  Options    options    =    options.getOptions(pos);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
71	[BUG]  [BUGGY]  Options  options  =  options.getOptions(pos  -  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Options  options  =  options.getOptions(pos  -  1);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Options  options  =  options.getOptions(pos  -  1);	  Options    options    =    options.getOptions(pos);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
72	[BUG]  [BUGGY]  Options  options  =  options.getOptions(pos,  t);  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Options  options  =  options.getOptions(pos,  t);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Options  options  =  options.getOptions(pos,  t);	  Options    options    =    options.getOptions(pos);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
73	[BUG]  [BUGGY]  String  t  =  token.length()  ==  -1?  token  :  token.substring(0,  pos  +  2);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token.length()  ==  -1?  token  :  token.substring(0,  pos  +  2);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token.length()  ==  -1?  token  :  token.substring(0,  pos  +  2);	  String    t    =    token.length()    ==    -1?    token    :    token.substring(0,    pos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
74	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos,  optName);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(pos,  optName);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(pos,  optName);	  Option    option    =    options.getOption(optName,    pos);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
75	[BUG]  [BUGGY]  options.getOption(token,  pos);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  options.getOption(token,  pos);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	options.getOption(token,  pos);	  Option    option    =    options.getOption(optName,    pos);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
76	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  token);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(options,  token);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(options,  token);	  Option    option    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
77	[BUG]  [BUGGY]  String  t  =  token.charAt(pos)  ==  -1?  token  :  token.substring(0,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token.charAt(pos)  ==  -1?  token  :  token.substring(0,  pos  +  1);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token.charAt(pos)  ==  -1?  token  :  token.substring(0,  pos  +  1);	  String    t    =    token.charAt(pos)    ==    -1?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
78	[BUG]  [BUGGY]  char  t  =  token.charAt(pos)  ==  -1?  token  :  token.substring(0,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  char  t  =  token.charAt(pos)  ==  -1?  token  :  token.substring(0,  pos  +  1);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	char  t  =  token.charAt(pos)  ==  -1?  token  :  token.substring(0,  pos  +  1);	  String    t    =    token.charAt(pos)    ==    -1?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
79	[BUG]  [BUGGY]  pos  =  token.indexOf( "== ",  pos);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  pos  =  token.indexOf( "== ",  pos);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	pos  =  token.indexOf( "== ",  pos);	  pos    =    token.indexOf(   "=       ",    pos);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
80	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos  -  1  -  token);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(pos  -  1  -  token);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(pos  -  1  -  token);	  Option    option    =    options.getOption(pos    -    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
81	[BUG]  [BUGGY]  Option  option  =  options.getOption(token  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(token  -  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(token  -  1);	  Option    option    =    options.getOption(pos    -    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
82	[BUG]  [BUGGY]  String  t  =  token.charAt(pos)!=  -1?  token  :  token.substring(0,  pos);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token.charAt(pos)!=  -1?  token  :  token.substring(0,  pos);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token.charAt(pos)!=  -1?  token  :  token.substring(0,  pos);	  String    t    =    token.charAt(pos)    ==    -1?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
83	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "=?   ",  0);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  int  pos  =  token.indexOf( "=?   ",  0);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	int  pos  =  token.indexOf( "=?   ",  0);	  int    pos    =    token.indexOf(   "=?   ");    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
84	[BUG]  [BUGGY]  Option  options  =  options.getOptions(pos  -  1  -  token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  options  =  options.getOptions(pos  -  1  -  token);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOptions(pos  -  1  -  token);	  Option    options    =    options.getOptions(pos    -    1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
85	[BUG]  [BUGGY]  t  =  options.getOption(pos)+  1;  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  t  =  options.getOption(pos)+  1;  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	t  =  options.getOption(pos)+  1;	  t    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
86	[BUG]  [BUGGY]  Option  options  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  options  =  options.getOption(token);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOption(token);	  Option    options    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
87	[BUG]  [BUGGY]  String  t  =  token.charAt(pos  +  1)  ==  -1?  token  :  token.substring(0,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token.charAt(pos  +  1)  ==  -1?  token  :  token.substring(0,  pos  +  1);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token.charAt(pos  +  1)  ==  -1?  token  :  token.substring(0,  pos  +  1);	  String    t    =    token.charAt(0)    ==    -1?    token    :    token.substring(0,    pos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
88	[BUG]  [BUGGY]  String  t  =  token  ==  null?  token  :  token.substring(0,  pos)+  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token  ==  null?  token  :  token.substring(0,  pos)+  1);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token  ==  null?  token  :  token.substring(0,  pos)+  1);	  String    t    =    token    ==    null?    token    :    token.substring(0,    pos));    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
89	[BUG]  [BUGGY]  Option  options  =  options.getOptions(value,  pos);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  options  =  options.getOptions(value,  pos);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOptions(value,  pos);	  Option    options    =    options.getOptions(optName,    pos);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
90	[BUG]  [BUGGY]  String  t  =  token.length()!=  1?  token  :  token.substring(0,  pos);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token.length()!=  1?  token  :  token.substring(0,  pos);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token.length()!=  1?  token  :  token.substring(0,  pos);	  String    t    =    token.length()    ==    1?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
91	[BUG]  [BUGGY]  Option  options  =  options.getOptions(option,  pos);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  options  =  options.getOptions(option,  pos);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOptions(option,  pos);	  Option    options    =    options.getOptions(option);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
92	[BUG]  [BUGGY]  Option  options  =  options.getOptions(pos,  token  -  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  options  =  options.getOptions(pos,  token  -  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOptions(pos,  token  -  1);	  Option    options    =    options.getOptions(pos,    token);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
93	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  pos);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(options,  pos);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(options,  pos);	  Option    option    =    options.getOption(p);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
94	[BUG]  [BUGGY]  Option  options  =  option.getOption(pos  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  options  =  option.getOption(pos  -  1);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  option.getOption(pos  -  1);	  Option    options    =    option.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
95	[BUG]  [BUGGY]  String  t  =  token!=  null?  token  :  token.substring(0,  pos  +  2);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token!=  null?  token  :  token.substring(0,  pos  +  2);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token!=  null?  token  :  token.substring(0,  pos  +  2);	  String    t    =    token!=    null?    token    :    token.substring(0,    pos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
96	[BUG]  [BUGGY]  Options  options  =  options.getOptions(pos,  token);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Options  options  =  options.getOptions(pos,  token);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Options  options  =  options.getOptions(pos,  token);	  Options    options    =    options.getOptions(pos);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
97	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-')+  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  int  pos  =  token.indexOf('-')+  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	int  pos  =  token.indexOf('-')+  1;	  int    pos    =    token.indexOf(   "-   ");    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
98	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-');  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  int  pos  =  token.indexOf('-');  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	int  pos  =  token.indexOf('-');	  int    pos    =    token.indexOf(   "-   ");    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
99	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)+  0;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(token)+  0;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(token)+  0;	  Option    option    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
100	[BUG]  [BUGGY]  String  t  =  token  ==  null?  token  :  token.substring(0,  pos  +  2);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token  ==  null?  token  :  token.substring(0,  pos  +  2);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token  ==  null?  token  :  token.substring(0,  pos  +  2);	  String    t    =    token    ==    null?    token    :    token.substring(0,    pos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
101	[BUG]  [BUGGY]  Option  option  =  options.getOption(token  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(token  +  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(token  +  1);	  Option    option    =    options.getOption(pos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
102	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos  +  1  -  token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(pos  +  1  -  token);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(pos  +  1  -  token);	  Option    option    =    options.getOption(pos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
103	[BUG]  [BUGGY]  String  t  =  token!=  null?  token  :  token.substring(0,  pos)+  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token!=  null?  token  :  token.substring(0,  pos)+  1);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token!=  null?  token  :  token.substring(0,  pos)+  1);	  String    t    =    token!=    null?    token    :    token.substring(0,    pos));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
104	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  0,  pos);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(token,  0,  pos);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(token,  0,  pos);	  Option    option    =    options.getOption(token,    pos);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
105	[BUG]  [BUGGY]  Option  option  =  options.getOption(value,  pos);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(value,  pos);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(value,  pos);	  Option    option    =    options.getOption(optName,    pos);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
106	[BUG]  [BUGGY]  String  t  =  token.length()!=  0?  token  :  token.substring(0,  pos);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token.length()!=  0?  token  :  token.substring(0,  pos);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token.length()!=  0?  token  :  token.substring(0,  pos);	  String    t    =    token.length()    ==    0?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
107	[BUG]  [BUGGY]  Option  options  =  options.getOptions(pos  +  1  -  token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  options  =  options.getOptions(pos  +  1  -  token);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOptions(pos  +  1  -  token);	  Option    options    =    options.getOptions(pos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
108	[BUG]  [BUGGY]  Option  options  =  option.getOptions(pos);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  options  =  option.getOptions(pos);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  option.getOptions(pos);	  Option    options    =    option.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
109	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos,  token.length());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(pos,  token.length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(pos,  token.length());	  Option    option    =    options.getOption(pos,    token);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
110	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos  -  1,  token);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(pos  -  1,  token);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(pos  -  1,  token);	  Option    option    =    options.getOption(pos    -    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
111	[BUG]  [BUGGY]  char  t  =  token!=  null?  token  :  token.substring(0,  pos).trim();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  char  t  =  token!=  null?  token  :  token.substring(0,  pos).trim();  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	char  t  =  token!=  null?  token  :  token.substring(0,  pos).trim();	  String    t    =    token!=    null?    token    :    token.substring(0,    pos).trim();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
112	[BUG]  [BUGGY]  Options  options  =  options.getOptions(t);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Options  options  =  options.getOptions(t);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Options  options  =  options.getOptions(t);	  Options    options    =    options.getOptions(pos);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
113	[BUG]  [BUGGY]  Option  options  =  options.getOptions(pos,  token.length());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  options  =  options.getOptions(pos,  token.length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOptions(pos,  token.length());	  Option    options    =    options.getOptions(pos,    token);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
114	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(opt);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(opt);	  Option    option    =    options.getOption(p);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
115	[BUG]  [BUGGY]  option  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  option  =  options.getOption(token);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	option  =  options.getOption(token);	  option    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
116	[BUG]  [BUGGY]  String  t  =  token.charAt(0)!=  -1?  token  :  token.substring(0,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token.charAt(0)!=  -1?  token  :  token.substring(0,  pos  +  1);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token.charAt(0)!=  -1?  token  :  token.substring(0,  pos  +  1);	  String    t    =    token.charAt(0)    ==    -1?    token    :    token.substring(0,    pos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
117	[BUG]  [BUGGY]  int  pos  =  token.indexOf('=',  pos);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  int  pos  =  token.indexOf('=',  pos);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	int  pos  =  token.indexOf('=',  pos);	  int    pos    =    token.indexOf('=');    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
118	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)-  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(token)-  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(token)-  1;	  Option    option    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
119	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  pos,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(token,  pos,  expectedOpts);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(token,  pos,  expectedOpts);	  Option    option    =    options.getOption(token,    pos);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
120	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  pos)+  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  Option  option  =  options.getOption(token,  pos)+  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(token,  pos)+  1;	  Option    option    =    options.getOption(token,    pos);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
121	[BUG]  [BUGGY]  pos  =  token.indexOf( "=?, ");  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  pos  =  token.indexOf( "=?, ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	pos  =  token.indexOf( "=?, ");	  pos    =    token.indexOf(   "=?   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
122	[BUG]  [BUGGY]  String  t  =  token.length()  >=  0?  token  :  token.substring(0,  pos);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");      [BUGGY]  String  t  =  token.length()  >=  0?  token  :  token.substring(0,  pos);  [BUGGY]        if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token.length()  >=  0?  token  :  token.substring(0,  pos);	  String    t    =    token.length()    ==    0?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
