bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  pos  =  token.indexOf( "=? ");  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  pos  =  token.indexOf( "=? ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	pos  =  token.indexOf( "=? ");	      pos    =    token.indexOf(   "=   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  pos  =  token.lastIndexOf( "= ");  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  pos  =  token.lastIndexOf( "= ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	pos  =  token.lastIndexOf( "= ");	      pos    =    token.indexOf(   "=   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  pos);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  Option  option  =  options.getOption(token,  pos);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(token,  pos);	      Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
4	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)+  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  Option  option  =  options.getOption(token)+  1;  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(token)+  1;	      Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
5	[BUG]  [BUGGY]  Option  option  =  options.getOption(p);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  Option  option  =  options.getOption(p);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(p);	      Option    option    =    options.getOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
6	[BUG]  [BUGGY]  option  =  options.getOption(pos);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  option  =  options.getOption(pos);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	option  =  options.getOption(pos);	      Option    option    =    options.getOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  String  t  =  token!=  -1?  token  :  token.substring(0,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  String  t  =  token!=  -1?  token  :  token.substring(0,  pos  +  1);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token!=  -1?  token  :  token.substring(0,  pos  +  1);	  String    t    =    token    ==    -1?    token    :    token.substring(0,    pos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
8	[BUG]  [BUGGY]  String  t  =  token  ==  -1?  token  :  token.substring(0,  pos  +  2);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  String  t  =  token  ==  -1?  token  :  token.substring(0,  pos  +  2);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token  ==  -1?  token  :  token.substring(0,  pos  +  2);	  String    t    =    token    ==    -1?    token    :    token.substring(0,    pos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  String  t  =  token  ==  null?  token  :  token.substring(0,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  String  t  =  token  ==  null?  token  :  token.substring(0,  pos  +  1);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token  ==  null?  token  :  token.substring(0,  pos  +  1);	  String    t    =    token    ==    -1?    token    :    token.substring(0,    pos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  Option  options  =  options.getOptions(pos  +  1);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  Option  options  =  options.getOptions(pos  +  1);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOptions(pos  +  1);	      Option    options    =    options.getOptions(pos);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  Option  options  =  options.getOptions(pos  -  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  Option  options  =  options.getOptions(pos  -  1);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOptions(pos  -  1);	      Option    options    =    options.getOptions(pos);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  Option  options  =  options.getOptions(pos,  token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  Option  options  =  options.getOptions(pos,  token);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOptions(pos,  token);	      Option    options    =    options.getOptions(pos);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
13	[BUG]  [BUGGY]  Options  options  =  options.getOptions(pos);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  Options  options  =  options.getOptions(pos);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Options  options  =  options.getOptions(pos);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
14	[BUG]  [BUGGY]  t  =  options.getOption(pos);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  t  =  options.getOption(pos);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	t  =  options.getOption(pos);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
15	[BUG]  [BUGGY]  int  t  =  token.indexOf( "= ");  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  int  t  =  token.indexOf( "= ");  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	int  t  =  token.indexOf( "= ");	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
16	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "= ");  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  int  pos  =  token.lastIndexOf( "= ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	int  pos  =  token.lastIndexOf( "= ");	      int    pos    =    token.indexOf(   "=   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ");  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  int  pos  =  token.indexOf( "- ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	int  pos  =  token.indexOf( "- ");	      int    pos    =    token.indexOf(   "=   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  Option  options  =  options.getOptions(token);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOptions(token);	      Option    options    =    options.getOptions(optName);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
19	[BUG]  [BUGGY]  Option  options  =  options.getOption(pos);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  Option  options  =  options.getOption(pos);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOption(pos);	      Option    options    =    options.getOptions(optName);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
20	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos  +  1);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  Option  option  =  options.getOption(pos  +  1);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(pos  +  1);	      Option    option    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
21	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos,  token);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  Option  option  =  options.getOption(pos,  token);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(pos,  token);	      Option    option    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
22	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos  -  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  Option  option  =  options.getOption(pos  -  1);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(pos  -  1);	      Option    option    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  char  t  =  token.charAt(0)  ==  -1?  token  :  token.substring(0,  pos);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  char  t  =  token.charAt(0)  ==  -1?  token  :  token.substring(0,  pos);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	char  t  =  token.charAt(0)  ==  -1?  token  :  token.substring(0,  pos);	  String    t    =    token.charAt(0)    ==    -1?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
24	[BUG]  [BUGGY]  char  t  =  token.charAt(0)!=  -1?  token  :  token.substring(0,  pos);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  char  t  =  token.charAt(0)!=  -1?  token  :  token.substring(0,  pos);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	char  t  =  token.charAt(0)!=  -1?  token  :  token.substring(0,  pos);	  String    t    =    token.charAt(0)    ==    -1?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
25	[BUG]  [BUGGY]  String  t  =  token.charAt(0)  ==  -1?  token  :  token.substring(0,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  String  t  =  token.charAt(0)  ==  -1?  token  :  token.substring(0,  pos  +  1);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token.charAt(0)  ==  -1?  token  :  token.substring(0,  pos  +  1);	  String    t    =    token.charAt(0)    ==    -1?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
26	[BUG]  [BUGGY]  String  t  =  token!=  null?  token  :  token.substring(0,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  String  t  =  token!=  null?  token  :  token.substring(0,  pos  +  1);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token!=  null?  token  :  token.substring(0,  pos  +  1);	  String    t    =    token    ==    null?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  String  t  =  token!=  null?  token  :  token.substring(0,  pos));  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  String  t  =  token!=  null?  token  :  token.substring(0,  pos));  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token!=  null?  token  :  token.substring(0,  pos));	  String    t    =    token!=    null?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
28	[BUG]  [BUGGY]  String  t  =  token!=  null?  token  :  token.substring(0,  pos).trim();  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  String  t  =  token!=  null?  token  :  token.substring(0,  pos).trim();  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token!=  null?  token  :  token.substring(0,  pos).trim();	  String    t    =    token!=    null?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
29	[BUG]  [BUGGY]  String  t  =  token.length()  ==  -1?  token  :  token.substring(0,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  String  t  =  token.length()  ==  -1?  token  :  token.substring(0,  pos  +  1);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token.length()  ==  -1?  token  :  token.substring(0,  pos  +  1);	  String    t    =    token.length()    ==    -1?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
30	[BUG]  [BUGGY]  String  t  =  token.length()  ==  0?  token  :  token.substring(0,  pos);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  String  t  =  token.length()  ==  0?  token  :  token.substring(0,  pos);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token.length()  ==  0?  token  :  token.substring(0,  pos);	  String    t    =    token.length()    ==    -1?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
31	[BUG]  [BUGGY]  String  t  =  token.length()  ==  1?  token  :  token.substring(0,  pos);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  String  t  =  token.length()  ==  1?  token  :  token.substring(0,  pos);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token.length()  ==  1?  token  :  token.substring(0,  pos);	  String    t    =    token.length()    ==    -1?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
32	[BUG]  [BUGGY]  String  t  =  token!=  -1?  token  :  token.substring(0,  pos));  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  String  t  =  token!=  -1?  token  :  token.substring(0,  pos));  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token!=  -1?  token  :  token.substring(0,  pos));	  String    t    =    token!=    -1?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  String  t  =  token.charAt(pos)  ==  -1?  token  :  token.substring(0,  pos);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  String  t  =  token.charAt(pos)  ==  -1?  token  :  token.substring(0,  pos);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token.charAt(pos)  ==  -1?  token  :  token.substring(0,  pos);	  String    t    =    token.charAt(0)    ==    -1?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
34	[BUG]  [BUGGY]  Option  options  =  option.getOption(pos);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  Option  options  =  option.getOption(pos);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  option.getOption(pos);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  Option  option  =  options.getOption(value);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  Option  option  =  options.getOption(value);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(value);	      Option    option    =    options.getOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
36	[BUG]  [BUGGY]  Option  option  =  options.getOption(optName,  pos);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  Option  option  =  options.getOption(optName,  pos);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(optName,  pos);	      Option    option    =    options.getOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
37	[BUG]  [BUGGY]  String  t  =  token  ==  null?  token  :  token.substring(0,  pos));  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  String  t  =  token  ==  null?  token  :  token.substring(0,  pos));  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token  ==  null?  token  :  token.substring(0,  pos));	  String    t    =    token    ==    null?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
38	[BUG]  [BUGGY]  pos  =  token.indexOf('=');  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  pos  =  token.indexOf('=');  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	pos  =  token.indexOf('=');	      pos    =    token.indexOf(   "=   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
39	[BUG]  [BUGGY]  pos  =  token.indexOf( "=   ",  pos);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  pos  =  token.indexOf( "=   ",  pos);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	pos  =  token.indexOf( "=   ",  pos);	      pos    =    token.indexOf(   "=   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
40	[BUG]  [BUGGY]  Option  options  =  options.getOptions(option);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  Option  options  =  options.getOptions(option);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOptions(option);	      Option    options    =    options.getOptions(optName);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
41	[BUG]  [BUGGY]  Option  options  =  options.getOptions(optName,  pos);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  Option  options  =  options.getOptions(optName,  pos);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  options  =  options.getOptions(optName,  pos);	      Option    options    =    options.getOptions(optName);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
42	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "=? ");  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  int  pos  =  token.indexOf( "=? ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	int  pos  =  token.indexOf( "=? ");	      int    pos    =    token.indexOf(   "=   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
43	[BUG]  [BUGGY]  int  pos  =  token.indexOf('=');  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  int  pos  =  token.indexOf('=');  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	int  pos  =  token.indexOf('=');	      int    pos    =    token.indexOf(   "=   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
44	[BUG]  [BUGGY]  String  t  =  token.charAt(0)!=  -1?  token  :  token.substring(0,  pos);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  String  t  =  token.charAt(0)!=  -1?  token  :  token.substring(0,  pos);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token.charAt(0)!=  -1?  token  :  token.substring(0,  pos);	  String    t    =    token.charAt(0)    ==    -1?    token    :    token.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
45	[BUG]  [BUGGY]  Option  option  =  options.getOption(optionName);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");    [BUGGY]  Option  option  =  options.getOption(optionName);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	Option  option  =  options.getOption(optionName);	      Option    option    =    options.getOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
