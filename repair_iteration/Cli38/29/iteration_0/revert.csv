projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java130
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){String[]cmd=newString[cmd.length()];System.arraycopy(arguments,0,cmd,0,expectedOpts.length);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){String[]cmd=newString[cmd.length()];System.arraycopy(arguments,0,cmd,0,currentToken.length);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){String[]cmd=newString[cmd.length()];System.arraycopy(arguments,0,cmd,0,arguments.length);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.getOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.parseOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java130checkRequiredOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkRequiredOptions();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java130if(!stopAtNonOption){checkRequiredOptions();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkRequiredOptions();}else{thrownewIllegalArgumentException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java130if(currentOption!=null){checkRequiredOptions();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkRequiredOptions();}else{defaultParser=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.parseOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.parse(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.parseOption(argument,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java130Optiongroup=options.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java130if(cmd!=null){checkRequiredOptions();}
