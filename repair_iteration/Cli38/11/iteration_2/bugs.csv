bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  option  =  token.substring(0,  token.length()  -  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  option  =  token.substring(0,  token.length()  -  1);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  option  =  token.substring(0,  token.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  String  t  =  token.substring(0,  token.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  token.substring(0,  token.length()  -  1);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.substring(0,  token.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  String  value  =  token.substring(0,  token.length());  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =  token.substring(0,  token.length());  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  token.substring(0,  token.length());	      String    value    =    token.substring(0,    token.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
4	[BUG]  [BUGGY]  String  value  =  token.substring(0,  token.length();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =  token.substring(0,  token.length();  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  token.substring(0,  token.length();	      String    value    =    token.substring(0,    token.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
5	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  null,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  null,  expectedOpts);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  null,  expectedOpts);	  String    t    =    Util.stripLeadingHyphens(token,    null);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
6	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  this);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  this);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  this);	  String    t    =    Util.stripLeadingHyphens(token,    null);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
7	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  2);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  2);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token  +  2);	  String    t    =    Util.stripLeadingHyphens(token    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  1,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  1,  expectedOpts);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token  +  1,  expectedOpts);	  String    t    =    Util.stripLeadingHyphens(token    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  Option  currentOption  =  options.getOption(token);  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  currentOption  =  options.getOption(token);	      if(options.hasOption(token))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
10	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  option.substring(0,  i):  token;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  Option  option  =  options.hasOption(token)?  option.substring(0,  i):  token;  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  option.substring(0,  i):  token;	      if(options.hasOption(token))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  opt  :  token.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  Option  option  =  options.hasOption(token)?  opt  :  token.substring(0,  i);  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  opt  :  token.substring(0,  i);	      if(options.hasOption(token))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
12	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  Option  option  =  options.hasOption(token);  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token);	      if(options.hasOption(token))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
13	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token);  int  i;	      String    t    =    Util.stripLeadingHyphens(token);    int    i    =    0;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
14	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token);  int  i  =  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token);  int  i  =  1;  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token);  int  i  =  1;	      String    t    =    Util.stripLeadingHyphens(token);    int    i    =    0;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
15	[BUG]  [BUGGY]  String  t  =  token.trim();  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  token.trim();  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.trim();	  String    t    =    Util.stripLeadingHyphens(token).trim();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
16	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  +  1;  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  +  1;  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token).trim()  +  1;	  String    t    =    Util.stripLeadingHyphens(token).trim();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
17	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  + ", ";  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  + ", ";  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token).trim()  + ", ";	  String    t    =    Util.stripLeadingHyphens(token).trim();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
18	[BUG]  [BUGGY]  String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  -  1):  token;  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  -  1):  token;  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  -  1):  token;	      if(options.hasOption(token))    {    opt    =    option.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
19	[BUG]  [BUGGY]  Option  option  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  Option  option  =  options.getOption(token);  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.getOption(token);	      if(options.hasOption(token))    {    opt    =    option.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
20	[BUG]  [BUGGY]  String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  -  1):  null;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  -  1):  null;  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  -  1):  null;	      if(options.hasOption(token))    {    opt    =    option.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
21	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  matchingOpts);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  matchingOpts);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  matchingOpts);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
22	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(expectedOpts,  token);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(expectedOpts,  token);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(expectedOpts,  token);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
23	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(value,  token,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(value,  token,  expectedOpts);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(value,  token,  expectedOpts);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
24	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  true);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  true);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  true);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
25	[BUG]  [BUGGY]  String  value  =  Util.stripLong(token);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =  Util.stripLong(token);  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  Util.stripLong(token);	      String    value    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
26	[BUG]  [BUGGY]  String  value  =  Util.stripLongPrefix(token);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =  Util.stripLongPrefix(token);  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  Util.stripLongPrefix(token);	      String    value    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
27	[BUG]  [BUGGY]  String  value  =  Util.stripValue(token);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =  Util.stripValue(token);  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  Util.stripValue(token);	      String    value    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
28	[BUG]  [BUGGY]  String  value  =(token  ==  null)?  null  :  token.substring(0,  token.length()  -  1);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =(token  ==  null)?  null  :  token.substring(0,  token.length()  -  1);  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =(token  ==  null)?  null  :  token.substring(0,  token.length()  -  1);	      String    value    =(token    ==    null)?    null    :    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
29	[BUG]  [BUGGY]  String  value  =(token  ==  null)?  null  :  token.substring(1);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =(token  ==  null)?  null  :  token.substring(1);  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =(token  ==  null)?  null  :  token.substring(1);	      String    value    =(token    ==    null)?    null    :    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
30	[BUG]  [BUGGY]  String  value  =(token  ==  null)?  null  :  token.substring(0,  token.length()  -  2);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =(token  ==  null)?  null  :  token.substring(0,  token.length()  -  2);  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =(token  ==  null)?  null  :  token.substring(0,  token.length()  -  2);	      String    value    =(token    ==    null)?    null    :    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
31	[BUG]  [BUGGY]  String  value  =  token.substring(0,  token.length()  +  1);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =  token.substring(0,  token.length()  +  1);  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  token.substring(0,  token.length()  +  1);	      String    value    =    token.substring(0,    token.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
32	[BUG]  [BUGGY]  String  value  =  options.getStringPrefix(token);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =  options.getStringPrefix(token);  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.getStringPrefix(token);	      String    value    =    options.getLongPrefix(token);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
33	[BUG]  [BUGGY]  String  value  =  options.get(token);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =  options.get(token);  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.get(token);	      String    value    =    options.getLongPrefix(token);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
34	[BUG]  [BUGGY]  String  value  =  options.getLongPrefix(token).trim();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =  options.getLongPrefix(token).trim();  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.getLongPrefix(token).trim();	      String    value    =    options.getLongPrefix(token);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
35	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(token,  true);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  token.stripLeadingHyphens(token,  true);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(token,  true);	  String    t    =    Util.stripLeadingHyphens(token,    true);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  true,  token);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  true,  token);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  true,  token);	  String    t    =    Util.stripLeadingHyphens(token,    true);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
37	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  true,  false);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  true,  false);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  true,  false);	  String    t    =    Util.stripLeadingHyphens(token,    true);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
38	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(value);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  token.stripLeadingHyphens(value);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(value);	  String    t    =    Util.stripLeadingHyphens(value);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
39	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(value,  token);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(value,  token);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(value,  token);	  String    t    =    Util.stripLeadingHyphens(value);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
40	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(token,  false);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(token,  false);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(token,  false);	  String    t    =    Util.stripLeadingHyphens(token,    false);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
41	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(token,  false));  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(token,  false));  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(token,  false));	  String    t    =    Util.stripLeadingHyphens(token,    false);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
42	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  false,  token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  false,  token);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  false,  token);	  String    t    =    Util.stripLeadingHyphens(token,    false);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
43	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(token);  int  i  =  0;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =  Util.stripLeadingHyphens(token);  int  i  =  0;  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  Util.stripLeadingHyphens(token);  int  i  =  0;	      String    t    =    Util.stripLeadingHyphens(token);    int    i    =    0;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
44	[BUG]  [BUGGY]  options.hasOption(token))  {  opt  =  option.substring(0,  token.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  options.hasOption(token))  {  opt  =  option.substring(0,  token.length()  -  1);  }  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	options.hasOption(token))  {  opt  =  option.substring(0,  token.length()  -  1);  }	      if(options.hasOption(token))    {    opt    =    option.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
45	[BUG]  [BUGGY]  Option  currentOption  =  options.hasOption(token);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  Option  currentOption  =  options.hasOption(token);  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  currentOption  =  options.hasOption(token);	      if(options.hasOption(token))    {    opt    =    option.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
46	[BUG]  [BUGGY]  String  value  =  options.getUpperBound(token);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =  options.getUpperBound(token);  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.getUpperBound(token);	      String    value    =    options.getLongPrefix(token);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
47	[BUG]  [BUGGY]  String  value  =  options.getPrefix(token);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =  options.getPrefix(token);  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.getPrefix(token);	      String    value    =    options.getLongPrefix(token);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
48	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  + "n ";  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  + "n ";  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token).trim()  + "n ";	  String    t    =    Util.stripLeadingHyphens(token).trim();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
49	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  stopAtNonOption);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  stopAtNonOption);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
50	[BUG]  [BUGGY]  String  value  =  token.substring(token.length()  -  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =  token.substring(token.length()  -  1);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  token.substring(token.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
51	[BUG]  [BUGGY]  String  option  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  option  =  options.getOption(token);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  option  =  options.getOption(token);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
52	[BUG]  [BUGGY]  options.hasOption(token))  {  opt  =  option.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  options.hasOption(token))  {  opt  =  option.substring(0,  i);  }  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	options.hasOption(token))  {  opt  =  option.substring(0,  i);  }	      if(options.hasOption(token))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
53	[BUG]  [BUGGY]  String  t  =  value!=  null?  Util.stripLeadingHyphens(value):  token;  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  value!=  null?  Util.stripLeadingHyphens(value):  token;  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  value!=  null?  Util.stripLeadingHyphens(value):  token;	  String    t    =    Util.stripLeadingHyphens(value);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
54	[BUG]  [BUGGY]  String  value  =(token!=  null)?  null  :  token.trim();  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =(token!=  null)?  null  :  token.trim();  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =(token!=  null)?  null  :  token.trim();	      String    value    =(token    ==    null)?    null    :    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
55	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  value);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  value);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  value);	  String    t    =    Util.stripLeadingHyphens(token,    null);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
56	[BUG]  [BUGGY]  String  value  =  token.substring(0,  token.length()));  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =  token.substring(0,  token.length()));  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  token.substring(0,  token.length()));	      String    value    =    token.substring(0,    token.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
57	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphen(token);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphen(token);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphen(token);	  String    t    =    Util.stripLeadingHyphens(value);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
58	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  + "' ";  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  + "' ";  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token).trim()  + "' ";	  String    t    =    Util.stripLeadingHyphens(token).trim();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
59	[BUG]  [BUGGY]  if(options.hasOption(token))  {  opt  =  option.substring(0,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  if(options.hasOption(token))  {  opt  =  option.substring(0,  i  +  1);  }  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	if(options.hasOption(token))  {  opt  =  option.substring(0,  i  +  1);  }	      if(options.hasOption(token))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
60	[BUG]  [BUGGY]  if(options.hasOption(token))  {  opt  =  token.substring(0,  token.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  if(options.hasOption(token))  {  opt  =  token.substring(0,  token.length()  -  1);  }  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	if(options.hasOption(token))  {  opt  =  token.substring(0,  token.length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
61	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  opt  =  option.substring(0,  token.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  if(options.hasOption(opt))  {  opt  =  option.substring(0,  token.length()  -  1);  }  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	if(options.hasOption(opt))  {  opt  =  option.substring(0,  token.length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  preferredOpts);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  preferredOpts);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  preferredOpts);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
63	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  stoppingAtNonOption);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  stoppingAtNonOption);  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  stoppingAtNonOption);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
64	[BUG]  [BUGGY]  char  t  =  Util.stripLeadingHyphens(token);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  char  t  =  Util.stripLeadingHyphens(token);  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	char  t  =  Util.stripLeadingHyphens(token);	      String    t    =    Util.stripLeadingHyphens(token);    int    i    =    0;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
65	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  1).trim();  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  1).trim();  [BUGGY]      int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token  +  1).trim();	  String    t    =    Util.stripLeadingHyphens(token    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
66	[BUG]  [BUGGY]  String  value  =  token.substring(0,  token.length())+  1;  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =  token.substring(0,  token.length())+  1;  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  token.substring(0,  token.length())+  1;	      String    value    =    token.substring(0,    token.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
67	[BUG]  [BUGGY]  if(options.hasOption(token))  {  opt  =  option.substring(0,  token.length());  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  if(options.hasOption(token))  {  opt  =  option.substring(0,  token.length());  }  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	if(options.hasOption(token))  {  opt  =  option.substring(0,  token.length());  }	      if(options.hasOption(token))    {    opt    =    option.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
68	[BUG]  [BUGGY]  String  value  =  options.getLongPrefix(token)+  1;  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =  options.getLongPrefix(token)+  1;  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.getLongPrefix(token)+  1;	      String    value    =    options.getLongPrefix(token);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
69	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(token,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {    [BUGGY]  String  value  =  Util.stripLeadingHyphens(token,  expectedOpts);  [BUGGY]    String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  Util.stripLeadingHyphens(token,  expectedOpts);	      String    value    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
