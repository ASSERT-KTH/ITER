bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  false,  true);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  false,  true);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  false,  true);	  String    t    =    Util.stripLeadingHyphens(token,    true,    false);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
2	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  true,  true);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  true,  true);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  true,  true);	  String    t    =    Util.stripLeadingHyphens(token,    true,    false);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
3	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  false,  false);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  false,  false);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  false,  false);	  String    t    =    Util.stripLeadingHyphens(token,    true,    false);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
4	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  false,  null);  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  false,  null);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  false,  null);	  String    t    =    Util.stripLeadingHyphens(token,    true,    false);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
5	[BUG]  [BUGGY]  String  value  =  options.getLongPrefix(token).trim()  +  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.getLongPrefix(token).trim()  +  1;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.getLongPrefix(token).trim()  +  1;	  String    value    =    options.getLongPrefix(token).trim();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
6	[BUG]  [BUGGY]  String  value  =  options.getLongPrefix(token).trim()  + "n ";  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.getLongPrefix(token).trim()  + "n ";  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.getLongPrefix(token).trim()  + "n ";	  String    value    =    options.getLongPrefix(token).trim();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
7	[BUG]  [BUGGY]  String  value  =  options.getStringPrefix(token).trim();  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.getStringPrefix(token).trim();  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.getStringPrefix(token).trim();	  String    value    =    options.getLongPrefix(token).trim();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
8	[BUG]  [BUGGY]  String  value  =(token  ==  null)?  null  :  token.substring(2);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =(token  ==  null)?  null  :  token.substring(2);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =(token  ==  null)?  null  :  token.substring(2);	  String    value    =(token    ==    null)?    null    :    token.substring(1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
9	[BUG]  [BUGGY]  String  t  =  token.trim()  + "' ";  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.trim()  + "' ";  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.trim()  + "' ";	  String    t    =    Util.stripLeadingHyphens(token).trim()    +   "'   ";    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
10	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  + "' ",  token;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  + "' ",  token;  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token).trim()  + "' ",  token;	  String    t    =    Util.stripLeadingHyphens(token).trim()    +   "'   ";    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
11	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  + ",' ";  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  + ",' ";  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token).trim()  + ",' ";	  String    t    =    Util.stripLeadingHyphens(token).trim()    +   "'   ";    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
12	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(token,  false);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.stripLeadingHyphens(token,  false);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(token,  false);	  String    t    =    token.stripLeadingHyphens(token,    true);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
13	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(token,  true,  false);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.stripLeadingHyphens(token,  true,  false);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(token,  true,  false);	  String    t    =    token.stripLeadingHyphens(token,    true);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
14	[BUG]  [BUGGY]  String  t  =  token.substring(token.length()  -  1,  true);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.substring(token.length()  -  1,  true);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.substring(token.length()  -  1,  true);	  String    t    =    token.stripLeadingHyphens(token,    true);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
15	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  value,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  value,  expectedOpts);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  value,  expectedOpts);	  String    t    =    Util.stripLeadingHyphens(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
16	[BUG]  [BUGGY]  String  t  =  value.stripLeadingHyphens(token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  value.stripLeadingHyphens(token);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  value.stripLeadingHyphens(token);	  String    t    =    Util.stripLeadingHyphens(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
17	[BUG]  [BUGGY]  String  value  =  token.substring(0,  token.length()  -  1)+  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  token.substring(0,  token.length()  -  1)+  1;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  token.substring(0,  token.length()  -  1)+  1;	  String    value    =    token.substring(0,    token.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
18	[BUG]  [BUGGY]  String  value  =  token.substring(0,  token.length()  -  2)+  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  token.substring(0,  token.length()  -  2)+  1;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  token.substring(0,  token.length()  -  2)+  1;	  String    value    =    token.substring(0,    token.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
19	[BUG]  [BUGGY]  String  value  =  token.substring(0,  token.length()  +  1)+  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  token.substring(0,  token.length()  +  1)+  1;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  token.substring(0,  token.length()  +  1)+  1;	  String    value    =    token.substring(0,    token.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
20	[BUG]  [BUGGY]  String  option  =  options.getOption(token).trim();  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  option  =  options.getOption(token).trim();  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  option  =  options.getOption(token).trim();	  String    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
21	[BUG]  [BUGGY]  String  option  =  options.getOption(token,  null);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  option  =  options.getOption(token,  null);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  option  =  options.getOption(token,  null);	  String    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
22	[BUG]  [BUGGY]  String  option  =  options.getOption(token)+ "n ";  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  option  =  options.getOption(token)+ "n ";  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  option  =  options.getOption(token)+ "n ";	  String    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
23	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  option.substring(0,  i  +  1):  token;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  option.substring(0,  i  +  1):  token;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  option.substring(0,  i  +  1):  token;	  if(options.hasOption(token))    {    opt    =    option.substring(0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
24	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  opt  :  token.substring(0,  i  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  opt  :  token.substring(0,  i  +  1);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  opt  :  token.substring(0,  i  +  1);	  if(options.hasOption(token))    {    opt    =    option.substring(0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
25	[BUG]  [BUGGY]  String  value  =  options.hasOption(token)?  option.substring(0,  i  +  1):  token;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.hasOption(token)?  option.substring(0,  i  +  1):  token;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.hasOption(token)?  option.substring(0,  i  +  1):  token;	  if(options.hasOption(token))    {    opt    =    option.substring(0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
26	[BUG]  [BUGGY]  Option  option  =  options.getOption(token).trim();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.getOption(token).trim();  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.getOption(token).trim();	  Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
27	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)+  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.getOption(token)+  1;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.getOption(token)+  1;	  Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
28	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  null);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.getOption(token,  null);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.getOption(token,  null);	  Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
29	[BUG]  [BUGGY]  String  value  =  options.getLongPrefix(token)+  2;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.getLongPrefix(token)+  2;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.getLongPrefix(token)+  2;	  String    value    =    options.getLongPrefix(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
30	[BUG]  [BUGGY]  String  value  =  options.getLongPrefix(token)+  3;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.getLongPrefix(token)+  3;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.getLongPrefix(token)+  3;	  String    value    =    options.getLongPrefix(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
31	[BUG]  [BUGGY]  String  value  =  options.getLongPrefix(token)+  4;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.getLongPrefix(token)+  4;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.getLongPrefix(token)+  4;	  String    value    =    options.getLongPrefix(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
32	[BUG]  [BUGGY]  String  t  =  token.trim()  + "n ";  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.trim()  + "n ";  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.trim()  + "n ";	  String    t    =    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
33	[BUG]  [BUGGY]  String  t  =  token.trim()  + ", ";  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.trim()  + ", ";  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.trim()  + ", ";	  String    t    =    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
34	[BUG]  [BUGGY]  String  t  =  token.trim()  +  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.trim()  +  1;  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.trim()  +  1;	  String    t    =    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
35	[BUG]  [BUGGY]  String  value  =  token.substring(0,  token.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  token.substring(0,  token.length()  -  1));  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  token.substring(0,  token.length()  -  1));	  String    value    =    token.substring(0,    token.length()));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
36	[BUG]  [BUGGY]  String  value  =  token.substring(0,  token.length()  -  2));  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  token.substring(0,  token.length()  -  2));  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  token.substring(0,  token.length()  -  2));	  String    value    =    token.substring(0,    token.length()));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
37	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(preferredOpts,  token);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(preferredOpts,  token);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(preferredOpts,  token);	  String    t    =    Util.stripLeadingHyphens(token,    preferredOpts);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
38	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  preferredOpts,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  preferredOpts,  expectedOpts);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  preferredOpts,  expectedOpts);	  String    t    =    Util.stripLeadingHyphens(token,    preferredOpts);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
39	[BUG]  [BUGGY]  String  t  =  preferredOpts.stripLeadingHyphens(token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  preferredOpts.stripLeadingHyphens(token);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  preferredOpts.stripLeadingHyphens(token);	  String    t    =    Util.stripLeadingHyphens(token,    preferredOpts);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
40	[BUG]  [BUGGY]  options.hasOption(token))  {  opt  =  option.substring(0,  token.length());  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  options.hasOption(token))  {  opt  =  option.substring(0,  token.length());  }  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	options.hasOption(token))  {  opt  =  option.substring(0,  token.length());  }	  options.hasOption(token))    {    opt    =    option.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
41	[BUG]  [BUGGY]  String  value  =  options.getValue(token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.getValue(token);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.getValue(token);	  String    value    =    options.getPrefix(token);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
42	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  token  :  token.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  token  :  token.substring(0,  i);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  token  :  token.substring(0,  i);	  Option    option    =    options.hasOption(token)?    opt    :    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
43	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  t  :  token.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  t  :  token.substring(0,  i);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  t  :  token.substring(0,  i);	  Option    option    =    options.hasOption(token)?    opt    :    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
44	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  currentToken  :  token.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  currentToken  :  token.substring(0,  i);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  currentToken  :  token.substring(0,  i);	  Option    option    =    options.hasOption(token)?    opt    :    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
45	[BUG]  [BUGGY]  String  value  =  options.getStringValue(token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.getStringValue(token);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.getStringValue(token);	  String    value    =    options.getStringPrefix(token);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
46	[BUG]  [BUGGY]  String  value  =  options.getString(token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.getString(token);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.getString(token);	  String    value    =    options.getStringPrefix(token);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
47	[BUG]  [BUGGY]  String  t  =  token.substring(0,  token.length());  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.substring(0,  token.length());  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.substring(0,  token.length());	  String    t    =    token.substring(0,    token.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
48	[BUG]  [BUGGY]  String  t  =  token.substring(0,  token.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.substring(0,  token.length()  -  2);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.substring(0,  token.length()  -  2);	  String    t    =    token.substring(0,    token.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
49	[BUG]  [BUGGY]  String  t  =  token.substring(0,  token.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.substring(0,  token.length()  +  1);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.substring(0,  token.length()  +  1);	  String    t    =    token.substring(0,    token.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
50	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  true,  token,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  true,  token,  expectedOpts);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  true,  token,  expectedOpts);	  String    t    =    Util.stripLeadingHyphens(token,    true,    token);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
51	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(token,  true,  token);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.stripLeadingHyphens(token,  true,  token);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(token,  true,  token);	  String    t    =    Util.stripLeadingHyphens(token,    true,    token);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
52	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  options.substring(0,  token.length()  -  1):  null;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  options.substring(0,  token.length()  -  1):  null;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  options.substring(0,  token.length()  -  1):  null;	  if(options.hasOption(token))    {    opt    =    option.substring(0,    token.length());    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
53	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  opt  :  token.substring(0,  token.length());  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  opt  :  token.substring(0,  token.length());  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  opt  :  token.substring(0,  token.length());	  if(options.hasOption(token))    {    opt    =    option.substring(0,    token.length());    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
54	[BUG]  [BUGGY]  String  value  =  options.getLowerBound(token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.getLowerBound(token);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.getLowerBound(token);	  String    value    =    options.getUpperBound(token);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
55	[BUG]  [BUGGY]  String  value  =  options.getUpperBound(token)+  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.getUpperBound(token)+  1;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.getUpperBound(token)+  1;	  String    value    =    options.getUpperBound(token);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
56	[BUG]  [BUGGY]  String  value  =  options.getUpperBound(token).trim();  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.getUpperBound(token).trim();  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.getUpperBound(token).trim();	  String    value    =    options.getUpperBound(token);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
57	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  options.getLongPrefix(token):  token;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  options.getLongPrefix(token):  token;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  options.getLongPrefix(token):  token;	  Option    option    =    options.hasOption(token);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
58	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  options.getOption(option):  token;  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  options.getOption(option):  token;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  options.getOption(option):  token;	  Option    option    =    options.hasOption(token);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
59	[BUG]  [BUGGY]  String  value  =(token  ==  null)?  null  :  token.substring(0,  token.length());  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =(token  ==  null)?  null  :  token.substring(0,  token.length());  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =(token  ==  null)?  null  :  token.substring(0,  token.length());	  String    value    =(token    ==    null)?    null    :    token.substring(0,    token.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
60	[BUG]  [BUGGY]  String  value  =(token  ==  null)?  null  :  token.substring(0,  token.length()  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =(token  ==  null)?  null  :  token.substring(0,  token.length()  +  1);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =(token  ==  null)?  null  :  token.substring(0,  token.length()  +  1);	  String    value    =(token    ==    null)?    null    :    token.substring(0,    token.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
61	[BUG]  [BUGGY]  String  value  =(token!=  null)?  null  :  token.substring(0,  token.length());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =(token!=  null)?  null  :  token.substring(0,  token.length());  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =(token!=  null)?  null  :  token.substring(0,  token.length());	  String    value    =(token    ==    null)?    null    :    token.substring(0,    token.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
62	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(token,  true);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(token,  true);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(token,  true);	  String    t    =    token.stripLeadingHyphens(Util.stripLeadingHyphens(token,    false);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
63	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(token,  true));  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(token,  true));  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(token,  true));	  String    t    =    token.stripLeadingHyphens(Util.stripLeadingHyphens(token,    false);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
64	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(opt,  false);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(opt,  false);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(opt,  false);	  String    t    =    token.stripLeadingHyphens(Util.stripLeadingHyphens(token,    false);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
65	[BUG]  [BUGGY]  Option  currentOption  =  options.hasOption(token)?  options.getLongPrefix(token):  token;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  currentOption  =  options.hasOption(token)?  options.getLongPrefix(token):  token;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  currentOption  =  options.hasOption(token)?  options.getLongPrefix(token):  token;	  Option    currentOption    =    options.hasOption(token);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
66	[BUG]  [BUGGY]  Option  currentOption  =  options.hasOption(token)?  options.getValue(token):  token;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  currentOption  =  options.hasOption(token)?  options.getValue(token):  token;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  currentOption  =  options.hasOption(token)?  options.getValue(token):  token;	  Option    currentOption    =    options.hasOption(token);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
67	[BUG]  [BUGGY]  String  value  =  token.substring(token.length());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  token.substring(token.length());  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  token.substring(token.length());	  String    value    =    token.substring(token.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
68	[BUG]  [BUGGY]  String  value  =  token.substring(token.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  token.substring(token.length()  +  1);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  token.substring(token.length()  +  1);	  String    value    =    token.substring(token.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
69	[BUG]  [BUGGY]  String  value  =  token.substring(token.length())+  1;  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  token.substring(token.length())+  1;  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  token.substring(token.length())+  1;	  String    value    =    token.substring(token.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
70	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphen(token,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphen(token,  expectedOpts);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphen(token,  expectedOpts);	  String    t    =    Util.stripLeadingHyphen(token);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
71	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphen(token,  true);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphen(token,  true);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphen(token,  true);	  String    t    =    Util.stripLeadingHyphen(token);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
72	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphen(token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.stripLeadingHyphen(token);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphen(token);	  String    t    =    Util.stripLeadingHyphen(token);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
73	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  false,  token,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  false,  token,  expectedOpts);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  false,  token,  expectedOpts);	  String    t    =    Util.stripLeadingHyphens(token,    false,    token);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
74	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(token,  false,  token);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.stripLeadingHyphens(token,  false,  token);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(token,  false,  token);	  String    t    =    Util.stripLeadingHyphens(token,    false,    token);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
75	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(token,  false,  Util.stripLeadingHyphens(token));  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.stripLeadingHyphens(token,  false,  Util.stripLeadingHyphens(token));  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(token,  false,  Util.stripLeadingHyphens(token));	  String    t    =    Util.stripLeadingHyphens(token,    false,    token);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
76	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(value,  token,  matchingOpts);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(value,  token,  matchingOpts);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(value,  token,  matchingOpts);	  String    t    =    Util.stripLeadingHyphens(value,    token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
77	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(currentToken,  token,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(currentToken,  token,  expectedOpts);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(currentToken,  token,  expectedOpts);	  String    t    =    Util.stripLeadingHyphens(value,    token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
78	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(expectedOpts,  token,  value);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(expectedOpts,  token,  value);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(expectedOpts,  token,  value);	  String    t    =    Util.stripLeadingHyphens(value,    token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
79	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  matchingOpts,  stopAtNonOption);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  matchingOpts,  stopAtNonOption);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  matchingOpts,  stopAtNonOption);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
80	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  optName);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  optName);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  optName);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
81	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  preferred,  stopAtNonOption);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  preferred,  stopAtNonOption);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  preferred,  stopAtNonOption);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
82	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  skipParsing);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  skipParsing);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  skipParsing);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
83	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  matchingOpts,  stoppingAtNonOption);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  matchingOpts,  stoppingAtNonOption);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  matchingOpts,  stoppingAtNonOption);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts,    stoppingAtNonOption);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
84	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  stoppingAtNonOption,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  stoppingAtNonOption,  expectedOpts);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  stoppingAtNonOption,  expectedOpts);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts,    stoppingAtNonOption);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
85	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  stoppingAtNonOption,  optName);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  stoppingAtNonOption,  optName);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  stoppingAtNonOption,  optName);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts,    stoppingAtNonOption);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
86	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(currentOption,  token,  stoppingAtNonOption);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(currentOption,  token,  stoppingAtNonOption);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(currentOption,  token,  stoppingAtNonOption);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts,    stoppingAtNonOption);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
87	[BUG]  [BUGGY]  String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  +  1):  null;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  +  1):  null;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  +  1):  null;	  String    value    =    options.hasOption(token)?    options.substring(0,    token.length()    -    1):    null;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
88	[BUG]  [BUGGY]  String  value  =  options.hasOption(token)?  options.substring(0,  token.length()):  null;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.hasOption(token)?  options.substring(0,  token.length()):  null;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.hasOption(token)?  options.substring(0,  token.length()):  null;	  String    value    =    options.hasOption(token)?    options.substring(0,    token.length()    -    1):    null;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
89	[BUG]  [BUGGY]  String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  -  2):  null;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  -  2):  null;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  -  2):  null;	  String    value    =    options.hasOption(token)?    options.substring(0,    token.length()    -    1):    null;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
90	[BUG]  [BUGGY]  options.hasOption(token))  {  opt  =  option.substring(0,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  options.hasOption(token))  {  opt  =  option.substring(0,  i  +  1);  }  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	options.hasOption(token))  {  opt  =  option.substring(0,  i  +  1);  }	  options.hasOption(token))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
91	[BUG]  [BUGGY]  String  value  =  Util.stripPrefix(token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  Util.stripPrefix(token);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  Util.stripPrefix(token);	  String    value    =    Util.stripLongPrefix(token);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
92	[BUG]  [BUGGY]  String  value  =  Util.stripLongPrefix(token,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  Util.stripLongPrefix(token,  expectedOpts);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  Util.stripLongPrefix(token,  expectedOpts);	  String    value    =    Util.stripLongPrefix(token);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
93	[BUG]  [BUGGY]  String  value  =  options.get(token).trim();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.get(token).trim();  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.get(token).trim();	  String    value    =    options.get(token);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
94	[BUG]  [BUGGY]  String  value  =  options.get(token  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.get(token  +  1);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.get(token  +  1);	  String    value    =    options.get(token);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
95	[BUG]  [BUGGY]  String  value  =  Util.stripLongValue(token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  Util.stripLongValue(token);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  Util.stripLongValue(token);	  String    value    =    Util.stripValue(token);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
96	[BUG]  [BUGGY]  String  value  =  Util.stripString(token);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  Util.stripString(token);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  Util.stripString(token);	  String    value    =    Util.stripValue(token);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
97	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  + ": "  +  token;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  + ": "  +  token;  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token).trim()  + ": "  +  token;	  String    t    =    Util.stripLeadingHyphens(token).trim()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
98	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(matchingOpts,  token);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(matchingOpts,  token);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(matchingOpts,  token);	  String    t    =    Util.stripLeadingHyphens(token,    matchingOpts);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
99	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(key,  matchingOpts);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(key,  matchingOpts);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(key,  matchingOpts);	  String    t    =    Util.stripLeadingHyphens(token,    matchingOpts);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
100	[BUG]  [BUGGY]  String  value  =  token.substring(0,  token.length()  -  2;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  token.substring(0,  token.length()  -  2;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  token.substring(0,  token.length()  -  2;	  String    value    =    token.substring(0,    token.length();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
101	[BUG]  [BUGGY]  String  option  =  token.substring(0,  token.length());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  option  =  token.substring(0,  token.length());  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  option  =  token.substring(0,  token.length());	  String    option    =    token.substring(0,    token.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
102	[BUG]  [BUGGY]  String  option  =  token.substring(0,  token.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  option  =  token.substring(0,  token.length()  -  2);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  option  =  token.substring(0,  token.length()  -  2);	  String    option    =    token.substring(0,    token.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
103	[BUG]  [BUGGY]  String  option  =  token.substring(0,  token.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  option  =  token.substring(0,  token.length()  +  1);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  option  =  token.substring(0,  token.length()  +  1);	  String    option    =    token.substring(0,    token.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
104	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  1,  token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  1,  token);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token  +  1,  token);	  String    t    =    Util.stripLeadingHyphens(token    +    2);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
105	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  3);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  3);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token  +  3);	  String    t    =    Util.stripLeadingHyphens(token    +    2);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
106	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  this,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  this,  expectedOpts);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  this,  expectedOpts);	  String    t    =    Util.stripLeadingHyphens(token,    this);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
107	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(currentToken,  token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(currentToken,  token);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(currentToken,  token);	  String    t    =    Util.stripLeadingHyphens(value,    token);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
108	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(expectedOpts,  token,  true);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(expectedOpts,  token,  true);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(expectedOpts,  token,  true);	  String    t    =    Util.stripLeadingHyphens(expectedOpts,    token);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
109	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(expectedOpts,  token,  false);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(expectedOpts,  token,  false);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(expectedOpts,  token,  false);	  String    t    =    Util.stripLeadingHyphens(expectedOpts,    token);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
110	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(token).trim();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.stripLeadingHyphens(token).trim();  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(token).trim();	  String    t    =    Util.stripLeadingHyphens(token).trim()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
111	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  1,  matchingOpts);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  1,  matchingOpts);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token  +  1,  matchingOpts);	  String    t    =    Util.stripLeadingHyphens(token    +    1,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
112	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  1,  expectedOpts,  token);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  1,  expectedOpts,  token);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token  +  1,  expectedOpts,  token);	  String    t    =    Util.stripLeadingHyphens(token    +    1,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
113	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  1,  matchingOpts,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  1,  matchingOpts,  expectedOpts);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token  +  1,  matchingOpts,  expectedOpts);	  String    t    =    Util.stripLeadingHyphens(token    +    1,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
114	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(expectedOpts  +  1,  token);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(expectedOpts  +  1,  token);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(expectedOpts  +  1,  token);	  String    t    =    Util.stripLeadingHyphens(token    +    1,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
115	[BUG]  [BUGGY]  options.hasOption(token))  {  opt  =  token.substring(0,  token.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  options.hasOption(token))  {  opt  =  token.substring(0,  token.length()  -  1);  }  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	options.hasOption(token))  {  opt  =  token.substring(0,  token.length()  -  1);  }	  if(options.hasOption(token))    {    opt    =    token.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
116	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  options.substring(0,  token.length()  -  1):  token;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  options.substring(0,  token.length()  -  1):  token;  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  options.substring(0,  token.length()  -  1):  token;	  if(options.hasOption(token))    {    opt    =    token.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
117	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(token,  matchingOpts);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  Util.stripLeadingHyphens(token,  matchingOpts);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  Util.stripLeadingHyphens(token,  matchingOpts);	  String    value    =    Util.stripLeadingHyphens(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
118	[BUG]  [BUGGY]  String  value  =  Util.stripRaw(token,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  Util.stripRaw(token,  expectedOpts);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  Util.stripRaw(token,  expectedOpts);	  String    value    =    Util.stripLeadingHyphens(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
119	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token)+  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  currentOption  =  options.getOption(token)+  1;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  currentOption  =  options.getOption(token)+  1;	  Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
120	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  currentOption  =  options.getOption(token  +  1);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  currentOption  =  options.getOption(token  +  1);	  Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
121	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token).trim();  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  currentOption  =  options.getOption(token).trim();  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  currentOption  =  options.getOption(token).trim();	  Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
122	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  token.substring(0,  i):  token;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  token.substring(0,  i):  token;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  token.substring(0,  i):  token;	  Option    option    =    options.hasOption(token)?    option.substring(0,    i):    token;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
123	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  option.substring(0,  1):  token;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  option.substring(0,  1):  token;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  option.substring(0,  1):  token;	  Option    option    =    options.hasOption(token)?    option.substring(0,    i):    token;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
124	[BUG]  [BUGGY]  String  value  =  token.substring(0,  token.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  token.substring(0,  token.length()  -  3);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  token.substring(0,  token.length()  -  3);	  String    value    =    token.substring(0,    token.length());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
125	[BUG]  [BUGGY]  Character  t  =  Util.stripLeadingHyphens(token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Character  t  =  Util.stripLeadingHyphens(token);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Character  t  =  Util.stripLeadingHyphens(token);	  char    t    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
126	[BUG]  [BUGGY]  String  value  =(token  ==  null)?  null  :  token.substring(0,  token.length()  +  2);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =(token  ==  null)?  null  :  token.substring(0,  token.length()  +  2);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =(token  ==  null)?  null  :  token.substring(0,  token.length()  +  2);	  String    value    =(token    ==    null)?    null    :    token.substring(0,    token.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
127	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  2).trim();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  2).trim();  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token  +  2).trim();	  String    t    =    Util.stripLeadingHyphens(token    +    1).trim();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
128	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  null,  matchingOpts);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  null,  matchingOpts);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  null,  matchingOpts);	  String    t    =    Util.stripLeadingHyphens(token,    null,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
129	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  token);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  token);	  String    t    =    Util.stripLeadingHyphens(token,    null,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
130	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  matchingOpts,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  matchingOpts,  expectedOpts);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  matchingOpts,  expectedOpts);	  String    t    =    Util.stripLeadingHyphens(token,    null,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
131	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  null);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  null);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  null);	  String    t    =    Util.stripLeadingHyphens(token,    null,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
132	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(token);  int  i  =  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  Util.stripLeadingHyphens(token);  int  i  =  1;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  Util.stripLeadingHyphens(token);  int  i  =  1;	  String    value    =    Util.stripLeadingHyphens(token);    int    i    =    0;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
133	[BUG]  [BUGGY]  String  value  =  Util.stripLong(token);  int  i  =  0;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  Util.stripLong(token);  int  i  =  0;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  Util.stripLong(token);  int  i  =  0;	  String    value    =    Util.stripLeadingHyphens(token);    int    i    =    0;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
134	[BUG]  [BUGGY]  String  t  =  token!=  null?  Util.stripLeadingHyphens(value):  value;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token!=  null?  Util.stripLeadingHyphens(value):  value;  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token!=  null?  Util.stripLeadingHyphens(value):  value;	  String    t    =    value!=    null?    Util.stripLeadingHyphens(value):    token;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
135	[BUG]  [BUGGY]  String  t  =  token!=  null?  Util.stripLeadingHyphens(value):  token;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token!=  null?  Util.stripLeadingHyphens(value):  token;  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token!=  null?  Util.stripLeadingHyphens(value):  token;	  String    t    =    value!=    null?    Util.stripLeadingHyphens(value):    token;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
136	[BUG]  [BUGGY]  String  t  =  token  ==  null?  Util.stripLeadingHyphens(value):  value;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token  ==  null?  Util.stripLeadingHyphens(value):  value;  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token  ==  null?  Util.stripLeadingHyphens(value):  value;	  String    t    =    value!=    null?    Util.stripLeadingHyphens(value):    token;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
137	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  false);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  false);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  false);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts,    true);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
138	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  matchingOpts,  true);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  matchingOpts,  true);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  matchingOpts,  true);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts,    true);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
139	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  true,  token);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  true,  token);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  true,  token);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts,    true);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
140	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(token);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.stripLeadingHyphens(token);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(token);	  String    t    =    token.stripLeadingHyphens(value);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
141	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(option,  false));  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(option,  false));  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(option,  false));	  String    t    =    token.stripLeadingHyphens(Util.stripLeadingHyphens(token,    false));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
142	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(opt,  false));  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(opt,  false));  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(opt,  false));	  String    t    =    token.stripLeadingHyphens(Util.stripLeadingHyphens(token,    false));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
143	[BUG]  [BUGGY]  String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  +  1):  token;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  +  1):  token;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  +  1):  token;	  String    value    =    options.hasOption(token)?    options.substring(0,    token.length()    -    1):    token;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
144	[BUG]  [BUGGY]  String  value  =  options.hasOption(token)?  options.substring(0,  token.length()):  token;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.hasOption(token)?  options.substring(0,  token.length()):  token;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.hasOption(token)?  options.substring(0,  token.length()):  token;	  String    value    =    options.hasOption(token)?    options.substring(0,    token.length()    -    1):    token;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
145	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(token)?  option.substring(0,  token.length()  -  1):  token;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  opt  =  options.hasOption(token)?  option.substring(0,  token.length()  -  1):  token;  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  opt  =  options.hasOption(token)?  option.substring(0,  token.length()  -  1):  token;	  if(options.hasOption(opt))    {    opt    =    option.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
146	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt)?  option.substring(0,  token.length()  -  1):  token;  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(opt)?  option.substring(0,  token.length()  -  1):  token;  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(opt)?  option.substring(0,  token.length()  -  1):  token;	  if(options.hasOption(opt))    {    opt    =    option.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
147	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  options.getOption(option):  null;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  options.getOption(option):  null;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  options.getOption(option):  null;	  Option    option    =    options.hasOption(token);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
148	[BUG]  [BUGGY]  String  value  =  token.substring(0,  token.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  token.substring(0,  token.length()  -  4);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  token.substring(0,  token.length()  -  4);	  String    value    =    token.substring(0,    token.length());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
149	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(option,  false);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(option,  false);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(option,  false);	  String    t    =    token.stripLeadingHyphens(Util.stripLeadingHyphens(token,    false);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
150	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(value,  false);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(value,  false);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(value,  false);	  String    t    =    token.stripLeadingHyphens(Util.stripLeadingHyphens(token,    false);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
151	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt)?  option.substring(0,  i):  token;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(opt)?  option.substring(0,  i):  token;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(opt)?  option.substring(0,  i):  token;	  Option    option    =    options.hasOption(token)?    option.substring(0,    i):    token;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
152	[BUG]  [BUGGY]  Option  option  =  options.hasOption(option)?  option.substring(0,  i):  token;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(option)?  option.substring(0,  i):  token;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(option)?  option.substring(0,  i):  token;	  Option    option    =    options.hasOption(token)?    option.substring(0,    i):    token;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
153	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  option.substring(0,  i):  option;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  option.substring(0,  i):  option;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  option.substring(0,  i):  option;	  Option    option    =    options.hasOption(token)?    option.substring(0,    i):    token;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
154	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  + ",  value= ";  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  + ",  value= ";  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token).trim()  + ",  value= ";	  String    t    =    Util.stripLeadingHyphens(token).trim()    +   ",   ";    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
155	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  1,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  1,  expectedOpts,  stopAtNonOption);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token  +  1,  expectedOpts,  stopAtNonOption);	  String    t    =    Util.stripLeadingHyphens(token    +    1,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
156	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  2,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  2,  expectedOpts);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token  +  2,  expectedOpts);	  String    t    =    Util.stripLeadingHyphens(token    +    1,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
157	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(value,  false));  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(value,  false));  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(Util.stripLeadingHyphens(value,  false));	  String    t    =    token.stripLeadingHyphens(Util.stripLeadingHyphens(token,    false));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
158	[BUG]  [BUGGY]  String  t  =  value  ==  null?  Util.stripLeadingHyphens(value):  token;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  value  ==  null?  Util.stripLeadingHyphens(value):  token;  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  value  ==  null?  Util.stripLeadingHyphens(value):  token;	  String    t    =    value!=    null?    Util.stripLeadingHyphens(value):    token;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
159	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  + "',' ";  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  + "',' ";  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token).trim()  + "',' ";	  String    t    =    Util.stripLeadingHyphens(token).trim()    +   "'   ";    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
160	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  + ".' ";  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  + ".' ";  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token).trim()  + ".' ";	  String    t    =    Util.stripLeadingHyphens(token).trim()    +   "'   ";    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
161	[BUG]  [BUGGY]  String  value  =  Util.stripValue(token);  int  i  =  0;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  Util.stripValue(token);  int  i  =  0;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  Util.stripValue(token);  int  i  =  0;	  String    value    =    Util.stripLeadingHyphens(token);    int    i    =    0;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
162	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphen(opt);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphen(opt);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphen(opt);	  String    t    =    Util.stripLeadingHyphen(token);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
163	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphen(value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphen(value);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphen(value);	  String    t    =    Util.stripLeadingHyphen(token);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
164	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphen(token,  stopAtNonOption);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphen(token,  stopAtNonOption);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphen(token,  stopAtNonOption);	  String    t    =    Util.stripLeadingHyphen(token);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
165	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  option  :  token.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  option  :  token.substring(0,  i);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  option  :  token.substring(0,  i);	  Option    option    =    options.hasOption(token)?    opt    :    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
166	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  opt  :  option.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  opt  :  option.substring(0,  i);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  opt  :  option.substring(0,  i);	  Option    option    =    options.hasOption(token)?    opt    :    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
167	[BUG]  [BUGGY]  Option  currentOption  =  options.hasOption(token)?  options.getLongPrefix(token):  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  currentOption  =  options.hasOption(token)?  options.getLongPrefix(token):  options.getOption(token);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  currentOption  =  options.hasOption(token)?  options.getLongPrefix(token):  options.getOption(token);	  Option    currentOption    =    options.hasOption(token);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
168	[BUG]  [BUGGY]  Option  currentOption  =  options.hasOption(token)?  options.getLongPrefix(token):  null;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  currentOption  =  options.hasOption(token)?  options.getLongPrefix(token):  null;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  currentOption  =  options.hasOption(token)?  options.getLongPrefix(token):  null;	  Option    currentOption    =    options.hasOption(token);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
169	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(value,  true);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.stripLeadingHyphens(value,  true);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(value,  true);	  String    t    =    token.stripLeadingHyphens(token,    true);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
170	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(opt,  true);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.stripLeadingHyphens(opt,  true);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(opt,  true);	  String    t    =    token.stripLeadingHyphens(token,    true);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
171	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(option,  true);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.stripLeadingHyphens(option,  true);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(option,  true);	  String    t    =    token.stripLeadingHyphens(token,    true);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
172	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt)?  opt  :  option.substring(0,  token.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(opt)?  opt  :  option.substring(0,  token.length()  -  1);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(opt)?  opt  :  option.substring(0,  token.length()  -  1);	  if(options.hasOption(opt))    {    opt    =    option.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
173	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  preferred,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  preferred,  expectedOpts);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  preferred,  expectedOpts);	  String    t    =    Util.stripLeadingHyphens(token,    null,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
174	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  *  2);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  *  2);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token  *  2);	  String    t    =    Util.stripLeadingHyphens(token    +    2);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
175	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(value,  token  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(value,  token  +  1);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(value,  token  +  1);	  String    t    =    Util.stripLeadingHyphens(value,    token);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
176	[BUG]  [BUGGY]  Option  option  =  options.getOption(token  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.getOption(token  +  1);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.getOption(token  +  1);	  Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
177	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(opt,  token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(opt,  token);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(opt,  token);	  String    t    =    Util.stripLeadingHyphens(expectedOpts,    token);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
178	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(option,  token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(option,  token);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(option,  token);	  String    t    =    Util.stripLeadingHyphens(expectedOpts,    token);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
179	[BUG]  [BUGGY]  String  option  =  options.getOption(token)+  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  option  =  options.getOption(token)+  1;  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  option  =  options.getOption(token)+  1;	  String    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
180	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(opt,  token,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(opt,  token,  expectedOpts);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(opt,  token,  expectedOpts);	  String    t    =    Util.stripLeadingHyphens(value,    token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
181	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(value,  expectedOpts,  token);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(value,  expectedOpts,  token);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(value,  expectedOpts,  token);	  String    t    =    Util.stripLeadingHyphens(value,    token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
182	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  preferredOpts,  stopAtNonOption);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  preferredOpts,  stopAtNonOption);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  preferredOpts,  stopAtNonOption);	  String    t    =    Util.stripLeadingHyphens(token,    preferredOpts);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
183	[BUG]  [BUGGY]  String  value  =  Util.stripValue(token,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  Util.stripValue(token,  expectedOpts);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  Util.stripValue(token,  expectedOpts);	  String    value    =    Util.stripLeadingHyphens(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
184	[BUG]  [BUGGY]  String  value  =(token  ==  null)?  null  :  token.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =(token  ==  null)?  null  :  token.substring(0,  i);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =(token  ==  null)?  null  :  token.substring(0,  i);	  String    value    =(token    ==    null)?    null    :    token.substring(1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
185	[BUG]  [BUGGY]  String  value  =(token  ==  null)?  null  :  token.substring(0,  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =(token  ==  null)?  null  :  token.substring(0,  1);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =(token  ==  null)?  null  :  token.substring(0,  1);	  String    value    =(token    ==    null)?    null    :    token.substring(1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
186	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(opt);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.stripLeadingHyphens(opt);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(opt);	  String    t    =    token.stripLeadingHyphens(value);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
187	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  options.getOption(option):  token.substring(0,  token.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  options.getOption(option):  token.substring(0,  token.length()  -  1);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  options.getOption(option):  token.substring(0,  token.length()  -  1);	  if(options.hasOption(token))    {    opt    =    token.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
188	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  options.getOption(opt):  token.substring(0,  token.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  options.getOption(opt):  token.substring(0,  token.length()  -  1);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  options.getOption(opt):  token.substring(0,  token.length()  -  1);	  if(options.hasOption(token))    {    opt    =    token.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
189	[BUG]  [BUGGY]  String  value  =  token.substring(0,  token.length())+  2;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  token.substring(0,  token.length())+  2;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  token.substring(0,  token.length())+  2;	  String    value    =    token.substring(0,    token.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
190	[BUG]  [BUGGY]  String  t  =  Token.stripLeadingHyphens(token).trim();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Token.stripLeadingHyphens(token).trim();  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Token.stripLeadingHyphens(token).trim();	  String    t    =    Util.stripLeadingHyphens(token).trim()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
191	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token)+  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token)+  1;  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token)+  1;	  String    t    =    Util.stripLeadingHyphens(token).trim()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
192	[BUG]  [BUGGY]  options.hasOption(token))  {  opt  =  option.substring(0,  token.length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  options.hasOption(token))  {  opt  =  option.substring(0,  token.length()  -  2);  }  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	options.hasOption(token))  {  opt  =  option.substring(0,  token.length()  -  2);  }	  if(options.hasOption(token))    {    opt    =    option.substring(0,    token.length());    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
193	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  + ": ";  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  + ": ";  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token).trim()  + ": ";	  String    t    =    Util.stripLeadingHyphens(token).trim()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
194	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  matchingOpts,  false);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  matchingOpts,  false);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  matchingOpts,  false);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts,    true);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
195	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  matchingOpts);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  matchingOpts);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  expectedOpts,  matchingOpts);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts,    stoppingAtNonOption);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
196	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token);  int  i  =  2;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token);  int  i  =  2;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token);  int  i  =  2;	  String    t    =    Util.stripLeadingHyphens(token);    int    i    =    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
197	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  opt  :  option.substring(0,  i  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  opt  :  option.substring(0,  i  +  1);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  opt  :  option.substring(0,  i  +  1);	  if(options.hasOption(token))    {    opt    =    option.substring(0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
198	[BUG]  [BUGGY]  String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  -  1):  option;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  -  1):  option;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  -  1):  option;	  String    value    =    options.hasOption(token)?    options.substring(0,    token.length()    -    1):    token;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
199	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  this)+  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  this)+  1;  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  this)+  1;	  String    t    =    Util.stripLeadingHyphens(token,    this);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
200	[BUG]  [BUGGY]  String  value  =  options.getLongPrefix(token)/  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.getLongPrefix(token)/  1;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.getLongPrefix(token)/  1;	  String    value    =    options.getLongPrefix(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
201	[BUG]  [BUGGY]  String  value  =  options.getStringPrefix(token)+  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.getStringPrefix(token)+  1;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.getStringPrefix(token)+  1;	  String    value    =    options.getLongPrefix(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
202	[BUG]  [BUGGY]  String  value  =(token!=  null)?  null  :  token.substring(0,  token.length()  -  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =(token!=  null)?  null  :  token.substring(0,  token.length()  -  1);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =(token!=  null)?  null  :  token.substring(0,  token.length()  -  1);	  String    value    =(token!=    null)?    null    :    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
203	[BUG]  [BUGGY]  String  value  =(token!=  null)?  null  :  token.substring(0,  token.length()  -  2);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =(token!=  null)?  null  :  token.substring(0,  token.length()  -  2);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =(token!=  null)?  null  :  token.substring(0,  token.length()  -  2);	  String    value    =(token!=    null)?    null    :    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
204	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token)+ ", ";  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token)+ ", ";  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token)+ ", ";	  String    t    =    Util.stripLeadingHyphens(token).trim()    +   ",   ";    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
205	[BUG]  [BUGGY]  String  value  =(token  ==  null)?  null  :  token.substring(0,  2);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =(token  ==  null)?  null  :  token.substring(0,  2);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =(token  ==  null)?  null  :  token.substring(0,  2);	  String    value    =(token    ==    null)?    null    :    token.substring(1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
206	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token)+ "' ";  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token)+ "' ";  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token)+ "' ";	  String    t    =    Util.stripLeadingHyphens(token).trim()    +   "'   ";    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
207	[BUG]  [BUGGY]  String  t  =  token.stripLeadingHyphens(optName);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.stripLeadingHyphens(optName);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.stripLeadingHyphens(optName);	  String    t    =    token.stripLeadingHyphens(value);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
208	[BUG]  [BUGGY]  int  i  =  Util.stripLeadingHyphens(token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  int  i  =  Util.stripLeadingHyphens(token);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	int  i  =  Util.stripLeadingHyphens(token);	  String    t    =    Util.stripLeadingHyphens(token);    int    i;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
209	[BUG]  [BUGGY]  String  t  =  token.substring(0,  token.length())+  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token.substring(0,  token.length())+  1;  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token.substring(0,  token.length())+  1;	  String    t    =    token.substring(0,    token.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
210	[BUG]  [BUGGY]  String  t  =  token  ==  null?  Util.stripLeadingHyphens(value):  token;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token  ==  null?  Util.stripLeadingHyphens(value):  token;  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token  ==  null?  Util.stripLeadingHyphens(value):  token;	  String    t    =    value!=    null?    Util.stripLeadingHyphens(value):    token;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
211	[BUG]  [BUGGY]  String  t  =  token!=  null?  Util.stripLeadingHyphens(token):  token;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  token!=  null?  Util.stripLeadingHyphens(token):  token;  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  token!=  null?  Util.stripLeadingHyphens(token):  token;	  String    t    =    value!=    null?    Util.stripLeadingHyphens(value):    token;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
212	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(token,  preferredOpts);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  Util.stripLeadingHyphens(token,  preferredOpts);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  Util.stripLeadingHyphens(token,  preferredOpts);	  String    value    =    Util.stripLeadingHyphens(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
213	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(token,  optName);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  Util.stripLeadingHyphens(token,  optName);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  Util.stripLeadingHyphens(token,  optName);	  String    value    =    Util.stripLeadingHyphens(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
214	[BUG]  [BUGGY]  String  value  =(token  ==  null)?  null  :  token.substring(0,  token.length();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =(token  ==  null)?  null  :  token.substring(0,  token.length();  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =(token  ==  null)?  null  :  token.substring(0,  token.length();	  String    value    =(token    ==    null)?    null    :    token.substring(0,    token.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
215	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  null,  token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  null,  token);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  null,  token);	  String    t    =    Util.stripLeadingHyphens(token,    true,    token);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
216	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(option,  token,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(option,  token,  expectedOpts);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(option,  token,  expectedOpts);	  String    t    =    Util.stripLeadingHyphens(value,    token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
217	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token,  value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  currentOption  =  options.getOption(token,  value);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  currentOption  =  options.getOption(token,  value);	  Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
218	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  false,  token  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  false,  token  +  1);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  false,  token  +  1);	  String    t    =    Util.stripLeadingHyphens(token,    false,    token);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
219	[BUG]  [BUGGY]  String  value  =  Util.stripLongName(token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  Util.stripLongName(token);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  Util.stripLongName(token);	  String    value    =    Util.stripLongPrefix(token);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
220	[BUG]  [BUGGY]  int  t  =  Util.stripLeadingHyphens(token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  int  t  =  Util.stripLeadingHyphens(token);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	int  t  =  Util.stripLeadingHyphens(token);	  char    t    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
221	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  options.substring(0,  i):  token;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  options.substring(0,  i):  token;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  options.substring(0,  i):  token;	  Option    option    =    options.hasOption(token)?    option.substring(0,    i):    token;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
222	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphen(token,  null);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphen(token,  null);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphen(token,  null);	  String    t    =    Util.stripLeadingHyphen(token);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
223	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(peek,  token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(peek,  token);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(peek,  token);	  String    t    =    Util.stripLeadingHyphens(expectedOpts,    token);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
224	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).substring(1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).substring(1);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token).substring(1);	  String    t    =    Util.stripLeadingHyphens(token).trim()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
225	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  *  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token).trim()  *  1;  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token).trim()  *  1;	  String    t    =    Util.stripLeadingHyphens(token).trim()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
226	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(value,  token,  null);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(value,  token,  null);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(value,  token,  null);	  String    t    =    Util.stripLeadingHyphens(value,    token);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
227	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(value,  token,  true);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(value,  token,  true);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(value,  token,  true);	  String    t    =    Util.stripLeadingHyphens(value,    token);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
228	[BUG]  [BUGGY]  String  option  =  token.substring(0,  token.length())+  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  option  =  token.substring(0,  token.length())+  1;  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  option  =  token.substring(0,  token.length())+  1;	  String    option    =    token.substring(0,    token.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
229	[BUG]  [BUGGY]  String  option  =  t.substring(0,  token.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  option  =  t.substring(0,  token.length()  -  1);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  option  =  t.substring(0,  token.length()  -  1);	  String    option    =    token.substring(0,    token.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
230	[BUG]  [BUGGY]  if(options.hasOption(token))  {  opt  =  option.substring(0,  token.length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  if(options.hasOption(token))  {  opt  =  option.substring(0,  token.length()  -  2);  }  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	if(options.hasOption(token))  {  opt  =  option.substring(0,  token.length()  -  2);  }	  if(options.hasOption(token))    {    opt    =    option.substring(0,    token.length());    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
231	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  this).trim();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  this).trim();  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  this).trim();	  String    t    =    Util.stripLeadingHyphens(token,    this);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
232	[BUG]  [BUGGY]  String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  -  1):   " ";  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  -  1):   " ";  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  -  1):   " ";	  String    value    =    options.hasOption(token)?    options.substring(0,    token.length()    -    1):    null;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
233	[BUG]  [BUGGY]  Option  currentOption  =  options.hasOption(token)?  options.getOption(token):  token;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  currentOption  =  options.hasOption(token)?  options.getOption(token):  token;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  currentOption  =  options.hasOption(token)?  options.getOption(token):  token;	  Option    currentOption    =    options.hasOption(token);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
234	[BUG]  [BUGGY]  Option  currentOption  =  options.hasOption(token)?  options.getOption(token):  null;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  currentOption  =  options.hasOption(token)?  options.getOption(token):  null;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  currentOption  =  options.hasOption(token)?  options.getOption(token):  null;	  Option    currentOption    =    options.hasOption(token);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
235	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  preferredOpts,  true);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  preferredOpts,  true);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  preferredOpts,  true);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts,    true);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
236	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  1,  expectedOpts,  stoppingAtNonOption);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token  +  1,  expectedOpts,  stoppingAtNonOption);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token  +  1,  expectedOpts,  stoppingAtNonOption);	  String    t    =    Util.stripLeadingHyphens(token    +    1,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
237	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  optName);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  optName);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  optName);	  String    t    =    Util.stripLeadingHyphens(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
238	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  str);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  str);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  str);	  String    t    =    Util.stripLeadingHyphens(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
239	[BUG]  [BUGGY]  String  value  =  options.get(token)+  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.get(token)+  1;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.get(token)+  1;	  String    value    =    options.get(token);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
240	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  opt,  stopAtNonOption);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  opt,  stopAtNonOption);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  opt,  stopAtNonOption);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
241	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.getOption(token,  value);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.getOption(token,  value);	  Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
242	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  preferredOpts,  stoppingAtNonOption);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  preferredOpts,  stoppingAtNonOption);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  preferredOpts,  stoppingAtNonOption);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts,    stoppingAtNonOption);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
243	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  blockingOpts,  stoppingAtNonOption);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  t  =  Util.stripLeadingHyphens(token,  blockingOpts,  stoppingAtNonOption);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  t  =  Util.stripLeadingHyphens(token,  blockingOpts,  stoppingAtNonOption);	  String    t    =    Util.stripLeadingHyphens(token,    expectedOpts,    stoppingAtNonOption);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
244	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(token);  i  =  0;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  Util.stripLeadingHyphens(token);  i  =  0;  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  Util.stripLeadingHyphens(token);  i  =  0;	  String    value    =    Util.stripLeadingHyphens(token);    int    i    =    0;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
245	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  opt  :  option.substring(0,  token.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  opt  :  option.substring(0,  token.length()  -  1);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  opt  :  option.substring(0,  token.length()  -  1);	  if(options.hasOption(opt))    {    opt    =    option.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
246	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  options.getOption(opt):  token.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  options.getOption(opt):  token.substring(0,  i);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  options.getOption(opt):  token.substring(0,  i);	  Option    option    =    options.hasOption(token)?    opt    :    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
247	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  options  :  token.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  Option  option  =  options.hasOption(token)?  options  :  token.substring(0,  i);  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	Option  option  =  options.hasOption(token)?  options  :  token.substring(0,  i);	  Option    option    =    options.hasOption(token)?    opt    :    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
248	[BUG]  [BUGGY]  String  value  =  token.substring(t.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  token.substring(t.length()  -  1);  [BUGGY]        int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  token.substring(t.length()  -  1);	  String    value    =    token.substring(token.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
249	[BUG]  [BUGGY]  String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  -  1):  token  + ", ";  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  String  getLongPrefix(String  token)  {      [BUGGY]  String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  -  1):  token  + ", ";  [BUGGY]      String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	577	577	1	replace	String  value  =  options.hasOption(token)?  options.substring(0,  token.length()  -  1):  token  + ", ";	  String    value    =    options.hasOption(token)?    options.substring(0,    token.length()    -    1):    token;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
