bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action2	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf( "= ");  [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	add	int  pos  =  token.lastIndexOf( "= ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	5	1
3	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "= ");  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf( "= ");  [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "= ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	5	1	replace
3	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "-1 ");  [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	add	int  pos  =  token.indexOf( "-1 ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	5	1
4	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "-1 ");  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "-1 ");  [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf( "-1 ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	5	1	replace
5	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  pos  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]    [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	  	int  pos  =  token.indexOf( "= ");  	non-compiled	[CE]  cannot  find  symbol  pos	5	None	replace
12	[BUG]  [BUGGY]    token  =  currentOption.getLongValue();  [CE]  cannot  find  symbol  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    token  =  currentOption.getLongValue();  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	    token  =  currentOption.getLongValue();		non-compiled	[CE]  cannot  find  symbol	2	None	add
13	[BUG]  [BUGGY]    token  =  currentOption.getValue();  if( "- ".equals(token))  {  handleShortAndTrailingQuotes(token);  }  [CE]  cannot  find  symbol  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    token  =  currentOption.getValue();  if( "- ".equals(token))  {  handleShortAndTrailingQuotes(token);  }  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	    token  =  currentOption.getValue();  if( "- ".equals(token))  {  handleShortAndTrailingQuotes(token);  }		non-compiled	[CE]  cannot  find  symbol	2	None	add
22	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingQuotes(token));  [CE]  cannot  find  symbol  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingQuotes(token));  [BUGGY]  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingQuotes(token));	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
24	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  skipParsing);  [CE]  method  addValueForProcessing  in  class  Option  cannot  be  applied  to  given  types;  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  skipParsing);  [BUGGY]  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  skipParsing);	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  	non-compiled	[CE]  method  addValueForProcessing  in  class  Option  cannot  be  applied  to  given  types;	1	None	replace
31	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]    token  =  currentOption.getValue();  [BUGGY]  currentOption  =  null;  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	add	    token  =  currentOption.getValue();		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	4	1
32	[BUG]  [BUGGY]    token  =  currentOption.getValue();  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]    token  =  currentOption.getValue();  [BUGGY]  currentOption  =  null;  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	replace	    token  =  currentOption.getValue();		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	4	1	add
32	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]    token  =  currentOption.toString();  [BUGGY]  currentOption  =  null;  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	add	    token  =  currentOption.toString();		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	4	1
33	[BUG]  [BUGGY]    token  =  currentOption.toString();  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]    token  =  currentOption.toString();  [BUGGY]  currentOption  =  null;  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	replace	    token  =  currentOption.toString();		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	4	1	add
33	[BUG]  [BUGGY]    currentOption  =  cmd.getOption(token);  [CE]  cannot  find  symbol  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]    currentOption  =  cmd.getOption(token);  [BUGGY]  currentOption  =  null;  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	replace	    currentOption  =  cmd.getOption(token);		non-compiled	[CE]  cannot  find  symbol	4	None	add
34	[BUG]  [BUGGY]    cmd.addOption(token);  [CE]  method  addOption  in  class  CommandLine  cannot  be  applied  to  given  types;  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]    cmd.addOption(token);  [BUGGY]  currentOption  =  null;  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	replace	    cmd.addOption(token);		non-compiled	[CE]  method  addOption  in  class  CommandLine  cannot  be  applied  to  given  types;	4	None	add
35	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]    token  =  currentToken.toString();  [BUGGY]  currentOption  =  null;  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	add	    token  =  currentToken.toString();		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	4	1
36	[BUG]  [BUGGY]    token  =  currentToken.toString();  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]    token  =  currentToken.toString();  [BUGGY]  currentOption  =  null;  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	replace	    token  =  currentToken.toString();		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	4	1	add
41	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]    else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	add	    else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	20	1
42	[BUG]  [BUGGY]    else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]    else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	    else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	20	1	add
42	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]    else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	add	    else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	20	1
43	[BUG]  [BUGGY]    else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]    else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	    else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	20	1	add
43	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]    if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	add	    if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	20	1
44	[BUG]  [BUGGY]    if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]    if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	    if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	20	1	add
44	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]    if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	add	    if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	20	1
45	[BUG]  [BUGGY]    if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]    if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	    if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	20	1	add
45	[BUG]  [BUGGY]    else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  >>  [CE]  illegal  start  of  expression  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]    else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  >>  [BUGGY]  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	    else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  >>		non-compiled	[CE]  illegal  start  of  expression	20	None	add
51	[BUG]  [BUGGY]  String  optName  =  token.substring(pos  +  1):  token.substring(1,  pos);  [CE]  ';'  expected  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]  String  optName  =  token.substring(pos  +  1):  token.substring(1,  pos);  [BUGGY]  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	309	309	1	replace	String  optName  =  token.substring(pos  +  1):  token.substring(1,  pos);	String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  	non-compiled	[CE]  ';'  expected	7	None	replace
52	[BUG]  [BUGGY]  String  optName  =  token.substring(0,  pos):  token.substring(1,  pos);  [CE]  ';'  expected  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]  String  optName  =  token.substring(0,  pos):  token.substring(1,  pos);  [BUGGY]  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	309	309	1	replace	String  optName  =  token.substring(0,  pos):  token.substring(1,  pos);	String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  	non-compiled	[CE]  ';'  expected	7	None	replace
54	[BUG]  [BUGGY]  String  optName  =  token.substring(pos):  token.substring(1,  pos);  [CE]  ';'  expected  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]  String  optName  =  token.substring(pos):  token.substring(1,  pos);  [BUGGY]  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	309	309	1	replace	String  optName  =  token.substring(pos):  token.substring(1,  pos);	String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  	non-compiled	[CE]  ';'  expected	7	None	replace
55	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  optName  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    [BUGGY]  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	309	309	1	replace	  	String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  	non-compiled	[CE]  cannot  find  symbol  optName	7	None	replace
61	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]  currentOption  =  options.getOption(token);  [BUGGY]  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	add	currentOption  =  options.getOption(token);	currentOption  =  null;  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	3	1
62	[BUG]  [BUGGY]  currentOption  =  options.getOption(token);  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]  currentOption  =  options.getOption(token);  [BUGGY]  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	replace	currentOption  =  options.getOption(token);	currentOption  =  null;  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	3	1	replace
62	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]  currentOption  =  options.getOption(currentToken);  [BUGGY]  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	add	currentOption  =  options.getOption(currentToken);	currentOption  =  null;  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	3	1
63	[BUG]  [BUGGY]  currentOption  =  options.getOption(currentToken);  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]  currentOption  =  options.getOption(currentToken);  [BUGGY]  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	replace	currentOption  =  options.getOption(currentToken);	currentOption  =  null;  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	3	1	replace
63	[BUG]  [BUGGY]  currentOption  =  option;  [CE]  cannot  find  symbol  option  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]  currentOption  =  option;  [BUGGY]  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	replace	currentOption  =  option;	currentOption  =  null;  	non-compiled	[CE]  cannot  find  symbol  option	3	None	replace
64	[BUG]  [BUGGY]  currentOption  =  options.getOption(value);  [CE]  cannot  find  symbol  value  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]  currentOption  =  options.getOption(value);  [BUGGY]  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	replace	currentOption  =  options.getOption(value);	currentOption  =  null;  	non-compiled	[CE]  cannot  find  symbol  value	3	None	replace
71	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]    token  =  token.substring(pos  +  1);  [BUGGY]  if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	add	    token  =  token.substring(pos  +  1);		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	16	1
72	[BUG]  [BUGGY]    token  =  token.substring(pos  +  1);  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]    token  =  token.substring(pos  +  1);  [BUGGY]  if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	    token  =  token.substring(pos  +  1);		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	16	1	add
72	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]    token  =  token.substring(pos  +  1,  t.length());  [BUGGY]  if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	add	    token  =  token.substring(pos  +  1,  t.length());		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	16	1
73	[BUG]  [BUGGY]    token  =  token.substring(pos  +  1,  t.length());  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]    token  =  token.substring(pos  +  1,  t.length());  [BUGGY]  if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	    token  =  token.substring(pos  +  1,  t.length());		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	16	1	add
73	[BUG]  [BUGGY]    token  =  token.substring(pos,  t);  [CE]  no  suitable  method  found  for  substring(int,String)  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]    token  =  token.substring(pos,  t);  [BUGGY]  if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	    token  =  token.substring(pos,  t);		non-compiled	[CE]  no  suitable  method  found  for  substring(int,String)	16	None	add
75	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]    pos  =  token.indexOf( "- ");  [BUGGY]  if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	add	    pos  =  token.indexOf( "- ");		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	16	1
76	[BUG]  [BUGGY]    pos  =  token.indexOf( "- ");  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]    pos  =  token.indexOf( "- ");  [BUGGY]  if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	    pos  =  token.indexOf( "- ");		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	16	1	add
81	[BUG]  [BUGGY]  String  t  =  token.length  ==  -1?  token  :  token.substring(0,  pos);  [CE]  cannot  find  symbol  length  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]  String  t  =  token.length  ==  -1?  token  :  token.substring(0,  pos);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token.length  ==  -1?  token  :  token.substring(0,  pos);	String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  	non-compiled	[CE]  cannot  find  symbol  length	13	None	replace
82	[BUG]  [BUGGY]  String  t  =  token!=  -1?  token  :  token.substring(0,  pos);  [CE]  incomparable  types:  String  and  int  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]  String  t  =  token!=  -1?  token  :  token.substring(0,  pos);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token!=  -1?  token  :  token.substring(0,  pos);	String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  	non-compiled	[CE]  incomparable  types:  String  and  int	13	None	replace
83	[BUG]  [BUGGY]  String  t  =  token  ==  -1?  token  :  token.substring(0,  pos);  [CE]  incomparable  types:  String  and  int  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]  String  t  =  token  ==  -1?  token  :  token.substring(0,  pos);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	String  t  =  token  ==  -1?  token  :  token.substring(0,  pos);	String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  	non-compiled	[CE]  incomparable  types:  String  and  int	13	None	replace
85	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  t  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	  	String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  	non-compiled	[CE]  cannot  find  symbol  t	13	None	replace
91	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( "- ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	add	int  pos  =  token.indexOf( "- ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	11	1
92	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ");  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( "- ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "- ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	11	1	replace
92	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.lastIndexOf( "= ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	add	int  pos  =  token.lastIndexOf( "= ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	11	1
93	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "= ");  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.lastIndexOf( "= ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "= ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	11	1	replace
93	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( "-1 ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	add	int  pos  =  token.indexOf( "-1 ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	11	1
94	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "-1 ");  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( "-1 ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "-1 ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	11	1	replace
94	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( "+ ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	add	int  pos  =  token.indexOf( "+ ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	11	1
95	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "+ ");  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( "+ ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "+ ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	11	1	replace
95	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  pos  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	  	int  pos  =  token.indexOf( "= ");  	non-compiled	[CE]  cannot  find  symbol  pos	11	None	replace
101	[BUG]  [BUGGY]    token.startsWith( "- ")?  token.substring(0,  pos):  token.substring(1,  pos);  [CE]  not  a  statement  [CONTEXT]  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  [BUGGY]    token.startsWith( "- ")?  token.substring(0,  pos):  token.substring(1,  pos);  [BUGGY]  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	310	310	1	replace	    token.startsWith( "- ")?  token.substring(0,  pos):  token.substring(1,  pos);		non-compiled	[CE]  not  a  statement	10	None	add
102	[BUG]  [BUGGY]    token.startsWith( "- "):  token.substring(0,  pos);  [CE]  [CONTEXT]  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  [BUGGY]    token.startsWith( "- "):  token.substring(0,  pos);  [BUGGY]  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	310	310	1	replace	    token.startsWith( "- "):  token.substring(0,  pos);		non-compiled	[CE]  	10	None	add
104	[BUG]  [BUGGY]    token.startsWith( "- ")?  token.substring(0,  pos):  token.substring(0,  pos);  [CE]  not  a  statement  [CONTEXT]  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  [BUGGY]    token.startsWith( "- ")?  token.substring(0,  pos):  token.substring(0,  pos);  [BUGGY]  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	310	310	1	replace	    token.startsWith( "- ")?  token.substring(0,  pos):  token.substring(0,  pos);		non-compiled	[CE]  not  a  statement	10	None	add
105	[BUG]  [BUGGY]    token.startsWith( "- ")?  token.substring(0,  optName):  token.substring(0,  pos);  [CE]  not  a  statement  [CONTEXT]  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  [BUGGY]    token.startsWith( "- ")?  token.substring(0,  optName):  token.substring(0,  pos);  [BUGGY]  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	310	310	1	replace	    token.startsWith( "- ")?  token.substring(0,  optName):  token.substring(0,  pos);		non-compiled	[CE]  not  a  statement	10	None	add
111	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    token  =  token.substring(0,  token.length()  -  1);  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	add	    token  =  token.substring(0,  token.length()  -  1);		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	12	1
112	[BUG]  [BUGGY]    token  =  token.substring(0,  token.length()  -  1);  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    token  =  token.substring(0,  token.length()  -  1);  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	    token  =  token.substring(0,  token.length()  -  1);		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	12	1	add
112	[BUG]  [BUGGY]    token  =  token.substring(0,  pos);  [CE]  cannot  find  symbol  pos  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    token  =  token.substring(0,  pos);  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	    token  =  token.substring(0,  pos);		non-compiled	[CE]  cannot  find  symbol  pos	12	None	add
114	[BUG]  [BUGGY]    token  =  token.substring(pos  +  1,  token.length());  [CE]  cannot  find  symbol  pos  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    token  =  token.substring(pos  +  1,  token.length());  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	    token  =  token.substring(pos  +  1,  token.length());		non-compiled	[CE]  cannot  find  symbol  pos	12	None	add
115	[BUG]  [BUGGY]    token  =  token.substring(pos  +  1);  [CE]  cannot  find  symbol  pos  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    token  =  token.substring(pos  +  1);  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	    token  =  token.substring(pos  +  1);		non-compiled	[CE]  cannot  find  symbol  pos	12	None	add
121	[BUG]  [BUGGY]  [FE]  AssertionError  shouldParseShortOptionWithoutValue  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]    token  =  token.substring(0,  token.length()  -  1);  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	add	    token  =  token.substring(0,  token.length()  -  1);		compilable	  [FE]  AssertionError  shouldParseShortOptionWithoutValue	6	1
122	[BUG]  [BUGGY]    token  =  token.substring(0,  token.length()  -  1);  [FE]  AssertionError  shouldParseShortOptionWithoutValue  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]    token  =  token.substring(0,  token.length()  -  1);  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	    token  =  token.substring(0,  token.length()  -  1);		compilable	  [FE]  AssertionError  shouldParseShortOptionWithoutValue	6	1	add
124	[BUG]  [BUGGY]    token  =  token.substring(0,  token.length()  -  1,  token.length());  [CE]  no  suitable  method  found  for  substring(int,int,int)  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]    token  =  token.substring(0,  token.length()  -  1,  token.length());  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	    token  =  token.substring(0,  token.length()  -  1,  token.length());		non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	6	None	add
131	[BUG]  [BUGGY]  return  options.getOption(optName);  [CE]  incompatible  types  [CONTEXT]  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  [BUGGY]  return  options.getOption(optName);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	310	310	1	replace	return  options.getOption(optName);	return  options.hasShortOption(optName);  	non-compiled	[CE]  incompatible  types	9	None	replace
132	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  [BUGGY]  return  options.hasOption(optName);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	310	310	1	add	return  options.hasOption(optName);	return  options.hasShortOption(optName);  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	9	1
133	[BUG]  [BUGGY]  return  options.hasOption(optName);  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  [BUGGY]  return  options.hasOption(optName);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	310	310	1	replace	return  options.hasOption(optName);	return  options.hasShortOption(optName);  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	9	1	replace
133	[BUG]  [BUGGY]  return  options.contains(optName);  [CE]  cannot  find  symbol  [CONTEXT]  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  [BUGGY]  return  options.contains(optName);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	310	310	1	replace	return  options.contains(optName);	return  options.hasShortOption(optName);  	non-compiled	[CE]  cannot  find  symbol	9	None	replace
134	[BUG]  [BUGGY]  return  options.containsKey(optName);  [CE]  cannot  find  symbol  [CONTEXT]  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  [BUGGY]  return  options.containsKey(optName);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	310	310	1	replace	return  options.containsKey(optName);	return  options.hasShortOption(optName);  	non-compiled	[CE]  cannot  find  symbol	9	None	replace
141	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    token  =  token.substring(pos  +  1);  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	add	    token  =  token.substring(pos  +  1);		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	14	1
142	[BUG]  [BUGGY]    token  =  token.substring(pos  +  1);  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    token  =  token.substring(pos  +  1);  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	    token  =  token.substring(pos  +  1);		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	14	1	add
142	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    token  =  token.substring(pos  +  1,  token.length());  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	add	    token  =  token.substring(pos  +  1,  token.length());		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	14	1
143	[BUG]  [BUGGY]    token  =  token.substring(pos  +  1,  token.length());  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    token  =  token.substring(pos  +  1,  token.length());  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	    token  =  token.substring(pos  +  1,  token.length());		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	14	1	add
144	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    token  =  token.substring(pos  +  1,  token.length()  -  1);  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	add	    token  =  token.substring(pos  +  1,  token.length()  -  1);		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	14	1
145	[BUG]  [BUGGY]    token  =  token.substring(pos  +  1,  token.length()  -  1);  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    token  =  token.substring(pos  +  1,  token.length()  -  1);  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	    token  =  token.substring(pos  +  1,  token.length()  -  1);		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	14	1	add
151	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	add	else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	17	1
152	[BUG]  [BUGGY]  else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	17	1	replace
153	[BUG]  [BUGGY]  else  if(!getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  [CE]  bad  operand  type  String  for  unary  operator  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if(!getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(!getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	non-compiled	[CE]  bad  operand  type  String  for  unary  operator  	17	None	replace
154	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if(getLongPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	add	else  if(getLongPrefix(token)  ==  null  &&!token.startsWith( "- "))  {	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	17	1
155	[BUG]  [BUGGY]  else  if(getLongPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if(getLongPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(getLongPrefix(token)  ==  null  &&!token.startsWith( "- "))  {	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	17	1	replace
155	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	  	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
161	[BUG]  [BUGGY]    token  =  token.substring(pos  +  1);  [CE]  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    token  =  token.substring(pos  +  1);  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    token  =  token.substring(pos  +  1);		non-compiled	[CE]  	18	None	add
162	[BUG]  [BUGGY]    token  =  token.substring(pos,  t);  [CE]  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    token  =  token.substring(pos,  t);  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    token  =  token.substring(pos,  t);		non-compiled	[CE]  	18	None	add
163	[BUG]  [BUGGY]    token  =  token.substring(pos  +  1,  t.length());  [CE]  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    token  =  token.substring(pos  +  1,  t.length());  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    token  =  token.substring(pos  +  1,  t.length());		non-compiled	[CE]  	18	None	add
164	[BUG]  [BUGGY]    token  =  token.substring(pos);  [CE]  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    token  =  token.substring(pos);  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    token  =  token.substring(pos);		non-compiled	[CE]  	18	None	add
165	[BUG]  [BUGGY]    token  =  token.substring(pos  +  1,  t);  [CE]  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    token  =  token.substring(pos  +  1,  t);  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    token  =  token.substring(pos  +  1,  t);		non-compiled	[CE]  	18	None	add
172	[BUG]  [BUGGY]    int  stopAtNonOption  =  token.indexOf( "- ")?  token.substring(0,  pos):  token.substring(0,  pos);  [CE]  incompatible  types  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    int  stopAtNonOption  =  token.indexOf( "- ")?  token.substring(0,  pos):  token.substring(0,  pos);  [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	309	309	1	replace	    int  stopAtNonOption  =  token.indexOf( "- ")?  token.substring(0,  pos):  token.substring(0,  pos);		non-compiled	[CE]  incompatible  types	8	None	add
173	[BUG]  [BUGGY]    int  stopAtNonOption  =  token.indexOf( "- ")?  token.substring(0,  pos):  token.substring(1,  pos);  [CE]  incompatible  types  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    int  stopAtNonOption  =  token.indexOf( "- ")?  token.substring(0,  pos):  token.substring(1,  pos);  [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	309	309	1	replace	    int  stopAtNonOption  =  token.indexOf( "- ")?  token.substring(0,  pos):  token.substring(1,  pos);		non-compiled	[CE]  incompatible  types	8	None	add
174	[BUG]  [BUGGY]    int  stopAtNonOption  =  token.indexOf( "- ")?  token.substring(0,  pos):  token.substring(pos);  [CE]  incompatible  types  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    int  stopAtNonOption  =  token.indexOf( "- ")?  token.substring(0,  pos):  token.substring(pos);  [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	309	309	1	replace	    int  stopAtNonOption  =  token.indexOf( "- ")?  token.substring(0,  pos):  token.substring(pos);		non-compiled	[CE]  incompatible  types	8	None	add
182	[BUG]  [BUGGY]  if(!options.getMatchingOptions(t).isLong())  {  [CE]  cannot  find  symbol  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]  if(!options.getMatchingOptions(t).isLong())  {  [BUGGY]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(!options.getMatchingOptions(t).isLong())  {	if  (!options.getMatchingOptions(t).isEmpty())  {  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
183	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]  if(!options.getMatchingOptions(t).isEmpty()  ||  pos  >  0)  {  [BUGGY]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	add	if(!options.getMatchingOptions(t).isEmpty()  ||  pos  >  0)  {	if  (!options.getMatchingOptions(t).isEmpty())  {  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	15	1
184	[BUG]  [BUGGY]  if(!options.getMatchingOptions(t).isEmpty()  ||  pos  >  0)  {  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]  if(!options.getMatchingOptions(t).isEmpty()  ||  pos  >  0)  {  [BUGGY]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(!options.getMatchingOptions(t).isEmpty()  ||  pos  >  0)  {	if  (!options.getMatchingOptions(t).isEmpty())  {  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	15	1	replace
184	[BUG]  [BUGGY]  if(!options.getMatchingOptions(t).isSupported())  {  [CE]  cannot  find  symbol  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]  if(!options.getMatchingOptions(t).isSupported())  {  [BUGGY]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(!options.getMatchingOptions(t).isSupported())  {	if  (!options.getMatchingOptions(t).isEmpty())  {  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
192	[BUG]  [BUGGY]  return(getLongPrefix(token)!=  null  &&!token.startsWith( "- ")))  {  return  true;  }  [CE]  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]  return(getLongPrefix(token)!=  null  &&!token.startsWith( "- ")))  {  return  true;  }  [BUGGY]  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	return(getLongPrefix(token)!=  null  &&!token.startsWith( "- ")))  {  return  true;  }	return  false;  	non-compiled	[CE]  	19	None	replace
193	[BUG]  [BUGGY]  return(getLongPrefix(token))!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]  return(getLongPrefix(token))!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	return(getLongPrefix(token))!=  null  &&!token.startsWith( "- "))  {  return  true;  }	return  false;  	non-compiled	[CE]  	19	None	replace
194	[BUG]  [BUGGY]  return(getLongPrefix(token))  ==  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]  return(getLongPrefix(token))  ==  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	return(getLongPrefix(token))  ==  null  &&!token.startsWith( "- "))  {  return  true;  }	return  false;  	non-compiled	[CE]  	19	None	replace
1	[BUG]  [BUGGY]    cmd.addOption(token);  [CE]  method  addOption  in  class  CommandLine  cannot  be  applied  to  given  types;  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]    cmd.addOption(token);  [BUGGY]  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	    cmd.addOption(token);		non-compiled	[CE]  method  addOption  in  class  CommandLine  cannot  be  applied  to  given  types;	20	None	add
3	[BUG]  [BUGGY]    else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]    else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	    else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {		non-compiled	[CE]  illegal  start  of  expression	20	None	add
4	[BUG]  [BUGGY]    cmd.addOption(opt);  [CE]  cannot  find  symbol  opt  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]    cmd.addOption(opt);  [BUGGY]  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	    cmd.addOption(opt);		non-compiled	[CE]  cannot  find  symbol  opt	20	None	add
5	[BUG]  [BUGGY]    else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  continue;  }  [CE]  continue  outside  of  loop  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]    else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  continue;  }  [BUGGY]  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	    else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  continue;  }		non-compiled	[CE]  continue  outside  of  loop	20	None	add
22	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    pos  =  token.indexOf( "-- ");  [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	309	309	1	add	    pos  =  token.indexOf( "-- ");		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	8	1
23	[BUG]  [BUGGY]    pos  =  token.indexOf( "-- ");  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    pos  =  token.indexOf( "-- ");  [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	309	309	1	replace	    pos  =  token.indexOf( "-- ");		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	8	1	add
43	[BUG]  [BUGGY]    if(!skipParsing)  {  continue;  }  [CE]  continue  outside  of  loop  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    if(!skipParsing)  {  continue;  }  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	    if(!skipParsing)  {  continue;  }		non-compiled	[CE]  continue  outside  of  loop	2	None	add
44	[BUG]  [BUGGY]    token  =  currentOption.getLocale();  [CE]  cannot  find  symbol  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    token  =  currentOption.getLocale();  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	    token  =  currentOption.getLocale();		non-compiled	[CE]  cannot  find  symbol	2	None	add
45	[BUG]  [BUGGY]    token  =  currentOption.getLocalArg();  [CE]  cannot  find  symbol  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    token  =  currentOption.getLocalArg();  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	    token  =  currentOption.getLocalArg();		non-compiled	[CE]  cannot  find  symbol	2	None	add
62	[BUG]  [BUGGY]  return  options.isShortOption(optName);  [CE]  cannot  find  symbol  [CONTEXT]  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  [BUGGY]  return  options.isShortOption(optName);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	310	310	1	replace	return  options.isShortOption(optName);	return  options.hasShortOption(optName);  	non-compiled	[CE]  cannot  find  symbol	9	None	replace
83	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]    boolean  stopAtNonOption  =  token.startsWith( "- ")&&  token.startsWith(token.substring(0,  token.length()  -  1));  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	add	    boolean  stopAtNonOption  =  token.startsWith( "- ")&&  token.startsWith(token.substring(0,  token.length()  -  1));		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	6	1
84	[BUG]  [BUGGY]    boolean  stopAtNonOption  =  token.startsWith( "- ")&&  token.startsWith(token.substring(0,  token.length()  -  1));  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]    boolean  stopAtNonOption  =  token.startsWith( "- ")&&  token.startsWith(token.substring(0,  token.length()  -  1));  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	    boolean  stopAtNonOption  =  token.startsWith( "- ")&&  token.startsWith(token.substring(0,  token.length()  -  1));		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	6	1	add
102	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]  if(t!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  [BUGGY]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	add	if(t!=  null  &&!options.getMatchingOptions(t).isEmpty())  {	if  (!options.getMatchingOptions(t).isEmpty())  {  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	15	1
103	[BUG]  [BUGGY]  if(t!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]  if(t!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  [BUGGY]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(t!=  null  &&!options.getMatchingOptions(t).isEmpty())  {	if  (!options.getMatchingOptions(t).isEmpty())  {  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	15	1	replace
104	[BUG]  [BUGGY]  if(!options.getMatchingOptions(t)).isEmpty())  {  [CE]  illegal  start  of  expression  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]  if(!options.getMatchingOptions(t)).isEmpty())  {  [BUGGY]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(!options.getMatchingOptions(t)).isEmpty())  {	if  (!options.getMatchingOptions(t).isEmpty())  {  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
141	[BUG]  [BUGGY]    options.addOption(optName);  [CE]  no  suitable  method  found  for  addOption(String)  [CONTEXT]  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  [BUGGY]    options.addOption(optName);  [BUGGY]  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	310	310	1	replace	    options.addOption(optName);		non-compiled	[CE]  no  suitable  method  found  for  addOption(String)	10	None	add
142	[BUG]  [BUGGY]    if(optName!=  null)  {  if(optName.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  [BUGGY]    if(optName!=  null)  {  if(optName.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	310	310	1	replace	    if(optName!=  null)  {  if(optName.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
143	[BUG]  [BUGGY]    if(optName!=  null)  {  if(optName.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  [BUGGY]    if(optName!=  null)  {  if(optName.startsWith( "- "))  {  return  false;  }  [BUGGY]  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	310	310	1	replace	    if(optName!=  null)  {  if(optName.startsWith( "- "))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
144	[BUG]  [BUGGY]    if(optName!=  null)  {  if(optName.startsWith( "- "))  {  continue;  }  [CE]  illegal  start  of  expression  [CONTEXT]  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  [BUGGY]    if(optName!=  null)  {  if(optName.startsWith( "- "))  {  continue;  }  [BUGGY]  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	310	310	1	replace	    if(optName!=  null)  {  if(optName.startsWith( "- "))  {  continue;  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
145	[BUG]  [BUGGY]    if(optName!=  null)  {  if(optName.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  [BUGGY]    if(optName!=  null)  {  if(optName.startsWith( "- "))  {  return  true;  }  [BUGGY]  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	310	310	1	replace	    if(optName!=  null)  {  if(optName.startsWith( "- "))  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
162	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    token  =  token.substring(1);  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	add	    token  =  token.substring(1);		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	12	1
163	[BUG]  [BUGGY]    token  =  token.substring(1);  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    token  =  token.substring(1);  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	    token  =  token.substring(1);		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	12	1	add
164	[BUG]  [BUGGY]    boolean  stopAtNonOption  =  isLong(token);  [CE]  cannot  find  symbol  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    boolean  stopAtNonOption  =  isLong(token);  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	    boolean  stopAtNonOption  =  isLong(token);		non-compiled	[CE]  cannot  find  symbol	12	None	add
165	[BUG]  [BUGGY]    boolean  stopAtNonOption  =  options.hasArg(token);  [CE]  cannot  find  symbol  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    boolean  stopAtNonOption  =  options.hasArg(token);  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	    boolean  stopAtNonOption  =  options.hasArg(token);		non-compiled	[CE]  cannot  find  symbol	12	None	add
184	[BUG]  [BUGGY]    cmd.addOption(opt);  [CE]  cannot  find  symbol  opt  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]    cmd.addOption(opt);  [BUGGY]  currentOption  =  null;  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	replace	    cmd.addOption(opt);		non-compiled	[CE]  cannot  find  symbol  opt	4	None	add
185	[BUG]  [BUGGY]    token  =  currentOption.getLocalMore();  [CE]  cannot  find  symbol  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]    token  =  currentOption.getLocalMore();  [BUGGY]  currentOption  =  null;  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	replace	    token  =  currentOption.getLocalMore();		non-compiled	[CE]  cannot  find  symbol	4	None	add
222	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "+ "  = ");  [CE]  unclosed  string  literal  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( "+ "  = ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "+ "  = ");	int  pos  =  token.indexOf( "= ");  	non-compiled	[CE]  unclosed  string  literal	11	None	replace
223	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( "$= ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	add	int  pos  =  token.indexOf( "$= ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	11	1
224	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "$= ");  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( "$= ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "$= ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	11	1	replace
242	[BUG]  [BUGGY]  return(getLongValue(token)!=  null  &&!token.startsWith( "- "))  {  [CE]  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]  return(getLongValue(token)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	return(getLongValue(token)!=  null  &&!token.startsWith( "- "))  {	return  false;  	non-compiled	[CE]  	19	None	replace
243	[BUG]  [BUGGY]  return(getLongValue(token)!=  null  &&!token.startsWith( "- ")))  {  [CE]  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]  return(getLongValue(token)!=  null  &&!token.startsWith( "- ")))  {  [BUGGY]  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	return(getLongValue(token)!=  null  &&!token.startsWith( "- ")))  {	return  false;  	non-compiled	[CE]  	19	None	replace
244	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]  return  currentOption!=  null  &&  currentOption.hasArg()?  false  :  currentOption.hasArg();  [BUGGY]  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	add	return  currentOption!=  null  &&  currentOption.hasArg()?  false  :  currentOption.hasArg();	return  false;  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	19	1
245	[BUG]  [BUGGY]  return  currentOption!=  null  &&  currentOption.hasArg()?  false  :  currentOption.hasArg();  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]  return  currentOption!=  null  &&  currentOption.hasArg()?  false  :  currentOption.hasArg();  [BUGGY]  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	return  currentOption!=  null  &&  currentOption.hasArg()?  false  :  currentOption.hasArg();	return  false;  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	19	1	replace
263	[BUG]  [BUGGY]  currentOption.addValueforProcessing(Util.stripLeadingAndTrailingQuotes(token));  [CE]  cannot  find  symbol  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]  currentOption.addValueforProcessing(Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueforProcessing(Util.stripLeadingAndTrailingQuotes(token));	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
264	[BUG]  [BUGGY]  currentOption.addValueForProcessing(token,  Util.stripLeadingAndTrailingQuotes(token));  [CE]  method  addValueForProcessing  in  class  Option  cannot  be  applied  to  given  types;  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]  currentOption.addValueForProcessing(token,  Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(token,  Util.stripLeadingAndTrailingQuotes(token));	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  	non-compiled	[CE]  method  addValueForProcessing  in  class  Option  cannot  be  applied  to  given  types;	1	None	replace
282	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "-- ");  [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	add	int  pos  =  token.indexOf( "-- ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	5	1
283	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "-- ");  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "-- ");  [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf( "-- ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	5	1	replace
283	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "--> ");  [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	add	int  pos  =  token.indexOf( "--> ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	5	1
284	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "--> ");  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "--> ");  [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf( "--> ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	5	1	replace
284	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "-$ ");  [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	add	int  pos  =  token.indexOf( "-$ ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	5	1
285	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "-$ ");  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "-$ ");  [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf( "-$ ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	5	1	replace
301	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if(getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	add	else  if(getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	17	1
302	[BUG]  [BUGGY]  else  if(getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if(getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	17	1	replace
302	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if(getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	add	else  if(getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	17	1
303	[BUG]  [BUGGY]  else  if(getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if(getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	17	1	replace
321	[BUG]  [BUGGY]    if(options.hasOption(token))  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(options.hasOption(token))  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    if(options.hasOption(token))  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
322	[BUG]  [BUGGY]    if(t.equals(token))  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(t.equals(token))  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    if(t.equals(token))  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
323	[BUG]  [BUGGY]    if(t.startsWith( "-- "))  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(t.startsWith( "-- "))  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    if(t.startsWith( "-- "))  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
324	[BUG]  [BUGGY]    if(t.equals(token))  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(t.equals(token))  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    if(t.equals(token))  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
325	[BUG]  [BUGGY]    if(t.equals(token))  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(t.equals(token))  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    if(t.equals(token))  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
342	[BUG]  [BUGGY]    if(t!=  null)  {  if(getLongPrefix(token)!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]    if(t!=  null)  {  if(getLongPrefix(token)!=  null)  {  return  false;  }  [BUGGY]  if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	    if(t!=  null)  {  if(getLongPrefix(token)!=  null)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
343	[BUG]  [BUGGY]    boolean  stopAtNonOption  =  options.isAtNonOption(t);  [CE]  cannot  find  symbol  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]    boolean  stopAtNonOption  =  options.isAtNonOption(t);  [BUGGY]  if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	    boolean  stopAtNonOption  =  options.isAtNonOption(t);		non-compiled	[CE]  cannot  find  symbol	16	None	add
344	[BUG]  [BUGGY]    if(t!=  null)  {  if(getLongPrefix(token)!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]    if(t!=  null)  {  if(getLongPrefix(token)!=  null)  {  return  true;  }  [BUGGY]  if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	    if(t!=  null)  {  if(getLongPrefix(token)!=  null)  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
345	[BUG]  [BUGGY]    boolean  stopAtNonOption  =  options.isLongOption(t);  [CE]  cannot  find  symbol  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]    boolean  stopAtNonOption  =  options.isLongOption(t);  [BUGGY]  if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	    boolean  stopAtNonOption  =  options.isLongOption(t);		non-compiled	[CE]  cannot  find  symbol	16	None	add
362	[BUG]  [BUGGY]  currentOption  =  new  LinkedHashMap  <  String,JavaType>();  [CE]  cannot  find  symbol  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]  currentOption  =  new  LinkedHashMap  <  String,JavaType>();  [BUGGY]  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	replace	currentOption  =  new  LinkedHashMap  <  String,JavaType>();	currentOption  =  null;  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
363	[BUG]  [BUGGY]  currentOption  =  new  HashMap  <  String,Object>();  [CE]  cannot  find  symbol  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]  currentOption  =  new  HashMap  <  String,Object>();  [BUGGY]  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	replace	currentOption  =  new  HashMap  <  String,Object>();	currentOption  =  null;  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
364	[BUG]  [BUGGY]  currentOption  =  getOption();  [CE]  cannot  find  symbol  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]  currentOption  =  getOption();  [BUGGY]  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	replace	currentOption  =  getOption();	currentOption  =  null;  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
382	[BUG]  [BUGGY]    pos  =  token.indexOf(' "+getLongPrefix());  [CE]  unclosed  character  literal  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    pos  =  token.indexOf(' "+getLongPrefix());  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	    pos  =  token.indexOf(' "+getLongPrefix());		non-compiled	[CE]  unclosed  character  literal	14	None	add
383	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    pos  =  token.indexOf( "- ")+  1;  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	add	    pos  =  token.indexOf( "- ")+  1;		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	14	1
384	[BUG]  [BUGGY]    pos  =  token.indexOf( "- ")+  1;  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    pos  =  token.indexOf( "- ")+  1;  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	    pos  =  token.indexOf( "- ")+  1;		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	14	1	add
31	[BUG]  [BUGGY]    if(t.equals( "- "))  {  if(getLongOpt(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(t.equals( "- "))  {  if(getLongOpt(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    if(t.equals( "- "))  {  if(getLongOpt(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
32	[BUG]  [BUGGY]    if(getLongOpt(token)!=  null)  {  if(!options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(getLongOpt(token)!=  null)  {  if(!options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    if(getLongOpt(token)!=  null)  {  if(!options.getMatchingOptions(t).isEmpty())  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
33	[BUG]  [BUGGY]    if(t.equals( "- "))  {  if(getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(t.equals( "- "))  {  if(getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    if(t.equals( "- "))  {  if(getLongPrefix(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
34	[BUG]  [BUGGY]    if(t.equals( "- "))  {  if(getLongName(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(t.equals( "- "))  {  if(getLongName(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    if(t.equals( "- "))  {  if(getLongName(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
35	[BUG]  [BUGGY]    if(t.equals( "- "))  {  if(getLongOpt(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(t.equals( "- "))  {  if(getLongOpt(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	    if(t.equals( "- "))  {  if(getLongOpt(token)!=  null  &&!options.getMatchingOptions(t).isEmpty())  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
62	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if(getLongPrefix(token)!=  null  &&!t.startsWith( "- "))  {  [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	add	else  if(getLongPrefix(token)!=  null  &&!t.startsWith( "- "))  {	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	17	1
63	[BUG]  [BUGGY]  else  if(getLongPrefix(token)!=  null  &&!t.startsWith( "- "))  {  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if(getLongPrefix(token)!=  null  &&!t.startsWith( "- "))  {  [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(getLongPrefix(token)!=  null  &&!t.startsWith( "- "))  {	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	17	1	replace
63	[BUG]  [BUGGY]  else  if(getLongOpt(token)!=  null  &&!token.startsWith( "- "))  {  [CE]  cannot  find  symbol  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if(getLongOpt(token)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	334	335	1	replace	else  if(getLongOpt(token)!=  null  &&!token.startsWith( "- "))  {	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	non-compiled	[CE]  cannot  find  symbol	17	None	replace
91	[BUG]  [BUGGY]    cmd.addOption(optName);  [CE]  method  addOption  in  class  CommandLine  cannot  be  applied  to  given  types;  [CONTEXT]  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  [BUGGY]    cmd.addOption(optName);  [BUGGY]  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	310	310	1	replace	    cmd.addOption(optName);		non-compiled	[CE]  method  addOption  in  class  CommandLine  cannot  be  applied  to  given  types;	10	None	add
92	[BUG]  [BUGGY]    cmd.addOption(optName,  true);  [CE]  method  addOption  in  class  CommandLine  cannot  be  applied  to  given  types;  [CONTEXT]  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  [BUGGY]    cmd.addOption(optName,  true);  [BUGGY]  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	310	310	1	replace	    cmd.addOption(optName,  true);		non-compiled	[CE]  method  addOption  in  class  CommandLine  cannot  be  applied  to  given  types;	10	None	add
93	[BUG]  [BUGGY]    cmd.addArg(token.substring(0,  optName));  [CE]  no  suitable  method  found  for  substring(int,String)  [CONTEXT]  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  [BUGGY]    cmd.addArg(token.substring(0,  optName));  [BUGGY]  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	310	310	1	replace	    cmd.addArg(token.substring(0,  optName));		non-compiled	[CE]  no  suitable  method  found  for  substring(int,String)	10	None	add
95	[BUG]  [BUGGY]    cmd.addOption(option,  token);  [CE]  cannot  find  symbol  option  [CONTEXT]  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  [BUGGY]    cmd.addOption(option,  token);  [BUGGY]  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	310	310	1	replace	    cmd.addOption(option,  token);		non-compiled	[CE]  cannot  find  symbol  option	10	None	add
122	[BUG]  [BUGGY]    pos  =  token.indexOf( "$$ ")+  token.substring(pos  +  1);  [CE]  incompatible  types  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    pos  =  token.indexOf( "$$ ")+  token.substring(pos  +  1);  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	    pos  =  token.indexOf( "$$ ")+  token.substring(pos  +  1);		non-compiled	[CE]  incompatible  types	14	None	add
123	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    pos  =  token.indexOf( "$$ ")+  1;  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	add	    pos  =  token.indexOf( "$$ ")+  1;		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	14	1
124	[BUG]  [BUGGY]    pos  =  token.indexOf( "$$ ")+  1;  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    pos  =  token.indexOf( "$$ ")+  1;  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	    pos  =  token.indexOf( "$$ ")+  1;		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	14	1	add
124	[BUG]  [BUGGY]    pos  =  token.lastIndexOf( "$$ ")+  token.substring(pos  +  1);  [CE]  incompatible  types  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    pos  =  token.lastIndexOf( "$$ ")+  token.substring(pos  +  1);  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	    pos  =  token.lastIndexOf( "$$ ")+  token.substring(pos  +  1);		non-compiled	[CE]  incompatible  types	14	None	add
125	[BUG]  [BUGGY]    int  pos  =  token.indexOf( "$$ ")+  token.substring(pos  +  1);  [CE]  variable  pos  is  already  defined  in  method  isLongOption(String)  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    int  pos  =  token.indexOf( "$$ ")+  token.substring(pos  +  1);  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	327	327	1	replace	    int  pos  =  token.indexOf( "$$ ")+  token.substring(pos  +  1);		non-compiled	[CE]  variable  pos  is  already  defined  in  method  isLongOption(String)	14	None	add
152	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]  if(t  ==  null  &&!options.getMatchingOptions(t).isEmpty())  {  [BUGGY]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	add	if(t  ==  null  &&!options.getMatchingOptions(t).isEmpty())  {	if  (!options.getMatchingOptions(t).isEmpty())  {  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	15	1
153	[BUG]  [BUGGY]  if(t  ==  null  &&!options.getMatchingOptions(t).isEmpty())  {  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]  if(t  ==  null  &&!options.getMatchingOptions(t).isEmpty())  {  [BUGGY]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(t  ==  null  &&!options.getMatchingOptions(t).isEmpty())  {	if  (!options.getMatchingOptions(t).isEmpty())  {  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	15	1	replace
154	[BUG]  [BUGGY]  if(!options.getMatchingOptions(t).isNone())  {  [CE]  cannot  find  symbol  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]  if(!options.getMatchingOptions(t).isNone())  {  [BUGGY]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(!options.getMatchingOptions(t).isNone())  {	if  (!options.getMatchingOptions(t).isEmpty())  {  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
184	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( "--> ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	add	int  pos  =  token.indexOf( "--> ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	11	1
185	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "--> ");  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( "--> ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "--> ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	11	1	replace
211	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]    cmd.addOption(currentOption);  [BUGGY]  currentOption  =  null;  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	add	    cmd.addOption(currentOption);		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	4	1
212	[BUG]  [BUGGY]    cmd.addOption(currentOption);  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]    cmd.addOption(currentOption);  [BUGGY]  currentOption  =  null;  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	replace	    cmd.addOption(currentOption);		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	4	1	add
212	[BUG]  [BUGGY]    cmd.addOption(option);  [CE]  cannot  find  symbol  option  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]    cmd.addOption(option);  [BUGGY]  currentOption  =  null;  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	replace	    cmd.addOption(option);		non-compiled	[CE]  cannot  find  symbol  option	4	None	add
213	[BUG]  [BUGGY]    cmd.addOption(currentOption,  token);  [CE]  method  addOption  in  class  CommandLine  cannot  be  applied  to  given  types;  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]    cmd.addOption(currentOption,  token);  [BUGGY]  currentOption  =  null;  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	replace	    cmd.addOption(currentOption,  token);		non-compiled	[CE]  method  addOption  in  class  CommandLine  cannot  be  applied  to  given  types;	4	None	add
215	[BUG]  [BUGGY]    cmd.addOption(currentOption.getArg());  [CE]  cannot  find  symbol  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]    cmd.addOption(currentOption.getArg());  [BUGGY]  currentOption  =  null;  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	replace	    cmd.addOption(currentOption.getArg());		non-compiled	[CE]  cannot  find  symbol	4	None	add
242	[BUG]  [BUGGY]  return(token.length()  ==  0)?  false  :  StringUtils.convert(token,  StringUtils.stripLeadingAndTrailingQuotes(token))  &&(getLongPrefix(token)!=  null  &&!token.startsWith( "-  [CE]  unclosed  string  literal  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]  return(token.length()  ==  0)?  false  :  StringUtils.convert(token,  StringUtils.stripLeadingAndTrailingQuotes(token))  &&(getLongPrefix(token)!=  null  &&!token.startsWith( "-  [BUGGY]  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	return(token.length()  ==  0)?  false  :  StringUtils.convert(token,  StringUtils.stripLeadingAndTrailingQuotes(token))  &&(getLongPrefix(token)!=  null  &&!token.startsWith( "-	return  false;  	non-compiled	[CE]  unclosed  string  literal	19	None	replace
243	[BUG]  [BUGGY]  return(token.length()  ==  0)?  false  :  StringUtils.convert(token,  StringUtils.stripLeadingAndTrailingQuotes(token))  &&(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  [CE]  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]  return(token.length()  ==  0)?  false  :  StringUtils.convert(token,  StringUtils.stripLeadingAndTrailingQuotes(token))  &&(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  [BUGGY]  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	return(token.length()  ==  0)?  false  :  StringUtils.convert(token,  StringUtils.stripLeadingAndTrailingQuotes(token))  &&(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))	return  false;  	non-compiled	[CE]  	19	None	replace
244	[BUG]  [BUGGY]  return(token.length()  ==  0)?  false  :  StringUtils.convert(token,  StringUtils.stripLeadingAndTrailingQuotes(token))  &&(getLongPrefix(token)!=  null  &&!token.startsWith( "- ")  [CE]  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]  return(token.length()  ==  0)?  false  :  StringUtils.convert(token,  StringUtils.stripLeadingAndTrailingQuotes(token))  &&(getLongPrefix(token)!=  null  &&!token.startsWith( "- ")  [BUGGY]  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	return(token.length()  ==  0)?  false  :  StringUtils.convert(token,  StringUtils.stripLeadingAndTrailingQuotes(token))  &&(getLongPrefix(token)!=  null  &&!token.startsWith( "- ")	return  false;  	non-compiled	[CE]  	19	None	replace
274	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]    boolean  skipParsing  =  token.isEmpty();  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	add	    boolean  skipParsing  =  token.isEmpty();		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	6	1
275	[BUG]  [BUGGY]    boolean  skipParsing  =  token.isEmpty();  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]    boolean  skipParsing  =  token.isEmpty();  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	    boolean  skipParsing  =  token.isEmpty();		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	6	1	add
275	[BUG]  [BUGGY]    boolean  skipParsing  =  token.isSwitchCase();  [CE]  cannot  find  symbol  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]    boolean  skipParsing  =  token.isSwitchCase();  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	    boolean  skipParsing  =  token.isSwitchCase();		non-compiled	[CE]  cannot  find  symbol	6	None	add
301	[BUG]  [BUGGY]  currentOption.addValueForProcessing(cmd,  Util.stripLeadingAndTrailingQuotes(token));  [CE]  method  addValueForProcessing  in  class  Option  cannot  be  applied  to  given  types;  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]  currentOption.addValueForProcessing(cmd,  Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(cmd,  Util.stripLeadingAndTrailingQuotes(token));	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  	non-compiled	[CE]  method  addValueForProcessing  in  class  Option  cannot  be  applied  to  given  types;	1	None	replace
303	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]  currentOption.addValueForProcessing(token);  [BUGGY]  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	add	currentOption.addValueForProcessing(token);	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	1	1
304	[BUG]  [BUGGY]  currentOption.addValueForProcessing(token);  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]  currentOption.addValueForProcessing(token);  [BUGGY]  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(token);	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	1	1	replace
304	[BUG]  [BUGGY]  currentOption.addValueForProcessing(cmd.getArgument());  [CE]  cannot  find  symbol  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]  currentOption.addValueForProcessing(cmd.getArgument());  [BUGGY]  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(cmd.getArgument());	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
362	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    token  =  token.substring(0,  token.length()  -  2);  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	add	    token  =  token.substring(0,  token.length()  -  2);		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	12	1
363	[BUG]  [BUGGY]    token  =  token.substring(0,  token.length()  -  2);  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    token  =  token.substring(0,  token.length()  -  2);  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	    token  =  token.substring(0,  token.length()  -  2);		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	12	1	add
363	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    boolean  skipParsing  =  token.isEmpty();  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	add	    boolean  skipParsing  =  token.isEmpty();		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	12	1
364	[BUG]  [BUGGY]    boolean  skipParsing  =  token.isEmpty();  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    boolean  skipParsing  =  token.isEmpty();  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	    boolean  skipParsing  =  token.isEmpty();		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	12	1	add
364	[BUG]  [BUGGY]    boolean  skipParsing  =  options.isSwitchMatchesCase(token);  [CE]  cannot  find  symbol  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    boolean  skipParsing  =  options.isSwitchMatchesCase(token);  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	    boolean  skipParsing  =  options.isSwitchMatchesCase(token);		non-compiled	[CE]  cannot  find  symbol	12	None	add
365	[BUG]  [BUGGY]    boolean  skipParsing  =  token.isSwitchCase();  [CE]  cannot  find  symbol  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    boolean  skipParsing  =  token.isSwitchCase();  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	    boolean  skipParsing  =  token.isSwitchCase();		non-compiled	[CE]  cannot  find  symbol	12	None	add
392	[BUG]  [BUGGY]    cmd.addOption(t);  [CE]  method  addOption  in  class  CommandLine  cannot  be  applied  to  given  types;  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]    cmd.addOption(t);  [BUGGY]  if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	    cmd.addOption(t);		non-compiled	[CE]  method  addOption  in  class  CommandLine  cannot  be  applied  to  given  types;	16	None	add
393	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]    pos  =  token.indexOf( ": "+t.substring(pos  +  1));  [BUGGY]  if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	add	    pos  =  token.indexOf( ": "+t.substring(pos  +  1));		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	16	1
394	[BUG]  [BUGGY]    pos  =  token.indexOf( ": "+t.substring(pos  +  1));  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]    pos  =  token.indexOf( ": "+t.substring(pos  +  1));  [BUGGY]  if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	    pos  =  token.indexOf( ": "+t.substring(pos  +  1));		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	16	1	add
394	[BUG]  [BUGGY]    pos  =  token.indexOf( ": "+t.getSimpleName());  [CE]  cannot  find  symbol  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]    pos  =  token.indexOf( ": "+t.getSimpleName());  [BUGGY]  if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	    pos  =  token.indexOf( ": "+t.getSimpleName());		non-compiled	[CE]  cannot  find  symbol	16	None	add
395	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]    pos  =  token.indexOf( ": "+t.toString());  [BUGGY]  if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	add	    pos  =  token.indexOf( ": "+t.toString());		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	16	1
396	[BUG]  [BUGGY]    pos  =  token.indexOf( ": "+t.toString());  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  [BUGGY]    pos  =  token.indexOf( ": "+t.toString());  [BUGGY]  if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	    pos  =  token.indexOf( ": "+t.toString());		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	16	1	add
422	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "-0 ");  [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	add	int  pos  =  token.indexOf( "-0 ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	5	1
423	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "-0 ");  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "-0 ");  [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf( "-0 ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	5	1	replace
452	[BUG]  [BUGGY]    while(token.startsWith( "- "))  {  token  =  token.substring(0,  pos);  [CE]  illegal  start  of  expression  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    while(token.startsWith( "- "))  {  token  =  token.substring(0,  pos);  [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	309	309	1	replace	    while(token.startsWith( "- "))  {  token  =  token.substring(0,  pos);		non-compiled	[CE]  illegal  start  of  expression	8	None	add
453	[BUG]  [BUGGY]    while(token.startsWith( "- "))  {  pos  =  token.indexOf( "+ ");  [CE]  illegal  start  of  expression  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    while(token.startsWith( "- "))  {  pos  =  token.indexOf( "+ ");  [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	309	309	1	replace	    while(token.startsWith( "- "))  {  pos  =  token.indexOf( "+ ");		non-compiled	[CE]  illegal  start  of  expression	8	None	add
454	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    pos  =  token.indexOf( "- "  +  token.charAt(0));  [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	309	309	1	add	    pos  =  token.indexOf( "- "  +  token.charAt(0));		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	8	1
455	[BUG]  [BUGGY]    pos  =  token.indexOf( "- "  +  token.charAt(0));  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    pos  =  token.indexOf( "- "  +  token.charAt(0));  [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	309	309	1	replace	    pos  =  token.indexOf( "- "  +  token.charAt(0));		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	8	1	add
455	[BUG]  [BUGGY]    while(token.startsWith( "- "))  {  pos  =  token.indexOf( "- ")+  1;  [CE]  illegal  start  of  expression  [CONTEXT]  private  boolean  isShortOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    while(token.startsWith( "- "))  {  pos  =  token.indexOf( "- ")+  1;  [BUGGY]  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	309	309	1	replace	    while(token.startsWith( "- "))  {  pos  =  token.indexOf( "- ")+  1;		non-compiled	[CE]  illegal  start  of  expression	8	None	add
481	[BUG]  [BUGGY]  currentOption  =  new  Option(token);  [CE]  no  suitable  constructor  found  for  Option(String)  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]  currentOption  =  new  Option(token);  [BUGGY]  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	replace	currentOption  =  new  Option(token);	currentOption  =  null;  	non-compiled	[CE]  no  suitable  constructor  found  for  Option(String)	3	None	replace
484	[BUG]  [BUGGY]  currentOption  =  new  Option( " ");  [CE]  no  suitable  constructor  found  for  Option(String)  [CONTEXT]  {  handleShortAndLongOption(token);  }  else  {  handleUnknownToken(token);  }  if  (currentOption  !=  null  &&  !currentOption.acceptsArg())  {  [BUGGY]  currentOption  =  new  Option( " ");  [BUGGY]  }  }  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	replace	currentOption  =  new  Option( " ");	currentOption  =  null;  	non-compiled	[CE]  no  suitable  constructor  found  for  Option(String)	3	None	replace
511	[BUG]  [BUGGY]    token.removeChild(token);  [CE]  cannot  find  symbol  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    token.removeChild(token);  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	    token.removeChild(token);		non-compiled	[CE]  cannot  find  symbol	2	None	add
512	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    if( "- ".equals(token))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	add	    if( "- ".equals(token))  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	2	1
513	[BUG]  [BUGGY]    if( "- ".equals(token))  {  throw  new  IllegalArgumentException( " ");  }  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    if( "- ".equals(token))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	    if( "- ".equals(token))  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	2	1	add
513	[BUG]  [BUGGY]    if( "- ".equals(token))  {  token.startsWith( "- ");  if(currentOption.hasArg())  {  skipParsing  =  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    if( "- ".equals(token))  {  token.startsWith( "- ");  if(currentOption.hasArg())  {  skipParsing  =  true;  }  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	    if( "- ".equals(token))  {  token.startsWith( "- ");  if(currentOption.hasArg())  {  skipParsing  =  true;  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
514	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    cmd.addArg(token);  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	add	    cmd.addArg(token);		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	2	1
515	[BUG]  [BUGGY]    cmd.addArg(token);  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    cmd.addArg(token);  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	    cmd.addArg(token);		compilable	  [FE]  java.lang.AssertionError:  expected  null  shouldParseConcatenatedShortOptions	2	1	add
515	[BUG]  [BUGGY]    if( "- ".equals(token))  {  token.startsWith( "- ");  if(currentOption.hasArg())  {  cmd.addArg(token);  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    if( "- ".equals(token))  {  token.startsWith( "- ");  if(currentOption.hasArg())  {  cmd.addArg(token);  }  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	    if( "- ".equals(token))  {  token.startsWith( "- ");  if(currentOption.hasArg())  {  cmd.addArg(token);  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
542	[BUG]  [BUGGY]    cmd.addOption(token,  getLongPrefix(token));  [CE]  method  addOption  in  class  CommandLine  cannot  be  applied  to  given  types;  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]    cmd.addOption(token,  getLongPrefix(token));  [BUGGY]  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	    cmd.addOption(token,  getLongPrefix(token));		non-compiled	[CE]  method  addOption  in  class  CommandLine  cannot  be  applied  to  given  types;	20	None	add
543	[BUG]  [BUGGY]    cmd.addOption(token,  token);  [CE]  method  addOption  in  class  CommandLine  cannot  be  applied  to  given  types;  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]    cmd.addOption(token,  token);  [BUGGY]  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	    cmd.addOption(token,  token);		non-compiled	[CE]  method  addOption  in  class  CommandLine  cannot  be  applied  to  given  types;	20	None	add
544	[BUG]  [BUGGY]    cmd.addOption(token,  getLongValue(token));  [CE]  cannot  find  symbol  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]    cmd.addOption(token,  getLongValue(token));  [BUGGY]  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	    cmd.addOption(token,  getLongValue(token));		non-compiled	[CE]  cannot  find  symbol	20	None	add
545	[BUG]  [BUGGY]    cmd.addOption(token,  getLongName(token));  [CE]  cannot  find  symbol  [CONTEXT]  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  }  [BUGGY]    cmd.addOption(token,  getLongName(token));  [BUGGY]  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	    cmd.addOption(token,  getLongName(token));		non-compiled	[CE]  cannot  find  symbol	20	None	add
573	[BUG]  [BUGGY]  return  options.containsOption(optName);  [CE]  cannot  find  symbol  [CONTEXT]  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  [BUGGY]  return  options.containsOption(optName);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	310	310	1	replace	return  options.containsOption(optName);	return  options.hasShortOption(optName);  	non-compiled	[CE]  cannot  find  symbol	9	None	replace
574	[BUG]  [BUGGY]  return  options.isOption(optName);  [CE]  cannot  find  symbol  [CONTEXT]  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  [BUGGY]  return  options.isOption(optName);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	310	310	1	replace	return  options.isOption(optName);	return  options.hasShortOption(optName);  	non-compiled	[CE]  cannot  find  symbol	9	None	replace
