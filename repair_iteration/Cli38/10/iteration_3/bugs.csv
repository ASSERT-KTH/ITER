bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(option!=  null  ||  expectedOpts.contains(token))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(option!=  null  ||  expectedOpts.contains(token))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(option!=  null  ||  expectedOpts.contains(token))  {  return  false;  }	  if(optName!=    null    ||    expectedOpts.contains(token))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
2	[BUG]  [BUGGY]  if(expectedOpts!=  null  ||  optName.contains(token))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(expectedOpts!=  null  ||  optName.contains(token))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(expectedOpts!=  null  ||  optName.contains(token))  {  return  false;  }	  if(optName!=    null    ||    expectedOpts.contains(token))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
3	[BUG]  [BUGGY]  ||  expectedOpts.contains(token))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  ||  expectedOpts.contains(token))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	||  expectedOpts.contains(token))  {  return  false;  }	  if(optName!=    null    ||    expectedOpts.contains(token))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
4	[BUG]  [BUGGY]  else  if(optName!=  null  &&  getLongPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName!=  null  &&  getLongPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName!=  null  &&  getLongPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!option.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
5	[BUG]  [BUGGY]  else  if(getLongPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(getLongPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(getLongPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  false;  }	  else    if(getLongPrefix(token)!=    null    &&!option.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
6	[BUG]  [BUGGY]  else  if(option.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option.startsWith( "-- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!option.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(pos);  if(cmd  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(pos);  if(cmd  ==  null)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  options.getOption(pos);  if(cmd  ==  null)  {  return  true;  }	  Option    cmd    =    options.getOption(token);    if(cmd    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(token,  pos);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  currentOption.getOption(token,  pos);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  currentOption.getOption(token,  pos);	  Option    cmd    =    currentOption.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
9	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(pos);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  currentOption.getOption(pos);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  currentOption.getOption(pos);	  Option    cmd    =    currentOption.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
10	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(option);  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  currentOption.getOption(option);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  currentOption.getOption(option);	  Option    cmd    =    currentOption.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos);  if(option!=  null  ||  option.equals(option))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(pos);  if(option!=  null  ||  option.equals(option))  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(pos);  if(option!=  null  ||  option.equals(option))  {  return  true;  }	  Option    option    =    options.getOption(optName);    if(option!=    null    ||    option.equals(option))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
12	[BUG]  [BUGGY]  Option  option  =  options.getOption(token);  if(option  ==  null  ||  option.equals(option))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(token);  if(option  ==  null  ||  option.equals(option))  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(token);  if(option  ==  null  ||  option.equals(option))  {  return  true;  }	  Option    option    =    options.getOption(optName);    if(option!=    null    ||    option.equals(option))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
13	[BUG]  [BUGGY]  Option  option  =  options.getOption(token);  if(option!=  null  &&  option.equals(option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(token);  if(option!=  null  &&  option.equals(option))  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(token);  if(option!=  null  &&  option.equals(option))  {  return  false;  }	  Option    option    =    options.getOption(optName);    if(option!=    null    &&    option.equals(option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
14	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.getOption(optName);  if(option!=  null  &&  option.equals(option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(options!=  null)  {  Option  option  =  options.getOption(optName);  if(option!=  null  &&  option.equals(option))  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(options!=  null)  {  Option  option  =  options.getOption(optName);  if(option!=  null  &&  option.equals(option))  {  return  false;  }	  Option    option    =    options.getOption(optName);    if(option!=    null    &&    option.equals(option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
15	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos);  if(option!=  null  &&  option.equals(option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(pos);  if(option!=  null  &&  option.equals(option))  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(pos);  if(option!=  null  &&  option.equals(option))  {  return  false;  }	  Option    option    =    options.getOption(optName);    if(option!=    null    &&    option.equals(option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
16	[BUG]  [BUGGY]  if(option!=  null)  {  Option  cmd  =  option.getOption(token);  if(cmd!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(option!=  null)  {  Option  cmd  =  option.getOption(token);  if(cmd!=  null)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(option!=  null)  {  Option  cmd  =  option.getOption(token);  if(cmd!=  null)  {  return  true;  }	  Option    cmd    =    option.getOption(token);    if(cmd!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
17	[BUG]  [BUGGY]  else  if(token  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(optName    ==    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
18	[BUG]  [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(optName    ==    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
19	[BUG]  [BUGGY]  Option  option  =  options.getOption(token);  if(option!=  null  &&  option.equals(option))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(token);  if(option!=  null  &&  option.equals(option))  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(token);  if(option!=  null  &&  option.equals(option))  {  return  true;  }	  Option    option    =    options.getOption(token);    if(option!=    null    ||    option.equals(option))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
20	[BUG]  [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
21	[BUG]  [BUGGY]  else  if(getLongPrefix(token)  ==  null  &&!token.startsWith( "-- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(getLongPrefix(token)  ==  null  &&!token.startsWith( "-- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(getLongPrefix(token)  ==  null  &&!token.startsWith( "-- "))  {  return  false;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
22	[BUG]  [BUGGY]  else  if(getOptionName(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(getOptionName(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(getOptionName(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
23	[BUG]  [BUGGY]  Option  option  =  options.getOption(token);  if(option  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(token);  if(option  ==  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(token);  if(option  ==  null)  {  return  false;  }	  Option    option    =    options.getOption(optionName);    if(option!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
24	[BUG]  [BUGGY]  else  if(option.getOptionName()!=  null  &&!option.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option.getOptionName()!=  null  &&!option.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option.getOptionName()!=  null  &&!option.startsWith( "-- "))  {  return  true;  }	  else    if(option.getOptionName()!=    null    &&!option.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
25	[BUG]  [BUGGY]  else  if(opt.getOptionName()!=  null  &&!option.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(opt.getOptionName()!=  null  &&!option.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(opt.getOptionName()!=  null  &&!option.startsWith( "- "))  {  return  true;  }	  else    if(option.getOptionName()!=    null    &&!option.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
26	[BUG]  [BUGGY]  else  if(option.getOptionName()!=  null  &&!option.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option.getOptionName()!=  null  &&!option.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option.getOptionName()!=  null  &&!option.startsWith( "- "))  {  return  false;  }	  else    if(option.getOptionName()!=    null    &&!option.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
27	[BUG]  [BUGGY]  else  if(option.getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option.getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option.getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(option.getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
28	[BUG]  [BUGGY]  Option  option  =  options.getOption(token);  if(option  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(token);  if(option  ==  null)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(token);  if(option  ==  null)  {  return  true;  }	  Option    option    =    options.getOption(token);    if(option!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
29	[BUG]  [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(optName!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
30	[BUG]  [BUGGY]  else  if(option!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(optName!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
31	[BUG]  [BUGGY]  else  if(getPrefix(token)!=  null  &&!option.startsWith( "-   "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(getPrefix(token)!=  null  &&!option.startsWith( "-   "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(getPrefix(token)!=  null  &&!option.startsWith( "-   "))  {  return  true;  }	  else    if(option.getOptionName(token)!=    null    &&!option.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
32	[BUG]  [BUGGY]  else  if(currentOption.getOptionName()!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(currentOption.getOptionName()!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(currentOption.getOptionName()!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(opt.getOptionName()!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
33	[BUG]  [BUGGY]  else  if(token.getOptionName()!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token.getOptionName()!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token.getOptionName()!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(opt.getOptionName()!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
34	[BUG]  [BUGGY]  else  if(getLongPrefix(token)!=  null  ||!token.startsWith( "-   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(getLongPrefix(token)!=  null  ||!token.startsWith( "-   "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(getLongPrefix(token)!=  null  ||!token.startsWith( "-   "))  {  return  false;  }	  else    if(getLongPrefix(token)    ==    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  int  pos  =  expectedOpts.size();  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  int  pos  =  expectedOpts.size();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	int  pos  =  expectedOpts.size();	  if(pos    ==    expectedOpts.size())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
36	[BUG]  [BUGGY]  if(pos  >=  expectedOpts.size())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(pos  >=  expectedOpts.size())  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(pos  >=  expectedOpts.size())  {  return  false;  }	  if(pos    ==    expectedOpts.size())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
37	[BUG]  [BUGGY]  else  if(token!=  null  ||!token.equals( "-   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  ||!token.equals( "-   "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token!=  null  ||!token.equals( "-   "))  {  return  false;  }	  else    if(token!=    null    &&!token.equals(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
38	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(opt);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  currentOption.getOption(opt);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  currentOption.getOption(opt);	  Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
39	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  optName.contains(token))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(expectedOpts  ==  null  ||  optName.contains(token))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(expectedOpts  ==  null  ||  optName.contains(token))  {  return  false;  }	  if(optName    ==    null    ||    expectedOpts.contains(token))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
40	[BUG]  [BUGGY]  else  if(currentOption.getOptionName(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(currentOption.getOptionName(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(currentOption.getOptionName(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(opt.getOptionName(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
41	[BUG]  [BUGGY]  else  if(getOptionName(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(getOptionName(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(getOptionName(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(opt.getOptionName(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
42	[BUG]  [BUGGY]  Option  option  =  currentOption.getOption(optName);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  currentOption.getOption(optName);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  currentOption.getOption(optName);	  Option    option    =    options.getOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
43	[BUG]  [BUGGY]  option  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  option  =  options.getOption(token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	option  =  options.getOption(token);	  Option    option    =    options.getOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
44	[BUG]  [BUGGY]  else  if(token.startsWith( "- ")||  token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token.startsWith( "- ")||  token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token.startsWith( "- ")||  token.startsWith( "- "))  {  return  true;  }	  else    if(token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
45	[BUG]  [BUGGY]  ||  expectedOpts.contains(option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  ||  expectedOpts.contains(option))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	||  expectedOpts.contains(option))  {  return  false;  }	  if(optName    ==    null    ||    expectedOpts.contains(option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
46	[BUG]  [BUGGY]  if(option  ==  null  ||  expectedOpts.contains(optName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(option  ==  null  ||  expectedOpts.contains(optName))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(option  ==  null  ||  expectedOpts.contains(optName))  {  return  false;  }	  if(optName    ==    null    ||    expectedOpts.contains(option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
47	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  optName.contains(option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(expectedOpts  ==  null  ||  optName.contains(option))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(expectedOpts  ==  null  ||  optName.contains(option))  {  return  false;  }	  if(optName    ==    null    ||    expectedOpts.contains(option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
48	[BUG]  [BUGGY]  else  if(token.getLongPrefix(option)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token.getLongPrefix(option)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token.getLongPrefix(option)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(option.getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
49	[BUG]  [BUGGY]  options.addOption(token);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  options.addOption(token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	options.addOption(token);	  options.addOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
50	[BUG]  [BUGGY]  options.addOption(option);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  options.addOption(option);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	options.addOption(option);	  options.addOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
51	[BUG]  [BUGGY]  options.addOption(optName,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  options.addOption(optName,  expectedOpts);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	options.addOption(optName,  expectedOpts);	  options.addOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
52	[BUG]  [BUGGY]  if(options!=  null)  {  Option  cmd  =  options.getOption(currentToken);  if(cmd!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(options!=  null)  {  Option  cmd  =  options.getOption(currentToken);  if(cmd!=  null)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(options!=  null)  {  Option  cmd  =  options.getOption(currentToken);  if(cmd!=  null)  {  return  true;  }	  Option    cmd    =    options.getOption(currentToken);    if(cmd!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
53	[BUG]  [BUGGY]  Option  option  =  options.getOption(t);  if(option!=  null  ||  option.equals(option))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(t);  if(option!=  null  ||  option.equals(option))  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(t);  if(option!=  null  ||  option.equals(option))  {  return  true;  }	  Option    option    =    options.getOption(optionName);    if(option!=    null    ||    option.equals(option))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
54	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(pos  +  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(pos  +  1);	  Option    option    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
55	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos,  token);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(pos,  token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(pos,  token);	  Option    option    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
56	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(pos,  expectedOpts);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(pos,  expectedOpts);	  Option    option    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
57	[BUG]  [BUGGY]  else  if(token  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-   "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-   "))  {  return  false;  }	  else    if(token    ==    null    ||    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
58	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(pos  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(pos  +  1);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  options.getOption(pos  +  1);	  Option    cmd    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
59	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(pos,  token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(pos,  token);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  options.getOption(pos,  token);	  Option    cmd    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
60	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  options.getOption(t);	  Option    cmd    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
61	[BUG]  [BUGGY]  Option  option  =  currentOption.getOption(token);  if(option!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  currentOption.getOption(token);  if(option!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  currentOption.getOption(token);  if(option!=  null)  {  return  false;  }	  Option    option    =    options.getOption(token);    if(option!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
62	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos);  if(option!=  null  ||  option.equals(option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(pos);  if(option!=  null  ||  option.equals(option))  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(pos);  if(option!=  null  ||  option.equals(option))  {  return  false;  }	  Option    option    =    options.getOption(token);    if(option!=    null    ||    option.equals(option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
63	[BUG]  [BUGGY]  else  if(token.getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token.getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token.getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(currentOption.getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
64	[BUG]  [BUGGY]  else  if(getPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(getPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(getPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(getPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
65	[BUG]  [BUGGY]  Option  option  =  options.getOption(token);  if(option  ==  null  ||  option.equals(option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(token);  if(option  ==  null  ||  option.equals(option))  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(token);  if(option  ==  null  ||  option.equals(option))  {  return  false;  }	  Option    option    =    options.getOption(optionName);    if(option!=    null    ||    option.equals(option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
66	[BUG]  [BUGGY]  else  if(option  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(optName    ==    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
67	[BUG]  [BUGGY]  else  if(option!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(optName!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
68	[BUG]  [BUGGY]  if(pos  >=  expectedOpts.size())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(pos  >=  expectedOpts.size())  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(pos  >=  expectedOpts.size())  {  return  true;  }	  if(pos    ==    expectedOpts.size())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
69	[BUG]  [BUGGY]  if(option  ==  null)  {  Option  option  =  options.getOption(optName);  if(option!=  null  ||  option.equals(option))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(option  ==  null)  {  Option  option  =  options.getOption(optName);  if(option!=  null  ||  option.equals(option))  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(option  ==  null)  {  Option  option  =  options.getOption(optName);  if(option!=  null  ||  option.equals(option))  {  return  true;  }	  if(option!=    null)    {    Option    option    =    options.getOption(optName);    if(option!=    null    ||    option.equals(option))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
70	[BUG]  [BUGGY]  Option  cmd  =  option.getOption(pos,  token);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  option.getOption(pos,  token);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  option.getOption(pos,  token);	  Option    cmd    =    option.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
71	[BUG]  [BUGGY]  else  if(getPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(getPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(getPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
72	[BUG]  [BUGGY]  else  if(getLongPrefix(token)  ==  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(getLongPrefix(token)  ==  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(getLongPrefix(token)  ==  null  &&!token.startsWith( "-- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
73	[BUG]  [BUGGY]  else  if(token!=  null  ||!token.startsWith( "-   "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  ||!token.startsWith( "-   "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token!=  null  ||!token.startsWith( "-   "))  {  return  true;  }	  else    if(token!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
74	[BUG]  [BUGGY]  if(option!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(option!=  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(option!=  null)  {  return  true;  }	  if(optName!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
75	[BUG]  [BUGGY]  if(option  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(option  ==  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(option  ==  null)  {  return  true;  }	  if(optName!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
76	[BUG]  [BUGGY]  if(options!=  null)  {  Option  cmd  =  options.getOption(pos);  if(cmd!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(options!=  null)  {  Option  cmd  =  options.getOption(pos);  if(cmd!=  null)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(options!=  null)  {  Option  cmd  =  options.getOption(pos);  if(cmd!=  null)  {  return  true;  }	  Option    cmd    =    options.getOption(pos);    if(cmd!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
77	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos);  if(option!=  null  &&  option.equals(option))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(pos);  if(option!=  null  &&  option.equals(option))  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(pos);  if(option!=  null  &&  option.equals(option))  {  return  true;  }	  Option    option    =    options.getOption(optName);    if(option!=    null    &&    option.equals(option))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
78	[BUG]  [BUGGY]  Option  option  =  options.getOption(t);  if(option!=  null  &&  option.equals(option))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(t);  if(option!=  null  &&  option.equals(option))  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(t);  if(option!=  null  &&  option.equals(option))  {  return  true;  }	  Option    option    =    options.getOption(optName);    if(option!=    null    &&    option.equals(option))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
79	[BUG]  [BUGGY]  else  if(token!=  null  ||!token.startsWith( "-   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  ||!token.startsWith( "-   "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token!=  null  ||!token.startsWith( "-   "))  {  return  false;  }	  else    if(token!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
80	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(token);  if(cmd!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  currentOption.getOption(token);  if(cmd!=  null)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  currentOption.getOption(token);  if(cmd!=  null)  {  return  true;  }	  Option    cmd    =    currentOption.getOption(optName);    if(cmd!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
81	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(token);  if(cmd  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  currentOption.getOption(token);  if(cmd  ==  null)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  currentOption.getOption(token);  if(cmd  ==  null)  {  return  true;  }	  Option    cmd    =    currentOption.getOption(optName);    if(cmd!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
82	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(pos);  if(cmd!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  currentOption.getOption(pos);  if(cmd!=  null)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  currentOption.getOption(pos);  if(cmd!=  null)  {  return  true;  }	  Option    cmd    =    currentOption.getOption(optName);    if(cmd!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
83	[BUG]  [BUGGY]  else  if(getLongPrefix(opt)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(getLongPrefix(opt)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(getLongPrefix(opt)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(token.getLongPrefix(opt)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
84	[BUG]  [BUGGY]  else  if(token.startsWith( "- ")||  token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token.startsWith( "- ")||  token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token.startsWith( "- ")||  token.startsWith( "- "))  {  return  false;  }	  else    if(token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
85	[BUG]  [BUGGY]  else  if(option.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option.startsWith( "- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!option.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
86	[BUG]  [BUGGY]  else  if(option!=  null  &&  getLongPrefix(token)!=  null  &&!option.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option!=  null  &&  getLongPrefix(token)!=  null  &&!option.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option!=  null  &&  getLongPrefix(token)!=  null  &&!option.startsWith( "- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!option.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
87	[BUG]  [BUGGY]  Option  option  =  currentOption.getOption(optName);  if(option!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  currentOption.getOption(optName);  if(option!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  currentOption.getOption(optName);  if(option!=  null)  {  return  false;  }	  Option    option    =    options.getOption(optName);    if(option!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
88	[BUG]  [BUGGY]  if(option.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(option.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(option.startsWith( "- "))  {  return  false;  }	  if(optName.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
89	[BUG]  [BUGGY]  if(!optName.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(!optName.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(!optName.startsWith( "- "))  {  return  false;  }	  if(optName.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
90	[BUG]  [BUGGY]  if(optName.startsWith( "- ")||  optName.startsWith( "-- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(optName.startsWith( "- ")||  optName.startsWith( "-- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(optName.startsWith( "- ")||  optName.startsWith( "-- "))  {  return  false;  }	  if(optName.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
91	[BUG]  [BUGGY]  else  if(optName!=  null  ||!optName.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName!=  null  ||!optName.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName!=  null  ||!optName.startsWith( "- "))  {  return  false;  }	  else    if(optName!=    null    &&!optName.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
92	[BUG]  [BUGGY]  else  if(option!=  null  &&!optName.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option!=  null  &&!optName.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option!=  null  &&!optName.startsWith( "- "))  {  return  false;  }	  else    if(optName!=    null    &&!optName.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
93	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(token,  pos  +  1);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  options.getOption(token,  pos  +  1);	  Option    cmd    =    options.getOption(token,    pos);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
94	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token,  value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(token,  value);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  options.getOption(token,  value);	  Option    cmd    =    options.getOption(token,    pos);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
95	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token,  pos,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(token,  pos,  expectedOpts);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  options.getOption(token,  pos,  expectedOpts);	  Option    cmd    =    options.getOption(token,    pos);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
96	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token,  getLongPrefix(pos));  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(token,  getLongPrefix(pos));  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  options.getOption(token,  getLongPrefix(pos));	  Option    cmd    =    options.getOption(token,    pos);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
97	[BUG]  [BUGGY]  else  if(getPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(getPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(getPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }	  else    if(option.getOptionName(token)!=    null    &&!option.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
98	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token)/  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(token)/  1;  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  options.getOption(token)/  1;	  Option    cmd    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
99	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token)+  2;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(token)+  2;  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  options.getOption(token)+  2;	  Option    cmd    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
100	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token)+  pos;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(token)+  pos;  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  options.getOption(token)+  pos;	  Option    cmd    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
101	[BUG]  [BUGGY]  if(option  ==  null)  {  Option  option  =  options.getOption(optName);  if(option!=  null  ||  option.equals(option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(option  ==  null)  {  Option  option  =  options.getOption(optName);  if(option!=  null  ||  option.equals(option))  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(option  ==  null)  {  Option  option  =  options.getOption(optName);  if(option!=  null  ||  option.equals(option))  {  return  false;  }	  if(option!=    null)    {    Option    option    =    options.getOption(optName);    if(option!=    null    ||    option.equals(option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
102	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  pos);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(token,  pos);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(token,  pos);	  Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
103	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)+  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(token)+  1;  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(token)+  1;	  Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
104	[BUG]  [BUGGY]  Option  expectedOpts  =  options.get(token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  expectedOpts  =  options.get(token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  expectedOpts  =  options.get(token);	  if(option    ==    null    ||    expectedOpts.contains(token))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
105	[BUG]  [BUGGY]  Option  expectedOpts  =  options.contains(token);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  expectedOpts  =  options.contains(token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  expectedOpts  =  options.contains(token);	  if(option    ==    null    ||    expectedOpts.contains(token))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
106	[BUG]  [BUGGY]  if(pos  <  expectedOpts.size())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(pos  <  expectedOpts.size())  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(pos  <  expectedOpts.size())  {  return  true;  }	  if(pos    ==    expectedOpts.size())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
107	[BUG]  [BUGGY]  pos  =  expectedOpts.size();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  pos  =  expectedOpts.size();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	pos  =  expectedOpts.size();	  if(pos    ==    expectedOpts.size())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
108	[BUG]  [BUGGY]  else  if(optName!=  null  &&!optName.equals( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName!=  null  &&!optName.equals( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName!=  null  &&!optName.equals( "- "))  {  return  false;  }	  else    if(optName!=    null    &&!optName.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
109	[BUG]  [BUGGY]  else  if(currentOption.getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(currentOption.getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(currentOption.getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(opt.getPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
110	[BUG]  [BUGGY]  else  if(optName!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
111	[BUG]  [BUGGY]  else  if(optName  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
112	[BUG]  [BUGGY]  else  if(optName  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
113	[BUG]  [BUGGY]  else  if(token!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token!=  null  &&!token.startsWith( "-- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
114	[BUG]  [BUGGY]  if(pos  <  expectedOpts.size())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(pos  <  expectedOpts.size())  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(pos  <  expectedOpts.size())  {  return  false;  }	  if(pos    ==    expectedOpts.size())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
115	[BUG]  [BUGGY]  else  if(optName!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
116	[BUG]  [BUGGY]  else  if(optName  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
117	[BUG]  [BUGGY]  else  if(optName  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
118	[BUG]  [BUGGY]  else  if(token!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token!=  null  &&!token.startsWith( "-- "))  {  return  false;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
119	[BUG]  [BUGGY]  else  if(getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(currentOption.getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
120	[BUG]  [BUGGY]  else  if(currentOption.getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(currentOption.getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(currentOption.getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(currentOption.getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
121	[BUG]  [BUGGY]  else  if(optName  ==  null  &&!optName.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName  ==  null  &&!optName.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName  ==  null  &&!optName.startsWith( "- "))  {  return  true;  }	  else    if(getLongPrefix(token)    ==    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
122	[BUG]  [BUGGY]  else  if(option.getOptionName()!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option.getOptionName()!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option.getOptionName()!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(opt.getOptionName()!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
123	[BUG]  [BUGGY]  else  if(opt.getPrefix()!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(opt.getPrefix()!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(opt.getPrefix()!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(opt.getOptionName()!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
124	[BUG]  [BUGGY]  else  if(option.getOptionName(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option.getOptionName(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option.getOptionName(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(opt.getOptionName(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
125	[BUG]  [BUGGY]  else  if(optName!=  null  &&  getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName!=  null  &&  getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName!=  null  &&  getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(getPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
126	[BUG]  [BUGGY]  else  if(optName  ==  null  &&  getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName  ==  null  &&  getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName  ==  null  &&  getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(getPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
127	[BUG]  [BUGGY]  else  if(getPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(getPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(getPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }	  else    if(getPrefix(token)!=    null    &&!token.equals(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
128	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  expectedOpts  =  options.getOption(token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  expectedOpts  =  options.getOption(token);	  if(option    ==    null    ||    expectedOpts.contains(token))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
129	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentToken);  if(option!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(currentToken);  if(option!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(currentToken);  if(option!=  null)  {  return  false;  }	  Option    option    =    options.getOption(optName);    if(option!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
130	[BUG]  [BUGGY]  if(option.startsWith( "- ")||  option.startsWith( "-- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(option.startsWith( "- ")||  option.startsWith( "-- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(option.startsWith( "- ")||  option.startsWith( "-- "))  {  return  false;  }	  if(optName.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
131	[BUG]  [BUGGY]  if(optName  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(optName  ==  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(optName  ==  null)  {  return  true;  }	  if(optName!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
132	[BUG]  [BUGGY]  if(optName!=  null  ||  expectedOpts.contains(option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(optName!=  null  ||  expectedOpts.contains(option))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(optName!=  null  ||  expectedOpts.contains(option))  {  return  false;  }	  if(optName    ==    null    ||    expectedOpts.contains(option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
133	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(opt);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(opt);	  Option    option    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
134	[BUG]  [BUGGY]  Option  option  =  options.getOption(value);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(value);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(value);	  Option    option    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
135	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(optionName);  if(cmd!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(optionName);  if(cmd!=  null)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  options.getOption(optionName);  if(cmd!=  null)  {  return  true;  }	  if(options!=    null)    {    Option    cmd    =    options.getOption(optName);    if(cmd!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
136	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentToken);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(currentToken);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(currentToken);	  Option    option    =    options.getOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
137	[BUG]  [BUGGY]  Option  option  =  options.getOption(optName,  value);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(optName,  value);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(optName,  value);	  Option    option    =    options.getOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
138	[BUG]  [BUGGY]  else  if(optName!=  null  &&  getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName!=  null  &&  getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName!=  null  &&  getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(optName!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
139	[BUG]  [BUGGY]  else  if(option!=  null  &&  getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option!=  null  &&  getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option!=  null  &&  getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(optName!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
140	[BUG]  [BUGGY]  else  if(optName!=  null  &&  getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName!=  null  &&  getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName!=  null  &&  getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(getPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
141	[BUG]  [BUGGY]  else  if(option.getOptionPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option.getOptionPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option.getOptionPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }	  else    if(option.getOptionName(token)!=    null    &&!option.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
142	[BUG]  [BUGGY]  else  if(optName.getOptionName(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName.getOptionName(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName.getOptionName(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }	  else    if(option.getOptionName(token)!=    null    &&!option.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
143	[BUG]  [BUGGY]  if(option!=  null  ||  expectedOpts.contains(option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(option!=  null  ||  expectedOpts.contains(option))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(option!=  null  ||  expectedOpts.contains(option))  {  return  false;  }	  if(option    ==    null    ||    expectedOpts.contains(option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
144	[BUG]  [BUGGY]  else  if(option!=  null  &&  getOptionPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option!=  null  &&  getOptionPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option!=  null  &&  getOptionPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!option.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
145	[BUG]  [BUGGY]  else  if(option!=  null  &&  getLongPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option!=  null  &&  getLongPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option!=  null  &&  getLongPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!option.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
146	[BUG]  [BUGGY]  else  if(optName!=  null  &&!option.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName!=  null  &&!option.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName!=  null  &&!option.startsWith( "-- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!option.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
147	[BUG]  [BUGGY]  else  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  return  true;  }	  else    if(token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
148	[BUG]  [BUGGY]  else  if(option.getOptionName(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option.getOptionName(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option.getOptionName(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(option.getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
149	[BUG]  [BUGGY]  else  if(option.getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option.getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option.getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(option.getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
150	[BUG]  [BUGGY]  else  if(option.getLongPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option.getLongPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option.getLongPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(option.getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
151	[BUG]  [BUGGY]  else  if(opt.getPrefix(token)!=  null  &&!option.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(opt.getPrefix(token)!=  null  &&!option.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(opt.getPrefix(token)!=  null  &&!option.startsWith( "- "))  {  return  true;  }	  else    if(option.getPrefix(token)!=    null    &&!option.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
152	[BUG]  [BUGGY]  else  if(option.getPrefix(token)  ==  null  &&!option.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option.getPrefix(token)  ==  null  &&!option.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option.getPrefix(token)  ==  null  &&!option.startsWith( "- "))  {  return  true;  }	  else    if(option.getPrefix(token)!=    null    &&!option.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
153	[BUG]  [BUGGY]  else  if(option.getPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option.getPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option.getPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }	  else    if(option.getPrefix(token)!=    null    &&!option.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
154	[BUG]  [BUGGY]  else  if(option  ==  null  &&  getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option  ==  null  &&  getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option  ==  null  &&  getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(optName    ==    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
155	[BUG]  [BUGGY]  else  if(optName!=  null  &&  getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName!=  null  &&  getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName!=  null  &&  getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(optName    ==    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
156	[BUG]  [BUGGY]  else  if(option!=  null  &&  getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option!=  null  &&  getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option!=  null  &&  getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(optName    ==    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
157	[BUG]  [BUGGY]  else  if(optName  ==  null  &&  getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName  ==  null  &&  getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName  ==  null  &&  getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(optName    ==    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
158	[BUG]  [BUGGY]  else  if(option.getOptionPrefix()!=  null  &&!option.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option.getOptionPrefix()!=  null  &&!option.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option.getOptionPrefix()!=  null  &&!option.startsWith( "-- "))  {  return  true;  }	  else    if(option.getOptionName()!=    null    &&!option.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
159	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt,  pos);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(opt,  pos);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  options.getOption(opt,  pos);	  Option    cmd    =    options.getOption(token,    pos);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
160	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(optName,  pos);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(optName,  pos);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  options.getOption(optName,  pos);	  Option    cmd    =    options.getOption(token,    pos);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
161	[BUG]  [BUGGY]  else  if(option.getOptionName()!=  null  &&!option.getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option.getOptionName()!=  null  &&!option.getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option.getOptionName()!=  null  &&!option.getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(option.getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
162	[BUG]  [BUGGY]  else  if(optName  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(getLongPrefix(token)    ==    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
163	[BUG]  [BUGGY]  else  if(optName  ==  null  &&!optName.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName  ==  null  &&!optName.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName  ==  null  &&!optName.startsWith( "- "))  {  return  false;  }	  else    if(getLongPrefix(token)    ==    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
164	[BUG]  [BUGGY]  if(option!=  null  &&  expectedOpts.contains(token))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(option!=  null  &&  expectedOpts.contains(token))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(option!=  null  &&  expectedOpts.contains(token))  {  return  false;  }	  if(optName!=    null    ||    expectedOpts.contains(token))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
165	[BUG]  [BUGGY]  else  if(optName.getOptionName(token)!=  null  &&!option.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName.getOptionName(token)!=  null  &&!option.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName.getOptionName(token)!=  null  &&!option.startsWith( "- "))  {  return  true;  }	  else    if(option.getOptionName(token)!=    null    &&!option.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
166	[BUG]  [BUGGY]  else  if(option.getOptionName(token)  ==  null  &&!option.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option.getOptionName(token)  ==  null  &&!option.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option.getOptionName(token)  ==  null  &&!option.startsWith( "- "))  {  return  true;  }	  else    if(option.getOptionName(token)!=    null    &&!option.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
167	[BUG]  [BUGGY]  else  if(option  ==  null  &&  getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option  ==  null  &&  getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option  ==  null  &&  getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(optName    ==    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
168	[BUG]  [BUGGY]  else  if(option!=  null  &&  getOptionPrefix(token)!=  null  &&!option.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option!=  null  &&  getOptionPrefix(token)!=  null  &&!option.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option!=  null  &&  getOptionPrefix(token)!=  null  &&!option.startsWith( "- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!option.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
169	[BUG]  [BUGGY]  else  if(optName!=  null  &&!option.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName!=  null  &&!option.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName!=  null  &&!option.startsWith( "- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!option.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
170	[BUG]  [BUGGY]  Option  option  =  options.getOption(optionName);  if(option!=  null  &&  option.equals(option))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(optionName);  if(option!=  null  &&  option.equals(option))  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(optionName);  if(option!=  null  &&  option.equals(option))  {  return  true;  }	  Option    option    =    options.getOption(optionName);    if(option!=    null    ||    option.equals(option))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
171	[BUG]  [BUGGY]  if(options  ==  null  ||  expectedOpts.contains(token))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(options  ==  null  ||  expectedOpts.contains(token))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(options  ==  null  ||  expectedOpts.contains(token))  {  return  false;  }	  if(optName    ==    null    ||    expectedOpts.contains(token))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
172	[BUG]  [BUGGY]  else  if(currentOption.getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(currentOption.getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(currentOption.getOptionPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(currentOption.getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
173	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos);  if(option!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(pos);  if(option!=  null)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(pos);  if(option!=  null)  {  return  true;  }	  Option    option    =    options.getOption(optName);    if(option!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
174	[BUG]  [BUGGY]  else  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  return  false;  }	  else    if(token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
175	[BUG]  [BUGGY]  else  if(token.startsWith( "- ")||  token.startsWith( "--))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token.startsWith( "- ")||  token.startsWith( "--))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token.startsWith( "- ")||  token.startsWith( "--))  {  return  false;  }	  else    if(token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
176	[BUG]  [BUGGY]  options.addOption(optName,  value);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  options.addOption(optName,  value);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	options.addOption(optName,  value);	  options.addOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
177	[BUG]  [BUGGY]  Option  option  =  options.getOption(optionName);  if(option!=  null  &&  option.equals(option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(optionName);  if(option!=  null  &&  option.equals(option))  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(optionName);  if(option!=  null  &&  option.equals(option))  {  return  false;  }	  Option    option    =    options.getOption(optionName);    if(option!=    null    ||    option.equals(option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
178	[BUG]  [BUGGY]  else  if(opt.getLongPrefix(option)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(opt.getLongPrefix(option)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(opt.getLongPrefix(option)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(token.getLongPrefix(opt)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
179	[BUG]  [BUGGY]  else  if(opt.getPrefix(option)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(opt.getPrefix(option)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(opt.getPrefix(option)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(token.getLongPrefix(opt)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
180	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt)+  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(opt)+  1;  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  options.getOption(opt)+  1;	  Option    cmd    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
181	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(optName,  value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  currentOption.getOption(optName,  value);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  currentOption.getOption(optName,  value);	  Option    cmd    =    currentOption.getOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
182	[BUG]  [BUGGY]  else  if(currentOption.getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(currentOption.getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(currentOption.getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(opt.getPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
183	[BUG]  [BUGGY]  else  if(option.getPrefix(token)!=  null  &&!option.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option.getPrefix(token)!=  null  &&!option.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option.getPrefix(token)!=  null  &&!option.startsWith( "- "))  {  return  false;  }	  else    if(opt.getPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
184	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option,  pos);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(option,  pos);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  options.getOption(option,  pos);	  Option    cmd    =    options.getOption(token,    pos);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
185	[BUG]  [BUGGY]  else  if(token!=  null  &&  token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&  token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token!=  null  &&  token.startsWith( "- "))  {  return  false;  }	  else    if(getLongPrefix(token)    ==    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
186	[BUG]  [BUGGY]  else  if(token!=  null  &&  token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&  token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token!=  null  &&  token.startsWith( "- "))  {  return  true;  }	  else    if(getLongPrefix(token)    ==    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
187	[BUG]  [BUGGY]  else  if(option  ==  null  ||  getLongPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option  ==  null  ||  getLongPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option  ==  null  ||  getLongPrefix(token)!=  null  &&!option.startsWith( "-- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!option.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
188	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(option);	  Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
189	[BUG]  [BUGGY]  Option  option  =  options.getOption(optionName);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(optionName);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  options.getOption(optionName);	  Option    option    =    options.getOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
190	[BUG]  [BUGGY]  else  if(token!=  null  &&!token.equals( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&!token.equals( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token!=  null  &&!token.equals( "- "))  {  return  true;  }	  else    if(token!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
191	[BUG]  [BUGGY]  if(pos!=  expectedOpts.size())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(pos!=  expectedOpts.size())  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(pos!=  expectedOpts.size())  {  return  false;  }	  if(pos    ==    expectedOpts.size())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
192	[BUG]  [BUGGY]  else  if(option  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(optName    ==    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
193	[BUG]  [BUGGY]  if(optName!=  null  &&  expectedOpts.contains(token))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(optName!=  null  &&  expectedOpts.contains(token))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(optName!=  null  &&  expectedOpts.contains(token))  {  return  false;  }	  if(optName!=    null    ||    expectedOpts.contains(token))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
194	[BUG]  [BUGGY]  if(pos!=  expectedOpts.size())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(pos!=  expectedOpts.size())  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(pos!=  expectedOpts.size())  {  return  true;  }	  if(pos    ==    expectedOpts.size())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
195	[BUG]  [BUGGY]  else  if(option.getOption(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option.getOption(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option.getOption(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(option.getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
196	[BUG]  [BUGGY]  else  if(token.getPrefix(opt)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token.getPrefix(opt)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token.getPrefix(opt)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(opt.getPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
197	[BUG]  [BUGGY]  if(optName.startsWith( "- ")||  optName.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(optName.startsWith( "- ")||  optName.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(optName.startsWith( "- ")||  optName.startsWith( "- "))  {  return  false;  }	  if(optName.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
198	[BUG]  [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }	  else    if(token!=    null    ||    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
199	[BUG]  [BUGGY]  Option  option  =  currentOption.getOption(optName);  if(option!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  currentOption.getOption(optName);  if(option!=  null)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  option  =  currentOption.getOption(optName);  if(option!=  null)  {  return  true;  }	  Option    cmd    =    currentOption.getOption(optName);    if(cmd!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
200	[BUG]  [BUGGY]  else  if(token.startsWith( "- ")&&  token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token.startsWith( "- ")&&  token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token.startsWith( "- ")&&  token.startsWith( "- "))  {  return  true;  }	  else    if(token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
201	[BUG]  [BUGGY]  else  if(!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(!token.startsWith( "- "))  {  return  true;  }	  else    if(token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
202	[BUG]  [BUGGY]  else  if(token.startsWith( "- ")&&  token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token.startsWith( "- ")&&  token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token.startsWith( "- ")&&  token.startsWith( "- "))  {  return  false;  }	  else    if(token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
203	[BUG]  [BUGGY]  if(opt!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(opt!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	if(opt!=  null)  {  return  false;  }	  if(option!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
204	[BUG]  [BUGGY]  options.addOption(optName,  token);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  options.addOption(optName,  token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	options.addOption(optName,  token);	  options.addOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
205	[BUG]  [BUGGY]  else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
206	[BUG]  [BUGGY]  else  if(token.getPrefix(opt)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token.getPrefix(opt)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token.getPrefix(opt)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(opt.getPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
207	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(optName)+  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(optName)+  1;  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	Option  cmd  =  options.getOption(optName)+  1;	  Option    cmd    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
208	[BUG]  [BUGGY]  else  if(optName!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(optName!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(optName!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(token!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
209	[BUG]  [BUGGY]  else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
210	[BUG]  [BUGGY]  else  if(option.getOptionName(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option.getOptionName(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	340	340	1	replace	else  if(option.getOptionName(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }	  else    if(option.getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
