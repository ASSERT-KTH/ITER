bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Option  optionGroup  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());    [BUGGY]    Option  optionGroup  =  options.getOptionGroups();  [BUGGY]  for  (OptionGroup  group  :  options.getOptionGroups())  {  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	109	110	1	replace	    Option  optionGroup  =  options.getOptionGroups();		non-compiled	[CE]  illegal  start  of  type	45	None	add
2	[BUG]  [BUGGY]    Options  options  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());    [BUGGY]    Options  options  =  options.getOptions();  [BUGGY]  for  (OptionGroup  group  :  options.getOptionGroups())  {  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	109	110	1	replace	    Options  options  =  options.getOptions();		non-compiled	[CE]  illegal  start  of  type	45	None	add
3	[BUG]  [BUGGY]    Option  option  =  options.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());    [BUGGY]    Option  option  =  options.getOption(currentToken);  [BUGGY]  for  (OptionGroup  group  :  options.getOptionGroups())  {  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	109	110	1	replace	    Option  option  =  options.getOption(currentToken);		non-compiled	[CE]  illegal  start  of  type	45	None	add
4	[BUG]  [BUGGY]    Option  optionGroup  =  options.getOptionGroup(currentToken);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());    [BUGGY]    Option  optionGroup  =  options.getOptionGroup(currentToken);  [BUGGY]  for  (OptionGroup  group  :  options.getOptionGroups())  {  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	109	110	1	replace	    Option  optionGroup  =  options.getOptionGroup(currentToken);		non-compiled	[CE]  illegal  start  of  type	45	None	add
5	[BUG]  [BUGGY]    Option  optionGroup  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());    [BUGGY]    Option  optionGroup  =  options.getOptionGroup();  [BUGGY]  for  (OptionGroup  group  :  options.getOptionGroups())  {  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	109	110	1	replace	    Option  optionGroup  =  options.getOptionGroup();		non-compiled	[CE]  illegal  start  of  type	45	None	add
6	[BUG]  [BUGGY]  for(OptionGroup  group  :  options.getOptionOpts())  {  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());    [BUGGY]  for(OptionGroup  group  :  options.getOptionOpts())  {  [BUGGY]  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	109	110	1	replace	for(OptionGroup  group  :  options.getOptionOpts())  {	for  (OptionGroup  group  :  options.getOptionGroups())  {  	non-compiled	[CE]  illegal  start  of  type	44	None	replace
7	[BUG]  [BUGGY]  for(OptionGroup  group  :  options.getOpts())  {  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());    [BUGGY]  for(OptionGroup  group  :  options.getOpts())  {  [BUGGY]  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	109	110	1	replace	for(OptionGroup  group  :  options.getOpts())  {	for  (OptionGroup  group  :  options.getOptionGroups())  {  	non-compiled	[CE]  illegal  start  of  type	44	None	replace
8	[BUG]  [BUGGY]    Options  options  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());    [BUGGY]    Options  options  =  options.getOptionGroups();  [BUGGY]  for  (OptionGroup  group  :  options.getOptionGroups())  {  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	109	110	1	replace	    Options  options  =  options.getOptionGroups();		non-compiled	[CE]  illegal  start  of  type	45	None	add
9	[BUG]  [BUGGY]    Option  optionGroup  =  options.getOptionGroup(null);  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());    [BUGGY]    Option  optionGroup  =  options.getOptionGroup(null);  [BUGGY]  for  (OptionGroup  group  :  options.getOptionGroups())  {  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	109	110	1	replace	    Option  optionGroup  =  options.getOptionGroup(null);		non-compiled	[CE]  illegal  start  of  type	45	None	add
10	[BUG]  [BUGGY]    OptionGroup  group  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());    [BUGGY]    OptionGroup  group  =  options.getOptionGroups();  [BUGGY]  for  (OptionGroup  group  :  options.getOptionGroups())  {  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	109	110	1	replace	    OptionGroup  group  =  options.getOptionGroups();		non-compiled	[CE]  illegal  start  of  type	45	None	add
11	[BUG]  [BUGGY]    OptionGroup  group  =  options.getOptionGroup(null);  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());    [BUGGY]    OptionGroup  group  =  options.getOptionGroup(null);  [BUGGY]  for  (OptionGroup  group  :  options.getOptionGroups())  {  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	109	110	1	replace	    OptionGroup  group  =  options.getOptionGroup(null);		non-compiled	[CE]  illegal  start  of  type	45	None	add
12	[BUG]  [BUGGY]    Option  group  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());    [BUGGY]    Option  group  =  options.getOptionGroups();  [BUGGY]  for  (OptionGroup  group  :  options.getOptionGroups())  {  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	109	110	1	replace	    Option  group  =  options.getOptionGroups();		non-compiled	[CE]  illegal  start  of  type	45	None	add
13	[BUG]  [BUGGY]  for(OptionGroup  group  :  options.getAllOptionGroups())  {  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());    [BUGGY]  for(OptionGroup  group  :  options.getAllOptionGroups())  {  [BUGGY]  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	109	110	1	replace	for(OptionGroup  group  :  options.getAllOptionGroups())  {	for  (OptionGroup  group  :  options.getOptionGroups())  {  	non-compiled	[CE]  illegal  start  of  type	44	None	replace
