bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  [CE]  illegal  start  of  type  [FE]    UnsupportedOperationException    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
2	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  CurrentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  [CE]  illegal  start  of  type  [FE]      UnsupportedOperationException    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  CurrentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    CurrentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
3	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(Token));  [CE]  illegal  start  of  type  [FE]        UnsupportedOperationException    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(Token));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    currentOption.addValue(Util.stripLeadingAndTrailingQuotes(Token));	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
4	[BUG]  [BUGGY]  expectedOpts.add(token);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  expectedOpts.add(token);  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	expectedOpts.add(token);	      if(skipParsing)    {    cmd.addArg(token);    }    else    {    expectedOpts.add(token);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
5	[BUG]  [BUGGY]  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token);  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token);	      if(skipParsing)    {    cmd.addArg(token);    }    else    {    expectedOpts.add(token);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
6	[BUG]  [BUGGY]  ||  expectedOpts.contains(token))  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||  expectedOpts.contains(token))  {  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  expectedOpts.contains(token))  {	      if(skipParsing)    {    cmd.addArg(token);    }    else    {    expectedOpts.add(token);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
7	[BUG]  [BUGGY]  aughtExceptionHandler.handleShortAndLongOption(token);  [CE]  <identifier>  expected  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  aughtExceptionHandler.handleShortAndLongOption(token);  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	aughtExceptionHandler.handleShortAndLongOption(token);	      if(skipParsing)    {    cmd.addArg(token);    }    else    {    expectedOpts.add(token);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
8	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument(token))  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||  currentOption.acceptsArgument(token))  {  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument(token))  {	      ||    currentOption.acceptsArgument())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
9	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isArgument(token))  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||  currentOption.acceptsArgument()  &&  isArgument(token))  {  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isArgument(token))  {	      ||    currentOption.acceptsArgument())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
10	[BUG]  [BUGGY]  ||  currentOption.acceptsProcessing(token))  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||  currentOption.acceptsProcessing(token))  {  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsProcessing(token))  {	      ||    currentOption.acceptsArgument())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(skipParsing));  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(skipParsing));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(skipParsing));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
12	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  skipParsing));  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  skipParsing));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  skipParsing));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
13	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)+  1);  [CE]  <identifier>  expected  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)+  1);  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)+  1);	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
14	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument())  {  cmd.addArg(token);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||  currentOption.acceptsArgument())  {  cmd.addArg(token);  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument())  {  cmd.addArg(token);	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  ||!skipParsing)  {  cmd.addArg(token);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||!skipParsing)  {  cmd.addArg(token);  }  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||!skipParsing)  {  cmd.addArg(token);  }	      if(!skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
16	[BUG]  [BUGGY]  cmd.addArg(token);  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  cmd.addArg(token);  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	cmd.addArg(token);	      if(!skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
17	[BUG]  [BUGGY]  ||!skipParsing)  {  cmd.addArg(token);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||!skipParsing)  {  cmd.addArg(token);  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||!skipParsing)  {  cmd.addArg(token);	      if(!skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
18	[BUG]  [BUGGY]  Context.checkState(!skipParsing)  {  cmd.addArg(token);  }  [CE]  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  Context.checkState(!skipParsing)  {  cmd.addArg(token);  }  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Context.checkState(!skipParsing)  {  cmd.addArg(token);  }	      if(!skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  	13	None	replace
19	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts,  skipParsing);  [CE]  <identifier>  expected  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts,  skipParsing);  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts,  skipParsing);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
20	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  skipParsing);  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  skipParsing);  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  skipParsing);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
21	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  2,  expectedOpts);  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  2,  expectedOpts);  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  2,  expectedOpts);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
22	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(skipParsing));  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(skipParsing));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(skipParsing));	  currentOption.addValueForProcessing(Util.stripLeading(value));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
23	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(token));  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(token));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(token));	  currentOption.addValueForProcessing(Util.stripLeading(value));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
24	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value),  skipParsing);  [CE]  <identifier>  expected  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value),  skipParsing);  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(value),  skipParsing);	  currentOption.addValueForProcessing(Util.stripLeading(value));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
25	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value)+  1);  [CE]  <identifier>  expected  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value)+  1);  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(value)+  1);	  currentOption.addValueForProcessing(Util.stripLeading(value));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
26	[BUG]  [BUGGY]  ||  currentOption.acceptsArg()  &&  isArgument(token))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArg()  &&  isArgument(token))  {	      ||    currentOption.acceptsArg())    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
27	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isArgument(token))  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||  currentOption.acceptsArgument()  &&  isArgument(token))  {  skipParsing  =  true;  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isArgument(token))  {  skipParsing  =  true;	      ||    currentOption.acceptsArgument())    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
28	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument(token))  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||  currentOption.acceptsArgument(token))  {  skipParsing  =  true;  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument(token))  {  skipParsing  =  true;	      ||    currentOption.acceptsArgument())    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
29	[BUG]  [BUGGY]  ||!skipParsing)  {  expectedOpts.add(token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||!skipParsing)  {  expectedOpts.add(token);  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||!skipParsing)  {  expectedOpts.add(token);	      if(!skipParsing)    {    cmd.addArg(token);    }    else    {    expectedOpts.add(token);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
30	[BUG]  [BUGGY]  ||!skipParsing)  {  expectedOpts.add(token);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||!skipParsing)  {  expectedOpts.add(token);  }  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||!skipParsing)  {  expectedOpts.add(token);  }	      if(!skipParsing)    {    cmd.addArg(token);    }    else    {    expectedOpts.add(token);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
31	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(skipParsing));  [CE]  <identifier>  expected  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(skipParsing));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(skipParsing));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
32	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option));  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
33	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(scope));  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(scope));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(scope));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
34	[BUG]  [BUGGY]  CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing));  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
35	[BUG]  [BUGGY]  aughtExceptionHandler.handleError(token);  [CE]  <identifier>  expected  [FE]    java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  aughtExceptionHandler.handleError(token);  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	aughtExceptionHandler.handleError(token);	      if(skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
36	[BUG]  [BUGGY]  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));  [CE]  [FE]      java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));	      if(skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  	8	None	replace
37	[BUG]  [BUGGY]  currentOption.addArg(Util.stripLeadingAndTrailingQuotes(token));  [CE]  <identifier>  expected  [FE]    UnsupportedOperationException    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addArg(Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addArg(Util.stripLeadingAndTrailingQuotes(token));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
38	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  skipParsing));  [CE]  <identifier>  expected  [FE]      UnsupportedOperationException    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  skipParsing));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  skipParsing));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
39	[BUG]  [BUGGY]      ||  currentOption.acceptsArg())  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]      ||  currentOption.acceptsArg())  {  skipParsing  =  true;  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	        ||  currentOption.acceptsArg())  {  skipParsing  =  true;	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
40	[BUG]  [BUGGY]      if(skipParsing)  {  cmd.addArg(token);  }  if(skipParsing)  {  cmd.addArg(token);  }  [CE]  <identifier>  expected  [FE]    java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]      if(skipParsing)  {  cmd.addArg(token);  }  if(skipParsing)  {  cmd.addArg(token);  }  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	        if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)  {  cmd.addArg(token);  }	  	non-compiled	[CE]  <identifier>  expected	7	None	add
41	[BUG]  [BUGGY]      if(skipParsing)  {  cmd.addArg(token);  }  if(skipParsing)  {  cmd.addArg(token);  }  else  {  expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  [CE]  <identifier>  expected  [FE]      java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]      if(skipParsing)  {  cmd.addArg(token);  }  if(skipParsing)  {  cmd.addArg(token);  }  else  {  expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	        if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)  {  cmd.addArg(token);  }  else  {  expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }	  	non-compiled	[CE]  <identifier>  expected	7	None	add
42	[BUG]  [BUGGY]      if(skipParsing)  {  cmd.addArg(token);  }  if(skipParsing)  {  cmd.addArg(token);  }  else  if(currentOption.acceptsArg()  &&  isArgument(token))  {  skipParsing  =  true;  }  [CE]  <identifier>  expected  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]      if(skipParsing)  {  cmd.addArg(token);  }  if(skipParsing)  {  cmd.addArg(token);  }  else  if(currentOption.acceptsArg()  &&  isArgument(token))  {  skipParsing  =  true;  }  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	        if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)  {  cmd.addArg(token);  }  else  if(currentOption.acceptsArg()  &&  isArgument(token))  {  skipParsing  =  true;  }	  	non-compiled	[CE]  <identifier>  expected	7	None	add
43	[BUG]  [BUGGY]      if(skipParsing)  {  cmd.addArg(token);  }  if(skipParsing)  {  cmd.addArg(token);  }  else  if(currentOption.acceptsArg()  &&  isArgument(token))  {  skippeParsing  =  true;  }  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]      if(skipParsing)  {  cmd.addArg(token);  }  if(skipParsing)  {  cmd.addArg(token);  }  else  if(currentOption.acceptsArg()  &&  isArgument(token))  {  skippeParsing  =  true;  }  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	        if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)  {  cmd.addArg(token);  }  else  if(currentOption.acceptsArg()  &&  isArgument(token))  {  skippeParsing  =  true;  }	  	non-compiled	[CE]  <identifier>  expected	7	None	add
44	[BUG]  [BUGGY]      if(skipParsing)  {  cmd.addArg(token);  }  if(skipParsing)  {  cmd.addArg(token);  }  else  if(currentOption.acceptsArg()  &&  isArgument(token))  {  skipParsing  =  false;  }  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]      if(skipParsing)  {  cmd.addArg(token);  }  if(skipParsing)  {  cmd.addArg(token);  }  else  if(currentOption.acceptsArg()  &&  isArgument(token))  {  skipParsing  =  false;  }  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	        if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)  {  cmd.addArg(token);  }  else  if(currentOption.acceptsArg()  &&  isArgument(token))  {  skipParsing  =  false;  }	  	non-compiled	[CE]  <identifier>  expected	7	None	add
45	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissing(token);  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  aughtExceptionHandler.handleMissing(token);  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	aughtExceptionHandler.handleMissing(token);	      if(skipParsing)    {    cmd.addArg(token);    }    else    {    cmd.addArg(token);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
46	[BUG]  [BUGGY]  Context.reportCodeChange();  [CE]  <identifier>  expected  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  Context.reportCodeChange();  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Context.reportCodeChange();	      if(skipParsing)    {    cmd.addArg(token);    }    else    {    cmd.addArg(token);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
47	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,  skipParsing));  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,  skipParsing));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,  skipParsing));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
48	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing,  token));  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing,  token));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing,  token));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
49	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope,  skipParsing));  [CE]  <identifier>  expected  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope,  skipParsing));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope,  skipParsing));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
50	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token,  value);  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  Option  currentOption  =  options.getOption(token,  value);  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  currentOption  =  options.getOption(token,  value);	      Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
51	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token)+  1;  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  Option  currentOption  =  options.getOption(token)+  1;  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  currentOption  =  options.getOption(token)+  1;	      Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
52	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(value);  [CE]  <identifier>  expected  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  Option  currentOption  =  options.getOption(value);  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  currentOption  =  options.getOption(value);	      Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
53	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isArgument(token))  {  skipParsing  =  false;  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||  currentOption.acceptsArgument()  &&  isArgument(token))  {  skipParsing  =  false;  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isArgument(token))  {  skipParsing  =  false;	      ||    currentOption.acceptsArgument())    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
54	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument(token))  {  skipParsing  =  false;  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||  currentOption.acceptsArgument(token))  {  skipParsing  =  false;  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument(token))  {  skipParsing  =  false;	      ||    currentOption.acceptsArgument())    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
55	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(option);  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  Option  currentOption  =  options.getOption(option);  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  currentOption  =  options.getOption(option);	      Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
56	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(key);  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  Option  currentOption  =  options.getOption(key);  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  currentOption  =  options.getOption(key);	      Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
57	[BUG]  [BUGGY]  ||  currentOption.hasArg())  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||  currentOption.hasArg())  {  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasArg())  {	      ||    currentOption.acceptsArgument())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
58	[BUG]  [BUGGY]  ||  currentOption.canHaveSideEffects())  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||  currentOption.canHaveSideEffects())  {  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.canHaveSideEffects())  {	      ||    currentOption.acceptsArgument())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
59	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value));  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
60	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(option));  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(option));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(option));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
61	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(key));  [CE]  <identifier>  expected  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(key));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(key));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
62	[BUG]  [BUGGY]  if(stopAtNonOption)  {  expectedOpts.add(token);  }  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  if(stopAtNonOption)  {  expectedOpts.add(token);  }  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(stopAtNonOption)  {  expectedOpts.add(token);  }	      if(!skipParsing)    {    expectedOpts.add(token);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
63	[BUG]  [BUGGY]  parsing)  {  expectedOpts.add(token);  }  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  parsing)  {  expectedOpts.add(token);  }  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parsing)  {  expectedOpts.add(token);  }	      if(!skipParsing)    {    expectedOpts.add(token);    }    	non-compiled	[CE]  not  a  statement	9	None	replace
64	[BUG]  [BUGGY]  ||  currentOption.hasArg())  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||  currentOption.hasArg())  {  skipParsing  =  true;  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasArg())  {  skipParsing  =  true;	      ||    currentOption.acceptsArgument())    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
65	[BUG]  [BUGGY]      if(skipParsing)  {  cmd.addArg(token);  }  final  java.lang.AssertionError:  expected  null  [CE]  <identifier>  expected  [FE]    java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]      if(skipParsing)  {  cmd.addArg(token);  }  final  java.lang.AssertionError:  expected  null  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	        if(skipParsing)    {    cmd.addArg(token);    }    final  java.lang.AssertionError:  expected  null	  	non-compiled	[CE]  <identifier>  expected	7	None	add
66	[BUG]  [BUGGY]      if(skipParsing)  {  cmd.addArg(token);  }  if(select)  {  cmd.addArg(token);  }  [CE]  <identifier>  expected  [FE]      java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]      if(skipParsing)  {  cmd.addArg(token);  }  if(select)  {  cmd.addArg(token);  }  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	        if(skipParsing)    {    cmd.addArg(token);    }    if(select)  {  cmd.addArg(token);  }	  	non-compiled	[CE]  <identifier>  expected	7	None	add
67	[BUG]  [BUGGY]      if(skipParsing)  {  cmd.addArg(token);  }  if(selected)  {  cmd.addArg(token);  }  [CE]  <identifier>  expected  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]      if(skipParsing)  {  cmd.addArg(token);  }  if(selected)  {  cmd.addArg(token);  }  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	        if(skipParsing)    {    cmd.addArg(token);    }    if(selected)  {  cmd.addArg(token);  }	  	non-compiled	[CE]  <identifier>  expected	7	None	add
68	[BUG]  [BUGGY]      if(skipParsing)  {  cmd.addArg(token);  }  if(skipParsing)  {  cmd.addArg(token;  }  [CE]  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]      if(skipParsing)  {  cmd.addArg(token);  }  if(skipParsing)  {  cmd.addArg(token;  }  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	        if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)  {  cmd.addArg(token;  }	  	non-compiled	[CE]  	7	None	add
69	[BUG]  [BUGGY]      if(!skipParsing)  {  cmd.addArg(token);  }  else  {  cmd.addArg(token);  }  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]      if(!skipParsing)  {  cmd.addArg(token);  }  else  {  cmd.addArg(token);  }  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	        if(!skipParsing)  {  cmd.addArg(token);  }  else  {  cmd.addArg(token);  }	  	non-compiled	[CE]  <identifier>  expected	5	None	add
70	[BUG]  [BUGGY]  parsing)  {  cmd.addArg(token);  }  [CE]  not  a  statement  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  parsing)  {  cmd.addArg(token);  }  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parsing)  {  cmd.addArg(token);  }	      if(!skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  not  a  statement	13	None	replace
71	[BUG]  [BUGGY]  ced.addArg(token);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ced.addArg(token);  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	ced.addArg(token);	      if(!skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
72	[BUG]  [BUGGY]  parent.addArg(token);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  parent.addArg(token);  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parent.addArg(token);	      if(!skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
73	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts);  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
74	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts,  value);  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts,  value);  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts,  value);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
75	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),  expectedOpts);  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),  expectedOpts);  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),  expectedOpts);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
76	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value),  expectedOpts);  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value),  expectedOpts);  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(value),  expectedOpts);	  currentOption.addValueForProcessing(Util.stripLeading(value));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
77	[BUG]  [BUGGY]  pendingOpts.add(token);  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  pendingOpts.add(token);  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	pendingOpts.add(token);	      if(skipParsing)    {    cmd.addArg(token);    }    else    {    expectedOpts.add(token);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
78	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnexpectedArgument(token);  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  aughtExceptionHandler.handleUnexpectedArgument(token);  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	aughtExceptionHandler.handleUnexpectedArgument(token);	      if(skipParsing)    {    cmd.addArg(token);    }    else    {    expectedOpts.add(token);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
79	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,  skipParsing));  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,  skipParsing));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,  skipParsing));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
80	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeading(value));  [CE]  <identifier>  expected  [FE]    UnsupportedOperationException    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValue(Util.stripLeading(value));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeading(value));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
81	[BUG]  [BUGGY]  currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(token));  [CE]  <identifier>  expected  [FE]      UnsupportedOperationException    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(token));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
82	[BUG]  [BUGGY]  if(selected)  {  cmd.addArg(token);  }  [CE]  <identifier>  expected  [FE]    java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  if(selected)  {  cmd.addArg(token);  }  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(selected)  {  cmd.addArg(token);  }	      if(skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
83	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option));  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
84	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope));  [CE]  <identifier>  expected  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
85	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts);  [CE]  <identifier>  expected  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts);  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts);	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
86	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingArgument(token);  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  aughtExceptionHandler.handleMissingArgument(token);  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	aughtExceptionHandler.handleMissingArgument(token);	      if(skipParsing)    {    cmd.addArg(token);    }    else    {    cmd.addArg(token);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
87	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  currentlyOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  [CE]  <identifier>  expected  [FE]    UnsupportedOperationException    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  currentlyOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    currentlyOption.addValue(Util.stripLeadingAndTrailingQuotes(token));	  	non-compiled	[CE]  <identifier>  expected	1	None	add
88	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument(value))  {  skipParsing  =  false;  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||  currentOption.acceptsArgument(value))  {  skipParsing  =  false;  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument(value))  {  skipParsing  =  false;	      ||    currentOption.acceptsArgument())    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
89	[BUG]  [BUGGY]  ||  currentOption.hasArg())  {  skipParsing  =  false;  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||  currentOption.hasArg())  {  skipParsing  =  false;  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasArg())  {  skipParsing  =  false;	      ||    currentOption.acceptsArgument())    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
90	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts);  [CE]  <identifier>  expected  [FE]    UnsupportedOperationException    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts);  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts);	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
91	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts));  [CE]  <identifier>  expected  [FE]      UnsupportedOperationException    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
92	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,  expectedOpts));  [CE]  <identifier>  expected  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,  expectedOpts));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,  expectedOpts));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
93	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts);  [CE]  <identifier>  expected  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts);  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
94	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1);  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1);  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
95	[BUG]  [BUGGY]  if(skipParsing)  {  expectedOpts.add(token);  }  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  if(skipParsing)  {  expectedOpts.add(token);  }  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(skipParsing)  {  expectedOpts.add(token);  }	      if(!skipParsing)    {    expectedOpts.add(token);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
96	[BUG]  [BUGGY]  kedOpts.add(token);  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  kedOpts.add(token);  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	kedOpts.add(token);	      if(!skipParsing)    {    expectedOpts.add(token);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
97	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument())  {  skippeParsing  =  false;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||  currentOption.acceptsArgument())  {  skippeParsing  =  false;  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument())  {  skippeParsing  =  false;	      ||    currentOption.acceptsArgument())    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
98	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts));  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts));  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
99	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts);  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts);  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts);	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
100	[BUG]  [BUGGY]  ||  currentOption.acceptsProcessing())  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||  currentOption.acceptsProcessing())  {  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsProcessing())  {	      ||    currentOption.acceptsArgument())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
101	[BUG]  [BUGGY]  parentLine.addArg(token);  [CE]  <identifier>  expected  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  parentLine.addArg(token);  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parentLine.addArg(token);	      if(!skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
102	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument())  {  skippeParsing  =  true;  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||  currentOption.acceptsArgument())  {  skippeParsing  =  true;  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument())  {  skippeParsing  =  true;	      ||    currentOption.acceptsArgument())    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
103	[BUG]  [BUGGY]      if(skipParsing)  {  cmd.addArg(token);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]      if(skipParsing)  {  cmd.addArg(token);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	        if(skipParsing)  {  cmd.addArg(token);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  <identifier>  expected	5	None	add
104	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  [Delete]  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	[Delete]	      if(skipParsing)    {    cmd.addArg(token);    }    else    {    cmd.addArg(token);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
105	[BUG]  [BUGGY]  ||  currentOption.acceptsArgumentToken())  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]  ||  currentOption.acceptsArgumentToken())  {  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgumentToken())  {	      ||    currentOption.acceptsArg())    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
106	[BUG]  [BUGGY]      if(skipParsing)  {  cmd.addArg(token);  }  boolean  skipParsing  =  currentOption.stopAtNonOption();  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null    [CONTEXT]    if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (   "--   ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {    [BUGGY]      if(skipParsing)  {  cmd.addArg(token);  }  boolean  skipParsing  =  currentOption.stopAtNonOption();  [BUGGY]    currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(   "--   "))  {  handleLongOption(token);  }  else  if  (token.startsWith(   "-   ")  &&  !   "-   ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	        if(skipParsing)    {    cmd.addArg(token);    }    boolean  skipParsing  =  currentOption.stopAtNonOption();	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
