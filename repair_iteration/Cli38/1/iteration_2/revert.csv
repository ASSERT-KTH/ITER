projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(!skipParsing){expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArg()){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(!skipParsing){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}else{expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}else{cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(!skipParsing){cmd.addArg(token);}else{expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));CurrentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));currentOption.addValue(Util.stripLeadingAndTrailingQuotes(Token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235expectedOpts.add(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||expectedOpts.contains(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler.handleShortAndLongOption(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isArgument(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsProcessing(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)+1);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()){cmd.addArg(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||!skipParsing){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235cmd.addArg(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||!skipParsing){cmd.addArg(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235Context.checkState(!skipParsing){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),expectedOpts,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/2,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(value),skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(value)+1);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArg()&&isArgument(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isArgument(token)){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument(token)){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||!skipParsing){expectedOpts.add(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||!skipParsing){expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(scope));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler.handleError(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addArg(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArg()){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}if(skipParsing){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}if(skipParsing){cmd.addArg(token);}else{expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}if(skipParsing){cmd.addArg(token);}elseif(currentOption.acceptsArg()&&isArgument(token)){skipParsing=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}if(skipParsing){cmd.addArg(token);}elseif(currentOption.acceptsArg()&&isArgument(token)){skippeParsing=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}if(skipParsing){cmd.addArg(token);}elseif(currentOption.acceptsArg()&&isArgument(token)){skipParsing=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler.handleMissing(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235Context.reportCodeChange();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing,token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope,skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(token,value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(token)+1;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isArgument(token)){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument(token)){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(option);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(key);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasArg()){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.canHaveSideEffects()){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(option));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(key));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(stopAtNonOption){expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parsing){expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasArg()){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}finaljava.lang.AssertionError:expectednull
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}if(select){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}if(selected){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}if(skipParsing){cmd.addArg(token;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(!skipParsing){cmd.addArg(token);}else{cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parsing){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235ced.addArg(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parent.addArg(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),expectedOpts,value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(value),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235pendingOpts.add(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler.handleUnexpectedArgument(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeading(value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(selected){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler.handleMissingArgument(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));currentlyOption.addValue(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument(value)){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasArg()){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,expectedOpts));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,expectedOpts));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+1,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+1);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235kedOpts.add(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()){skippeParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,expectedOpts));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsProcessing()){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parentLine.addArg(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()){skippeParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}else{thrownewIllegalArgumentException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235[Delete]
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgumentToken()){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}booleanskipParsing=currentOption.stopAtNonOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){aughtExceptionHandler.handleMissingArgument(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(!skipParsing){aughtExceptionHandler.handleMissingArgument(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){aughtExceptionHandler.handleError(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(!skipParsing){aughtExceptionHandler.handleError(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,true));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,0));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,stopAtNonOption));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+1,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+1,expectedOpts,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+1,skippeParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+1,expectedOpts,token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(token),skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(value),skipParsing,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(skipParsing),value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||!stopAtNonOption){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||!stopAtNonOption){cmd.addArg(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(!skipParsing){aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(!skipParsing){aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));}else{expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(scope));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.canHaveSideEffects()&&isArgument(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.canHaveSideEffects()&&token.startsWith("-")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.canHaveSideEffects()&&token.equals("-")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||!stopAtNonOption){expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||!stopAtNonOption){expectedOpts.add(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));}else{expectedOpts.addValue(Util.stripLeadingAndTrailingQuotes
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));}else{currentOption.addValue(Util.stripLeadingAndTrailingQuotes
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));}else{currentOption.addValue(Util.stripLeadingAndTrailingQuotes(
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)/2,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token),skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isArgument(token)){cmd.addArg(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument(token)){cmd.addArg(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(currentOption));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(option,expectedOpts));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(option,skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope,token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(cmd,skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.isStripLeadingAndTrailingQuotes(token)){cmd.addArg(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option,expectedOpts));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,expectedOpts),true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235Context.checkState(!selected){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235Context.checkState(!stopAtNonOption){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235Context.checkState(!skipParsing&&currentOption.acceptsArg()){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument(token)){skippeParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){aughtExceptionHandler.handleUnexpectedArgument(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(!skipParsing){aughtExceptionHandler.handleUnexpectedArgument(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isStripLeadingAndTrailingQuotes(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isVarArgs(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isLong(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isRaw(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeading(skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parentLine.addArg(cmd);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parentLine.addArg(token,cmd);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235expectedOpts.add(currentOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235expectedOpts.add(token,currentOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235expectedOpts.add(cmd);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler.handleEmptyArgument(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isVarArgs(token)){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isLong(token)){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isSingleArgument(token)){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isRaw(token)){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasProcessingQuotes()){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasArg()&&isArgument(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasMoreArg()){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeading(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addArg(Util.stripLeading(value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeading(value)+1);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isArgument(token)){skippeParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(parseArgument(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235Context.report(JSError.make(Token.NAME,token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235Context.report(JSError.make(token,currentOption.getMessage()));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235Context.report(JSError.make(Token.EMPTY,token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option,skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsProcessingToken()){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgumentToken(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgumentToken()&&isArgument(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parent.stripLeadingAndTrailingQuotes(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parent.replaceChild(cmd,token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parent.addArg(token,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||!currentOption.stripLeadingAndTrailingQuotes(token)){expectedOpts.add(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||expectedOpts.contains(token)&&!skipParsing){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||expectedOpts.containsKey(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||preferredOpts.contains(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){aughtExceptionHandler.handleMissing(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(!skipParsing){aughtExceptionHandler.handleMissing(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||expectedOpts.contains(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){kedOpts.add(token);}else{expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){kedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){kedOpts.add(token);}else{expectedOpts.add(currentOption);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,expectedOpts),true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,expectedOpts),false);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument(value)){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument(token)){skippeParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setArgument(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setArgument(Util.stripLeadingAndTrailingQuotes(skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing,value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,expectedOpts));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option,skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(scope,key));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArg()){expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArg()){expectedOpts.add(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsTrailingQuotes(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsTrailingQuotes()){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsProcessing(value)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(token)+1);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(value)/1);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(value)+2);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(option,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),expectedOpts,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option,expectedOpts));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),expectedOpts,token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),expectedOpts,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));return;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235pendingOpts.add(currentOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235pendingOpts.add(cmd);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,true));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,0));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,false));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235CurrentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235result.addArg(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(key,value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(token)/1;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(token)+2;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(token)-1;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));}elseif(currentOption.acceptsArg()&&isArgument(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));}elseif(currentOption.acceptsArg()&&isArgument(token)){skippeParsing=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));}elseif(currentOption.acceptsArg()&&isArgument(token)){skipParsing=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(currentOption!=null){if(skipParsing){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parent!=null&&currentOption.acceptsArg()){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option,value),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){currentOption.addValueForProcessing(Util.stripLeading(skipParsing));}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isVarArgs(token)){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isIgnoreCase(token)){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isSingleArgument(token)){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isRaw(token)){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsProcessingArgument()&&isArgument(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsProcessing()&&isArgument(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(!skipParsing){thrownewIllegalArgumentException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parent(1){cmd.addArg(token);}else{cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parent(1){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parsing){cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parsing){cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(token,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(token,value,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(token,argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(token,value-1);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsRaw(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option,token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parsing){expectedOpts.add(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),expectedOpts,0);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),preferredOpts,value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArg()){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArguments()){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235>>[Delete]
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235==[Delete]
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235>=[Delete]
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)+2);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)+0);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)/1);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,skipParsing));}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,true));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,0));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,skipParsing));}else{expected=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),preferredOpts,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),expectedOpts,true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsValueForProcessing(Util.stripLeadingAndTrailingQuotes(token))){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.stripLeadingAndTrailingQuotes(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(token),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(option),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(value),expectedOpts,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235cmd.addValue(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(Token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),skipParsing);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),handleShortAndLongOption(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235booleanskipParsing=currentOption.stopAtNonOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(stopAtNonOption){if(skipParsing){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(selected){if(skipParsing){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgumentOpt(token)){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(scope,skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));}elseif(currentOption.acceptsArg()&&isArgument(token)){skipParsing=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));expected.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token)+1);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token),expectedOpts,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token),skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasArg()){skippeParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasArgs()){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/2,expectedOpts,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/2,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/2,expectedOpts,value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/2,expectedOpts,token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235finaljava.lang.AssertionError:expectednull
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(select){if(skipParsing){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+2);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/1);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasArgs()){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235ced.addArg(token,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,expectedOpts),true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,expectedOpts),token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addArg(Util.stripLeadingAndTrailingQuotes(skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addArg(Util.stripLeadingAndTrailingQuotes(scope));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addArg(Util.stripLeadingAndTrailingQuotes(option));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token,currentOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(currentOption!=null){currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));}else{currentOption.addValue(Util.stripLeadingAndTrailingQuotes
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(!skipParsing){currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));}else{currentOption.addValue(Util.stripLeadingAndTrailingQuotes
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(!skipParsing){currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235Context.report(JSError.make(Token.NAME,token,expectedOpts.size()));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler.handleUnexpectedException(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler(currentOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler(currentOption,token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasValueForProcessing(value)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235booleanskippeParsing=currentOption.stopAtNonOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option),value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option,value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope,key));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(value)+0);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument(value)){cmd.addArg(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.canHaveSideEffects()){cmd.addArg(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235Context.checkState(!skipParsing){cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235Context.checkState(!switchParsing){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235expectedOpts.addValueForProcessing(Util.stripLeadINGAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||!currentOption.isStripLeadingAndTrailingQuotes(token)){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option,value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(currentOption!=null){aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(currentOption!=null){aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));}else{expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsValue()&&isArgument(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isVowel(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isIgnoreWhitespace(token)){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isShort(token)){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isShortAndLongOption(token)){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isSingletonValue(token)){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(key),value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value)+1);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235Optionoption=options.getOption(option);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(key),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setArgument(Util.stripLeadingAndTrailingQuotes(value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument(argument)){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235cmd.addArg("-");
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235cmd.addValueForProcessing(Util.tripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parentLine.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parentLine.addArg(value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parsing){expectedOpts.add(currentOption);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addArg(Util.stripLeadingAndTrailingQuotes(value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235Optionoption=options.getOption(value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(currentOption!=null){aughtExceptionHandler.handleError(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235Optionoption=options.getOption(opt);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235kedOpts.add(value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235kedOpts.add(currentOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235sortedOpts.add(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,expectedOpts),token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,expectedOpts),stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235CurrentOption.addValueForProcessing(Util.stripLeading(value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument(value)){skippeParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235pendingOpts.add(value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235pendingOpts.add(option);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(option,value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(value),true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(value),0);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||!currentOption.isStripLeadingAndTrailingQuotes(token)){expectedOpts.add(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||!currentOption.skipParsing){expectedOpts.add(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(!skipParsing){aughtExceptionHandler.handleMissingArgument(token);}else{expected=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.isStripLeadingAndTrailingQuotes()){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.canHaveSideEffects(value)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,expected));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,true));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||!currentOption.stripLeadingAndTrailingQuotes(token)){expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||!currentOption.isStripLeadingAndTrailingQuotes(token)){expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),expectedOpts,value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument(value)&&isArgument(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsStripLeadingAndTrailingQuotes(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),expectedOpts,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)&&expectedOpts.contains("-")){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||expectedOpts.contains(token)&&isStripLeadingAndTrailingQuotes(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(option));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasArgs()){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasMoreArgs()){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasArg(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(value),value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(value),preferredOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(value),expectedOpts,token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(currentOption!=null){aughtExceptionHandler.handleUnexpectedArgument(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235expectedOpts.add(value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235expectedOpts.add(option);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value,skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,expected));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.accepteForProcessing(Util.stripLeadingAndTrailingQuotes(token))){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isShort(token)){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isShortAndLongOption(token)){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isSingletonValue(token)){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasArgument()){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(currentOption!=null){aughtExceptionHandler.handleShortAndLongOption(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(!skipParsing){aughtExceptionHandler.handleShortAndLongOption(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(currentOption!=null){aughtExceptionHandler.handleShortAndLongOption(token);}else{expected=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(currentOption!=null){aughtExceptionHandler.handleShortAndLongOption(token);}else{expected=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value)+1);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+0);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addArgument(Util.stripLeading(value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addArg(value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler.handleShortAndLong(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||!currentOption.stripLeadingAndTrailingQuotes(token)){cmd.addArg(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+1,expectedOpts,value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+1,value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+1,expectedOpts,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235Optionoption=options.getOption(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),expectedOpts,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),expectedOpts,token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(value,token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(option,token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value,token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value,expectedOpts));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,expectedOpts),value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parent.replaceChild(parent,token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parent.addArg(token,currentOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),expectedOpts,token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(scope,token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235ced.addArg(value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235ExpectedOpts.add(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parent!=null&&currentOption.acceptsArg();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,expected));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,expectedOpts),value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(option,value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(option.stripLeadingAndTrailingQuotes(value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptStripLeadingAndTrailingQuotes(token)){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)+1,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsProcessing(Util.stripLeadingAndTrailingQuotes(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument(value)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasValueForProcessing(Util.stripLeadingAndTrailingQuotes(token))){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),expectedOpts,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(value)+1;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption=Util.stripLeadingAndTrailingQuotes(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingOrTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addArg(Util.stripLeadingOrTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addArg(Util.stripLeadingAndTrailingQuotes(token),true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(value)/2);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235Context.checkState(!skipParsing&&token.startsWith("-")){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235Context.checkState(!skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgumentValue(token)){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasArg()){expectedOpts.add(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||!skipParsing){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,this.skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArg(token)){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parent.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parent.addValueForProcessing(Util.tripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token)/2,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token)+1,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235Context.report(JSError.make(token,currentOption.getMessage(),value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,stopAtNonOption));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.canHaveSideEffects(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.mayHaveSideEffects()){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler.handleShortAndTrailingQuotes(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasValueForProcessing(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}else{currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setArgumentValue(Util.stripLeadingOrTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(token),true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasArg()){expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(skipParsing,token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingOrTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgumentToken()){cmd.addArg(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/2,preferredOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/2,expectedOpts,true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingBlock(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parsing&&token!=null){expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parsing||expectedOpts.contains(token)){expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/1,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+1,expectedOpts,currentOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)&&expectedOpts,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(cmd,token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope,argument));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235kedOpts.add(key);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasArg(token)){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasMoreArgs()){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasNext()){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(currentOption!=null){aughtExceptionHandler.handleMissing(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsProcessingQuotes(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isVowel(token)){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isLong(token)){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isIgnoredValue(token)){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||expectedOpts.contains(token)&&token.startsWith("-")){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||!skipParsing){cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235ced.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasMoreArgs()){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasNext()){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||!skipParsing){cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parentLine.addArgument(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parentLine.addValue(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(currentOption!=null){aughtExceptionHandler.handleError(token);}else{expected=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isVowel(token)){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&skipParsing){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addArgument(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(!skipParsing){aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));}else{expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(!skipParsing){aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing>0){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235finaljava.lang.AssertionError:expectednull;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasProperty(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasValue()){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(value),expectedOpts,true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,this.skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),expectedOpts,true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value),expected);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeading(skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235>>
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsProperty(value)&&isArgument(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(key,value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeading(value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235expectedOpts.add(token,value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parsing&&token!=null){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parsing){cmd.addArgument(token);}
