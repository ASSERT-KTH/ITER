bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(skipParsing)  {  aughtExceptionHandler.handleMissingArgument(token);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(skipParsing)  {  aughtExceptionHandler.handleMissingArgument(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(skipParsing)  {  aughtExceptionHandler.handleMissingArgument(token);  }	  aughtExceptionHandler.handleMissingArgument(token);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
2	[BUG]  [BUGGY]  if(!skipParsing)  {  aughtExceptionHandler.handleMissingArgument(token);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(!skipParsing)  {  aughtExceptionHandler.handleMissingArgument(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(!skipParsing)  {  aughtExceptionHandler.handleMissingArgument(token);  }	  aughtExceptionHandler.handleMissingArgument(token);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
3	[BUG]  [BUGGY]  if(skipParsing)  {  aughtExceptionHandler.handleError(token);  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(skipParsing)  {  aughtExceptionHandler.handleError(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(skipParsing)  {  aughtExceptionHandler.handleError(token);  }	  aughtExceptionHandler.handleError(token);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
4	[BUG]  [BUGGY]  if(!skipParsing)  {  aughtExceptionHandler.handleError(token);  }  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(!skipParsing)  {  aughtExceptionHandler.handleError(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(!skipParsing)  {  aughtExceptionHandler.handleError(token);  }	  aughtExceptionHandler.handleError(token);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
5	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  true));  [CE]  <identifier>  expected  [FE]          UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  true));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  true));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,    skipParsing));    	non-compiled	[CE]  <identifier>  expected	38	None	replace
6	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  0));  [CE]  <identifier>  expected  [FE]            UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  0));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  0));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,    skipParsing));    	non-compiled	[CE]  <identifier>  expected	38	None	replace
7	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  stopAtNonOption));  [CE]  <identifier>  expected  [FE]              UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  stopAtNonOption));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  stopAtNonOption));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,    skipParsing));    	non-compiled	[CE]  <identifier>  expected	38	None	replace
8	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  skipParsing);  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  skipParsing);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  skipParsing);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+    1,    expectedOpts);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
9	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts,  skipParsing);  [CE]  <identifier>  expected  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts,  skipParsing);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts,  skipParsing);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+    1,    expectedOpts);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
10	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  skippeParsing);  [CE]  <identifier>  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  skippeParsing);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  skippeParsing);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+    1,    expectedOpts);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
11	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts,  token);  [CE]  <identifier>  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts,  token);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts,  token);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+    1,    expectedOpts);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
12	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(token),  skipParsing);  [CE]  <identifier>  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(token),  skipParsing);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(token),  skipParsing);	  currentOption.addValueForProcessing(Util.stripLeading(value),    skipParsing);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
13	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value),  skipParsing,  expectedOpts);  [CE]  <identifier>  expected  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value),  skipParsing,  expectedOpts);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(value),  skipParsing,  expectedOpts);	  currentOption.addValueForProcessing(Util.stripLeading(value),    skipParsing);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
14	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(skipParsing),  value);  [CE]  <identifier>  expected  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(skipParsing),  value);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(skipParsing),  value);	  currentOption.addValueForProcessing(Util.stripLeading(value),    skipParsing);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
15	[BUG]  [BUGGY]  ||!stopAtNonOption)  {  cmd.addArg(token);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||!stopAtNonOption)  {  cmd.addArg(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||!stopAtNonOption)  {  cmd.addArg(token);  }	  ||!skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
16	[BUG]  [BUGGY]  ||!stopAtNonOption)  {  cmd.addArg(token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||!stopAtNonOption)  {  cmd.addArg(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||!stopAtNonOption)  {  cmd.addArg(token);	  ||!skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
17	[BUG]  [BUGGY]  if(!skipParsing)  {  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));  }  [CE]  [FE]          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(!skipParsing)  {  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(!skipParsing)  {  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));  }	  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  	36	None	replace
18	[BUG]  [BUGGY]  if(!skipParsing)  {  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));  }  else  {  expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes  [CE]  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(!skipParsing)  {  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));  }  else  {  expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(!skipParsing)  {  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));  }  else  {  expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes	  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  	36	None	replace
19	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(scope));  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(scope));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(scope));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(skipParsing));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
20	[BUG]  [BUGGY]  ||  currentOption.canHaveSideEffects()  &&  isArgument(token))  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.canHaveSideEffects()  &&  isArgument(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.canHaveSideEffects()  &&  isArgument(token))  {	  ||    currentOption.canHaveSideEffects())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
21	[BUG]  [BUGGY]  ||  currentOption.canHaveSideEffects()  &&  token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.canHaveSideEffects()  &&  token.startsWith( "- "))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.canHaveSideEffects()  &&  token.startsWith( "- "))  {	  ||    currentOption.canHaveSideEffects())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
22	[BUG]  [BUGGY]  ||  currentOption.canHaveSideEffects()  &&  token.equals( "- "))  {  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.canHaveSideEffects()  &&  token.equals( "- "))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.canHaveSideEffects()  &&  token.equals( "- "))  {	  ||    currentOption.canHaveSideEffects())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
23	[BUG]  [BUGGY]  ||!stopAtNonOption)  {  expectedOpts.add(token);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||!stopAtNonOption)  {  expectedOpts.add(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||!stopAtNonOption)  {  expectedOpts.add(token);  }	  ||!skipParsing)    {    expectedOpts.add(token);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
24	[BUG]  [BUGGY]  ||!stopAtNonOption)  {  expectedOpts.add(token);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||!stopAtNonOption)  {  expectedOpts.add(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||!stopAtNonOption)  {  expectedOpts.add(token);	  ||!skipParsing)    {    expectedOpts.add(token);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
25	[BUG]  [BUGGY]  if(skipParsing)  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  }  else  {  expectedOpts.addValue(Util.stripLeadingAndTrailingQuotes  [CE]  [FE]        UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(skipParsing)  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  }  else  {  expectedOpts.addValue(Util.stripLeadingAndTrailingQuotes  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(skipParsing)  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  }  else  {  expectedOpts.addValue(Util.stripLeadingAndTrailingQuotes	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    currentlyOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  	87	None	replace
26	[BUG]  [BUGGY]  if(skipParsing)  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  }  else  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes  [CE]  [FE]          UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(skipParsing)  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  }  else  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(skipParsing)  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  }  else  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    currentlyOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  	87	None	replace
27	[BUG]  [BUGGY]  if(skipParsing)  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  }  else  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(  [CE]  illegal  start  of  expression  [FE]            UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(skipParsing)  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  }  else  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(skipParsing)  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  }  else  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    currentlyOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
28	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)/  2,  expectedOpts);  [CE]  <identifier>  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)/  2,  expectedOpts);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)/  2,  expectedOpts);	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
29	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token),  skipParsing);  [CE]  <identifier>  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token),  skipParsing);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token),  skipParsing);	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
30	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isArgument(token))  {  cmd.addArg(token);  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isArgument(token))  {  cmd.addArg(token);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isArgument(token))  {  cmd.addArg(token);	  ||    currentOption.acceptsArgument())    {    cmd.addArg(token);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
31	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument(token))  {  cmd.addArg(token);  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument(token))  {  cmd.addArg(token);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument(token))  {  cmd.addArg(token);	  ||    currentOption.acceptsArgument())    {    cmd.addArg(token);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
32	[BUG]  [BUGGY]  CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  [CE]  <identifier>  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));	  CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
33	[BUG]  [BUGGY]  CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option));  [CE]  <identifier>  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option));	  CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
34	[BUG]  [BUGGY]  CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value));  [CE]  <identifier>  expected  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value));	  CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
35	[BUG]  [BUGGY]  CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(currentOption));  [CE]  <identifier>  expected  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(currentOption));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(currentOption));	  CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
36	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(option,  expectedOpts));  [CE]  <identifier>  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(option,  expectedOpts));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(option,  expectedOpts));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(option));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
37	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(option,  skipParsing));  [CE]  <identifier>  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(option,  skipParsing));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(option,  skipParsing));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(option));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
38	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope,  token));  [CE]  <identifier>  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope,  token));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope,  token));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope,    skipParsing));    	non-compiled	[CE]  <identifier>  expected	49	None	replace
39	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(cmd,  skipParsing));  [CE]  <identifier>  expected  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(cmd,  skipParsing));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(cmd,  skipParsing));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope,    skipParsing));    	non-compiled	[CE]  <identifier>  expected	49	None	replace
40	[BUG]  [BUGGY]  ||  currentOption.isStripLeadingAndTrailingQuotes(token))  {  cmd.addArg(token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.isStripLeadingAndTrailingQuotes(token))  {  cmd.addArg(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.isStripLeadingAndTrailingQuotes(token))  {  cmd.addArg(token);	  ||!skipParsing)    {    cmd.addArg(token);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
41	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,  skipParsing));  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,  skipParsing));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,  skipParsing));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,    expectedOpts));    	non-compiled	[CE]  <identifier>  expected	92	None	replace
42	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option,  expectedOpts));  [CE]  <identifier>  expected  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option,  expectedOpts));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option,  expectedOpts));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,    expectedOpts));    	non-compiled	[CE]  <identifier>  expected	92	None	replace
43	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,  expectedOpts),  true);  [CE]  <identifier>  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,  expectedOpts),  true);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,  expectedOpts),  true);	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,    expectedOpts));    	non-compiled	[CE]  <identifier>  expected	92	None	replace
44	[BUG]  [BUGGY]  Context.checkState(!selected)  {  cmd.addArg(token);  }  [CE]  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Context.checkState(!selected)  {  cmd.addArg(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Context.checkState(!selected)  {  cmd.addArg(token);  }	  Context.checkState(!skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  	18	None	replace
45	[BUG]  [BUGGY]  Context.checkState(!stopAtNonOption)  {  cmd.addArg(token);  }  [CE]  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Context.checkState(!stopAtNonOption)  {  cmd.addArg(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Context.checkState(!stopAtNonOption)  {  cmd.addArg(token);  }	  Context.checkState(!skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  	18	None	replace
46	[BUG]  [BUGGY]  Context.checkState(!skipParsing  &&  currentOption.acceptsArg())  {  cmd.addArg(token);  }  [CE]  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Context.checkState(!skipParsing  &&  currentOption.acceptsArg())  {  cmd.addArg(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Context.checkState(!skipParsing  &&  currentOption.acceptsArg())  {  cmd.addArg(token);  }	  Context.checkState(!skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  	18	None	replace
47	[BUG]  [BUGGY]  if(skipParsing)  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  }  [CE]  <identifier>  expected  [FE]        UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(skipParsing)  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  }  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(skipParsing)  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  }	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
48	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument(token))  {  skippeParsing  =  true;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument(token))  {  skippeParsing  =  true;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument(token))  {  skippeParsing  =  true;	  ||    currentOption.acceptsArgument())    {    skippeParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
49	[BUG]  [BUGGY]  if(skipParsing)  {  aughtExceptionHandler.handleUnexpectedArgument(token);  }  [CE]  <identifier>  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(skipParsing)  {  aughtExceptionHandler.handleUnexpectedArgument(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(skipParsing)  {  aughtExceptionHandler.handleUnexpectedArgument(token);  }	  aughtExceptionHandler.handleUnexpectedArgument(token);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
50	[BUG]  [BUGGY]  if(!skipParsing)  {  aughtExceptionHandler.handleUnexpectedArgument(token);  }  [CE]  <identifier>  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(!skipParsing)  {  aughtExceptionHandler.handleUnexpectedArgument(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(!skipParsing)  {  aughtExceptionHandler.handleUnexpectedArgument(token);  }	  aughtExceptionHandler.handleUnexpectedArgument(token);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
51	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isStripLeadingAndTrailingQuotes(token))  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isStripLeadingAndTrailingQuotes(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isStripLeadingAndTrailingQuotes(token))  {	  ||    currentOption.acceptsArg()    &&    isArgument(token))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
52	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isVarArgs(token))  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isVarArgs(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isVarArgs(token))  {	  ||    currentOption.acceptsArg()    &&    isArgument(token))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
53	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isLong(token))  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isLong(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isLong(token))  {	  ||    currentOption.acceptsArg()    &&    isArgument(token))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
54	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isRaw(token))  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isRaw(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isRaw(token))  {	  ||    currentOption.acceptsArg()    &&    isArgument(token))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
55	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeading(skipParsing));  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeading(skipParsing));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeading(skipParsing));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(skipParsing));    	non-compiled	[CE]  <identifier>  expected	31	None	replace
56	[BUG]  [BUGGY]  parentLine.addArg(cmd);  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parentLine.addArg(cmd);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parentLine.addArg(cmd);	  parentLine.addArg(token);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
57	[BUG]  [BUGGY]  parentLine.addArg(token,  cmd);  [CE]  <identifier>  expected  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parentLine.addArg(token,  cmd);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parentLine.addArg(token,  cmd);	  parentLine.addArg(token);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
58	[BUG]  [BUGGY]  expectedOpts.add(currentOption);  [CE]  <identifier>  expected  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  expectedOpts.add(currentOption);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	expectedOpts.add(currentOption);	  expectedOpts.add(token);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
59	[BUG]  [BUGGY]  expectedOpts.add(token,  currentOption);  [CE]  <identifier>  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  expectedOpts.add(token,  currentOption);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	expectedOpts.add(token,  currentOption);	  expectedOpts.add(token);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
60	[BUG]  [BUGGY]  expectedOpts.add(cmd);  [CE]  <identifier>  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  expectedOpts.add(cmd);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	expectedOpts.add(cmd);	  expectedOpts.add(token);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
61	[BUG]  [BUGGY]  aughtExceptionHandler.handleEmptyArgument(token);  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  aughtExceptionHandler.handleEmptyArgument(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	aughtExceptionHandler.handleEmptyArgument(token);	          if(skipParsing)    {    cmd.addArg(token);    }    if(select)    {    cmd.addArg(token);    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
62	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isVarArgs(token))  {  skipParsing  =  false;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isVarArgs(token))  {  skipParsing  =  false;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isVarArgs(token))  {  skipParsing  =  false;	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
63	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isLong(token))  {  skipParsing  =  false;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isLong(token))  {  skipParsing  =  false;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isLong(token))  {  skipParsing  =  false;	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
64	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isSingleArgument(token))  {  skipParsing  =  false;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isSingleArgument(token))  {  skipParsing  =  false;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isSingleArgument(token))  {  skipParsing  =  false;	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
65	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isRaw(token))  {  skipParsing  =  false;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isRaw(token))  {  skipParsing  =  false;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isRaw(token))  {  skipParsing  =  false;	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
66	[BUG]  [BUGGY]  ||  currentOption.hasProcessingQuotes())  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.hasProcessingQuotes())  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasProcessingQuotes())  {	  ||    currentOption.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
67	[BUG]  [BUGGY]  ||  currentOption.hasArg()  &&  isArgument(token))  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.hasArg()  &&  isArgument(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasArg()  &&  isArgument(token))  {	  ||    currentOption.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
68	[BUG]  [BUGGY]  ||  currentOption.hasMoreArg())  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.hasMoreArg())  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasMoreArg())  {	  ||    currentOption.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
69	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeading(token));  [CE]  <identifier>  expected  [FE]        UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeading(token));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeading(token));	  currentOption.addValue(Util.stripLeading(value));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
70	[BUG]  [BUGGY]  currentOption.addArg(Util.stripLeading(value));  [CE]  <identifier>  expected  [FE]          UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addArg(Util.stripLeading(value));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addArg(Util.stripLeading(value));	  currentOption.addValue(Util.stripLeading(value));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
71	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeading(value)+  1);  [CE]  <identifier>  expected  [FE]            UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeading(value)+  1);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeading(value)+  1);	  currentOption.addValue(Util.stripLeading(value));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
72	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isArgument(token))  {  skippeParsing  =  false;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isArgument(token))  {  skippeParsing  =  false;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isArgument(token))  {  skippeParsing  =  false;	  ||    currentOption.acceptsArgument())    {    skippeParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
73	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(argument);  [CE]  <identifier>  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Option  currentOption  =  options.getOption(argument);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  currentOption  =  options.getOption(argument);	  Option    currentOption    =    options.getOption(value);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
74	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(parseArgument(token));  [CE]  <identifier>  expected  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Option  currentOption  =  options.getOption(parseArgument(token));  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  currentOption  =  options.getOption(parseArgument(token));	  Option    currentOption    =    options.getOption(value);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
75	[BUG]  [BUGGY]  Context.report(JSError.make(Token.NAME,  token));  [CE]  <identifier>  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Context.report(JSError.make(Token.NAME,  token));  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Context.report(JSError.make(Token.NAME,  token));	  Context.reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
76	[BUG]  [BUGGY]  Context.report(JSError.make(token,  currentOption.getMessage()));  [CE]  <identifier>  expected  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Context.report(JSError.make(token,  currentOption.getMessage()));  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Context.report(JSError.make(token,  currentOption.getMessage()));	  Context.reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
77	[BUG]  [BUGGY]  Context.report(JSError.make(Token.EMPTY,  token));  [CE]  <identifier>  expected  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Context.report(JSError.make(Token.EMPTY,  token));  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Context.report(JSError.make(Token.EMPTY,  token));	  Context.reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
78	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option,  skipParsing));  [CE]  <identifier>  expected  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option,  skipParsing));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option,  skipParsing));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
79	[BUG]  [BUGGY]  ||  currentOption.acceptsProcessingToken())  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsProcessingToken())  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsProcessingToken())  {	  ||    currentOption.acceptsArgumentToken())    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
80	[BUG]  [BUGGY]  ||  currentOption.acceptsArgumentToken(token))  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgumentToken(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgumentToken(token))  {	  ||    currentOption.acceptsArgumentToken())    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
81	[BUG]  [BUGGY]  ||  currentOption.acceptsArgumentToken()  &&  isArgument(token))  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgumentToken()  &&  isArgument(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgumentToken()  &&  isArgument(token))  {	  ||    currentOption.acceptsArgumentToken())    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
82	[BUG]  [BUGGY]  parent.stripLeadingAndTrailingQuotes(token);  [CE]  <identifier>  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parent.stripLeadingAndTrailingQuotes(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parent.stripLeadingAndTrailingQuotes(token);	  parent.addArg(token);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
83	[BUG]  [BUGGY]  parent.replaceChild(cmd,  token);  [CE]  <identifier>  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parent.replaceChild(cmd,  token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parent.replaceChild(cmd,  token);	  parent.addArg(token);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
84	[BUG]  [BUGGY]  parent.addArg(token,  expectedOpts);  [CE]  <identifier>  expected  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parent.addArg(token,  expectedOpts);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parent.addArg(token,  expectedOpts);	  parent.addArg(token);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
85	[BUG]  [BUGGY]  ||!currentOption.stripLeadingAndTrailingQuotes(token))  {  expectedOpts.add(token);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||!currentOption.stripLeadingAndTrailingQuotes(token))  {  expectedOpts.add(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||!currentOption.stripLeadingAndTrailingQuotes(token))  {  expectedOpts.add(token);	  ||!skipParsing)    {    expectedOpts.add(token);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
86	[BUG]  [BUGGY]  ||  expectedOpts.contains(token)&&!skipParsing)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  expectedOpts.contains(token)&&!skipParsing)  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  expectedOpts.contains(token)&&!skipParsing)  {	  ||    expectedOpts.contains(token))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
87	[BUG]  [BUGGY]  ||  expectedOpts.containsKey(token))  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  expectedOpts.containsKey(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  expectedOpts.containsKey(token))  {	  ||    expectedOpts.contains(token))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
88	[BUG]  [BUGGY]  ||  preferredOpts.contains(token))  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  preferredOpts.contains(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  preferredOpts.contains(token))  {	  ||    expectedOpts.contains(token))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
89	[BUG]  [BUGGY]  if(skipParsing)  {  aughtExceptionHandler.handleMissing(token);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(skipParsing)  {  aughtExceptionHandler.handleMissing(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(skipParsing)  {  aughtExceptionHandler.handleMissing(token);  }	  aughtExceptionHandler.handleMissing(token);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
90	[BUG]  [BUGGY]  if(!skipParsing)  {  aughtExceptionHandler.handleMissing(token);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(!skipParsing)  {  aughtExceptionHandler.handleMissing(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(!skipParsing)  {  aughtExceptionHandler.handleMissing(token);  }	  aughtExceptionHandler.handleMissing(token);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
91	[BUG]  [BUGGY]  ||  expectedOpts.contains(token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  expectedOpts.contains(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  expectedOpts.contains(token);	  if(skipParsing)    {    expectedOpts.add(token);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
92	[BUG]  [BUGGY]  if(skipParsing)  {  kedOpts.add(token);  }  else  {  expectedOpts.add(token);  }  [CE]  <identifier>  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(skipParsing)  {  kedOpts.add(token);  }  else  {  expectedOpts.add(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(skipParsing)  {  kedOpts.add(token);  }  else  {  expectedOpts.add(token);  }	  kedOpts.add(token);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
93	[BUG]  [BUGGY]  if(skipParsing)  {  kedOpts.add(token);  }  [CE]  <identifier>  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(skipParsing)  {  kedOpts.add(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(skipParsing)  {  kedOpts.add(token);  }	  kedOpts.add(token);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
94	[BUG]  [BUGGY]  if(skipParsing)  {  kedOpts.add(token);  }  else  {  expectedOpts.add(currentOption);  }  [CE]  <identifier>  expected  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(skipParsing)  {  kedOpts.add(token);  }  else  {  expectedOpts.add(currentOption);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(skipParsing)  {  kedOpts.add(token);  }  else  {  expectedOpts.add(currentOption);  }	  kedOpts.add(token);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
95	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts),  true);  [CE]  <identifier>  expected  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts),  true);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts),  true);	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,    expectedOpts));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
96	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts),  false);  [CE]  <identifier>  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts),  false);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts),  false);	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,    expectedOpts));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
97	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument(value))  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument(value))  {  skipParsing  =  true;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument(value))  {  skipParsing  =  true;	  ||    currentOption.acceptsArgument(value))    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
98	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument(token))  {  skippeParsing  =  false;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument(token))  {  skippeParsing  =  false;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument(token))  {  skippeParsing  =  false;	  ||    currentOption.acceptsArgument(value))    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
99	[BUG]  [BUGGY]  currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(skipParsing));  [CE]  <identifier>  expected  [FE]          UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(skipParsing));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(skipParsing));	  currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
100	[BUG]  [BUGGY]  currentOption.setArgument(Util.stripLeadingAndTrailingQuotes(token));  [CE]  <identifier>  expected  [FE]            UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setArgument(Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setArgument(Util.stripLeadingAndTrailingQuotes(token));	  currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
101	[BUG]  [BUGGY]  currentOption.setArgument(Util.stripLeadingAndTrailingQuotes(skipParsing));  [CE]  <identifier>  expected  [FE]              UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setArgument(Util.stripLeadingAndTrailingQuotes(skipParsing));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setArgument(Util.stripLeadingAndTrailingQuotes(skipParsing));	  currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
102	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing,  value));  [CE]  <identifier>  expected  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing,  value));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing,  value));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,    skipParsing));    	non-compiled	[CE]  <identifier>  expected	79	None	replace
103	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,  expectedOpts));  [CE]  <identifier>  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,  expectedOpts));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,  expectedOpts));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,    skipParsing));    	non-compiled	[CE]  <identifier>  expected	79	None	replace
104	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option,  skipParsing));  [CE]  <identifier>  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option,  skipParsing));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option,  skipParsing));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,    skipParsing));    	non-compiled	[CE]  <identifier>  expected	79	None	replace
105	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(scope,  key));  [CE]  <identifier>  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(scope,  key));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(scope,  key));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(key));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
106	[BUG]  [BUGGY]  ||  currentOption.acceptsArg())  {  expectedOpts.add(token);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArg())  {  expectedOpts.add(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArg())  {  expectedOpts.add(token);  }	  if(stopAtNonOption)    {    expectedOpts.add(token);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
107	[BUG]  [BUGGY]  ||  currentOption.acceptsArg())  {  expectedOpts.add(token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArg())  {  expectedOpts.add(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArg())  {  expectedOpts.add(token);	  if(stopAtNonOption)    {    expectedOpts.add(token);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
108	[BUG]  [BUGGY]  ||  currentOption.acceptsTrailingQuotes(token))  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsTrailingQuotes(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsTrailingQuotes(token))  {	  ||    currentOption.acceptsProcessing())    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
109	[BUG]  [BUGGY]  ||  currentOption.acceptsTrailingQuotes())  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsTrailingQuotes())  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsTrailingQuotes())  {	  ||    currentOption.acceptsProcessing())    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
110	[BUG]  [BUGGY]  ||  currentOption.acceptsProcessing(value))  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsProcessing(value))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsProcessing(value))  {	  ||    currentOption.acceptsProcessing())    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
111	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(token)+  1);  [CE]  <identifier>  expected  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(token)+  1);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(token)+  1);	  currentOption.addValueForProcessing(Util.stripLeading(value)+    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
112	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value)/  1);  [CE]  <identifier>  expected  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value)/  1);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(value)/  1);	  currentOption.addValueForProcessing(Util.stripLeading(value)+    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
113	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value)+  2);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value)+  2);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(value)+  2);	  currentOption.addValueForProcessing(Util.stripLeading(value)+    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
114	[BUG]  [BUGGY]  currentOption.addValueForProcessing(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(option,  expectedOpts);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(option,  expectedOpts);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
115	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),  expectedOpts,  skipParsing);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),  expectedOpts,  skipParsing);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),  expectedOpts,  skipParsing);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
116	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option,  expectedOpts));  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option,  expectedOpts));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option,  expectedOpts));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
117	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),  expectedOpts,  token);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),  expectedOpts,  token);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),  expectedOpts,  token);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
118	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option),  expectedOpts);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option),  expectedOpts);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option),  expectedOpts);	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
119	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),  skipParsing);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),  skipParsing);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),  skipParsing);	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
120	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts,  skipParsing);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts,  skipParsing);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts,  skipParsing);	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
121	[BUG]  [BUGGY]  expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));	          if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)    {    cmd.addArg(token);    }    else    {    expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
122	[BUG]  [BUGGY]  result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));	          if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)    {    cmd.addArg(token);    }    else    {    expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
123	[BUG]  [BUGGY]  expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }	          if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)    {    cmd.addArg(token);    }    else    {    expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
124	[BUG]  [BUGGY]  expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  return;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  return;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  return;	          if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)    {    cmd.addArg(token);    }    else    {    expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
125	[BUG]  [BUGGY]  pendingOpts.add(currentOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  pendingOpts.add(currentOption);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	pendingOpts.add(currentOption);	  pendingOpts.add(token);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
126	[BUG]  [BUGGY]  pendingOpts.add(cmd);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  pendingOpts.add(cmd);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	pendingOpts.add(cmd);	  pendingOpts.add(token);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
127	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  true));  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  true));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  true));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,    skipParsing));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
128	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  0));  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  0));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  0));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,    skipParsing));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
129	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  false));  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  false));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  false));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,    skipParsing));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
130	[BUG]  [BUGGY]  CurrentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  [CE]  illegal  start  of  type  [FE]          UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  CurrentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	CurrentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    CurrentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
131	[BUG]  [BUGGY]  result.addArg(token);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  result.addArg(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	result.addArg(token);	          if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
132	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(key,  value);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Option  currentOption  =  options.getOption(key,  value);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  currentOption  =  options.getOption(key,  value);	  Option    currentOption    =    options.getOption(key);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
133	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token)/  1;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Option  currentOption  =  options.getOption(token)/  1;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  currentOption  =  options.getOption(token)/  1;	  Option    currentOption    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
134	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token)+  2;  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Option  currentOption  =  options.getOption(token)+  2;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  currentOption  =  options.getOption(token)+  2;	  Option    currentOption    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
135	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token)-  1;  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Option  currentOption  =  options.getOption(token)-  1;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  currentOption  =  options.getOption(token)-  1;	  Option    currentOption    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
136	[BUG]  [BUGGY]  result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if(currentOption.acceptsArg()  &&  isArgument(token))  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if(currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if(currentOption.acceptsArg()  &&  isArgument(token))  {	          if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)    {    cmd.addArg(token);    }    else    if(currentOption.acceptsArg()    &&    isArgument(token))    {    skippeParsing    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
137	[BUG]  [BUGGY]  result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if(currentOption.acceptsArg()  &&  isArgument(token))  {  skippeParsing  =  true;  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if(currentOption.acceptsArg()  &&  isArgument(token))  {  skippeParsing  =  true;  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if(currentOption.acceptsArg()  &&  isArgument(token))  {  skippeParsing  =  true;  }	          if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)    {    cmd.addArg(token);    }    else    if(currentOption.acceptsArg()    &&    isArgument(token))    {    skippeParsing    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
138	[BUG]  [BUGGY]  result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if(currentOption.acceptsArg()  &&  isArgument(token))  {  skipParsing  =  false;  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if(currentOption.acceptsArg()  &&  isArgument(token))  {  skipParsing  =  false;  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if(currentOption.acceptsArg()  &&  isArgument(token))  {  skipParsing  =  false;  }	          if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)    {    cmd.addArg(token);    }    else    if(currentOption.acceptsArg()    &&    isArgument(token))    {    skipParsing    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
139	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(skipParsing)  {  cmd.addArg(token);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(currentOption!=  null)  {  if(skipParsing)  {  cmd.addArg(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(currentOption!=  null)  {  if(skipParsing)  {  cmd.addArg(token);  }	          if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)    {    cmd.addArg(token);    }    else    if(currentOption.acceptsArg()    &&    isArgument(token))    {    skipParsing    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
140	[BUG]  [BUGGY]  parent!=  null  &&  currentOption.acceptsArg())  {  [CE]  not  a  statement  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parent!=  null  &&  currentOption.acceptsArg())  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parent!=  null  &&  currentOption.acceptsArg())  {	          if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)    {    cmd.addArg(token;    }    	non-compiled	[CE]  not  a  statement	68	None	replace
141	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),  skipParsing);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),  skipParsing);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),  skipParsing);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
142	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option,  value),  expectedOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option,  value),  expectedOpts);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option,  value),  expectedOpts);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
143	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing),  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing),  expectedOpts);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing),  expectedOpts);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
144	[BUG]  [BUGGY]  if(skipParsing)  {  currentOption.addValueForProcessing(Util.stripLeading(skipParsing));  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(skipParsing)  {  currentOption.addValueForProcessing(Util.stripLeading(skipParsing));  }  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(skipParsing)  {  currentOption.addValueForProcessing(Util.stripLeading(skipParsing));  }	  currentOption.addValueForProcessing(Util.stripLeading(skipParsing));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
145	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isVarArgs(token))  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isVarArgs(token))  {  skipParsing  =  true;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isVarArgs(token))  {  skipParsing  =  true;	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
146	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isIgnoreCase(token))  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isIgnoreCase(token))  {  skipParsing  =  true;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isIgnoreCase(token))  {  skipParsing  =  true;	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
147	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isSingleArgument(token))  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isSingleArgument(token))  {  skipParsing  =  true;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isSingleArgument(token))  {  skipParsing  =  true;	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
148	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isRaw(token))  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isRaw(token))  {  skipParsing  =  true;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isRaw(token))  {  skipParsing  =  true;	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
149	[BUG]  [BUGGY]  ||  currentOption.acceptsProcessingArgument()  &&  isArgument(token))  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsProcessingArgument()  &&  isArgument(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsProcessingArgument()  &&  isArgument(token))  {	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
150	[BUG]  [BUGGY]  ||  currentOption.acceptsProcessing()  &&  isArgument(token))  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsProcessing()  &&  isArgument(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsProcessing()  &&  isArgument(token))  {	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
151	[BUG]  [BUGGY]  if(!skipParsing)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(!skipParsing)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(!skipParsing)  {  throw  new  IllegalArgumentException( " ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
152	[BUG]  [BUGGY]  parent(1)  {  cmd.addArg(token);  }  else  {  cmd.addArg(token);  }  [CE]  [FE]        AssertionError      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parent(1)  {  cmd.addArg(token);  }  else  {  cmd.addArg(token);  }  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parent(1)  {  cmd.addArg(token);  }  else  {  cmd.addArg(token);  }	          if(!skipParsing)    {    cmd.addArg(token);    }    else    {    cmd.addArg(token);    }    	non-compiled	[CE]  	69	None	replace
153	[BUG]  [BUGGY]  parent(1)  {  cmd.addArg(token);  }  [CE]  [FE]          AssertionError      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parent(1)  {  cmd.addArg(token);  }  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parent(1)  {  cmd.addArg(token);  }	          if(!skipParsing)    {    cmd.addArg(token);    }    else    {    cmd.addArg(token);    }    	non-compiled	[CE]  	69	None	replace
154	[BUG]  [BUGGY]  parsing)  {  cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parsing)  {  cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parsing)  {  cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }	  parsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  not  a  statement	70	None	replace
155	[BUG]  [BUGGY]  parsing)  {  cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  [CE]  not  a  statement  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parsing)  {  cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parsing)  {  cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));	  parsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  not  a  statement	70	None	replace
156	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Option  currentOption  =  options.getOption(token,  expectedOpts);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  currentOption  =  options.getOption(token,  expectedOpts);	  Option    currentOption    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
157	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token,  value,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Option  currentOption  =  options.getOption(token,  value,  expectedOpts);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  currentOption  =  options.getOption(token,  value,  expectedOpts);	  Option    currentOption    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
158	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token,  argument);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Option  currentOption  =  options.getOption(token,  argument);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  currentOption  =  options.getOption(token,  argument);	  Option    currentOption    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
159	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token,  value  -  1);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Option  currentOption  =  options.getOption(token,  value  -  1);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  currentOption  =  options.getOption(token,  value  -  1);	  Option    currentOption    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
160	[BUG]  [BUGGY]  ||  currentOption.acceptsRaw(token))  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsRaw(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsRaw(token))  {	  ||    currentOption.acceptsProcessing(token))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
161	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,  token));  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,  token));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,  token));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing,    token));    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
162	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option,  token));  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option,  token));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option,  token));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing,    token));    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
163	[BUG]  [BUGGY]  parsing)  {  expectedOpts.add(token);  [CE]  not  a  statement  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parsing)  {  expectedOpts.add(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parsing)  {  expectedOpts.add(token);	  parsing)    {    expectedOpts.add(token);    }    	non-compiled	[CE]  not  a  statement	63	None	replace
164	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts,  0);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts,  0);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts,  0);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts,    value);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
165	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  preferredOpts,  value);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  preferredOpts,  value);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  preferredOpts,  value);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts,    value);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
166	[BUG]  [BUGGY]  ||  currentOption.acceptsArg())  {  skipParsing  =  false;  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArg())  {  skipParsing  =  false;  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArg())  {  skipParsing  =  false;	          ||    currentOption.acceptsArg())    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
167	[BUG]  [BUGGY]  ||  currentOption.acceptsArguments())  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArguments())  {  skipParsing  =  true;  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArguments())  {  skipParsing  =  true;	          ||    currentOption.acceptsArg())    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
168	[BUG]  [BUGGY]  >>  [Delete]  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  >>  [Delete]  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	>>  [Delete]	          if(skipParsing)    {    cmd.addArg(token);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
169	[BUG]  [BUGGY]  ==  [Delete]  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ==  [Delete]  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	==  [Delete]	          if(skipParsing)    {    cmd.addArg(token);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
170	[BUG]  [BUGGY]  >=  [Delete]  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  >=  [Delete]  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	>=  [Delete]	          if(skipParsing)    {    cmd.addArg(token);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
171	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)+  2);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)+  2);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)+  2);	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)+    1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
172	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)+  0);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)+  0);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)+  0);	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)+    1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
173	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)/  1);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)/  1);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)/  1);	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)+    1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
174	[BUG]  [BUGGY]  if(skipParsing)  {  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,  skipParsing));  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(skipParsing)  {  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,  skipParsing));  }  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(skipParsing)  {  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,  skipParsing));  }	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,    skipParsing));    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
175	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,  true));  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,  true));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,  true));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,    skipParsing));    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
176	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,  0));  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,  0));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,  0));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,    skipParsing));    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
177	[BUG]  [BUGGY]  if(skipParsing)  {  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,  skipParsing));  }  else  {  expected  =  true;  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(skipParsing)  {  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,  skipParsing));  }  else  {  expected  =  true;  }  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(skipParsing)  {  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,  skipParsing));  }  else  {  expected  =  true;  }	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,    skipParsing));    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
178	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  preferredOpts,  skipParsing);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  preferredOpts,  skipParsing);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  preferredOpts,  skipParsing);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts,    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
179	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts,  true);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts,  true);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts,  true);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts,    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
180	[BUG]  [BUGGY]  ||  currentOption.acceptsValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)))  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)))  {	  ||    currentOption.acceptsArgument(token))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
181	[BUG]  [BUGGY]  ||  currentOption.stripLeadingAndTrailingQuotes(token))  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.stripLeadingAndTrailingQuotes(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.stripLeadingAndTrailingQuotes(token))  {	  ||    currentOption.acceptsArgument(token))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
182	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(token),  expectedOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(token),  expectedOpts);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(token),  expectedOpts);	  currentOption.addValueForProcessing(Util.stripLeading(value),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
183	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(option),  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(option),  expectedOpts);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(option),  expectedOpts);	  currentOption.addValueForProcessing(Util.stripLeading(value),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
184	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value),  expectedOpts,  skipParsing);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value),  expectedOpts,  skipParsing);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(value),  expectedOpts,  skipParsing);	  currentOption.addValueForProcessing(Util.stripLeading(value),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
185	[BUG]  [BUGGY]  cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));	  cmd.addArg(token);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
186	[BUG]  [BUGGY]  cmd.addValue(token);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  cmd.addValue(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	cmd.addValue(token);	  cmd.addArg(token);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
187	[BUG]  [BUGGY]  cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(Token));  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(Token));  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(Token));	  cmd.addArg(token);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
188	[BUG]  [BUGGY]  if(skipParsing)  {  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  skipParsing);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(skipParsing)  {  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  skipParsing);  }  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(skipParsing)  {  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  skipParsing);  }	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
189	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  handleShortAndLongOption(token));  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  handleShortAndLongOption(token));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  handleShortAndLongOption(token));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
190	[BUG]  [BUGGY]  boolean  skipParsing  =  currentOption.stopAtNonOption();  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  boolean  skipParsing  =  currentOption.stopAtNonOption();  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	boolean  skipParsing  =  currentOption.stopAtNonOption();	          if(skipParsing)    {    cmd.addArg(token);    }    boolean    skipParsing    =    currentOption.stopAtNonOption();    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
191	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(skipParsing)  {  cmd.addArg(token);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(stopAtNonOption)  {  if(skipParsing)  {  cmd.addArg(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(stopAtNonOption)  {  if(skipParsing)  {  cmd.addArg(token);  }	          if(skipParsing)    {    cmd.addArg(token);    }    boolean    skipParsing    =    currentOption.stopAtNonOption();    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
192	[BUG]  [BUGGY]  if(selected)  {  if(skipParsing)  {  cmd.addArg(token);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(selected)  {  if(skipParsing)  {  cmd.addArg(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(selected)  {  if(skipParsing)  {  cmd.addArg(token);  }	          if(skipParsing)    {    cmd.addArg(token);    }    boolean    skipParsing    =    currentOption.stopAtNonOption();    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
193	[BUG]  [BUGGY]  ||  currentOption.acceptsArgumentOpt(token))  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgumentOpt(token))  {  skipParsing  =  true;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgumentOpt(token))  {  skipParsing  =  true;	  ||    currentOption.acceptsArgument(token))    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
194	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(scope,  skipParsing));  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(scope,  skipParsing));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(scope,  skipParsing));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(scope));    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
195	[BUG]  [BUGGY]  result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if(currentOption.acceptsArg()  &&  isArgument(token))  {  skipParsing  =  true;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if(currentOption.acceptsArg()  &&  isArgument(token))  {  skipParsing  =  true;  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if(currentOption.acceptsArg()  &&  isArgument(token))  {  skipParsing  =  true;  }	          if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)    {    cmd.addArg(token);    }    else    if(currentOption.acceptsArg()    &&    isArgument(token))    {    skipParsing    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
196	[BUG]  [BUGGY]  result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  expected.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  expected.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	result.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  expected.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));	          if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)    {    cmd.addArg(token);    }    else    if(currentOption.acceptsArg()    &&    isArgument(token))    {    skipParsing    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
197	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token)+  1);  [CE]  illegal  start  of  type  [FE]        UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token)+  1);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token)+  1);	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
198	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts,  skipParsing);  [CE]  illegal  start  of  type  [FE]          UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts,  skipParsing);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts,  skipParsing);	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
199	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token),  skipParsing);  [CE]  illegal  start  of  type  [FE]            UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token),  skipParsing);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token),  skipParsing);	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
200	[BUG]  [BUGGY]  ||  currentOption.hasArg())  {  skippeParsing  =  true;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.hasArg())  {  skippeParsing  =  true;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasArg())  {  skippeParsing  =  true;	  ||    currentOption.hasArg())    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
201	[BUG]  [BUGGY]  ||  currentOption.hasArgs())  {  skipParsing  =  false;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.hasArgs())  {  skipParsing  =  false;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasArgs())  {  skipParsing  =  false;	  ||    currentOption.hasArg())    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
202	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  2,  expectedOpts,  skipParsing);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  2,  expectedOpts,  skipParsing);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  2,  expectedOpts,  skipParsing);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/    2,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
203	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  2,  skipParsing);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  2,  skipParsing);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  2,  skipParsing);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/    2,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
204	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  2,  expectedOpts,  value);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  2,  expectedOpts,  value);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  2,  expectedOpts,  value);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/    2,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
205	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  2,  expectedOpts,  token);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  2,  expectedOpts,  token);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  2,  expectedOpts,  token);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/    2,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
206	[BUG]  [BUGGY]  final  java.lang.AssertionError:  expected  null  [CE]  <identifier>  expected  [FE]        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  final  java.lang.AssertionError:  expected  null  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	final  java.lang.AssertionError:  expected  null	          if(skipParsing)    {    cmd.addArg(token);    }    final    java.lang.AssertionError:    expected    null    	non-compiled	[CE]  <identifier>  expected	65	None	replace
207	[BUG]  [BUGGY]  if(select)  {  if(skipParsing)  {  cmd.addArg(token);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(select)  {  if(skipParsing)  {  cmd.addArg(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(select)  {  if(skipParsing)  {  cmd.addArg(token);  }	          if(skipParsing)    {    cmd.addArg(token);    }    final    java.lang.AssertionError:    expected    null    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
208	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  2);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  2);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  2);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+    1);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
209	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  1);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  1);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  1);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+    1);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
210	[BUG]  [BUGGY]  if(skipParsing)  {  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(skipParsing)  {  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(skipParsing)  {  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token);  }	  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
211	[BUG]  [BUGGY]  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token,  expectedOpts);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token,  expectedOpts);	  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
212	[BUG]  [BUGGY]  ||  currentOption.hasArgs())  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.hasArgs())  {  skipParsing  =  true;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasArgs())  {  skipParsing  =  true;	  ||    currentOption.hasArg())    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
213	[BUG]  [BUGGY]  ced.addArg(token,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ced.addArg(token,  expectedOpts);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	ced.addArg(token,  expectedOpts);	  ced.addArg(token);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
214	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts),  true);  [CE]  illegal  start  of  type  [FE]          UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts),  true);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts),  true);	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,    expectedOpts));    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
215	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts),  token);  [CE]  illegal  start  of  type  [FE]            UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts),  token);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts),  token);	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,    expectedOpts));    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
216	[BUG]  [BUGGY]  currentOption.addArg(Util.stripLeadingAndTrailingQuotes(skipParsing));  [CE]  illegal  start  of  type  [FE]        UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addArg(Util.stripLeadingAndTrailingQuotes(skipParsing));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addArg(Util.stripLeadingAndTrailingQuotes(skipParsing));	  currentOption.addArg(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
217	[BUG]  [BUGGY]  currentOption.addArg(Util.stripLeadingAndTrailingQuotes(scope));  [CE]  illegal  start  of  type  [FE]          UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addArg(Util.stripLeadingAndTrailingQuotes(scope));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addArg(Util.stripLeadingAndTrailingQuotes(scope));	  currentOption.addArg(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
218	[BUG]  [BUGGY]  currentOption.addArg(Util.stripLeadingAndTrailingQuotes(option));  [CE]  illegal  start  of  type  [FE]            UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addArg(Util.stripLeadingAndTrailingQuotes(option));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addArg(Util.stripLeadingAndTrailingQuotes(option));	  currentOption.addArg(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
219	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,  token));  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,  token));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,  token));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing,    token));    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
220	[BUG]  [BUGGY]  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token,  currentOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token,  currentOption);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token,  currentOption);	  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
221	[BUG]  [BUGGY]  if(currentOption!=  null)  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  }  else  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes  [CE]  [FE]        UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(currentOption!=  null)  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  }  else  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(currentOption!=  null)  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  }  else  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    currentlyOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  	87	None	replace
222	[BUG]  [BUGGY]  if(!skipParsing)  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  }  else  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes  [CE]  [FE]          UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(!skipParsing)  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  }  else  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(!skipParsing)  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  }  else  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    currentlyOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  	87	None	replace
223	[BUG]  [BUGGY]  if(!skipParsing)  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  }  [CE]  illegal  start  of  type  [FE]            UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(!skipParsing)  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  }  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(!skipParsing)  {  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  }	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    currentlyOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
224	[BUG]  [BUGGY]  Context.report(JSError.make(Token.NAME,  token,  expectedOpts.size()));  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Context.report(JSError.make(Token.NAME,  token,  expectedOpts.size()));  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Context.report(JSError.make(Token.NAME,  token,  expectedOpts.size()));	  Context.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
225	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnexpectedException(token);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  aughtExceptionHandler.handleUnexpectedException(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	aughtExceptionHandler.handleUnexpectedException(token);	          if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)    {    cmd.addArg(token);    }    else    if(currentOption.acceptsArg()    &&    isArgument(token))    {    skippeParsing    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
226	[BUG]  [BUGGY]  aughtExceptionHandler(currentOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  aughtExceptionHandler(currentOption);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	aughtExceptionHandler(currentOption);	          if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)    {    cmd.addArg(token);    }    else    if(currentOption.acceptsArg()    &&    isArgument(token))    {    skippeParsing    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
227	[BUG]  [BUGGY]  aughtExceptionHandler(currentOption,  token);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  aughtExceptionHandler(currentOption,  token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	aughtExceptionHandler(currentOption,  token);	          if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)    {    cmd.addArg(token);    }    else    if(currentOption.acceptsArg()    &&    isArgument(token))    {    skippeParsing    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
228	[BUG]  [BUGGY]  ||  currentOption.hasValueForProcessing(value))  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.hasValueForProcessing(value))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasValueForProcessing(value))  {	  ||    currentOption.acceptsArgumentToken())    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
229	[BUG]  [BUGGY]  boolean  skippeParsing  =  currentOption.stopAtNonOption();  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  boolean  skippeParsing  =  currentOption.stopAtNonOption();  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	boolean  skippeParsing  =  currentOption.stopAtNonOption();	          if(skipParsing)    {    cmd.addArg(token);    }    boolean    skipParsing    =    currentOption.stopAtNonOption();    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
230	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option),  value);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option),  value);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option),  value);	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
231	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option,  value));  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option,  value));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option,  value));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
232	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope,  key));  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope,  key));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope,  key));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope,    skipParsing));    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
233	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value)+  0);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value)+  0);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(value)+  0);	  currentOption.addValueForProcessing(Util.stripLeading(value)+    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
234	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument(value))  {  cmd.addArg(token);  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument(value))  {  cmd.addArg(token);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument(value))  {  cmd.addArg(token);	  ||    currentOption.acceptsArgument())    {    cmd.addArg(token);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
235	[BUG]  [BUGGY]  ||  currentOption.canHaveSideEffects())  {  cmd.addArg(token);  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.canHaveSideEffects())  {  cmd.addArg(token);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.canHaveSideEffects())  {  cmd.addArg(token);	  ||    currentOption.acceptsArgument())    {    cmd.addArg(token);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
236	[BUG]  [BUGGY]  Context.checkState(!skipParsing)  {  cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  [CE]  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Context.checkState(!skipParsing)  {  cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Context.checkState(!skipParsing)  {  cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }	  Context.checkState(!skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  	18	None	replace
237	[BUG]  [BUGGY]  Context.checkState(!switchParsing)  {  cmd.addArg(token);  }  [CE]  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Context.checkState(!switchParsing)  {  cmd.addArg(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Context.checkState(!switchParsing)  {  cmd.addArg(token);  }	  Context.checkState(!skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  	18	None	replace
238	[BUG]  [BUGGY]  expectedOpts.addValueForProcessing(Util.stripLeadINGAndTrailingQuotes(token));  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  expectedOpts.addValueForProcessing(Util.stripLeadINGAndTrailingQuotes(token));  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	expectedOpts.addValueForProcessing(Util.stripLeadINGAndTrailingQuotes(token));	          if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)    {    cmd.addArg(token);    }    else    {    expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
239	[BUG]  [BUGGY]  ||!currentOption.isStripLeadingAndTrailingQuotes(token))  {  cmd.addArg(token);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||!currentOption.isStripLeadingAndTrailingQuotes(token))  {  cmd.addArg(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||!currentOption.isStripLeadingAndTrailingQuotes(token))  {  cmd.addArg(token);  }	  ||!skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
240	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),  value);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),  value);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),  value);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option));    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
241	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option,  value));  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option,  value));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option,  value));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option));    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
242	[BUG]  [BUGGY]  if(currentOption!=  null)  {  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));  }  [CE]  [FE]          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(currentOption!=  null)  {  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(currentOption!=  null)  {  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));  }	  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  	36	None	replace
243	[BUG]  [BUGGY]  if(currentOption!=  null)  {  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));  }  else  {  expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes  [CE]  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(currentOption!=  null)  {  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));  }  else  {  expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(currentOption!=  null)  {  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));  }  else  {  expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes	  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  	36	None	replace
244	[BUG]  [BUGGY]  ||  currentOption.acceptsValue()  &&  isArgument(token))  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsValue()  &&  isArgument(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsValue()  &&  isArgument(token))  {	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
245	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isVowel(token))  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isVowel(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isVowel(token))  {	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
246	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isIgnoreWhitespace(token))  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isIgnoreWhitespace(token))  {  skipParsing  =  true;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isIgnoreWhitespace(token))  {  skipParsing  =  true;	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
247	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isShort(token))  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isShort(token))  {  skipParsing  =  true;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isShort(token))  {  skipParsing  =  true;	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
248	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isShortAndLongOption(token))  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isShortAndLongOption(token))  {  skipParsing  =  true;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isShortAndLongOption(token))  {  skipParsing  =  true;	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
249	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isSingletonValue(token))  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isSingletonValue(token))  {  skipParsing  =  true;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isSingletonValue(token))  {  skipParsing  =  true;	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
250	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(key),  value);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(key),  value);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(key),  value);	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(key));    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
251	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value)+  1);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value)+  1);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value)+  1);	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)+    1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
252	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  option  =  options.getOption(option);	          if(skipParsing)    {    cmd.addArg(token);    }    if(select)    {    cmd.addArg(token);    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
253	[BUG]  [BUGGY]  ||  currentOption.acceptsValueForProcessing(Util.stripLeadingAndTrailingQuotes(token))  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsValueForProcessing(Util.stripLeadingAndTrailingQuotes(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsValueForProcessing(Util.stripLeadingAndTrailingQuotes(token))  {	  ||    currentOption.acceptsProcessing())    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
254	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(key),  expectedOpts);  [CE]  illegal  start  of  type  [FE]        UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(key),  expectedOpts);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(key),  expectedOpts);	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
255	[BUG]  [BUGGY]  currentOption.setArgument(Util.stripLeadingAndTrailingQuotes(value));  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setArgument(Util.stripLeadingAndTrailingQuotes(value));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setArgument(Util.stripLeadingAndTrailingQuotes(value));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value));    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
256	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument(argument))  {  skipParsing  =  false;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument(argument))  {  skipParsing  =  false;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument(argument))  {  skipParsing  =  false;	  ||    currentOption.acceptsArgument(value))    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
257	[BUG]  [BUGGY]  cmd.addArg( "- ");  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  cmd.addArg( "- ");  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	cmd.addArg( "- ");	  cmd.addArg(token);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
258	[BUG]  [BUGGY]  cmd.addValueForProcessing(Util.tripLeadingAndTrailingQuotes(token));  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  cmd.addValueForProcessing(Util.tripLeadingAndTrailingQuotes(token));  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	cmd.addValueForProcessing(Util.tripLeadingAndTrailingQuotes(token));	  cmd.addArg(token);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
259	[BUG]  [BUGGY]  parentLine.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parentLine.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parentLine.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));	  parentLine.addArg(token);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
260	[BUG]  [BUGGY]  parentLine.addArg(value);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parentLine.addArg(value);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parentLine.addArg(value);	  parentLine.addArg(token);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
261	[BUG]  [BUGGY]  parsing)  {  expectedOpts.add(currentOption);  }  [CE]  not  a  statement  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parsing)  {  expectedOpts.add(currentOption);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parsing)  {  expectedOpts.add(currentOption);  }	  parsing)    {    expectedOpts.add(token);    }    	non-compiled	[CE]  not  a  statement	63	None	replace
262	[BUG]  [BUGGY]  currentOption.addArg(Util.stripLeadingAndTrailingQuotes(value));  [CE]  illegal  start  of  type  [FE]        UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addArg(Util.stripLeadingAndTrailingQuotes(value));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addArg(Util.stripLeadingAndTrailingQuotes(value));	  currentOption.addArg(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
263	[BUG]  [BUGGY]  Option  option  =  options.getOption(value);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Option  option  =  options.getOption(value);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  option  =  options.getOption(value);	          if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)    {    cmd.addArg(token;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
264	[BUG]  [BUGGY]  if(currentOption!=  null)  {  aughtExceptionHandler.handleError(token);  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(currentOption!=  null)  {  aughtExceptionHandler.handleError(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(currentOption!=  null)  {  aughtExceptionHandler.handleError(token);  }	  aughtExceptionHandler.handleError(token);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
265	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Option  option  =  options.getOption(opt);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  option  =  options.getOption(opt);	          if(skipParsing)    {    cmd.addArg(token);    }    if(selected)    {    cmd.addArg(token);    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
266	[BUG]  [BUGGY]  kedOpts.add(value);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  kedOpts.add(value);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	kedOpts.add(value);	  kedOpts.add(token);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
267	[BUG]  [BUGGY]  kedOpts.add(currentOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  kedOpts.add(currentOption);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	kedOpts.add(currentOption);	  kedOpts.add(token);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
268	[BUG]  [BUGGY]  sortedOpts.add(token);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  sortedOpts.add(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	sortedOpts.add(token);	  kedOpts.add(token);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
269	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,  expectedOpts),  token);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,  expectedOpts),  token);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,  expectedOpts),  token);	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,    expectedOpts));    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
270	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,  expectedOpts),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,  expectedOpts),  stopAtNonOption);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,  expectedOpts),  stopAtNonOption);	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,    expectedOpts));    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
271	[BUG]  [BUGGY]  CurrentOption.addValueForProcessing(Util.stripLeading(value));  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  CurrentOption.addValueForProcessing(Util.stripLeading(value));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	CurrentOption.addValueForProcessing(Util.stripLeading(value));	  CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
272	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument(value))  {  skippeParsing  =  false;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument(value))  {  skippeParsing  =  false;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument(value))  {  skippeParsing  =  false;	  ||    currentOption.acceptsArgument())    {    skippeParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
273	[BUG]  [BUGGY]  pendingOpts.add(value);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  pendingOpts.add(value);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	pendingOpts.add(value);	  pendingOpts.add(token);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
274	[BUG]  [BUGGY]  pendingOpts.add(option);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  pendingOpts.add(option);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	pendingOpts.add(option);	  pendingOpts.add(token);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
275	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(option,  value);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Option  currentOption  =  options.getOption(option,  value);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  currentOption  =  options.getOption(option,  value);	  Option    currentOption    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
276	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value),  true);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value),  true);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(value),  true);	  currentOption.addValueForProcessing(Util.stripLeading(value),    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
277	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value),  0);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value),  0);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(value),  0);	  currentOption.addValueForProcessing(Util.stripLeading(value),    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
278	[BUG]  [BUGGY]  ||!currentOption.isStripLeadingAndTrailingQuotes(token))  {  expectedOpts.add(token);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||!currentOption.isStripLeadingAndTrailingQuotes(token))  {  expectedOpts.add(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||!currentOption.isStripLeadingAndTrailingQuotes(token))  {  expectedOpts.add(token);	  ||!skipParsing)    {    expectedOpts.add(token);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
279	[BUG]  [BUGGY]  ||!currentOption.skipParsing)  {  expectedOpts.add(token);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||!currentOption.skipParsing)  {  expectedOpts.add(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||!currentOption.skipParsing)  {  expectedOpts.add(token);	  ||!skipParsing)    {    expectedOpts.add(token);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
280	[BUG]  [BUGGY]  if(!skipParsing)  {  aughtExceptionHandler.handleMissingArgument(token);  }  else  {  expected  =  true;  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(!skipParsing)  {  aughtExceptionHandler.handleMissingArgument(token);  }  else  {  expected  =  true;  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(!skipParsing)  {  aughtExceptionHandler.handleMissingArgument(token);  }  else  {  expected  =  true;  }	  aughtExceptionHandler.handleMissingArgument(token);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
281	[BUG]  [BUGGY]  ||  currentOption.isStripLeadingAndTrailingQuotes())  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.isStripLeadingAndTrailingQuotes())  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.isStripLeadingAndTrailingQuotes())  {	  ||    currentOption.canHaveSideEffects())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
282	[BUG]  [BUGGY]  ||  currentOption.canHaveSideEffects(value))  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.canHaveSideEffects(value))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.canHaveSideEffects(value))  {	  ||    currentOption.canHaveSideEffects())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
283	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,  expected));  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,  expected));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,  expected));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,    skipParsing));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
284	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,  true));  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,  true));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,  true));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,    skipParsing));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
285	[BUG]  [BUGGY]  ||!currentOption.stripLeadingAndTrailingQuotes(token))  {  expectedOpts.add(token);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||!currentOption.stripLeadingAndTrailingQuotes(token))  {  expectedOpts.add(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||!currentOption.stripLeadingAndTrailingQuotes(token))  {  expectedOpts.add(token);  }	  ||!skipParsing)    {    expectedOpts.add(token);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
286	[BUG]  [BUGGY]  ||!currentOption.isStripLeadingAndTrailingQuotes(token))  {  expectedOpts.add(token);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||!currentOption.isStripLeadingAndTrailingQuotes(token))  {  expectedOpts.add(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||!currentOption.isStripLeadingAndTrailingQuotes(token))  {  expectedOpts.add(token);  }	  ||!skipParsing)    {    expectedOpts.add(token);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
287	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),  expectedOpts,  value);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),  expectedOpts,  value);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),  expectedOpts,  value);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
288	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument(value)&&  isArgument(token))  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument(value)&&  isArgument(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument(value)&&  isArgument(token))  {	  ||    currentOption.acceptsArg()    &&    isArgument(token))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
289	[BUG]  [BUGGY]  ||  currentOption.acceptsStripLeadingAndTrailingQuotes(token))  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsStripLeadingAndTrailingQuotes(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsStripLeadingAndTrailingQuotes(token))  {	  ||    currentOption.acceptsProcessing(token))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
290	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts,  skipParsing);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts,  skipParsing);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts,  skipParsing);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts,    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
291	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)&&  expectedOpts.contains( "- "))  {  skipParsing  =  true;  [CE]  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)&&  expectedOpts.contains( "- "))  {  skipParsing  =  true;  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)&&  expectedOpts.contains( "- "))  {  skipParsing  =  true;	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts,    skipParsing);    	non-compiled	[CE]  	19	None	replace
292	[BUG]  [BUGGY]  ||  expectedOpts.contains(token)&&  isStripLeadingAndTrailingQuotes(token))  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  expectedOpts.contains(token)&&  isStripLeadingAndTrailingQuotes(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  expectedOpts.contains(token)&&  isStripLeadingAndTrailingQuotes(token))  {	  ||    expectedOpts.contains(token))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
293	[BUG]  [BUGGY]  currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(value));  [CE]  illegal  start  of  type  [FE]          UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(value));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(value));	  currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
294	[BUG]  [BUGGY]  currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(option));  [CE]  illegal  start  of  type  [FE]            UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(option));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(option));	  currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
295	[BUG]  [BUGGY]  ||  currentOption.hasArgs())  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.hasArgs())  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasArgs())  {	  ||    currentOption.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
296	[BUG]  [BUGGY]  ||  currentOption.hasMoreArgs())  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.hasMoreArgs())  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasMoreArgs())  {	  ||    currentOption.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
297	[BUG]  [BUGGY]  ||  currentOption.hasArg(token))  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.hasArg(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasArg(token))  {	  ||    currentOption.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
298	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value),  value);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value),  value);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(value),  value);	  currentOption.addValueForProcessing(Util.stripLeading(value),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
299	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value),  preferredOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value),  preferredOpts);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(value),  preferredOpts);	  currentOption.addValueForProcessing(Util.stripLeading(value),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
300	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value),  expectedOpts,  token);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value),  expectedOpts,  token);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(value),  expectedOpts,  token);	  currentOption.addValueForProcessing(Util.stripLeading(value),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
301	[BUG]  [BUGGY]  if(currentOption!=  null)  {  aughtExceptionHandler.handleUnexpectedArgument(token);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(currentOption!=  null)  {  aughtExceptionHandler.handleUnexpectedArgument(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(currentOption!=  null)  {  aughtExceptionHandler.handleUnexpectedArgument(token);  }	  aughtExceptionHandler.handleUnexpectedArgument(token);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
302	[BUG]  [BUGGY]  expectedOpts.add(value);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  expectedOpts.add(value);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	expectedOpts.add(value);	  expectedOpts.add(token);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
303	[BUG]  [BUGGY]  expectedOpts.add(option);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  expectedOpts.add(option);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	expectedOpts.add(option);	  expectedOpts.add(token);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
304	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value,  skipParsing));  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value,  skipParsing));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value,  skipParsing));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,    skipParsing));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
305	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  expected));  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  expected));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  expected));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,    skipParsing));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
306	[BUG]  [BUGGY]  ||  currentOption.accepteForProcessing(Util.stripLeadingAndTrailingQuotes(token)))  {  skipParsing  =  false;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.accepteForProcessing(Util.stripLeadingAndTrailingQuotes(token)))  {  skipParsing  =  false;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.accepteForProcessing(Util.stripLeadingAndTrailingQuotes(token)))  {  skipParsing  =  false;	  ||    currentOption.acceptsArgument(token))    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
307	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isShort(token))  {  skipParsing  =  false;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isShort(token))  {  skipParsing  =  false;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isShort(token))  {  skipParsing  =  false;	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
308	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isShortAndLongOption(token))  {  skipParsing  =  false;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isShortAndLongOption(token))  {  skipParsing  =  false;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isShortAndLongOption(token))  {  skipParsing  =  false;	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
309	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isSingletonValue(token))  {  skipParsing  =  false;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isSingletonValue(token))  {  skipParsing  =  false;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isSingletonValue(token))  {  skipParsing  =  false;	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
310	[BUG]  [BUGGY]  ||  currentOption.hasArgument())  {  skipParsing  =  false;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.hasArgument())  {  skipParsing  =  false;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasArgument())  {  skipParsing  =  false;	  ||    currentOption.hasArg())    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
311	[BUG]  [BUGGY]  if(currentOption!=  null)  {  aughtExceptionHandler.handleShortAndLongOption(token);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(currentOption!=  null)  {  aughtExceptionHandler.handleShortAndLongOption(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(currentOption!=  null)  {  aughtExceptionHandler.handleShortAndLongOption(token);  }	  aughtExceptionHandler.handleShortAndLongOption(token);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
312	[BUG]  [BUGGY]  if(!skipParsing)  {  aughtExceptionHandler.handleShortAndLongOption(token);  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(!skipParsing)  {  aughtExceptionHandler.handleShortAndLongOption(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(!skipParsing)  {  aughtExceptionHandler.handleShortAndLongOption(token);  }	  aughtExceptionHandler.handleShortAndLongOption(token);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
313	[BUG]  [BUGGY]  if(currentOption!=  null)  {  aughtExceptionHandler.handleShortAndLongOption(token);  }  else  {  expected  =  true;  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(currentOption!=  null)  {  aughtExceptionHandler.handleShortAndLongOption(token);  }  else  {  expected  =  true;  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(currentOption!=  null)  {  aughtExceptionHandler.handleShortAndLongOption(token);  }  else  {  expected  =  true;  }	  aughtExceptionHandler.handleShortAndLongOption(token);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
314	[BUG]  [BUGGY]  if(currentOption!=  null)  {  aughtExceptionHandler.handleShortAndLongOption(token);  }  else  {  expected  =  false;  }  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(currentOption!=  null)  {  aughtExceptionHandler.handleShortAndLongOption(token);  }  else  {  expected  =  false;  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(currentOption!=  null)  {  aughtExceptionHandler.handleShortAndLongOption(token);  }  else  {  expected  =  false;  }	  aughtExceptionHandler.handleShortAndLongOption(token);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
315	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value)+  1);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value)+  1);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value)+  1);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+    1);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
316	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  0);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  0);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  0);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+    1);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
317	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),  skipParsing);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),  skipParsing);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),  skipParsing);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
318	[BUG]  [BUGGY]  currentOption.addArgument(Util.stripLeading(value));  [CE]  illegal  start  of  type  [FE]        UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addArgument(Util.stripLeading(value));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addArgument(Util.stripLeading(value));	  currentOption.addValue(Util.stripLeading(value));    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
319	[BUG]  [BUGGY]  currentOption.addArg(value);  [CE]  <identifier>  expected  [FE]          UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addArg(value);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addArg(value);	  currentOption.addValue(Util.stripLeading(value));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
320	[BUG]  [BUGGY]  aughtExceptionHandler.handleShortAndLong(token);  [CE]  <identifier>  expected  [FE]        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  aughtExceptionHandler.handleShortAndLong(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	aughtExceptionHandler.handleShortAndLong(token);	  if(selected)    {    cmd.addArg(token);    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
321	[BUG]  [BUGGY]  ||!currentOption.stripLeadingAndTrailingQuotes(token))  {  cmd.addArg(token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||!currentOption.stripLeadingAndTrailingQuotes(token))  {  cmd.addArg(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||!currentOption.stripLeadingAndTrailingQuotes(token))  {  cmd.addArg(token);	  ||!skipParsing)    {    cmd.addArg(token);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
322	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts,  value);  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts,  value);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts,  value);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+    1,    expectedOpts);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
323	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  value);  [CE]  <identifier>  expected  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  value);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  value);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+    1,    expectedOpts);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
324	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts,  stopAtNonOption);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts,  stopAtNonOption);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+    1,    expectedOpts);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
325	[BUG]  [BUGGY]  Option  option  =  options.getOption(token);  [CE]  <identifier>  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Option  option  =  options.getOption(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  option  =  options.getOption(token);	          if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)    {    cmd.addArg(token);    }    else    if(currentOption.acceptsArg()    &&    isArgument(token))    {    skipParsing    =    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
326	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts,  stopAtNonOption);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts,  stopAtNonOption);	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
327	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts,  token);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts,  token);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts,  token);	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
328	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(value,  token);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Option  currentOption  =  options.getOption(value,  token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  currentOption  =  options.getOption(value,  token);	  Option    currentOption    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
329	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(option,  token);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Option  currentOption  =  options.getOption(option,  token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  currentOption  =  options.getOption(option,  token);	  Option    currentOption    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
330	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value,  token));  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value,  token));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value,  token));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,    expectedOpts));    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
331	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value,  expectedOpts));  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value,  expectedOpts));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value,  expectedOpts));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,    expectedOpts));    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
332	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts),  value);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts),  value);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts),  value);	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,    expectedOpts));    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
333	[BUG]  [BUGGY]  parent.replaceChild(parent,  token);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parent.replaceChild(parent,  token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parent.replaceChild(parent,  token);	  parent.addArg(token);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
334	[BUG]  [BUGGY]  parent.addArg(token,  currentOption);  [CE]  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parent.addArg(token,  currentOption);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parent.addArg(token,  currentOption);	  parent.addArg(token);    	non-compiled	[CE]  	72	None	replace
335	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts,  token);  [CE]  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts,  token);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts,  token);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts,    value);    	non-compiled	[CE]  	74	None	replace
336	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  value);  [CE]  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  value);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  value);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts,    value);    	non-compiled	[CE]  	74	None	replace
337	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(scope,  token));  [CE]  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(scope,  token));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(scope,  token));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(scope));    	non-compiled	[CE]  	33	None	replace
338	[BUG]  [BUGGY]  ced.addArg(value);  [CE]  <identifier>  expected  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ced.addArg(value);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	ced.addArg(value);	  ced.addArg(token);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
339	[BUG]  [BUGGY]  ExpectedOpts.add(token);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ExpectedOpts.add(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	ExpectedOpts.add(token);	  if(stopAtNonOption)    {    expectedOpts.add(token);    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
340	[BUG]  [BUGGY]  parent!=  null  &&  currentOption.acceptsArg();  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parent!=  null  &&  currentOption.acceptsArg();  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parent!=  null  &&  currentOption.acceptsArg();	          if(skipParsing)    {    cmd.addArg(token);    }    if(skipParsing)    {    cmd.addArg(token);    }    else    if(currentOption.acceptsArg()    &&    isArgument(token))    {    skipParsing    =    true;    }    	non-compiled	[CE]  not  a  statement	42	None	replace
341	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,  expected));  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,  expected));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,  expected));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,    skipParsing));    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
342	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts),  value);  [CE]  illegal  start  of  type  [FE]          UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts),  value);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  expectedOpts),  value);	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,    expectedOpts));    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
343	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  value));  [CE]  illegal  start  of  type  [FE]            UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  value));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  value));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,    expectedOpts));    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
344	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(option,  value));  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(option,  value));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(option,  value));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(option));    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
345	[BUG]  [BUGGY]  currentOption.setValue(option.stripLeadingAndTrailingQuotes(value));  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(option.stripLeadingAndTrailingQuotes(value));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(option.stripLeadingAndTrailingQuotes(value));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(option));    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
346	[BUG]  [BUGGY]  ||  currentOption.acceptStripLeadingAndTrailingQuotes(token))  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptStripLeadingAndTrailingQuotes(token))  {  skipParsing  =  true;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptStripLeadingAndTrailingQuotes(token))  {  skipParsing  =  true;	  ||    currentOption.acceptsArgument(token))    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
347	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts);	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
348	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts);	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
349	[BUG]  [BUGGY]  ||  currentOption.acceptsProcessing(Util.stripLeadingAndTrailingQuotes(token))  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsProcessing(Util.stripLeadingAndTrailingQuotes(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsProcessing(Util.stripLeadingAndTrailingQuotes(token))  {	  ||    currentOption.acceptsArgument(token))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
350	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument(value))  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument(value))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument(value))  {	  ||    currentOption.acceptsArgument(token))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
351	[BUG]  [BUGGY]  ||  currentOption.hasValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)))  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.hasValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)))  {	  ||    currentOption.acceptsArgument(token))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
352	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts,  stopAtNonOption);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts,  stopAtNonOption);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
353	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(value)+  1;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Option  currentOption  =  options.getOption(value)+  1;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Option  currentOption  =  options.getOption(value)+  1;	  Option    currentOption    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
354	[BUG]  [BUGGY]  currentOption  =  Util.stripLeadingAndTrailingQuotes(token);  [CE]  illegal  start  of  type  [FE]            UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption  =  Util.stripLeadingAndTrailingQuotes(token);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption  =  Util.stripLeadingAndTrailingQuotes(token);	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    currentOption.addValue(Util.stripLeadingAndTrailingQuotes(Token));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
355	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingOrTrailingQuotes(token));  [CE]  illegal  start  of  type  [FE]              UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingOrTrailingQuotes(token));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingOrTrailingQuotes(token));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    currentOption.addValue(Util.stripLeadingAndTrailingQuotes(Token));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
356	[BUG]  [BUGGY]  currentOption.addArg(Util.stripLeadingOrTrailingQuotes(token));  [CE]  illegal  start  of  type  [FE]        UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addArg(Util.stripLeadingOrTrailingQuotes(token));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addArg(Util.stripLeadingOrTrailingQuotes(token));	  currentOption.addArg(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
357	[BUG]  [BUGGY]  currentOption.addArg(Util.stripLeadingAndTrailingQuotes(token),  true);  [CE]  illegal  start  of  type  [FE]          UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addArg(Util.stripLeadingAndTrailingQuotes(token),  true);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addArg(Util.stripLeadingAndTrailingQuotes(token),  true);	  currentOption.addArg(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
358	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingQuotes(token));  [CE]  illegal  start  of  type  [FE]        UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingQuotes(token));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingQuotes(token));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    currentlyOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
359	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value)/  2);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value)/  2);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(value)/  2);	  currentOption.addValueForProcessing(Util.stripLeading(value)+    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
360	[BUG]  [BUGGY]  Context.checkState(!skipParsing  &&  token.startsWith( "- "))  {  cmd.addArg(token);  }  [CE]  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Context.checkState(!skipParsing  &&  token.startsWith( "- "))  {  cmd.addArg(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Context.checkState(!skipParsing  &&  token.startsWith( "- "))  {  cmd.addArg(token);  }	  Context.checkState(!skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  	18	None	replace
361	[BUG]  [BUGGY]  Context.checkState(!skipParsing);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Context.checkState(!skipParsing);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Context.checkState(!skipParsing);	  Context.checkState(!skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
362	[BUG]  [BUGGY]  ||  currentOption.acceptsArgumentValue(token))  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgumentValue(token))  {  skipParsing  =  true;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgumentValue(token))  {  skipParsing  =  true;	  ||    currentOption.acceptsArgument(token))    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
363	[BUG]  [BUGGY]  ||  currentOption.hasArg())  {  expectedOpts.add(token);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.hasArg())  {  expectedOpts.add(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasArg())  {  expectedOpts.add(token);	  ||!skipParsing)    {    expectedOpts.add(token);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
364	[BUG]  [BUGGY]  ||!skipParsing)  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||!skipParsing)  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||!skipParsing)  {	  ||!skipParsing)    {    expectedOpts.add(token);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
365	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  this.skipParsing));  [CE]  illegal  start  of  type  [FE]          UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  this.skipParsing));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,  this.skipParsing));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,    skipParsing));    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
366	[BUG]  [BUGGY]  ||  currentOption.acceptsArg(token))  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArg(token))  {  skipParsing  =  true;  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArg(token))  {  skipParsing  =  true;	          ||    currentOption.acceptsArg())    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
367	[BUG]  [BUGGY]  parent.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parent.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parent.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));	  parent.addArg(token);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
368	[BUG]  [BUGGY]  parent.addValueForProcessing(Util.tripLeadingAndTrailingQuotes(token));  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parent.addValueForProcessing(Util.tripLeadingAndTrailingQuotes(token));  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parent.addValueForProcessing(Util.tripLeadingAndTrailingQuotes(token));	  parent.addArg(token);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
369	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token)/  2,  expectedOpts);  [CE]  illegal  start  of  type  [FE]        UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token)/  2,  expectedOpts);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token)/  2,  expectedOpts);	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
370	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts);  [CE]  illegal  start  of  type  [FE]          UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts);	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
371	[BUG]  [BUGGY]  Context.report(JSError.make(token,  currentOption.getMessage(),  value));  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  Context.report(JSError.make(token,  currentOption.getMessage(),  value));  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	Context.report(JSError.make(token,  currentOption.getMessage(),  value));	  Context.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
372	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  stopAtNonOption));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  stopAtNonOption));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,    skipParsing));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
373	[BUG]  [BUGGY]  ||  currentOption.canHaveSideEffects(token))  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.canHaveSideEffects(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.canHaveSideEffects(token))  {	  ||    currentOption.canHaveSideEffects())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
374	[BUG]  [BUGGY]  ||  currentOption.mayHaveSideEffects())  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.mayHaveSideEffects())  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.mayHaveSideEffects())  {	  ||    currentOption.canHaveSideEffects())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
375	[BUG]  [BUGGY]  aughtExceptionHandler.handleShortAndTrailingQuotes(token);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  aughtExceptionHandler.handleShortAndTrailingQuotes(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	aughtExceptionHandler.handleShortAndTrailingQuotes(token);	  aughtExceptionHandler.handleShortAndLongOption(token);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
376	[BUG]  [BUGGY]  ||  currentOption.hasValueForProcessing(token))  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.hasValueForProcessing(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasValueForProcessing(token))  {	  ||    currentOption.acceptsProcessing())    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
377	[BUG]  [BUGGY]  if(skipParsing)  {  cmd.addArg(token);  }  else  {  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(skipParsing)  {  cmd.addArg(token);  }  else  {  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(skipParsing)  {  cmd.addArg(token);  }  else  {  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }	          if(skipParsing)    {    cmd.addArg(token);    }    boolean    skipParsing    =    currentOption.stopAtNonOption();    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
378	[BUG]  [BUGGY]  currentOption.setArgumentValue(Util.stripLeadingOrTrailingQuotes(token));  [CE]  illegal  start  of  type  [FE]          UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setArgumentValue(Util.stripLeadingOrTrailingQuotes(token));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setArgumentValue(Util.stripLeadingOrTrailingQuotes(token));	  currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
379	[BUG]  [BUGGY]  currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(token),  true);  [CE]  illegal  start  of  type  [FE]            UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(token),  true);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(token),  true);	  currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
380	[BUG]  [BUGGY]  ||  currentOption.hasArg())  {  expectedOpts.add(token);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.hasArg())  {  expectedOpts.add(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasArg())  {  expectedOpts.add(token);  }	  ||!skipParsing)    {    expectedOpts.add(token);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
381	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(skipParsing,  token));  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(skipParsing,  token));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(skipParsing,  token));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(skipParsing));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
382	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingOrTrailingQuotes(token));  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingOrTrailingQuotes(token));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingOrTrailingQuotes(token));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(skipParsing));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
383	[BUG]  [BUGGY]  ||  currentOption.acceptsArgumentToken())  {  cmd.addArg(token);  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgumentToken())  {  cmd.addArg(token);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgumentToken())  {  cmd.addArg(token);	  ||    currentOption.acceptsArgument())    {    cmd.addArg(token);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
384	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  2,  preferredOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  2,  preferredOpts);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  2,  preferredOpts);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/    2,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
385	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  2,  expectedOpts,  true);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  2,  expectedOpts,  true);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  2,  expectedOpts,  true);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/    2,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
386	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingBlock(token));  [CE]  illegal  start  of  type  [FE]          UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingBlock(token));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingBlock(token));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    CurrentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
387	[BUG]  [BUGGY]  parsing  &&  token!=  null)  {  expectedOpts.add(token);  }  [CE]  not  a  statement  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parsing  &&  token!=  null)  {  expectedOpts.add(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parsing  &&  token!=  null)  {  expectedOpts.add(token);  }	  parsing)    {    expectedOpts.add(token);    }    	non-compiled	[CE]  not  a  statement	63	None	replace
388	[BUG]  [BUGGY]  parsing  ||  expectedOpts.contains(token))  {  expectedOpts.add(token);  }  [CE]  not  a  statement  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parsing  ||  expectedOpts.contains(token))  {  expectedOpts.add(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parsing  ||  expectedOpts.contains(token))  {  expectedOpts.add(token);  }	  parsing)    {    expectedOpts.add(token);    }    	non-compiled	[CE]  not  a  statement	63	None	replace
389	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  1,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  1,  expectedOpts);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/  1,  expectedOpts);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+    1,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
390	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts,  currentOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts,  currentOption);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+  1,  expectedOpts,  currentOption);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+    1,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
391	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)&&  expectedOpts,  skipParsing);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)&&  expectedOpts,  skipParsing);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)&&  expectedOpts,  skipParsing);	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),    expectedOpts,    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
392	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(cmd,  token));  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(cmd,  token));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(cmd,  token));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope,    skipParsing));    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
393	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope,  argument));  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope,  argument));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope,  argument));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope,    skipParsing));    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
394	[BUG]  [BUGGY]  kedOpts.add(key);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  kedOpts.add(key);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	kedOpts.add(key);	  kedOpts.add(token);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
395	[BUG]  [BUGGY]  ||  currentOption.hasArg(token))  {  skipParsing  =  false;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.hasArg(token))  {  skipParsing  =  false;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasArg(token))  {  skipParsing  =  false;	  ||    currentOption.hasArg())    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
396	[BUG]  [BUGGY]  ||  currentOption.hasMoreArgs())  {  skipParsing  =  false;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.hasMoreArgs())  {  skipParsing  =  false;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasMoreArgs())  {  skipParsing  =  false;	  ||    currentOption.hasArg())    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
397	[BUG]  [BUGGY]  ||  currentOption.hasNext())  {  skipParsing  =  false;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.hasNext())  {  skipParsing  =  false;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasNext())  {  skipParsing  =  false;	  ||    currentOption.hasArg())    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
398	[BUG]  [BUGGY]  aughtExceptionHandler(token);  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  aughtExceptionHandler(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	aughtExceptionHandler(token);	          if(skipParsing)    {    cmd.addArg(token);    }    if(select)    {    cmd.addArg(token);    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
399	[BUG]  [BUGGY]  if(currentOption!=  null)  {  aughtExceptionHandler.handleMissing(token);  }  [CE]  <identifier>  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(currentOption!=  null)  {  aughtExceptionHandler.handleMissing(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(currentOption!=  null)  {  aughtExceptionHandler.handleMissing(token);  }	  aughtExceptionHandler.handleMissing(token);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
400	[BUG]  [BUGGY]  ||  currentOption.acceptsProcessingQuotes(token))  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsProcessingQuotes(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsProcessingQuotes(token))  {	  ||    currentOption.acceptsArgumentToken())    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
401	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isVowel(token))  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isVowel(token))  {  skipParsing  =  true;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isVowel(token))  {  skipParsing  =  true;	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
402	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isLong(token))  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isLong(token))  {  skipParsing  =  true;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isLong(token))  {  skipParsing  =  true;	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
403	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isIgnoredValue(token))  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isIgnoredValue(token))  {  skipParsing  =  true;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isIgnoredValue(token))  {  skipParsing  =  true;	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
404	[BUG]  [BUGGY]  ||  expectedOpts.contains(token)&&  token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  expectedOpts.contains(token)&&  token.startsWith( "- "))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  expectedOpts.contains(token)&&  token.startsWith( "- "))  {	  ||    expectedOpts.contains(token))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
405	[BUG]  [BUGGY]  ||!skipParsing)  {  cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||!skipParsing)  {  cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||!skipParsing)  {  cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));	  ||!skipParsing)    {    cmd.addArg(token);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
406	[BUG]  [BUGGY]  ced.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ced.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	ced.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));	  ced.addArg(token);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
407	[BUG]  [BUGGY]  ||  currentOption.hasMoreArgs())  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.hasMoreArgs())  {  skipParsing  =  true;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasMoreArgs())  {  skipParsing  =  true;	  ||    currentOption.hasArg())    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
408	[BUG]  [BUGGY]  ||  currentOption.hasNext())  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.hasNext())  {  skipParsing  =  true;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasNext())  {  skipParsing  =  true;	  ||    currentOption.hasArg())    {    skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
409	[BUG]  [BUGGY]  ||!skipParsing)  {  cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||!skipParsing)  {  cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||!skipParsing)  {  cmd.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }	  ||!skipParsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
410	[BUG]  [BUGGY]  parentLine.addArgument(token);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parentLine.addArgument(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parentLine.addArgument(token);	  parentLine.addArg(token);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
411	[BUG]  [BUGGY]  parentLine.addValue(token);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parentLine.addValue(token);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parentLine.addValue(token);	  parentLine.addArg(token);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
412	[BUG]  [BUGGY]  if(currentOption!=  null)  {  aughtExceptionHandler.handleError(token);  }  else  {  expected  =  true;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(currentOption!=  null)  {  aughtExceptionHandler.handleError(token);  }  else  {  expected  =  true;  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(currentOption!=  null)  {  aughtExceptionHandler.handleError(token);  }  else  {  expected  =  true;  }	  aughtExceptionHandler.handleError(token);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
413	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  isVowel(token))  {  skipParsing  =  false;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  isVowel(token))  {  skipParsing  =  false;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  isVowel(token))  {  skipParsing  =  false;	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
414	[BUG]  [BUGGY]  ||  currentOption.acceptsArgument()  &&  skipParsing)  {  skipParsing  =  false;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsArgument()  &&  skipParsing)  {  skipParsing  =  false;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsArgument()  &&  skipParsing)  {  skipParsing  =  false;	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    skipParsing    =    false;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
415	[BUG]  [BUGGY]  currentOption.addArgument(Util.stripLeadingAndTrailingQuotes(token));  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addArgument(Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addArgument(Util.stripLeadingAndTrailingQuotes(token));	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(skipParsing));    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
416	[BUG]  [BUGGY]  if(!skipParsing)  {  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));  }  else  {  expectedOpts.add(token);  }  [CE]  [FE]          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(!skipParsing)  {  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));  }  else  {  expectedOpts.add(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(!skipParsing)  {  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));  }  else  {  expectedOpts.add(token);  }	  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));    	non-compiled	[CE]  	36	None	replace
417	[BUG]  [BUGGY]  if(!skipParsing)  {  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(!skipParsing)  {  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(!skipParsing)  {  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token);  }	  aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
418	[BUG]  [BUGGY]  if(skipParsing  >  0)  {  cmd.addArg(token);  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  if(skipParsing  >  0)  {  cmd.addArg(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	if(skipParsing  >  0)  {  cmd.addArg(token);  }	          if(skipParsing)    {    cmd.addArg(token);    }    final    java.lang.AssertionError:    expected    null    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
419	[BUG]  [BUGGY]  final  java.lang.AssertionError:  expected  null;  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  final  java.lang.AssertionError:  expected  null;  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	final  java.lang.AssertionError:  expected  null;	          if(skipParsing)    {    cmd.addArg(token);    }    final    java.lang.AssertionError:    expected    null    	non-compiled	[CE]  <identifier>  expected	65	None	replace
420	[BUG]  [BUGGY]  ||  currentOption.hasProperty(token))  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.hasProperty(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasProperty(token))  {	  ||    currentOption.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
421	[BUG]  [BUGGY]  ||  currentOption.hasValue())  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.hasValue())  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.hasValue())  {	  ||    currentOption.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
422	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value),  expectedOpts,  true);  [CE]  <identifier>  expected  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value),  expectedOpts,  true);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(value),  expectedOpts,  true);	  currentOption.addValueForProcessing(Util.stripLeading(value),    expectedOpts);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
423	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,  this.skipParsing));  [CE]  <identifier>  expected  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,  this.skipParsing));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,  this.skipParsing));	  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,    skipParsing));    	non-compiled	[CE]  <identifier>  expected	47	None	replace
424	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts,  true);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts,  true);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),  expectedOpts,  true);	  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
425	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value),  expected);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value),  expected);  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value),  expected);	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value));    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
426	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeading(skipParsing));  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeading(skipParsing));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeading(skipParsing));	  currentOption.addValueForProcessing(Util.stripLeading(skipParsing));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
427	[BUG]  [BUGGY]  >>  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  >>  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	>>	          if(!skipParsing)    {    cmd.addArg(token);    }    else    {    cmd.addArg(token);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
428	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  value));  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  value));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,  value));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,    expectedOpts));    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
429	[BUG]  [BUGGY]  ||  currentOption.acceptsProperty(value)&&  isArgument(token))  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  ||  currentOption.acceptsProperty(value)&&  isArgument(token))  {  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	||  currentOption.acceptsProperty(value)&&  isArgument(token))  {	  ||    currentOption.acceptsArgument()    &&    isArgument(token))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
430	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(key,  value));  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(key,  value));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(key,  value));	  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(key));    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
431	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeading(value));  [CE]  illegal  start  of  type  [FE]        UnsupportedOperationException      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  currentOption.setValue(Util.stripLeading(value));  [BUGGY]      }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeading(value));	  currentOption.addValue(Util.stripLeading(value));    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
432	[BUG]  [BUGGY]  expectedOpts.add(token,  value);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  expectedOpts.add(token,  value);  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	expectedOpts.add(token,  value);	  expectedOpts.add(token);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
433	[BUG]  [BUGGY]  parsing  &&  token!=  null)  {  cmd.addArg(token);  }  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parsing  &&  token!=  null)  {  cmd.addArg(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parsing  &&  token!=  null)  {  cmd.addArg(token);  }	  parsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  not  a  statement	70	None	replace
434	[BUG]  [BUGGY]  parsing)  {  cmd.addArgument(token);  }  [CE]  not  a  statement  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (skipParsing)  {  cmd.addArg(token);  }  else  if  (     "--     ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {      [BUGGY]  parsing)  {  cmd.addArgument(token);  }  [BUGGY]      currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith(     "--     "))  {  handleLongOption(token);  }  else  if  (token.startsWith(     "-     ")  &&  !     "-     ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	parsing)  {  cmd.addArgument(token);  }	  parsing)    {    cmd.addArg(token);    }    	non-compiled	[CE]  not  a  statement	70	None	replace
