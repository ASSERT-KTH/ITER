bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	add	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  	compilable	  [FE]  UnsupportedOperationException  	1	2	replace
2	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  [FE]  UnsupportedOperationException  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  	compilable	  [FE]  UnsupportedOperationException  	1	2	replace
3	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing));  [CE]  method  stripLeadingAndTrailingQuotes  in  class  Util  cannot  be  applied  to  given  types;  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing));  [BUGGY]  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing));	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  	non-compiled	[CE]  method  stripLeadingAndTrailingQuotes  in  class  Util  cannot  be  applied  to  given  types;	1	None	replace
4	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value));  [CE]  cannot  find  symbol  value  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value));  [BUGGY]  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value));	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          java.lang.AssertionError:  expected  null  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    [BUGGY]  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	add	  	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  	compilable	  [FE]  AssertionError  	1	2	replace
6	[BUG]  [BUGGY]    [FE]  AssertionError  [FE]          java.lang.AssertionError:  expected  null  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    [BUGGY]  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	  	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  	compilable	  [FE]  AssertionError  	1	2	replace
7	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected  null  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    if(skipParsing)  {  cmd.addArg(token);  }  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	add	    if(skipParsing)  {  cmd.addArg(token);  }		compilable	  [FE]  java.lang.AssertionError:  expected  null  	2	1	add
8	[BUG]  [BUGGY]    if(skipParsing)  {  cmd.addArg(token);  }  [FE]  java.lang.AssertionError:  expected  null  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    if(skipParsing)  {  cmd.addArg(token);  }  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	    if(skipParsing)  {  cmd.addArg(token);  }		compilable	  [FE]  java.lang.AssertionError:  expected  null  	2	1	add
9	[BUG]  [BUGGY]    if(!skipParsing)  {  expectedOpts.add(token);  }  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    if(!skipParsing)  {  expectedOpts.add(token);  }  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	    if(!skipParsing)  {  expectedOpts.add(token);  }		non-compiled	[CE]  illegal  start  of  type	2	None	add
10	[BUG]  [BUGGY]    ||  currentOption.acceptsArg())  {  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    ||  currentOption.acceptsArg())  {  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	    ||  currentOption.acceptsArg())  {		non-compiled	[CE]  illegal  start  of  expression	2	None	add
11	[BUG]  [BUGGY]    ||  currentOption.acceptsArgument())  {  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    ||  currentOption.acceptsArgument())  {  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	    ||  currentOption.acceptsArgument())  {		non-compiled	[CE]  illegal  start  of  expression	2	None	add
12	[BUG]  [BUGGY]    ||  currentOption.acceptsArgument())  {  skipParsing  =  true;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    ||  currentOption.acceptsArgument())  {  skipParsing  =  true;  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	    ||  currentOption.acceptsArgument())  {  skipParsing  =  true;		non-compiled	[CE]  illegal  start  of  expression	2	None	add
13	[BUG]  [BUGGY]    if(!skipParsing)  {  cmd.addArg(token);  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    if(!skipParsing)  {  cmd.addArg(token);  }  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	    if(!skipParsing)  {  cmd.addArg(token);  }		non-compiled	[CE]  illegal  start  of  type	2	None	add
14	[BUG]  [BUGGY]    if(skipParsing)  {  cmd.addArg(token);  }  else  {  expectedOpts.add(token);  }  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    if(skipParsing)  {  cmd.addArg(token);  }  else  {  expectedOpts.add(token);  }  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	    if(skipParsing)  {  cmd.addArg(token);  }  else  {  expectedOpts.add(token);  }		non-compiled	[CE]  illegal  start  of  type	2	None	add
15	[BUG]  [BUGGY]    if(skipParsing)  {  cmd.addArg(token);  }  else  {  cmd.addArg(token);  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    if(skipParsing)  {  cmd.addArg(token);  }  else  {  cmd.addArg(token);  }  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	    if(skipParsing)  {  cmd.addArg(token);  }  else  {  cmd.addArg(token);  }		non-compiled	[CE]  illegal  start  of  type	2	None	add
16	[BUG]  [BUGGY]    if(!skipParsing)  {  cmd.addArg(token);  }  else  {  expectedOpts.add(token);  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    if(!skipParsing)  {  cmd.addArg(token);  }  else  {  expectedOpts.add(token);  }  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	    if(!skipParsing)  {  cmd.addArg(token);  }  else  {  expectedOpts.add(token);  }		non-compiled	[CE]  illegal  start  of  type	2	None	add
17	[BUG]  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value));  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]  currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value));  [BUGGY]  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value));	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
18	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value));  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeading(value));  [BUGGY]  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeading(value));	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
19	[BUG]  [BUGGY]    ||  currentOption.acceptsArgument())  {  skipParsing  =  false;  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    ||  currentOption.acceptsArgument())  {  skipParsing  =  false;  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	    ||  currentOption.acceptsArgument())  {  skipParsing  =  false;		non-compiled	[CE]  illegal  start  of  expression	2	None	add
20	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption(token);  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]    Option  currentOption  =  options.getOption(token);  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	    Option  currentOption  =  options.getOption(token);		non-compiled	[CE]  illegal  start  of  type	2	None	add
21	[BUG]  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts);  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]  currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts);  [BUGGY]  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),  expectedOpts);	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
22	[BUG]  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token));  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  if  (skipParsing)  {  cmd.addArg(token);  }  else  if  ( "-- ".equals(token))  {  skipParsing  =  true;  }  else  if  (currentOption  !=  null  &&  currentOption.acceptsArg()  &&  isArgument(token))  {  [BUGGY]  currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token));  [BUGGY]  }  else  if  (token.startsWith( "-- "))  {  handleLongOption(token);  }  else  if  (token.startsWith( "- ")  &&  ! "- ".equals(token))  {  handleShortAndLongOption(token);  }  else  [CLASS]  DefaultParser  [METHOD]  handleToken  [RETURN_TYPE]  void  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  token  value  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token));	currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
