projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(!skipParsing){expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArg()){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(!skipParsing){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}else{expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}else{cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(!skipParsing){cmd.addArg(token);}else{expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));CurrentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));currentOption.addValue(Util.stripLeadingAndTrailingQuotes(Token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235expectedOpts.add(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||expectedOpts.contains(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler.handleShortAndLongOption(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isArgument(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsProcessing(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token)+1);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()){cmd.addArg(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||!skipParsing){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235cmd.addArg(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||!skipParsing){cmd.addArg(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235Context.checkState(!skipParsing){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),expectedOpts,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)/2,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(value),skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(value)+1);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArg()&&isArgument(token)){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isArgument(token)){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument(token)){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||!skipParsing){expectedOpts.add(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||!skipParsing){expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(option));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(scope));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235CurrentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler.handleError(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler.handleStripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addArg(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArg()){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}if(skipParsing){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}if(skipParsing){cmd.addArg(token);}else{expectedOpts.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}if(skipParsing){cmd.addArg(token);}elseif(currentOption.acceptsArg()&&isArgument(token)){skipParsing=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}if(skipParsing){cmd.addArg(token);}elseif(currentOption.acceptsArg()&&isArgument(token)){skippeParsing=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}if(skipParsing){cmd.addArg(token);}elseif(currentOption.acceptsArg()&&isArgument(token)){skipParsing=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler.handleMissing(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235Context.reportCodeChange();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token,skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(skipParsing,token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope,skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(token,value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(token)+1;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()&&isArgument(token)){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument(token)){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(option);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235OptioncurrentOption=options.getOption(key);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasArg()){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.canHaveSideEffects()){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(option));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(key));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(stopAtNonOption){expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parsing){expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasArg()){skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}finaljava.lang.AssertionError:expectednull
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}if(select){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}if(selected){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}if(skipParsing){cmd.addArg(token;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(!skipParsing){cmd.addArg(token);}else{cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parsing){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235ced.addArg(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parent.addArg(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token),expectedOpts,value);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeading(value),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235pendingOpts.add(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler.handleUnexpectedArgument(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(value,skipParsing));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeading(value));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setArgumentValue(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(selected){cmd.addArg(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(option));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(scope));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235aughtExceptionHandler.handleMissingArgument(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token));currentlyOption.addValue(Util.stripLeadingAndTrailingQuotes(token));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument(value)){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.hasArg()){skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(token,expectedOpts));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValue(Util.stripLeadingAndTrailingQuotes(value,expectedOpts));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+1,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)+1);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){expectedOpts.add(token);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235kedOpts.add(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()){skippeParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token,expectedOpts));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235currentOption.setValue(Util.stripLeadingAndTrailingQuotes(token),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsProcessing()){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235parentLine.addArg(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgument()){skippeParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}else{thrownewIllegalArgumentException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235[Delete]
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235||currentOption.acceptsArgumentToken()){
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java235if(skipParsing){cmd.addArg(token);}booleanskipParsing=currentOption.stopAtNonOption();
