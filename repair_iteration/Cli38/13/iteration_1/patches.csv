bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(i  =  t.length();  i  >=  0;  i--)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  for(i  =  t.length();  i  >=  0;  i--)  {  [BUGGY]    {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	for(i  =  t.length();  i  >=  0;  i--)  {	  for(i    =    t.length();    i    >    0;    i--)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
2	[BUG]  [BUGGY]  for(i  =  t.length()  -  1;  i  >  0;  i--)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  for(i  =  t.length()  -  1;  i  >  0;  i--)  {  [BUGGY]    {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	for(i  =  t.length()  -  1;  i  >  0;  i--)  {	  for(i    =    t.length();    i    >    0;    i--)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  for(i  =  token.length();  i  >  0;  i--)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  for(i  =  token.length();  i  >  0;  i--)  {  [BUGGY]    {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	for(i  =  token.length();  i  >  0;  i--)  {	  for(i    =    t.length();    i    >    0;    i--)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  for(i  =  t.length()  +  1;  i  >  0;  i--)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  for(i  =  t.length()  +  1;  i  >  0;  i--)  {  [BUGGY]    {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	for(i  =  t.length()  +  1;  i  >  0;  i--)  {	  for(i    =    t.length();    i    >    0;    i--)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  Option  option  =  options.hasOption(opt);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	Option  option  =  options.hasOption(opt);	      if(options.hasOption(opt))    {    opt    =    option;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
6	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(opt);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  Option  opt  =  options.hasOption(opt);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	Option  opt  =  options.hasOption(opt);	      if(options.hasOption(opt))    {    opt    =    option;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
7	[BUG]  [BUGGY]  if(options.hasOption(optName))  {  opt  =  option;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  if(options.hasOption(optName))  {  opt  =  option;  }  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	if(options.hasOption(optName))  {  opt  =  option;  }	      if(options.hasOption(opt))    {    opt    =    option;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  Option  option  =  options.hasLongOption(opt);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  Option  option  =  options.hasLongOption(opt);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	Option  option  =  options.hasLongOption(opt);	      if(options.hasLongOption(opt))    {    opt    =    option;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
9	[BUG]  [BUGGY]  if(options.hasLongOption(token))  {  opt  =  option;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  if(options.hasLongOption(token))  {  opt  =  option;  }  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	if(options.hasLongOption(token))  {  opt  =  option;  }	      if(options.hasLongOption(opt))    {    opt    =    option;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
10	[BUG]  [BUGGY]  if(options.hasLongOption(t))  {  opt  =  option;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  if(options.hasLongOption(t))  {  opt  =  option;  }  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	if(options.hasLongOption(t))  {  opt  =  option;  }	      if(options.hasLongOption(opt))    {    opt    =    option;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  Option  option  =  options.getOption(opt);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	Option  option  =  options.getOption(opt);	      if(options.hasOption(opt))    {    opt    =    option;    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
12	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  Option  currentOption  =  options.getOption(token);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	Option  currentOption  =  options.getOption(token);	      if(options.hasOption(opt))    {    opt    =    option;    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
13	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  Option  cmd  =  options.getOption(t);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	Option  cmd  =  options.getOption(t);	      Option    cmd    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
14	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  Option  cmd  =  options.getOption(opt);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	Option  cmd  =  options.getOption(opt);	      Option    cmd    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  Option  cmd  =  options.getOption(token  +  1);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	Option  cmd  =  options.getOption(token  +  1);	      Option    cmd    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  opt  =  option.substring(0,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  if(options.hasOption(opt))  {  opt  =  option.substring(0,  i  +  1);  }  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	if(options.hasOption(opt))  {  opt  =  option.substring(0,  i  +  1);  }	      if(options.hasOption(opt))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
17	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt)?  option.substring(0,  i):  token;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  Option  option  =  options.hasOption(opt)?  option.substring(0,  i):  token;  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	Option  option  =  options.hasOption(opt)?  option.substring(0,  i):  token;	      if(options.hasOption(opt))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
18	[BUG]  [BUGGY]  for(i  =  t.length()  -  1;  i  >  1)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  for(i  =  t.length()  -  1;  i  >  1)  {  [BUGGY]    {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	for(i  =  t.length()  -  1;  i  >  1)  {	  for    (i    =    t.length();    i    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  for(i  =  token.length();  i  >  1)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  for(i  =  token.length();  i  >  1)  {  [BUGGY]    {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	for(i  =  token.length();  i  >  1)  {	  for    (i    =    t.length();    i    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  for(i  =  t.length()  -  1);  i  >  1)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  for(i  =  t.length()  -  1);  i  >  1)  {  [BUGGY]    {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	for(i  =  t.length()  -  1);  i  >  1)  {	  for    (i    =    t.length();    i    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
21	[BUG]  [BUGGY]  for(i  =  t.length();  i  >=  1)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  for(i  =  t.length();  i  >=  1)  {  [BUGGY]    {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	for(i  =  t.length();  i  >=  1)  {	  for    (i    =    t.length();    i    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
22	[BUG]  [BUGGY]  if(options.hasLongOption(opt))  {  opt  =  option.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  if(options.hasLongOption(opt))  {  opt  =  option.substring(0,  i);  }  [BUGGY]    {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	if(options.hasLongOption(opt))  {  opt  =  option.substring(0,  i);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
23	[BUG]  [BUGGY]  Option  option  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  Option  option  =  options.getOption(t);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	Option  option  =  options.getOption(t);	      Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)+  1;  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  Option  option  =  options.getOption(token)+  1;  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	Option  option  =  options.getOption(token)+  1;	      Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(optName);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  String  value  =  Util.stripLeadingHyphens(optName);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	String  value  =  Util.stripLeadingHyphens(optName);	      String    value    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
26	[BUG]  [BUGGY]  String  value  =  Util.stripValue(token);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  String  value  =  Util.stripValue(token);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	String  value  =  Util.stripValue(token);	      String    value    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
27	[BUG]  [BUGGY]  t  =  Util.stripLeadingHyphens(opt);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  t  =  Util.stripLeadingHyphens(opt);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	t  =  Util.stripLeadingHyphens(opt);	      t    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
28	[BUG]  [BUGGY]  t  =  Util.stripLeadingHyphens(token,  opt);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  t  =  Util.stripLeadingHyphens(token,  opt);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	t  =  Util.stripLeadingHyphens(token,  opt);	      t    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
29	[BUG]  [BUGGY]  t  =  Util.stripLeadingHyphens(opt,  token);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  t  =  Util.stripLeadingHyphens(opt,  token);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	t  =  Util.stripLeadingHyphens(opt,  token);	      t    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
30	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(option);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  String  value  =  Util.stripLeadingHyphens(option);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	String  value  =  Util.stripLeadingHyphens(option);	      String    value    =    Util.stripLeadingHyphens(opt);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
31	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(opt,  token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  String  value  =  Util.stripLeadingHyphens(opt,  token);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	String  value  =  Util.stripLeadingHyphens(opt,  token);	      String    value    =    Util.stripLeadingHyphens(opt);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
32	[BUG]  [BUGGY]  for(i  =  t.length();  i  >=  1;  i--)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  for(i  =  t.length();  i  >=  1;  i--)  {  [BUGGY]    {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	for(i  =  t.length();  i  >=  1;  i--)  {	  for    (i    =    t.length();    i    >    1;    i--)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
33	[BUG]  [BUGGY]  for(i  =  t.length()  -  1;  i  >  1;  i--)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  for(i  =  t.length()  -  1;  i  >  1;  i--)  {  [BUGGY]    {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	for(i  =  t.length()  -  1;  i  >  1;  i--)  {	  for    (i    =    t.length();    i    >    1;    i--)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  for(i  =  token.length();  i  >  1;  i--)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  for(i  =  token.length();  i  >  1;  i--)  {  [BUGGY]    {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	for(i  =  token.length();  i  >  1;  i--)  {	  for    (i    =    t.length();    i    >    1;    i--)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
35	[BUG]  [BUGGY]  for(i  =  t.length();  i  <  1;  i--)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  for(i  =  t.length();  i  <  1;  i--)  {  [BUGGY]    {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	for(i  =  t.length();  i  <  1;  i--)  {	  for    (i    =    t.length();    i    >    1;    i--)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
36	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(opt);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  Option  currentOption  =  options.getOption(opt);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	Option  currentOption  =  options.getOption(opt);	      if(options.hasOption(opt))    {    opt    =    option;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  Option  cmd  =  options.getOption(option);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	Option  cmd  =  options.getOption(option);	      Option    cmd    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
38	[BUG]  [BUGGY]  t  =  Util.stripLeadingHyphens(option);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  t  =  Util.stripLeadingHyphens(option);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	t  =  Util.stripLeadingHyphens(option);	      t    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
39	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	Option  option  =  options.getOption(option);	      Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
40	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(token,  opt);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  String  value  =  Util.stripLeadingHyphens(token,  opt);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	String  value  =  Util.stripLeadingHyphens(token,  opt);	      String    value    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
41	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(t);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  String  value  =  Util.stripLeadingHyphens(t);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	String  value  =  Util.stripLeadingHyphens(t);	      String    value    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
42	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  opt  =  t.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  if(options.hasOption(opt))  {  opt  =  t.substring(0,  i);  }  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	if(options.hasOption(opt))  {  opt  =  t.substring(0,  i);  }	      if(options.hasOption(opt))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
43	[BUG]  [BUGGY]  if(options.hasOption(optName))  {  opt  =  option.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  if(options.hasOption(optName))  {  opt  =  option.substring(0,  i);  }  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	if(options.hasOption(optName))  {  opt  =  option.substring(0,  i);  }	      if(options.hasOption(opt))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
44	[BUG]  [BUGGY]  if(options.hasLongOption(optName))  {  opt  =  option;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  if(options.hasLongOption(optName))  {  opt  =  option;  }  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	if(options.hasLongOption(optName))  {  opt  =  option;  }	      if(options.hasLongOption(opt))    {    opt    =    option;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
45	[BUG]  [BUGGY]  char  value  =  Util.stripLeadingHyphens(token);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  char  value  =  Util.stripLeadingHyphens(token);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	char  value  =  Util.stripLeadingHyphens(token);	      String    value    =    Util.stripLeadingHyphens(opt);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
46	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(currentToken);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  String  value  =  Util.stripLeadingHyphens(currentToken);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	String  value  =  Util.stripLeadingHyphens(currentToken);	      String    value    =    Util.stripLeadingHyphens(opt);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  if(options.hasOption(optName))  {  opt  =  option;  continue;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  if(options.hasOption(optName))  {  opt  =  option;  continue;  }  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	if(options.hasOption(optName))  {  opt  =  option;  continue;  }	      if(options.hasOption(opt))    {    opt    =    option;    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
48	[BUG]  [BUGGY]  for(i  =  token.length();  i  >  0)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  for(i  =  token.length();  i  >  0)  {  [BUGGY]    {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	for(i  =  token.length();  i  >  0)  {	  for    (i    =    t.length();    i    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
49	[BUG]  [BUGGY]  for(i  =  t.length()  -  1);  i  >  0)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  for(i  =  t.length()  -  1);  i  >  0)  {  [BUGGY]    {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	for(i  =  t.length()  -  1);  i  >  0)  {	  for    (i    =    t.length();    i    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
50	[BUG]  [BUGGY]  if(options.hasOption(optName))  {  opt  =  option;  break;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  if(options.hasOption(optName))  {  opt  =  option;  break;  }  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	if(options.hasOption(optName))  {  opt  =  option;  break;  }	      if(options.hasOption(opt))    {    opt    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
51	[BUG]  [BUGGY]  if(options.hasOption(t))  {  opt  =  option;  break;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  if(options.hasOption(t))  {  opt  =  option;  break;  }  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	if(options.hasOption(t))  {  opt  =  option;  break;  }	      if(options.hasOption(opt))    {    opt    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
52	[BUG]  [BUGGY]  if(options.hasOption(t))  {  opt  =  option.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  if(options.hasOption(t))  {  opt  =  option.substring(0,  i);  }  [BUGGY]    {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	if(options.hasOption(t))  {  opt  =  option.substring(0,  i);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
53	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  opt  =  option.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  if(options.hasOption(opt))  {  opt  =  option.substring(i  +  1);  }  [BUGGY]    {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	if(options.hasOption(opt))  {  opt  =  option.substring(i  +  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
54	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  opt  =  option.substring(i);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;    [BUGGY]  if(options.hasOption(opt))  {  opt  =  option.substring(i);  }  [BUGGY]    {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	581	582	1	replace	if(options.hasOption(opt))  {  opt  =  option.substring(i);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
