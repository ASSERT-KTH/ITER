bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  skipParsing  =  true;  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]  skipParsing  =  true;  [BUGGY]  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipParsing  =  true;	skipParsing  =  false;  	non-compiled	[CE]  illegal  start  of  type	38	None	replace
2	[BUG]  [BUGGY]  skippeParsing  =  true;  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]  skippeParsing  =  true;  [BUGGY]  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skippeParsing  =  true;	skipParsing  =  false;  	non-compiled	[CE]  illegal  start  of  type	38	None	replace
3	[BUG]  [BUGGY]  skipped  =  true;  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]  skipped  =  true;  [BUGGY]  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipped  =  true;	skipParsing  =  false;  	non-compiled	[CE]  illegal  start  of  type	38	None	replace
4	[BUG]  [BUGGY]  skipParsing  =  null;  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]  skipParsing  =  null;  [BUGGY]  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipParsing  =  null;	skipParsing  =  false;  	non-compiled	[CE]  illegal  start  of  type	38	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    [BUGGY]  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	  	skipParsing  =  false;  	non-compiled	[CE]  illegal  start  of  type	38	None	replace
6	[BUG]  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;		non-compiled	[CE]  illegal  start  of  type	39	None	add
7	[BUG]  [BUGGY]    if(options.getRequiredOptions()  ==  null)  {  for(Option  group  :  options.getGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    if(options.getRequiredOptions()  ==  null)  {  for(Option  group  :  options.getGroups())  {  cmd.setSelected(null);  }  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	    if(options.getRequiredOptions()  ==  null)  {  for(Option  group  :  options.getGroups())  {  cmd.setSelected(null);  }		non-compiled	[CE]  illegal  start  of  type	39	None	add
8	[BUG]  [BUGGY]    if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getGroups())  {  cmd.setSelected(null);  }  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	    if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getGroups())  {  cmd.setSelected(null);  }		non-compiled	[CE]  illegal  start  of  type	39	None	add
9	[BUG]  [BUGGY]    if(options.getRequiredOptions()  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    if(options.getRequiredOptions()  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	    if(options.getRequiredOptions()  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }		non-compiled	[CE]  illegal  start  of  type	39	None	add
10	[BUG]  [BUGGY]    Option  currentOption  =  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    Option  currentOption  =  options.getRequiredOptions();  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	    Option  currentOption  =  options.getRequiredOptions();		non-compiled	[CE]  illegal  start  of  type	39	None	add
11	[BUG]  [BUGGY]    if(options.getRequiredOptions()  ==  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    if(options.getRequiredOptions()  ==  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	    if(options.getRequiredOptions()  ==  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }		non-compiled	[CE]  illegal  start  of  type	39	None	add
12	[BUG]  [BUGGY]    if(options.getRequiredOptions()  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    if(options.getRequiredOptions()  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	    if(options.getRequiredOptions()  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }		non-compiled	[CE]  illegal  start  of  type	39	None	add
13	[BUG]  [BUGGY]    if(options.getRequiredOptions()  ==  null)  {  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    if(options.getRequiredOptions()  ==  null)  {  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	    if(options.getRequiredOptions()  ==  null)  {  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }		non-compiled	[CE]  illegal  start  of  type	39	None	add
14	[BUG]  [BUGGY]    if(!skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    if(!skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	    if(!skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }		non-compiled	[CE]  illegal  start  of  type	39	None	add
15	[BUG]  [BUGGY]    if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	    if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }		non-compiled	[CE]  illegal  start  of  type	39	None	add
16	[BUG]  [BUGGY]    if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	    if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }		non-compiled	[CE]  illegal  start  of  type	39	None	add
17	[BUG]  [BUGGY]    if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	    if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }		non-compiled	[CE]  illegal  start  of  type	39	None	add
18	[BUG]  [BUGGY]  skippingParsing  =  true;  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]  skippingParsing  =  true;  [BUGGY]  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skippingParsing  =  true;	skipParsing  =  false;  	non-compiled	[CE]  illegal  start  of  type	38	None	replace
