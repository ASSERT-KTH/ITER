bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  java.lang.AssertionError:  expected  null  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  java.lang.AssertionError:  expected  null  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	java.lang.AssertionError:  expected  null	  if(currentOption!=    null)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
2	[BUG]  [BUGGY]  java.lang.AssertionError:  expected  =  null;  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  java.lang.AssertionError:  expected  =  null;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	java.lang.AssertionError:  expected  =  null;	  if(currentOption!=    null)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
3	[BUG]  [BUGGY]  skiingppingParsing  =  true;  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skiingppingParsing  =  true;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skiingppingParsing  =  true;	  skiingppingParsing    =    false;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
4	[BUG]  [BUGGY]  skiingppingParsing  =  null;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skiingppingParsing  =  null;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skiingppingParsing  =  null;	  skiingppingParsing    =    false;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
5	[BUG]  [BUGGY]  ||!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  ||!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	||!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(!stopAtNonOption)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
6	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  expectedOpts.addAll(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(!stopAtNonOption)  {  expectedOpts.addAll(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(!stopAtNonOption)  {  expectedOpts.addAll(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(!stopAtNonOption)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
7	[BUG]  [BUGGY]  ||  skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  ||  skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	||  skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }	  if(skipParsing)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
8	[BUG]  [BUGGY]  &&!skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  &&!skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	&&!skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }	  ||!skipParsing)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
9	[BUG]  [BUGGY]  ||!skipParsing)  {  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  ||!skipParsing)  {  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	||!skipParsing)  {  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  }	  ||!skipParsing)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
10	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption(argument);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.getRequiredOption(argument);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentToken  =  options.getRequiredOption(argument);	  Option    currentToken    =    options.getRequiredOption();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
11	[BUG]  [BUGGY]  Option  currentToken  =  options.getSelectedOption();  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.getSelectedOption();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentToken  =  options.getSelectedOption();	  Option    currentToken    =    options.getRequiredOption();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
12	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption();  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.getOption();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentToken  =  options.getOption();	  Option    currentToken    =    options.getRequiredOption();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
13	[BUG]  [BUGGY]  expectedOpts  =  new  ArrayList(options.getOptions());  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  expectedOpts  =  new  ArrayList(options.getOptions());  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	expectedOpts  =  new  ArrayList(options.getOptions());	  expectedOpts    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
14	[BUG]  [BUGGY]  parsingParsing  =  true;  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  parsingParsing  =  true;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	parsingParsing  =  true;	  skippingParsing    =    false;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
15	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(!skipParsing)    {    expectedOpts.addAll(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
16	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(	  if(!skipParsing)    {    expectedOpts.addAll(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
17	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null	  if(!skipParsing)    {    expectedOpts.addAll(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
18	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  null;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  null;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(stopAtNonOption)  {  skipParsing  =  null;  }	  skipParsing    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
19	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skipParsing  =   "   ";  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(stopAtNonOption)  {  skipParsing  =   "   ";  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(stopAtNonOption)  {  skipParsing  =   "   ";  }	  skipParsing    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
20	[BUG]  [BUGGY]  ||!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  ||!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	||!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(!stopAtNonOption)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
21	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(!stopAtNonOption)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(!stopAtNonOption)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(!stopAtNonOption)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
22	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(currentToken);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(currentToken);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(currentToken);	  Option    currentOption    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
23	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts);	  Option    currentOption    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
24	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  skipParsing);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  skipParsing);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  skipParsing);	  Option    currentOption    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
25	[BUG]  [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(new  String[]  {  }  );  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(new  String[]  {  }  );  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOptions()  ==  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(new  String[]  {  }  );  }	  if(options.getRequiredOptions()!=    null)    {    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(new    String[]    {    }    );    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
26	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(new  String[]  {  },  currentToken);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(new  String[]  {  },  currentToken);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(new  String[]  {  },  currentToken);  }	  if(options.getRequiredOptions()!=    null)    {    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(new    String[]    {    }    );    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
27	[BUG]  [BUGGY]  java.lang.AssertionError:  expected  null  {  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  java.lang.AssertionError:  expected  null  {  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	java.lang.AssertionError:  expected  null  {	  if(currentOption!=    null)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
28	[BUG]  [BUGGY]  Option  currentOption  =  options.getParser(),  this.skipParsing);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getParser(),  this.skipParsing);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getParser(),  this.skipParsing);	  Option    currentOption    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
29	[BUG]  [BUGGY]  Option  currentOption  =  options.getParser(),  this.skipParsing;  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getParser(),  this.skipParsing;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getParser(),  this.skipParsing;	  Option    currentOption    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
30	[BUG]  [BUGGY]  Option  currentOption  =  options.getNext();  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getNext();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getNext();	  Option    currentOption    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
31	[BUG]  [BUGGY]  skippingParsing  =  skipParsing;  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skippingParsing  =  skipParsing;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skippingParsing  =  skipParsing;	  skippingParsing    =    null;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
32	[BUG]  [BUGGY]  skippingParsing  =  skipParsing?  null  :  skipParsing;  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skippingParsing  =  skipParsing?  null  :  skipParsing;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skippingParsing  =  skipParsing?  null  :  skipParsing;	  skippingParsing    =    null;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
33	[BUG]  [BUGGY]  skippingParsing  =  this;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skippingParsing  =  this;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skippingParsing  =  this;	  skippingParsing    =    null;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
34	[BUG]  [BUGGY]  if(skipParsing)  {  skipped  =  false;  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(skipParsing)  {  skipped  =  false;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(skipParsing)  {  skipped  =  false;  }	  skipped    =    false;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
35	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skipped  =  false;  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(stopAtNonOption)  {  skipped  =  false;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(stopAtNonOption)  {  skipped  =  false;  }	  skipped    =    false;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
36	[BUG]  [BUGGY]  if(stopAtNonOption!=  null)  {  skipped  =  false;  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(stopAtNonOption!=  null)  {  skipped  =  false;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(stopAtNonOption!=  null)  {  skipped  =  false;  }	  skipped    =    false;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
37	[BUG]  [BUGGY]  skipped  =  new  CommandLine();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skipped  =  new  CommandLine();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipped  =  new  CommandLine();	  skipped    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
38	[BUG]  [BUGGY]  skipped  =  'n';  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skipped  =  'n';  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipped  =  'n';	  skipped    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
39	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener	  if(!skipParsing)    {    expectedOpts.addAll(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
40	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen	  if(!skipParsing)    {    expectedOpts.addAll(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
41	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen	  if(!skipParsing)    {    expectedOpts.addAll(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
42	[BUG]  [BUGGY]  parsing  =  true;  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  parsing  =  true;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	parsing  =  true;	  skippeParsing    =    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
43	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(Option  currentOption  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(Option  currentOption  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOptions()!=  null)  {  for(Option  currentOption  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(options.getRequiredOptions()!=    null)    {    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
44	[BUG]  [BUGGY]  Option  currentOption  =  options.getSelectedOption();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getSelectedOption();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getSelectedOption();	  Option    currentOption    =    options.getRequiredOption();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
45	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(currentOption!=  null)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentOption!=  null)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen	  if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
46	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(currentOption!=  null)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentOption!=  null)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener	  if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
47	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addCh  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(currentOption!=  null)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addCh  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentOption!=  null)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addCh	  if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
48	[BUG]  [BUGGY]  skipParsing  =  stopAtNonOption  +  1;  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skipParsing  =  stopAtNonOption  +  1;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipParsing  =  stopAtNonOption  +  1;	  skipParsing    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
49	[BUG]  [BUGGY]  ||  options.getRequiredOptions()!=  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  ||  options.getRequiredOptions()!=  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	||  options.getRequiredOptions()!=  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }	  if(options!=    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
50	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(	  if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
51	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(currentOption!=  null)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentOption!=  null)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
52	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(currentOption!=  null)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentOption!=  null)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(	  if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
53	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
54	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(!skipParsing)    {    expectedOpts.add(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
55	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.set  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.set  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.set	  if(!skipParsing)    {    expectedOpts.add(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
56	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.	  if(!skipParsing)    {    expectedOpts.add(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
57	[BUG]  [BUGGY]  if(!skipParsing)  {  AssertionError:  expected  null;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(!skipParsing)  {  AssertionError:  expected  null;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(!skipParsing)  {  AssertionError:  expected  null;  }	  java.lang.AssertionError:    expected    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
58	[BUG]  [BUGGY]  if(stopAtNonOption)  {  AssertionError:  expected  null;  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(stopAtNonOption)  {  AssertionError:  expected  null;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(stopAtNonOption)  {  AssertionError:  expected  null;  }	  java.lang.AssertionError:    expected    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
59	[BUG]  [BUGGY]  java.lang.AssertionError:  expected;  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  java.lang.AssertionError:  expected;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	java.lang.AssertionError:  expected;	  java.lang.AssertionError:    expected    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
60	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener	  if(!skipParsing)    {    expectedOpts.add(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
61	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen	  if(!skipParsing)    {    expectedOpts.add(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
62	[BUG]  [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOptions()  ==  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen	  if(!skipParsing)    {    expectedOpts.add(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
63	[BUG]  [BUGGY]  skippeParsing  =  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skippeParsing  =  stopAtNonOption;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skippeParsing  =  stopAtNonOption;	  skippeParsing    =    null;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
64	[BUG]  [BUGGY]  skippeParsing  =  skipParsing;  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skippeParsing  =  skipParsing;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skippeParsing  =  skipParsing;	  skippeParsing    =    null;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
65	[BUG]  [BUGGY]  skippeParsing  =  this;  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skippeParsing  =  this;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skippeParsing  =  this;	  skippeParsing    =    null;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
66	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(arguments);	  Option    currentOption    =    options.getRequiredOption(options);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
67	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(this.options);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(this.options);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(this.options);	  Option    currentOption    =    options.getRequiredOption(options);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
68	[BUG]  [BUGGY]  skipParsing  =  this.stopAtNonOption  &&  this.options.getRequiredOptions().length  >  0;  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skipParsing  =  this.stopAtNonOption  &&  this.options.getRequiredOptions().length  >  0;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipParsing  =  this.stopAtNonOption  &&  this.options.getRequiredOptions().length  >  0;	  skipParsing    =    this.stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
69	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(!skipParsing)    {    expectedOpts.add(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
70	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.set  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.set  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.set	  if(!skipParsing)    {    expectedOpts.add(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
71	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setS  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setS  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setS	  if(!skipParsing)    {    expectedOpts.add(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
72	[BUG]  [BUGGY]  java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.add  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.add  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.add	  if(options.getRequiredOptions()!=    null)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.add    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
73	[BUG]  [BUGGY]  java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());	  if(options.getRequiredOptions()!=    null)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.add    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
74	[BUG]  [BUGGY]  java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.	  if(options.getRequiredOptions()!=    null)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.add    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
75	[BUG]  [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  expectOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  expectOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOptions()  ==  null)  {  expectOpts  =  new  ArrayList(options.getRequiredOptions());  }	  if(options.getOptionGroups()    ==    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
76	[BUG]  [BUGGY]  this.options  =  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  this.options  =  options.getRequiredOptions();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	this.options  =  options.getRequiredOptions();	  if(options.getOptionGroups()    ==    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
77	[BUG]  [BUGGY]  ||  options.getRequiredOptions())  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  ||  options.getRequiredOptions())  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	||  options.getRequiredOptions())  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }	  if(options.getRequiredOptions())    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
78	[BUG]  [BUGGY]  skippeParsing  :  true;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skippeParsing  :  true;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skippeParsing  :  true;	  skippeParsing    :    false;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
79	[BUG]  [BUGGY]  skipParsing  :  true;  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skipParsing  :  true;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipParsing  :  true;	  skippeParsing    :    false;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
80	[BUG]  [BUGGY]  skippeParsing  :  null;  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skippeParsing  :  null;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skippeParsing  :  null;	  skippeParsing    :    false;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
81	[BUG]  [BUGGY]  parse  :  false;  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  parse  :  false;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	parse  :  false;	  skippeParsing    :    false;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
82	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOptions()!=  null)  {  Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	  Option    currentOption    =    options.getRequiredOptions();    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
83	[BUG]  [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOptions()  ==  null)  {  Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	  Option    currentOption    =    options.getRequiredOptions();    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
84	[BUG]  [BUGGY]  java.lang.Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  java.lang.Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	java.lang.Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());	  Option    currentOption    =    options.getRequiredOptions();    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
85	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroups();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getGroups();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	OptionGroup  group  =  options.getGroups();	  OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
86	[BUG]  [BUGGY]  OptionGroup  group  =  options.getSelectedOptionGroups();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getSelectedOptionGroups();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	OptionGroup  group  =  options.getSelectedOptionGroups();	  OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
87	[BUG]  [BUGGY]  OptionGroup  group  =  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getRequiredOptions();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	OptionGroup  group  =  options.getRequiredOptions();	  OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
88	[BUG]  [BUGGY]  options  =  null;  this.stopAtNonOption  =  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  options  =  null;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	options  =  null;  this.stopAtNonOption  =  stopAtNonOption;	  options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
89	[BUG]  [BUGGY]  if(options!=  null)  {  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options!=  null)  {  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options!=  null)  {  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }	  options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
90	[BUG]  [BUGGY]  if(options.getRequiredOption()!=  null)  {  Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options.getRequiredOption()!=  null)  {  Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOption()!=  null)  {  Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	  Option    currentOption    =    options.getRequiredOption();    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
91	[BUG]  [BUGGY]  java.lang.Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  java.lang.Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	java.lang.Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());	  Option    currentOption    =    options.getRequiredOption();    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
92	[BUG]  [BUGGY]  if(options.getRequiredOption()!=  null)  {  Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  else  {  expectedOpts  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options.getRequiredOption()!=  null)  {  Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  else  {  expectedOpts  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOption()!=  null)  {  Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  else  {  expectedOpts	  Option    currentOption    =    options.getRequiredOption();    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
93	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getAllOptions());  [CE]  illegal  start  of  type  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getAllOptions());  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getAllOptions());	  Option    currentOption    =    options.getRequiredOption();    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
94	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	  if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
95	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  }	  if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
96	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  this;  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  this;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(stopAtNonOption)  {  skipParsing  =  this;  }	  skipParsing    =    this;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
97	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(!stopAtNonOption)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(!stopAtNonOption)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }	  if(!stopAtNonOption)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
98	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }	  if(!stopAtNonOption)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
99	[BUG]  [BUGGY]  &&  options.getRequiredOptions()  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  &&  options.getRequiredOptions()  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	&&  options.getRequiredOptions()  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }	  ||    options.getRequiredOptions()    ==    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
100	[BUG]  [BUGGY]  ||  options.getOptions()  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  ||  options.getOptions()  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	||  options.getOptions()  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }	  ||    options.getRequiredOptions()    ==    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
101	[BUG]  [BUGGY]  java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(	  if(stopAtNonOption)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
102	[BUG]  [BUGGY]  java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected	  if(stopAtNonOption)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
103	[BUG]  [BUGGY]  java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.	  if(stopAtNonOption)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
104	[BUG]  [BUGGY]  java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.set  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.set  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.set	  if(stopAtNonOption)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
105	[BUG]  [BUGGY]  this.skipParsing  :  true;  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  this.skipParsing  :  true;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	this.skipParsing  :  true;	  skipParsing    :    false;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
106	[BUG]  [BUGGY]  this.skipParsing  :  false;  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  this.skipParsing  :  false;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	this.skipParsing  :  false;	  skipParsing    :    false;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
107	[BUG]  [BUGGY]  skipParsing  :  null;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skipParsing  :  null;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipParsing  :  null;	  skipParsing    :    false;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
108	[BUG]  [BUGGY]  skipped  =  cmd;  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skipped  =  cmd;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipped  =  cmd;	  skipped    =    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
109	[BUG]  [BUGGY]  skipped  =  this;  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skipped  =  this;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipped  =  this;	  skipped    =    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
110	[BUG]  [BUGGY]  Option  currentOption  =  options.getRawParsing(),  this.skipParsing;  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRawParsing(),  this.skipParsing;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRawParsing(),  this.skipParsing;	  Option    currentOption    =    options.getRawParsing();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
111	[BUG]  [BUGGY]  Option  currentOption  =  options.getRawParsing(),  this.skipParsing);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRawParsing(),  this.skipParsing);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRawParsing(),  this.skipParsing);	  Option    currentOption    =    options.getRawParsing();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
112	[BUG]  [BUGGY]  Option  currentOption  =  options.getParsing();  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getParsing();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getParsing();	  Option    currentOption    =    options.getRawParsing();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
113	[BUG]  [BUGGY]  java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(	  if(currentOption!=    null)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
114	[BUG]  [BUGGY]  java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	java.lang.AssertionError:  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected	  if(currentOption!=    null)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
115	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(!stopAtNonOption)  {  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(!stopAtNonOption)  {  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  }	  this.options    =    properties;    this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
116	[BUG]  [BUGGY]  if(options!=  null)  {  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options!=  null)  {  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options!=  null)  {  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  }	  this.options    =    properties;    this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
117	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(	  if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
118	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
119	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(n  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(n  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(n	  if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
120	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(stopAtNonOption)  {  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null	  if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
121	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken,  expectedOpts);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(argumentToken,  expectedOpts);	  Option    currentOption    =    options.getRequiredOption(argumentToken);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
122	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentOpts);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentOpts);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(argumentOpts);	  Option    currentOption    =    options.getRequiredOption(argumentToken);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
123	[BUG]  [BUGGY]  ||  options.getOptionGroups()  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  ||  options.getOptionGroups()  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	||  options.getOptionGroups()  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }	  if(options.getOptionGroups()    ==    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
124	[BUG]  [BUGGY]  java.lang.AssertionError:  currentOption!=  null;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  java.lang.AssertionError:  currentOption!=  null;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	java.lang.AssertionError:  currentOption!=  null;	  if(currentOption!=    null)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
125	[BUG]  [BUGGY]  if(options!=  null)  {  this.options  =  new  Options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options!=  null)  {  this.options  =  new  Options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options!=  null)  {  this.options  =  new  Options;  this.stopAtNonOption  =  stopAtNonOption;  }	  if(options    ==    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
126	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getOptionGroups());  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getOptionGroups());  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getOptionGroups());	  Option    currentOption    =    options.getRequiredOption();    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
127	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getParentOptions());  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getParentOptions());  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getParentOptions());	  Option    currentOption    =    options.getRequiredOption();    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
128	[BUG]  [BUGGY]  Option  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;	  options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
129	[BUG]  [BUGGY]  if(options!=  null)  {  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  else  {  expectedOpts  =  new  ArrayList();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options!=  null)  {  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  else  {  expectedOpts  =  new  ArrayList();  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options!=  null)  {  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  else  {  expectedOpts  =  new  ArrayList();  }	  options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
130	[BUG]  [BUGGY]  skipped  :  true;  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skipped  :  true;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipped  :  true;	  skipParsing    :    false;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
131	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(	  if(!stopAtNonOption)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
132	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(!stopAtNonOption)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(!stopAtNonOption)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }	  if(!skipParsing)    {    expectedOpts.add(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
133	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen	  if(!skipParsing)    {    expectedOpts.add(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
134	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  null);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  null);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  null);	  Option    currentOption    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
135	[BUG]  [BUGGY]  ExpectedOpts  expectedOpts  =  new  ExpectedOpts(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  ExpectedOpts  expectedOpts  =  new  ExpectedOpts(options.getRequiredOptions());  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	ExpectedOpts  expectedOpts  =  new  ExpectedOpts(options.getRequiredOptions());	  expectedOpts    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
136	[BUG]  [BUGGY]  expectedOpts  =  new  ArrayList(options.getOptionGroups());  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  expectedOpts  =  new  ArrayList(options.getOptionGroups());  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	expectedOpts  =  new  ArrayList(options.getOptionGroups());	  expectedOpts    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
137	[BUG]  [BUGGY]  Option  currentOption  =  options.getSingleParsing();  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getSingleParsing();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getSingleParsing();	  Option    currentOption    =    options.getRawParsing();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
138	[BUG]  [BUGGY]  Option  currentOption  =  options.getPreparedOption();  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getPreparedOption();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getPreparedOption();	  Option    currentOption    =    options.getRawParsing();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
139	[BUG]  [BUGGY]  if(exceptions!=  null)  {  AssertionError:  expected  null;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(exceptions!=  null)  {  AssertionError:  expected  null;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(exceptions!=  null)  {  AssertionError:  expected  null;  }	  java.lang.AssertionError:    expected    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
140	[BUG]  [BUGGY]  Option  currentOption  =  options.getPreviousParser();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getPreviousParser();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getPreviousParser();	  Option    currentOption    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
141	[BUG]  [BUGGY]  Option  currentOption  =  options.getPrefix();  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getPrefix();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getPrefix();	  Option    currentOption    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
142	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getPrequiredOptions());  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getPrequiredOptions());  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getPrequiredOptions());	  Option    currentOption    =    options.getRequiredOptions();    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
143	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getAllOptions());  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getAllOptions());  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getAllOptions());	  Option    currentOption    =    options.getRequiredOptions();    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
144	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken,  null);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken,  null);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(argumentToken,  null);	  Option    currentOption    =    options.getRequiredOption(argumentToken);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
145	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(!stopAtNonOption)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(!stopAtNonOption)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(!skipParsing)    {    expectedOpts.add(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
146	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(	  if(!skipParsing)    {    expectedOpts.add(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
147	[BUG]  [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
148	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(argument);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.getOption(argument);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentToken  =  options.getOption(argument);	  Option    currentToken    =    options.getRequiredOption();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
149	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(!stopAtNonOption)  {  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(!stopAtNonOption)  {  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(!skipParsing)    {    expectedOpts.add(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
150	[BUG]  [BUGGY]  if(options  ==  null)  {  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options  ==  null)  {  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options  ==  null)  {  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  }	  this.options    =    properties;    this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
151	[BUG]  [BUGGY]  skippingParsing  =  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skippingParsing  =  stopAtNonOption;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skippingParsing  =  stopAtNonOption;	  skippingParsing    =    null;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
152	[BUG]  [BUGGY]  skipParsing  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  0;  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skipParsing  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  0;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipParsing  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  0;	  skipParsing    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
153	[BUG]  [BUGGY]  if(currentToken!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(currentToken!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentToken!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(currentOption!=    null)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
154	[BUG]  [BUGGY]  if(currentToken!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(currentToken!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentToken!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(	  if(currentOption!=    null)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
155	[BUG]  [BUGGY]  if(currentToken!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(n  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(currentToken!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(n  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentToken!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(n	  if(currentOption!=    null)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
156	[BUG]  [BUGGY]  ||!this.skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  ||!this.skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	||!this.skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }	  ||!skipParsing)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
157	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options.getRequiredOptions());  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	OptionGroup  group  =  options.getOptionGroup(options.getRequiredOptions());	  OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
158	[BUG]  [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
159	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(options,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(options,  expectedOpts);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(options,  expectedOpts);	  Option    currentOption    =    options.getRequiredOption(options);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
160	[BUG]  [BUGGY]  if(currentToken!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(currentToken!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentToken!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(	  if(stopAtNonOption)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
161	[BUG]  [BUGGY]  if(currentToken!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setS  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(currentToken!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setS  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentToken!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setS	  if(stopAtNonOption)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
162	[BUG]  [BUGGY]  if(currentToken!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.set  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(currentToken!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.set  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentToken!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.set	  if(stopAtNonOption)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
163	[BUG]  [BUGGY]  if(currentToken!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(currentToken!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentToken!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected	  if(stopAtNonOption)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
164	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  0);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  0);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  0);	  Option    currentOption    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
165	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	this.stopAtNonOption  =  stopAtNonOption;	  options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
166	[BUG]  [BUGGY]  Option  options  =  options.getOptions();  this.stopAtNonOption  =  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  options  =  options.getOptions();  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  options  =  options.getOptions();  this.stopAtNonOption  =  stopAtNonOption;	  options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
167	[BUG]  [BUGGY]  if(skipParsing)  {  this.options  =  new  OptionGroup();  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(skipParsing)  {  this.options  =  new  OptionGroup();  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(skipParsing)  {  this.options  =  new  OptionGroup();  this.stopAtNonOption  =  stopAtNonOption;  }	  if(skipParsing)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
168	[BUG]  [BUGGY]  if(skipParsing)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(skipParsing)  {  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(skipParsing)  {	  if(currentOption!=    null)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
169	[BUG]  [BUGGY]  if(skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
170	[BUG]  [BUGGY]  if(skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
171	[BUG]  [BUGGY]  if(options!=  null)  {  this.options  =  options;  this.stopAtNonOption  =  StopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options!=  null)  {  this.options  =  options;  this.stopAtNonOption  =  StopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options!=  null)  {  this.options  =  options;  this.stopAtNonOption  =  StopAtNonOption;  }	  if(options    ==    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
172	[BUG]  [BUGGY]  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(	  if(stopAtNonOption)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
173	[BUG]  [BUGGY]  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(	  if(stopAtNonOption)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
174	[BUG]  [BUGGY]  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(	  if(stopAtNonOption)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
175	[BUG]  [BUGGY]  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(	  if(stopAtNonOption)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
176	[BUG]  [BUGGY]  if(options.getOptionGroups()!=  null)  {  Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options.getOptionGroups()!=  null)  {  Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getOptionGroups()!=  null)  {  Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	  Option    currentOption    =    options.getRequiredOption();    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
177	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOptions()!=  null)  {  Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	  Option    currentOption    =    options.getRequiredOption();    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
178	[BUG]  [BUGGY]  Option  currentToken  =  options.getImplicitRequiredOption();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.getImplicitRequiredOption();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentToken  =  options.getImplicitRequiredOption();	  Option    currentToken    =    options.getRequiredOption();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
179	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(null);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(null);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	OptionGroup  group  =  options.getOptionGroup(null);	  OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
180	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	OptionGroup  group  =  options.getOptionGroup(argument);	  OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
181	[BUG]  [BUGGY]  if(skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
182	[BUG]  [BUGGY]  java.lang.AssertionError:  expected  nopts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.add  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  java.lang.AssertionError:  expected  nopts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.add  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	java.lang.AssertionError:  expected  nopts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.add	  if(options.getRequiredOptions()!=    null)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.add    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
183	[BUG]  [BUGGY]  java.lang.AssertionError:  expected  nopts  =  new  ArrayList(options.getRequiredOptions());  this.stopAtNonOption  =  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  java.lang.AssertionError:  expected  nopts  =  new  ArrayList(options.getRequiredOptions());  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	java.lang.AssertionError:  expected  nopts  =  new  ArrayList(options.getRequiredOptions());  this.stopAtNonOption  =  stopAtNonOption;	  if(options.getRequiredOptions()!=    null)    {    if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.add    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
184	[BUG]  [BUGGY]  Option  currentOption  =  options.getRawParsing()  +  1;  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRawParsing()  +  1;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRawParsing()  +  1;	  Option    currentOption    =    options.getRawParsing();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
185	[BUG]  [BUGGY]  Option  currentOption  =  options.getRawParser();  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRawParser();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRawParser();	  Option    currentOption    =    options.getRawParsing();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
186	[BUG]  [BUGGY]  if(skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }	  if(!skipParsing)    {    expectedOpts.addAll(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
187	[BUG]  [BUGGY]  if(skipParsing)  {  AssertionError:  expected  null;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(skipParsing)  {  AssertionError:  expected  null;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(skipParsing)  {  AssertionError:  expected  null;  }	  java.lang.AssertionError:    expected    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
188	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  currentOption  =  options.getRequiredOptions();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	OptionGroup  currentOption  =  options.getRequiredOptions();	  if(options.getOptionGroups()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
189	[BUG]  [BUGGY]  ||(options!=  null  &&  options.getOptionGroups().size()  >  0))  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  ||(options!=  null  &&  options.getOptionGroups().size()  >  0))  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	||(options!=  null  &&  options.getOptionGroups().size()  >  0))  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }	  if(options!=    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
190	[BUG]  [BUGGY]  ||(options!=  null  &&  options.getOptionGroups().contains(argument)))  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  ||(options!=  null  &&  options.getOptionGroups().contains(argument)))  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	||(options!=  null  &&  options.getOptionGroups().contains(argument)))  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }	  if(options!=    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
191	[BUG]  [BUGGY]  if(options.getOptionGroups()!=  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options.getOptionGroups()!=  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getOptionGroups()!=  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }	  if(options.getOptionGroups()    ==    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
192	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(new  String[]  {  }  );  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(new  String[]  {  }  );  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOptions()!=  null)  {  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(new  String[]  {  }  );  }	  if(options.getRequiredOptions()!=    null)    {    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(new    String[]    {    }    );    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
193	[BUG]  [BUGGY]  skipParsing  =  this.stopAtNonOption  &&  this.options.getRequiredOptions().size()  >  0;  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skipParsing  =  this.stopAtNonOption  &&  this.options.getRequiredOptions().size()  >  0;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipParsing  =  this.stopAtNonOption  &&  this.options.getRequiredOptions().size()  >  0;	  skipParsing    =    this.stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
194	[BUG]  [BUGGY]  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(!skipParsing)    {    expectedOpts.add(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
195	[BUG]  [BUGGY]  if(skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }	  if(!skipParsing)    {    expectedOpts.add(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
196	[BUG]  [BUGGY]  skipParsing  =  stopAtNonOption  &&  options.getRequiredOptions().size()  >  0;  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skipParsing  =  stopAtNonOption  &&  options.getRequiredOptions().size()  >  0;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipParsing  =  stopAtNonOption  &&  options.getRequiredOptions().size()  >  0;	  skipParsing    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
197	[BUG]  [BUGGY]  skippingParsing  :  true;  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skippingParsing  :  true;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skippingParsing  :  true;	  skipParsing    :    false;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
198	[BUG]  [BUGGY]  if(options.getOptionGroups()!=  null)  {  Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options.getOptionGroups()!=  null)  {  Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getOptionGroups()!=  null)  {  Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	  Option    currentOption    =    options.getRequiredOptions();    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
