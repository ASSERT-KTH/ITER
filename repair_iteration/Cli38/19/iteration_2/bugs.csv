bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(options.getRequiredOptions()    ==    null)    {    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
2	[BUG]  [BUGGY]  java.lang.AssertionError:  expected  null;  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  java.lang.AssertionError:  expected  null;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	java.lang.AssertionError:  expected  null;	      if(options.getRequiredOptions()    ==    null)    {    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
3	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(new  String[]  {  }  );  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(new  String[]  {  }  );  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(new  String[]  {  }  );  }	      if(options.getRequiredOptions()    ==    null)    {    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
4	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  Option  currentOption  =  options.getRequiredOption();  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRequiredOption();	      Option    currentOption    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
5	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument);  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(argument);	      Option    currentOption    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
6	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(options);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  Option  currentOption  =  options.getRequiredOption(options);  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(options);	      Option    currentOption    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
7	[BUG]  [BUGGY]  skippeParsing  =  false;  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  skippeParsing  =  false;  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skippeParsing  =  false;	  skippeParsing    =    true;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  skippeParsing  :  false;  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  skippeParsing  :  false;  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skippeParsing  :  false;	  skippeParsing    =    true;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
9	[BUG]  [BUGGY]  skippeParsing  =  null;  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  skippeParsing  =  null;  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skippeParsing  =  null;	  skippeParsing    =    true;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
11	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(	      if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
12	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
13	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOptions()!=  null)  {  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(options.getRequiredOptions()    ==    null)    {    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
14	[BUG]  [BUGGY]  ||!skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  ||!skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	||!skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }	      if(!skipParsing)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
15	[BUG]  [BUGGY]  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	options  =  options;  this.stopAtNonOption  =  stopAtNonOption;	      if(!skipParsing)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
16	[BUG]  [BUGGY]  if(options!=  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(options!=  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options!=  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }	      this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;	      this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  ||  options.getRequiredOptions()  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  ||  options.getRequiredOptions()  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	||  options.getRequiredOptions()  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }	      if(options.getRequiredOptions()    ==    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
19	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(options.getRequiredOptions()!=  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOptions()!=  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }	      if(options.getRequiredOptions()    ==    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
20	[BUG]  [BUGGY]  skipped  =  false;  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  skipped  =  false;  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipped  =  false;	  skipped    =    true;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
21	[BUG]  [BUGGY]  skipped  =  null;  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  skipped  =  null;  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipped  =  null;	  skipped    =    true;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
22	[BUG]  [BUGGY]  Option  currentOption  =  options.getParser();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  Option  currentOption  =  options.getParser();  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getParser();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
23	[BUG]  [BUGGY]  Option  currentOption  =  options.getRawParsing();  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  Option  currentOption  =  options.getRawParsing();  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRawParsing();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
24	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	      if(options.getRequiredOptions()    ==    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());	      if(options.getRequiredOptions()    ==    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
26	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());	      if(options.getRequiredOptions()    ==    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
28	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(stopAtNonOption)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(stopAtNonOption)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(	      if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
29	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(stopAtNonOption)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(stopAtNonOption)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
30	[BUG]  [BUGGY]  skipParsing  :  false;  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  skipParsing  :  false;  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipParsing  :  false;	  skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
31	[BUG]  [BUGGY]  skipParsing  = " ";  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  skipParsing  = " ";  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipParsing  = " ";	  skipParsing    =    true;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
32	[BUG]  [BUGGY]  skipParsing  =  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  skipParsing  =  stopAtNonOption;  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipParsing  =  stopAtNonOption;	  skipParsing    =    null;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
33	[BUG]  [BUGGY]  skipParsing  =  this.stopAtNonOption;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  skipParsing  =  this.stopAtNonOption;  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipParsing  =  this.stopAtNonOption;	  skipParsing    =    null;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
34	[BUG]  [BUGGY]  skipParsing  =  this;  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  skipParsing  =  this;  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipParsing  =  this;	  skipParsing    =    null;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
35	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListen	      if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
36	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(currentOption!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener	      if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
37	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.add  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.add  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.add	      if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
38	[BUG]  [BUGGY]  skippingParsing  =  false;  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  skippingParsing  =  false;  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skippingParsing  =  false;	  skippingParsing    =    true;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
39	[BUG]  [BUGGY]  skiingppingParsing  =  false;  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  skiingppingParsing  =  false;  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skiingppingParsing  =  false;	  skippingParsing    =    true;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
40	[BUG]  [BUGGY]  skipped  = " ";  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  skipped  = " ";  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skipped  = " ";	  skipped    =    true;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
41	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(!stopAtNonOption)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }	      if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
42	[BUG]  [BUGGY]  if(options  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(options  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }	      this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
43	[BUG]  [BUGGY]  skippingParsing  =  null;  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  skippingParsing  =  null;  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	skippingParsing  =  null;	  skippingParsing    =    true;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
44	[BUG]  [BUGGY]  Options  currentOption  =  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  Options  currentOption  =  options.getRequiredOptions();  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Options  currentOption  =  options.getRequiredOptions();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
45	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(options.getRequiredOptions()!=    null)    {    for(Option    group    :    options.getGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
46	[BUG]  [BUGGY]  if(options.getOptionGroups()  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(options.getOptionGroups()  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getOptionGroups()  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	      if(options.getRequiredOptions()    ==    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
47	[BUG]  [BUGGY]  if(options.getOptionGroups()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(options.getOptionGroups()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getOptionGroups()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	      if(options.getRequiredOptions()    ==    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
48	[BUG]  [BUGGY]  if(options.getOptionGroups()  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(options.getOptionGroups()  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getOptionGroups()  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }	      if(options.getRequiredOptions()    ==    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
49	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken);  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(argumentToken);	      Option    currentOption    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
50	[BUG]  [BUGGY]  if(skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }	      if(!skipParsing)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
51	[BUG]  [BUGGY]  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }	      if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
52	[BUG]  [BUGGY]  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }	      if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
53	[BUG]  [BUGGY]  if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }	      if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
54	[BUG]  [BUGGY]  if(options.getRequiredOptions())  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(options.getRequiredOptions())  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(options.getRequiredOptions())  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }	      this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
55	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  OptionGroup  group  =  options.getOptionGroups();  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	OptionGroup  group  =  options.getOptionGroups();	      if(options.getRequiredOptions()    ==    null)    {    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
56	[BUG]  [BUGGY]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	expectedOpts  =  new  ArrayList(options.getRequiredOptions());	      if(options.getRequiredOptions()    ==    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
57	[BUG]  [BUGGY]  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
58	[BUG]  [BUGGY]  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
59	[BUG]  [BUGGY]  if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(!skipParsing)  {  expectedOpts.addAll(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
60	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  Option  currentToken  =  options.getRequiredOption();  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	Option  currentToken  =  options.getRequiredOption();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
61	[BUG]  [BUGGY]  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(skipParsing)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
62	[BUG]  [BUGGY]  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;    [BUGGY]  if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	104	104	1	replace	if(!skipParsing)  {  expectedOpts.add(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(!skipParsing)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
