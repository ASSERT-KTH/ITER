bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  java.lang.AssertionError:  expected  null  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  java.lang.AssertionError:  expected  null  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	java.lang.AssertionError:  expected  null	      if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
2	[BUG]  [BUGGY]  java.lang.AssertionError:  expected  null  ==  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  java.lang.AssertionError:  expected  null  ==  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	java.lang.AssertionError:  expected  null  ==	      if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
3	[BUG]  [BUGGY]  java.lang.AssertionError:  expected  null!=  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  java.lang.AssertionError:  expected  null!=  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	java.lang.AssertionError:  expected  null!=	      if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
4	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().contains(argument);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().contains(argument);  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().contains(argument);	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().contains(argument);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
5	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument,  expectedOpts);  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument,  expectedOpts);	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().contains(argument);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
6	[BUG]  [BUGGY]  this.stopAtNonOption  =  option  &&  options.getRequiredOptions().contains(argument);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  option  &&  options.getRequiredOptions().contains(argument);  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  option  &&  options.getRequiredOptions().contains(argument);	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().contains(argument);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  }  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  }	      if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
8	[BUG]  [BUGGY]  java.lang.AssertionError:  expected  null;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  java.lang.AssertionError:  expected  null;  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	java.lang.AssertionError:  expected  null;	      if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
9	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  options.getSelectedOptions()  :  null;  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  options.getSelectedOptions()  :  null;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption?  options.getSelectedOptions()  :  null;	  this.stopAtNonOption    =    stopAtNonOption?    options.getRequiredOptions()    :    null;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
10	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  options.getSelectedOption()  :  null;  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  options.getSelectedOption()  :  null;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption?  options.getSelectedOption()  :  null;	  this.stopAtNonOption    =    stopAtNonOption?    options.getRequiredOptions()    :    null;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
11	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrentParser();  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getCurrentParser();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	Option  cmd  =  options.getCurrentParser();	      Option    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  Option  cmd  =  options.getArgument();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getArgument();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	Option  cmd  =  options.getArgument();	      Option    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrentOption();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getCurrentOption();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	Option  cmd  =  options.getCurrentOption();	      Option    cmd    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
14	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getOptions();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	Option  cmd  =  options.getOptions();	      Option    cmd    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
15	[BUG]  [BUGGY]  if(stopAtNonOption)  {  this.stopAtNonOption  =  true;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  if(stopAtNonOption)  {  this.stopAtNonOption  =  true;  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	if(stopAtNonOption)  {  this.stopAtNonOption  =  true;  }	  this.stopAtNonOption    =    true;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
16	[BUG]  [BUGGY]  if(stopAtNonOption)  {  this.stopAtNonOption  =  true;  }  else  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  if(stopAtNonOption)  {  this.stopAtNonOption  =  true;  }  else  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	if(stopAtNonOption)  {  this.stopAtNonOption  =  true;  }  else  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	  this.stopAtNonOption    =    true;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
17	[BUG]  [BUGGY]  if(stopAtNonOption)  {  this.stopAtNonOption  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  if(stopAtNonOption)  {  this.stopAtNonOption  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	if(stopAtNonOption)  {  this.stopAtNonOption  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.stopAtNonOption    =    true;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
18	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().length  >  0;  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().length  >  0;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().length  >  0;	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().length    >    0;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
19	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  1;  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  1;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  1;	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().length    >    0;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
20	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  2;  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  2;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  2;	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().length    >    0;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
21	[BUG]  [BUGGY]  ||  options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  ||  options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	||  options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
22	[BUG]  [BUGGY]  ||  options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  ||  options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	||  options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null	      if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
23	[BUG]  [BUGGY]  ||  options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  ||  options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	||  options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(	      if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
24	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionCmd();  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getOptionCmd();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	Option  cmd  =  options.getOptionCmd();	      Option    cmd    =    options.getCmd();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
25	[BUG]  [BUGGY]  Option  cmd  =  options.getParent();  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getParent();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	Option  cmd  =  options.getParent();	      Option    cmd    =    options.getCmd();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
26	[BUG]  [BUGGY]  Options  cmd  =  options.getCurrentParser();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Options  cmd  =  options.getCurrentParser();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	Options  cmd  =  options.getCurrentParser();	      Options    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
27	[BUG]  [BUGGY]  Options  cmd  =  options.getParser(),  arguments;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Options  cmd  =  options.getParser(),  arguments;  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	Options  cmd  =  options.getParser(),  arguments;	      Options    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
28	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  stopToken;  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  stopToken;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption?  null  :  stopToken;	  this.stopAtNonOption    =    stopAtNonOption?    null    :    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
29	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  currentOption;  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  currentOption;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption?  null  :  currentOption;	  this.stopAtNonOption    =    stopAtNonOption?    null    :    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
30	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionGroup(currentToken);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getOptionGroup(currentToken);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	Option  cmd  =  options.getOptionGroup(currentToken);	      Option    cmd    =    options.getOptionGroup(argument);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
31	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionCmd(argument);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getOptionCmd(argument);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	Option  cmd  =  options.getOptionCmd(argument);	      Option    cmd    =    options.getOptionGroup(argument);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
32	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionGroup(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getOptionGroup(argument,  currentToken);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	Option  cmd  =  options.getOptionGroup(argument,  currentToken);	      Option    cmd    =    options.getOptionGroup(argument);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
33	[BUG]  [BUGGY]  this.options  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.options  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.options  =  new  ArrayList(options.getRequiredOptions());	      this.options    =    options;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
34	[BUG]  [BUGGY]  this.options  =  arguments;  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.options  =  arguments;  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.options  =  arguments;	      this.options    =    options;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
35	[BUG]  [BUGGY]  this.options  =  new  ArrayList(options.getOptions());  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.options  =  new  ArrayList(options.getOptions());  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.options  =  new  ArrayList(options.getOptions());	      this.options    =    options;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
36	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().size()  ==  0;  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().size()  ==  0;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().size()  ==  0;	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().size()    >    0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
37	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().size()  >  1;  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().size()  >  1;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().size()  >  1;	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().size()    >    0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
38	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().size()  >  0;  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().size()  >  0;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().size()  >  0;	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().size()    >    0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
39	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getOption(currentToken);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	Option  cmd  =  options.getOption(currentToken);	      Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
40	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	Option  cmd  =  options.getOption(argument,  currentToken);	      Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
41	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  null);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getOption(argument,  null);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	Option  cmd  =  options.getOption(argument,  null);	      Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
42	[BUG]  [BUGGY]  if(stopAtNonOption)  {  this.stopAtNonOption  =  false;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  if(stopAtNonOption)  {  this.stopAtNonOption  =  false;  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	if(stopAtNonOption)  {  this.stopAtNonOption  =  false;  }	  this.stopAtNonOption    =    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
43	[BUG]  [BUGGY]  if(stopAtNonOption)  {  this.stopAtNonOption  =  false;  }  else  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  if(stopAtNonOption)  {  this.stopAtNonOption  =  false;  }  else  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	if(stopAtNonOption)  {  this.stopAtNonOption  =  false;  }  else  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	  this.stopAtNonOption    =    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
44	[BUG]  [BUGGY]  if(stopAtNonOption)  {  this.stopAtNonOption  =  false;  }  else  {  expectedOpts.add(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  if(stopAtNonOption)  {  this.stopAtNonOption  =  false;  }  else  {  expectedOpts.add(options.getRequiredOptions());  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	if(stopAtNonOption)  {  this.stopAtNonOption  =  false;  }  else  {  expectedOpts.add(options.getRequiredOptions());  }	  this.stopAtNonOption    =    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
45	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getOption(argument,  expectedOpts);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	Option  cmd  =  options.getOption(argument,  expectedOpts);	      Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
46	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
47	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
48	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  ==  0;  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  ==  0;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  ==  0;	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().length    >    0;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
49	[BUG]  [BUGGY]  Options  cmd  =  options.getArgumentParser();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Options  cmd  =  options.getArgumentParser();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	Options  cmd  =  options.getArgumentParser();	      Options    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
50	[BUG]  [BUGGY]  This.stopAtNonOption  =  true;  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  This.stopAtNonOption  =  true;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	This.stopAtNonOption  =  true;	  this.stopAtNonOption    =    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
51	[BUG]  [BUGGY]  if(options.getOptionGroups()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  if(options.getOptionGroups()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	if(options.getOptionGroups()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	      if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
52	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	      if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
53	[BUG]  [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.ERROR;  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.ERROR;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  StopAtNonOption.ERROR;	  this.stopAtNonOption    =    null;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
54	[BUG]  [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.DEFAULT;  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.DEFAULT;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  StopAtNonOption.DEFAULT;	  this.stopAtNonOption    =    null;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
55	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
56	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
57	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  for(OptionGroup  cmd  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  for(OptionGroup  cmd  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  for(OptionGroup  cmd  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    cmd    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
58	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  cmd  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  cmd  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  cmd  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    cmd    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
59	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  options.getOpts()  :  null;  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  options.getOpts()  :  null;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption?  options.getOpts()  :  null;	  this.stopAtNonOption    =    stopAtNonOption?    options.getRequiredOptions()    :    null;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
60	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  currentToken;  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  currentToken;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption?  null  :  currentToken;	  this.stopAtNonOption    =    stopAtNonOption?    null    :    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
61	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  options.getRequiredOptions();  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption?  null  :  options.getRequiredOptions();	  this.stopAtNonOption    =    stopAtNonOption?    null    :    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
62	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getOptions().contains(argument);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getOptions().contains(argument);  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getOptions().contains(argument);	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().contains(argument);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
63	[BUG]  [BUGGY]  this.options  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.options  =  options.getOptions();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.options  =  options.getOptions();	      this.options    =    options;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
64	[BUG]  [BUGGY]  this.options  =  options.cloneOptions;  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.options  =  options.cloneOptions;  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.options  =  options.cloneOptions;	      this.options    =    options;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
65	[BUG]  [BUGGY]  Option  cmd  =  options.getArgumentParser();  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getArgumentParser();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	Option  cmd  =  options.getArgumentParser();	      Option    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
66	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().size()!=  0;  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().size()!=  0;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().size()!=  0;	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().size()    >    0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
67	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().size()  >=  0;  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().size()  >=  0;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().size()  >=  0;	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().size()    >    0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
68	[BUG]  [BUGGY]  ||  options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  ||  options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	||  options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	      if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
69	[BUG]  [BUGGY]  this.options  =  new  OptionGroup(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.options  =  new  OptionGroup(options.getRequiredOptions());  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.options  =  new  OptionGroup(options.getRequiredOptions());	      this.options    =    options;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
70	[BUG]  [BUGGY]  Option  cmd  =  options.getRequiredOption(argument);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getRequiredOption(argument);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	Option  cmd  =  options.getRequiredOption(argument);	      Option    cmd    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
71	[BUG]  [BUGGY]  Options  cmd  =  options.getCmd();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Options  cmd  =  options.getCmd();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	Options  cmd  =  options.getCmd();	      Options    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
72	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionGroup(argument,  null);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getOptionGroup(argument,  null);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	Option  cmd  =  options.getOptionGroup(argument,  null);	      Option    cmd    =    options.getOptionGroup(argument);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
73	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  option;  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  option;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption?  null  :  option;	  this.stopAtNonOption    =    stopAtNonOption?    null    :    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
74	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument)&&  expectedOpts.contains(argument);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument)&&  expectedOpts.contains(argument);  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument)&&  expectedOpts.contains(argument);	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().contains(argument);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
