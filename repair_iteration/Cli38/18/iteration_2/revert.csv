projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getParser();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getRequiredOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getParser();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length>0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:stopAtNonOption;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().contains(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCmd();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionGroup(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getRequiredOptions():null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().size()>0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptionGroupcmd:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103java.lang.AssertionError:expectednull
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103java.lang.AssertionError:expectednull==
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103java.lang.AssertionError:expectednull!=
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().contains(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().contains(argument,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=option&&options.getRequiredOptions().contains(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptions()!=null){expectedOpts=newArrayList(options.getOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103java.lang.AssertionError:expectednull;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getSelectedOptions():null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getSelectedOption():null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCurrentParser();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getArgument();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCurrentOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption){this.stopAtNonOption=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption){this.stopAtNonOption=true;}else{expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption){this.stopAtNonOption=true;}else{thrownewIllegalArgumentException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().length>0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length>1;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length>2;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionCmd();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getParent();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getCurrentParser();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getParser(),arguments;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:stopToken;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:currentOption;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionGroup(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionCmd(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionGroup(argument,currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newArrayList(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=arguments;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newArrayList(options.getOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().size()==0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().size()>1;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().size()>0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption){this.stopAtNonOption=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption){this.stopAtNonOption=false;}else{expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption){this.stopAtNonOption=false;}else{expectedOpts.add(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptions()!=null){expectedOpts=newArrayList(options.getOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length==0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getArgumentParser();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103This.stopAtNonOption=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptionGroups()!=null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=StopAtNonOption.ERROR;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=StopAtNonOption.DEFAULT;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptions()!=null){expectedOpts=newArrayList(options.getOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptions()!=null){expectedOpts=newArrayList(options.getOptions());for(OptionGroupcmd:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptionGroupcmd:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getOpts():null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:currentToken;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:options.getRequiredOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getOptions().contains(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options.getOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options.cloneOptions;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getArgumentParser();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().size()!=0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().size()>=0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newOptionGroup(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getRequiredOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getCmd();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionGroup(argument,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:option;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().contains(argument)&&expectedOpts.contains(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().size()>=0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().size()==1;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().size()>=1;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().length==0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length==1;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=currentToken?null:stopAtNonOption;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=null?null:currentToken;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||stopAtNonOption){this.stopAtNonOption=true;}else{thrownewIllegalArgumentException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=null?null:option;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=option?null:stopAtNonOption;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=StopAtNonOption.ERROR||stopAtNonOption;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newArrayList(options.getOpts());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newLinkedList(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().length>1;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length>3;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||group!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||group.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(!skipParsing){AssertionError:expectednull
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options!=null){AssertionError:expectednull
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options==null){AssertionError:expectednull
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptions()==null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getRequiredOption():null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getSelectedOption():option;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionCmd(true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newArrayList<Option>();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCurrentParent();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getOpts():newHashSet<String>();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().length>2;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103options=options.getCurrentParser();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getCurrentOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103&&options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||options.getOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=options?null:options.getRequiredOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=null?null:options.getRequiredOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=options&&options.getRequiredOptions().contains(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().size()>1;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().size()>2;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getOptions());for(OptionGroupcmd:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options!=null){expectedOpts=newArrayList(options.getOptions());for(OptionGroupcmd:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,currentToken,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,currentToken,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,currentToken,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,currentToken,0);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options.cloneOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().contains(argument,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=expectedOpts&&options.getRequiredOptions().contains(argument,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().contains(argument,expectedOpts));
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=null?null:currentOption;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:expectedOpts;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=StopAtNonOption.DEFAULT|StopAtNonOption.DEFAULT;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionCmd(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=currentToken.getOptionGroup(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103This.stopAtNonOption=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103This.stopAtNonOption=null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionCmd(argument,currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionCmd(argument,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getOptions().contains(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getOptions().contains(argument,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getOptions().contains(argument,currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newOptionGroup(options.getOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newOptionGroup(options.getRequiredOptions(),options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newOptionGroup(options.getRequiredOptions(),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCurrentToken();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCurrent();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getDefaultParser();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCurrentArgument();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getArgument(arguments[0]);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getParser(),currentToken;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getParser(),arguments,currentToken;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getParser(),this.options;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getParser(),currentToken;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().size()==0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().size()!=0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().size()==2;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=Arrays.asList(options.getOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options.getOptions(),options.getRequiredOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptionGroupcmd:options.getOptionGroups()){cmd.setSelected(null
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=options||stopAtNonOption.getRequiredOptions().contains(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=option||stopAtNonOption.getRequiredOptions().contains(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionGroup(argument,this);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionGroup(argument,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionGroup(argument,currentToken,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionGroup(argument,currentToken,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=currentToken.getOptionGroup(argument,options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionGroup(argument,currentToken,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||options.getOptions()!=null){expectedOpts=newArrayList(options.getOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptions()==null){expectedOpts=newArrayList(options.getOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,this);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options!=null){AssertionError:expectednull;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options==null){AssertionError:expectednull;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(!stopAtNonOption){AssertionError:expectednull;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=expectedOpts&&options.getRequiredOptions().contains(argument)&&stopAtNonOption.contains(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=expectedOpts&&options.getRequiredOptions().contains(argument)&&stopAtNonOption;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&expectedOpts.contains(argument)&&options.getRequiredOptions().contains(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().contains(argument)&&expectedOpts.contains(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103&&options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption){this.stopAtNonOption=true;}else{expectedOpts.add(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options!=null){expectedOpts=newArrayList(options.getOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options!=null){expectedOpts=newArrayList(options.getOptions());for(Optiongroup:options.getRequiredOptions()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionParser();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options!=null){expectedOpts=newArrayList(options.getOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newArrayList(options.getOptionGroups());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption){AssertionError:expectednull
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(!stopAtNonOption){AssertionError:expectednull
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getRequiredOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getRequiredOption(argument,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getRequiredOption(argument,currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,expectedOpts,currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,expectedOpts,0);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,expectedOpts,true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=this.options.getOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=currentOption.getOption(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=currentToken.getOption(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||options.getOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||options.getRequiredOptions()==null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||options.getSelectedOption()!=null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103java.lang.AssertionError:expected;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(expectedToken!=null){AssertionError:expectednull;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(expectedNull){AnalysisError:expectednull;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptions()==null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getRequiredOptions()==null){expectedOpts=newArrayList(options.getOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getRequiredOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=StopAtNonOption.ERROR|StopAtNonOption.EMPTY;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=StopAtNonOption.ERROR|StopAtNonOption.ALL;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=StopAtNonOption.ERROR,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionArg(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getArgumentCmd();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionCmd(null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||options.getOptions()!=null){expectedOpts=newArrayList(options.getOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getRequiredOptions()==null){expectedOpts=newArrayList(options.getOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,null,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptions()==null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptionGroupcmd:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:currentToken+1;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:startToken;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:argument;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=optionOptions;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newOption[arguments.size()];
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(!stopAtNonOption){this.stopAtNonOption=false;}else{expectedOpts.add(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(!stopAtNonOption){this.stopAtNonOption=true;}else{expectedOpts.add(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(!stopAtNonOption){this.stopAtNonOption=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(!stopAtNonOption){this.stopAtNonOption=false;}else{expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(!stopAtNonOption){this.stopAtNonOption=true;}else{expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(!stopAtNonOption){this.stopAtNonOption=false;}else{expectOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=StopAtNonOption.DEFAULT&&options.getRequiredOptions().length>0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getOptionCmd();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getParser(),this.arguments;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getParser(),this.parameters;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103&&options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||group.getOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getOptionCurrentParser();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=currentOption.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:options;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(currentToken!=null){AssertionError:expectednull
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:options.getSelectedOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||options.getOptions()!=null){expectedOpts=newArrayList(options.getOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(!stopAtNonOption){this.stopAtNonOption=true;}else{thrownewIllegalArgumentException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptions()==null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getArgument(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getRequiredOptions()==null){expectedOpts=newArrayList(options.getOptions());for(OptionGroupcmd:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newOptionGroup(options.getOptionGroups());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newOptionGroup(options.getRequiredOptions(),options.getOptionGroups());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,expectedOpts,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getArgumentParser(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=option||options.getRequiredOptions().contains(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getRequiredOptions()==null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionCurrentParser();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getOptionGroups().contains(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(!stopAtNonOption){this.stopAtNonOption=true;}else{expectOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionGroup(argument,null,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getOptions():null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(!skipParsing){AnalysisError:expectednull
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(exceptions==null){AssertionError:expectednull
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getRequiredOptions()==null){expectedOpts=newArrayList(options.getOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=options.getRequiredOptions().contains(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||options.getOptionGroups()!=null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103&&options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getArgumentOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCurrentParsing();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length!=0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getArgumentOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options.getOptionGroups();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options.getRequiredOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options.getOptions(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newOptionGroup(options.getOptionOpts());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(!skipParsing){AssertionError:expectednull;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(!skipParsing){AnsertionError:expectednull
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getArgument();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,null,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionCollection(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(null
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newArrayList(options.getOptionArguments());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:options.getSelectedOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCurrentParser(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().add(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionGroups();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getRequiredOptions()!=null){expectOpts=newArrayList(options.getOptions());for(OptionGroupcmd:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getArgumentOpt();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=StopAtNonOption.DEFAULT||stopAtNonOption;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||options.getRequiredOptions()==null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||group.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options.getOptions()&&arguments.length>0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().size()!=2;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newOptionGroup(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getSelectedOptions():newOptionGroup(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newArrayList(options.getOptionOpts());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=expectedOpts.contains(argument)&&stopAtNonOption;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getRequiredOption(argument,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().size()>=2;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,this.currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getOpts():newOptions(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionGroup(argument,null,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:currentToken,expectedOpts;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getCurrentParser(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption){this.stopAtNonOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(this.stopAtNonOption){this.stopAtNonOption=true;}else{thrownewIllegalArgumentException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(this.stopAtNonOption){this.stopAtNonOption=false;}else{thrownewIllegalArgumentException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionGroup(argument,this.currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionGroup(argument,arguments);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(expected<null){AssertionError:expectednull;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionCmd(argument,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptionGroups()==null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getParser(),this.params;
