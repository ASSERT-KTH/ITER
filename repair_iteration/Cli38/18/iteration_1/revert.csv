projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getParser();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getRequiredOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getParser();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length>0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:stopAtNonOption;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().contains(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCmd();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionGroup(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getRequiredOptions():null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().size()>0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptionGroupcmd:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103java.lang.AssertionError:expectednull
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103java.lang.AssertionError:expectednull==
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103java.lang.AssertionError:expectednull!=
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().contains(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().contains(argument,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=option&&options.getRequiredOptions().contains(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptions()!=null){expectedOpts=newArrayList(options.getOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103java.lang.AssertionError:expectednull;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getSelectedOptions():null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getSelectedOption():null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCurrentParser();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getArgument();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCurrentOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption){this.stopAtNonOption=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption){this.stopAtNonOption=true;}else{expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption){this.stopAtNonOption=true;}else{thrownewIllegalArgumentException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().length>0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length>1;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length>2;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionCmd();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getParent();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getCurrentParser();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getParser(),arguments;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:stopToken;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:currentOption;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionGroup(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionCmd(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionGroup(argument,currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newArrayList(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=arguments;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newArrayList(options.getOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().size()==0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().size()>1;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().size()>0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption){this.stopAtNonOption=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption){this.stopAtNonOption=false;}else{expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption){this.stopAtNonOption=false;}else{expectedOpts.add(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptions()!=null){expectedOpts=newArrayList(options.getOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length==0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getArgumentParser();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103This.stopAtNonOption=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptionGroups()!=null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=StopAtNonOption.ERROR;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=StopAtNonOption.DEFAULT;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptions()!=null){expectedOpts=newArrayList(options.getOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptions()!=null){expectedOpts=newArrayList(options.getOptions());for(OptionGroupcmd:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103if(options.getOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptionGroupcmd:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getOpts():null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:currentToken;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:options.getRequiredOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getOptions().contains(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options.getOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options.cloneOptions;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getArgumentParser();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().size()!=0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().size()>=0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103||options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newOptionGroup(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getRequiredOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getCmd();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionGroup(argument,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:option;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().contains(argument)&&expectedOpts.contains(argument);
