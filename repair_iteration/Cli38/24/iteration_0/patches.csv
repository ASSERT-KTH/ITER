bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(arguments  ==  null)  {  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]  if(arguments  ==  null)  {  [BUGGY]  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments  ==  null)  {	if  (arguments  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	48	None	replace
2	[BUG]  [BUGGY]  if(arguments!=  null  ||  expectedOpts.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]  if(arguments!=  null  ||  expectedOpts.length  ==  0)  {  [BUGGY]  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments!=  null  ||  expectedOpts.length  ==  0)  {	if  (arguments  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	48	None	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    [BUGGY]  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	  	if  (arguments  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	48	None	replace
4	[BUG]  [BUGGY]    if(cmd!=  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    if(cmd!=  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	    if(cmd!=  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }		non-compiled	[CE]  illegal  start  of  type	49	None	add
5	[BUG]  [BUGGY]    Option  option  =  options.getOption(cmd);  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    Option  option  =  options.getOption(cmd);  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	    Option  option  =  options.getOption(cmd);		non-compiled	[CE]  illegal  start  of  type	49	None	add
6	[BUG]  [BUGGY]    if(cmd!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    if(cmd!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	    if(cmd!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }		non-compiled	[CE]  illegal  start  of  type	49	None	add
7	[BUG]  [BUGGY]    if(cmd!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    if(cmd!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	    if(cmd!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }		non-compiled	[CE]  illegal  start  of  type	49	None	add
8	[BUG]  [BUGGY]    Option[]  arguments  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    Option[]  arguments  =  options.getOptions();  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	    Option[]  arguments  =  options.getOptions();		non-compiled	[CE]  illegal  start  of  type	49	None	add
9	[BUG]  [BUGGY]  if(cmd  ==  null)  {  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]  if(cmd  ==  null)  {  [BUGGY]  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd  ==  null)  {	if  (arguments  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	48	None	replace
10	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption(cmd);  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    Option  currentOption  =  options.getOption(cmd);  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	    Option  currentOption  =  options.getOption(cmd);		non-compiled	[CE]  illegal  start  of  type	49	None	add
11	[BUG]  [BUGGY]    Options  options  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    Options  options  =  options.getOptions();  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	    Options  options  =  options.getOptions();		non-compiled	[CE]  illegal  start  of  type	49	None	add
12	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    Option  currentOption  =  options.getOption(currentToken);  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	    Option  currentOption  =  options.getOption(currentToken);		non-compiled	[CE]  illegal  start  of  type	49	None	add
13	[BUG]  [BUGGY]    Arrays.sort(cmd);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    Arrays.sort(cmd);  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	    Arrays.sort(cmd);		non-compiled	[CE]  illegal  start  of  type	49	None	add
14	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    Option  currentOption  =  options.getOption(options.getRequiredOptions());  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	    Option  currentOption  =  options.getOption(options.getRequiredOptions());		non-compiled	[CE]  illegal  start  of  type	49	None	add
15	[BUG]  [BUGGY]    OptionGroup  argument  =  options.getOption(cmd);  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    OptionGroup  argument  =  options.getOption(cmd);  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	    OptionGroup  argument  =  options.getOption(cmd);		non-compiled	[CE]  illegal  start  of  type	49	None	add
16	[BUG]  [BUGGY]    Argument[]  arguments  =  cmd.toArray(new  Arguments);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    Argument[]  arguments  =  cmd.toArray(new  Arguments);  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	    Argument[]  arguments  =  cmd.toArray(new  Arguments);		non-compiled	[CE]  illegal  start  of  type	49	None	add
17	[BUG]  [BUGGY]  if(arguments!=  null  &&  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]  if(arguments!=  null  &&  expectedOpts.size()  >  0)  {  [BUGGY]  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments!=  null  &&  expectedOpts.size()  >  0)  {	if  (arguments  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	48	None	replace
18	[BUG]  [BUGGY]  if(arguments!=  null  &&  expectedOpts.length  >  0)  {  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]  if(arguments!=  null  &&  expectedOpts.length  >  0)  {  [BUGGY]  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments!=  null  &&  expectedOpts.length  >  0)  {	if  (arguments  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	48	None	replace
19	[BUG]  [BUGGY]  if(arguments!=  null  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]  if(arguments!=  null  ||  expectedOpts.size()  ==  0)  {  [BUGGY]  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments!=  null  ||  expectedOpts.size()  ==  0)  {	if  (arguments  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	48	None	replace
