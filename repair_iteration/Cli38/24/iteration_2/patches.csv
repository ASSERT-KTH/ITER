bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||  cmd  ==  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  ||  cmd  ==  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	||  cmd  ==  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }	  ||    cmd!=    null)    {    for(String    argument    :    arguments)    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
2	[BUG]  [BUGGY]  ||  cmd!=  null)  {  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  ||  cmd!=  null)  {  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	||  cmd!=  null)  {  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }	  ||    cmd!=    null)    {    for(String    argument    :    arguments)    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
3	[BUG]  [BUGGY]  ||  expectedOpts!=  null)  {  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  ||  expectedOpts!=  null)  {  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	||  expectedOpts!=  null)  {  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }	  ||    cmd!=    null)    {    for(String    argument    :    arguments)    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
4	[BUG]  [BUGGY]  if(expectedOpts!=  null  ||  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts!=  null  ||  expectedOpts.size()  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts!=  null  ||  expectedOpts.size()  >  0)  {	  if(expectedOpts!=    null    &&    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
5	[BUG]  [BUGGY]  if(expectedOpts!=  null  &&  cmd.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts!=  null  &&  cmd.size()  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts!=  null  &&  cmd.size()  >  0)  {	  if(expectedOpts!=    null    &&    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
6	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  ||  stopAtNonOption)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	||  stopAtNonOption)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }	  if(stopAtNonOption)    {    for(String    argument    :    arguments)    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
7	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(stopAtNonOption)  {  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(stopAtNonOption)  {  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }	  if(stopAtNonOption)    {    for(String    argument    :    arguments)    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
8	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(String  argument  :  options.getArguments())  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(stopAtNonOption)  {  for(String  argument  :  options.getArguments())  {  handleToken(argument);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(stopAtNonOption)  {  for(String  argument  :  options.getArguments())  {  handleToken(argument);  }	  if(stopAtNonOption)    {    for(String    argument    :    arguments)    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
9	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(stopAtNonOption)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }	  if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
10	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  properties.getOptions())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  properties.getOptions())  {  cmd.addChangeListener(this);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(stopAtNonOption)  {  for(Option  option  :  properties.getOptions())  {  cmd.addChangeListener(this);  }	  if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.getOption(false);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(false);  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(false);	  if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
12	[BUG]  [BUGGY]  OptionGroup  argument  =  options.getOption(group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  argument  =  options.getOption(group,  stopAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	OptionGroup  argument  =  options.getOption(group,  stopAtNonOption);	  OptionGroup    argument    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
13	[BUG]  [BUGGY]  OptionGroup  argument  =  options.getOption(cmd,  group);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  argument  =  options.getOption(cmd,  group);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	OptionGroup  argument  =  options.getOption(cmd,  group);	  OptionGroup    argument    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
14	[BUG]  [BUGGY]  OptionGroup  argument  =  options.getOption(cmd,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  argument  =  options.getOption(cmd,  stopAtNonOption,  expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	OptionGroup  argument  =  options.getOption(cmd,  stopAtNonOption,  expectedOpts);	  OptionGroup    argument    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
15	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts.size()  ==  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts  ==  null  ||  expectedOpts.size()  ==  0)  {	  if(expectedOpts!=    null    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
16	[BUG]  [BUGGY]  if(expectedOpts!=  null  &&  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts!=  null  &&  expectedOpts.size()  ==  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts!=  null  &&  expectedOpts.size()  ==  0)  {	  if(expectedOpts!=    null    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
17	[BUG]  [BUGGY]  if(expectedOpts!=  null  ||  cmd.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts!=  null  ||  cmd.size()  ==  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts!=  null  ||  cmd.size()  ==  0)  {	  if(expectedOpts!=    null    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
18	[BUG]  [BUGGY]  Option  option  =  options.getOption(group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(group,  stopAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(group,  stopAtNonOption);	  Option    option    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
19	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(cmd,  stopAtNonOption,  expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(cmd,  stopAtNonOption,  expectedOpts);	  Option    option    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
20	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  group);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(cmd,  group);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(cmd,  group);	  Option    option    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
21	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getOptions()!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }	  if(options.getOptions()    ==    null)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
22	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions();  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  options  =  currentOption.getOptions();  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  options  =  currentOption.getOptions();	  Option    options    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
23	[BUG]  [BUGGY]  Option  options  =  group.getOptions();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  options  =  group.getOptions();  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  options  =  group.getOptions();	  Option    options    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
24	[BUG]  [BUGGY]  Option  options  =  cmd.getOptions(true);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  options  =  cmd.getOptions(true);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  options  =  cmd.getOptions(true);	  Option    options    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
25	[BUG]  [BUGGY]  if(options!=  null)  {  for(Option  Option  option  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options!=  null)  {  for(Option  Option  option  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null)  {  for(Option  Option  option  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }	  if(options!=    null)    {    for(Option    option    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
26	[BUG]  [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getRequiredOptions())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getRequiredOptions())  {  cmd.addChangeListener(this);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null)  {  for(Option  option  :  options.getRequiredOptions())  {  cmd.addChangeListener(this);  }	  if(options!=    null)    {    for(Option    option    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
27	[BUG]  [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.removeChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.removeChangeListener(this);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.removeChangeListener(this);  }	  if(options!=    null)    {    for(Option    option    :    options.getOptionGroups())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
28	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  expectedOpts,  stopAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd,  expectedOpts,  stopAtNonOption);	  Option    currentOption    =    options.getOption(cmd,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
29	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  expectedOpts,  null);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  expectedOpts,  null);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd,  expectedOpts,  null);	  Option    currentOption    =    options.getOption(cmd,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
30	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  expectedOpts,  false);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  expectedOpts,  false);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd,  expectedOpts,  false);	  Option    currentOption    =    options.getOption(cmd,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
31	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  expectedOpts,  true);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  expectedOpts,  true);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd,  expectedOpts,  true);	  Option    currentOption    =    options.getOption(cmd,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
32	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  expectedOpts,  stopAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currentToken,  expectedOpts,  stopAtNonOption);	  Option    currentOption    =    options.getOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
33	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  expectedOpts,  cmd);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  expectedOpts,  cmd);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currentToken,  expectedOpts,  cmd);	  Option    currentOption    =    options.getOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
34	[BUG]  [BUGGY]  Arguments[]  arguments  =  cmd.toArray(newArguments,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Arguments[]  arguments  =  cmd.toArray(newArguments,  expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Arguments[]  arguments  =  cmd.toArray(newArguments,  expectedOpts);	  Arguments[]    arguments    =    cmd.toArray(newArguments);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
35	[BUG]  [BUGGY]  Arguments[]  arguments  =  newArguments.toArray(cmd);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Arguments[]  arguments  =  newArguments.toArray(cmd);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Arguments[]  arguments  =  newArguments.toArray(cmd);	  Arguments[]    arguments    =    cmd.toArray(newArguments);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
36	[BUG]  [BUGGY]  Arguments[]  arguments  =  new  ArrayList(cmd.toArray(newArguments));  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Arguments[]  arguments  =  new  ArrayList(cmd.toArray(newArguments));  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Arguments[]  arguments  =  new  ArrayList(cmd.toArray(newArguments));	  Arguments[]    arguments    =    cmd.toArray(newArguments);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
37	[BUG]  [BUGGY]  if(cmd!=  null  ||!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd!=  null  ||!stopAtNonOption)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd!=  null  ||!stopAtNonOption)  {	  if(cmd    ==    null    ||!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
38	[BUG]  [BUGGY]  if(cmd  ==  null  ||!skipParsing)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd  ==  null  ||!skipParsing)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd  ==  null  ||!skipParsing)  {	  if(cmd    ==    null    ||!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
39	[BUG]  [BUGGY]  if(options!=  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.setChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options!=  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.setChangeListener(this);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.setChangeListener(this);  }	  if(options!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.setChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
40	[BUG]  [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setChangeListener(this);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setChangeListener(this);  }	  if(options!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.setChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
41	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(cmd,  expectedOpts,  stopAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(cmd,  expectedOpts,  stopAtNonOption);	  Option    option    =    options.getOption(cmd,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
42	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  expectedOpts,  currentToken);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(cmd,  expectedOpts,  currentToken);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(cmd,  expectedOpts,  currentToken);	  Option    option    =    options.getOption(cmd,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
43	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(currentToken,  expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(currentToken,  expectedOpts);	  Option    option    =    options.getOption(cmd,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
44	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  null,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  null,  expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd,  null,  expectedOpts);	  Option    currentOption    =    options.getOption(cmd,    null);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
45	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  group);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  group);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd,  group);	  Option    currentOption    =    options.getOption(cmd,    null);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
46	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  this);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  this);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd,  this);	  Option    currentOption    =    options.getOption(cmd,    null);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
47	[BUG]  [BUGGY]  if(cmd!=  null)  {  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd!=  null)  {  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd!=  null)  {  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }	  if(cmd    ==    null)    {    for(String    argument    :    arguments)    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
48	[BUG]  [BUGGY]  if(options!=  null  ||  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options!=  null  ||  expectedOpts.size()  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null  ||  expectedOpts.size()  >  0)  {	  if(options!=    null    &&    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
49	[BUG]  [BUGGY]  if(expectedOpts!=  null  &&  options.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts!=  null  &&  options.size()  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts!=  null  &&  options.size()  >  0)  {	  if(options!=    null    &&    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
50	[BUG]  [BUGGY]  if(options  ==  null  ||  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options  ==  null  ||  expectedOpts.size()  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options  ==  null  ||  expectedOpts.size()  >  0)  {	  if(options!=    null    &&    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
51	[BUG]  [BUGGY]  if(arguments  ==  null  ||  expectedOpts.length  >=  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(arguments  ==  null  ||  expectedOpts.length  >=  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments  ==  null  ||  expectedOpts.length  >=  0)  {	  if(arguments    ==    null    ||    expectedOpts.length!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
52	[BUG]  [BUGGY]  if(expectedOpts!=  null  &&  arguments.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts!=  null  &&  arguments.length  ==  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts!=  null  &&  arguments.length  ==  0)  {	  if(arguments!=    null    &&    expectedOpts.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
53	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  null,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  null,  expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  null,  expectedOpts);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    null);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
54	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts.length  ==  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts  ==  null  ||  expectedOpts.length  ==  0)  {	  if(expectedOpts!=    null    ||    expectedOpts.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
55	[BUG]  [BUGGY]  if(cmd!=  null  ||  expectedOpts.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd!=  null  ||  expectedOpts.length  ==  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd!=  null  ||  expectedOpts.length  ==  0)  {	  if(expectedOpts!=    null    ||    expectedOpts.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
56	[BUG]  [BUGGY]  if(options.getOption(cmd)!=  null)  {  Option  currentOption  =  options.getOption(cmd);  expectedOpts.add(currentOption);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getOption(cmd)!=  null)  {  Option  currentOption  =  options.getOption(cmd);  expectedOpts.add(currentOption);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getOption(cmd)!=  null)  {  Option  currentOption  =  options.getOption(cmd);  expectedOpts.add(currentOption);  }	  Option    currentOption    =    options.getOption(cmd);    expectedOpts.add(currentOption);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
57	[BUG]  [BUGGY]  if(options.getOption(cmd)!=  null)  {  Option  currentOption  =  options.getOption(cmd);  expectedOpts.add(currentOption);  }  else  {  expectedOpts.add(null);  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getOption(cmd)!=  null)  {  Option  currentOption  =  options.getOption(cmd);  expectedOpts.add(currentOption);  }  else  {  expectedOpts.add(null);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getOption(cmd)!=  null)  {  Option  currentOption  =  options.getOption(cmd);  expectedOpts.add(currentOption);  }  else  {  expectedOpts.add(null);  }	  Option    currentOption    =    options.getOption(cmd);    expectedOpts.add(currentOption);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
58	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  expectedOpts.add(currentOption);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  expectedOpts.add(currentOption);  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currentToken);  expectedOpts.add(currentOption);	  Option    currentOption    =    options.getOption(cmd);    expectedOpts.add(currentOption);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
59	[BUG]  [BUGGY]  if(arguments  ==  null  ||  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(arguments  ==  null  ||  expectedOpts.size()  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments  ==  null  ||  expectedOpts.size()  >  0)  {	  if(arguments!=    null    ||    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
60	[BUG]  [BUGGY]  if(arguments!=  null  ||  expectedOpts.size()  >=  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(arguments!=  null  ||  expectedOpts.size()  >=  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments!=  null  ||  expectedOpts.size()  >=  0)  {	  if(arguments!=    null    ||    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
61	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  currentToken);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  currentToken);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd,  currentToken);	  Option    currentOption    =    options.getOption(currentToken,    cmd);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
62	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  cmd,  stopAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currentToken,  cmd,  stopAtNonOption);	  Option    currentOption    =    options.getOption(currentToken,    cmd);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
63	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  null);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  null);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currentToken,  null);	  Option    currentOption    =    options.getOption(currentToken,    cmd);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
64	[BUG]  [BUGGY]  if(arguments!=  null  &&  arguments.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(arguments!=  null  &&  arguments.length  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments!=  null  &&  arguments.length  >  0)  {	  if(expectedOpts!=    null    &&    arguments.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
65	[BUG]  [BUGGY]  Argument[]  arguments  =  options.toArray(cmd);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Argument[]  arguments  =  options.toArray(cmd);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  options.toArray(cmd);	  Argument[]    arguments    =    options.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
66	[BUG]  [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  cmd);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  cmd);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  options.toArray(new  Arguments,  cmd);	  Argument[]    arguments    =    options.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
67	[BUG]  [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  options.toArray(new  Arguments,  expectedOpts);	  Argument[]    arguments    =    options.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
68	[BUG]  [BUGGY]  Option[]  arguments  =  cmd.getOptionArguments();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option[]  arguments  =  cmd.getOptionArguments();  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option[]  arguments  =  cmd.getOptionArguments();	  Option[]    arguments    =    options.getOptionArguments();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
69	[BUG]  [BUGGY]  Option[]  arguments  =  options.getOptionArgs();  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option[]  arguments  =  options.getOptionArgs();  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option[]  arguments  =  options.getOptionArgs();	  Option[]    arguments    =    options.getOptionArguments();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
70	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  cmd.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts  ==  null  ||  cmd.length  ==  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts  ==  null  ||  cmd.length  ==  0)  {	  if(cmd    ==    null    ||    expectedOpts.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
71	[BUG]  [BUGGY]  if(cmd  ==  null  ||  expectedOpts.length!=  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd  ==  null  ||  expectedOpts.length!=  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd  ==  null  ||  expectedOpts.length!=  0)  {	  if(cmd    ==    null    ||    expectedOpts.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
72	[BUG]  [BUGGY]  if(cmd  ==  null  ||  expectedOpts.length  >=  0)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd  ==  null  ||  expectedOpts.length  >=  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd  ==  null  ||  expectedOpts.length  >=  0)  {	  if(cmd    ==    null    ||    expectedOpts.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
73	[BUG]  [BUGGY]  if(options.getArguments()!=  null)  {  for(String  argument  :  options.getArguments())  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getArguments()!=  null)  {  for(String  argument  :  options.getArguments())  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getArguments()!=  null)  {  for(String  argument  :  options.getArguments())  {  handleToken(argument);  }	  if(cmd!=    null)    {    for(String    argument    :    options.getArguments())    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
74	[BUG]  [BUGGY]  if(options!=  null)  {  for(String  argument  :  options.getArguments())  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options!=  null)  {  for(String  argument  :  options.getArguments())  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null)  {  for(String  argument  :  options.getArguments())  {  handleToken(argument);  }	  if(cmd!=    null)    {    for(String    argument    :    options.getArguments())    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
75	[BUG]  [BUGGY]  ||  cmd!=  null)  {  for(String  argument  :  options.getArguments())  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  ||  cmd!=  null)  {  for(String  argument  :  options.getArguments())  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	||  cmd!=  null)  {  for(String  argument  :  options.getArguments())  {  handleToken(argument);  }	  if(cmd!=    null)    {    for(String    argument    :    options.getArguments())    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
76	[BUG]  [BUGGY]  if(options.getArguments()  ==  null)  {  for(String  argument  :  options.getArguments())  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getArguments()  ==  null)  {  for(String  argument  :  options.getArguments())  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getArguments()  ==  null)  {  for(String  argument  :  options.getArguments())  {  handleToken(argument);  }	  if(cmd!=    null)    {    for(String    argument    :    options.getArguments())    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
77	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  currentToken);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  currentToken);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  currentToken);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
78	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  stopAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  stopAtNonOption);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
79	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  0);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  0);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  0);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
80	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  group);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  group);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  group);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
81	[BUG]  [BUGGY]  Option  option  =  options.getOption(group,  cmd);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(group,  cmd);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(group,  cmd);	  Option    option    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
82	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(group);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  cmd.getOption(group);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  cmd.getOption(group);	  Option    option    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
83	[BUG]  [BUGGY]  if(arguments  ==  null  ||  expectedOpts.length  >  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(arguments  ==  null  ||  expectedOpts.length  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments  ==  null  ||  expectedOpts.length  >  0)  {	  if(arguments!=    null    ||    expectedOpts.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
84	[BUG]  [BUGGY]  if(arguments!=  null  ||  expectedOpts.length  <  2)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(arguments!=  null  ||  expectedOpts.length  <  2)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments!=  null  ||  expectedOpts.length  <  2)  {	  if(arguments!=    null    ||    expectedOpts.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
85	[BUG]  [BUGGY]  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(options!=    null)    {    for(Option    option    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
86	[BUG]  [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getRequiredOptions())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getRequiredOptions())  {  cmd.setSelected(null);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null)  {  for(Option  option  :  options.getRequiredOptions())  {  cmd.setSelected(null);  }	  if(options!=    null)    {    for(Option    option    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
87	[BUG]  [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(new  String[]  {  }  );  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(new  String[]  {  }  );  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(new  String[]  {  }  );  }	  if(options!=    null)    {    for(Option    option    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
88	[BUG]  [BUGGY]  if(expectedOpts!=  null  ||  expectedOpts.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts!=  null  ||  expectedOpts.length  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts!=  null  ||  expectedOpts.length  >  0)  {	  if(expectedOpts!=    null    &&    expectedOpts.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
89	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts.length  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts  ==  null  ||  expectedOpts.length  >  0)  {	  if(expectedOpts!=    null    &&    expectedOpts.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
90	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
91	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setS  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setS  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setS	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
92	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.set  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.set  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.set	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
93	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd  [CE]  illegal  start  of  type  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
94	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  group.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  group.getRequiredOptions());  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd,  group.getRequiredOptions());	  Option    currentOption    =    options.getOption(cmd.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
95	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd.getRequiredOptions(),  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd.getRequiredOptions(),  expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd.getRequiredOptions(),  expectedOpts);	  Option    currentOption    =    options.getOption(cmd.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
96	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd.getSelectedOption());  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd.getSelectedOption());  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd.getSelectedOption());	  Option    currentOption    =    options.getOption(cmd.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
97	[BUG]  [BUGGY]  if(cmd!=  null  ||  expectedOpts.length  >  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd!=  null  ||  expectedOpts.length  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd!=  null  ||  expectedOpts.length  >  0)  {	  if(cmd!=    null    &&    expectedOpts.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
98	[BUG]  [BUGGY]  if(expectedOpts!=  null  &&  cmd.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts!=  null  &&  cmd.length  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts!=  null  &&  cmd.length  >  0)  {	  if(cmd!=    null    &&    expectedOpts.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
99	[BUG]  [BUGGY]  if(cmd  ==  null  ||  expectedOpts.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd  ==  null  ||  expectedOpts.length  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd  ==  null  ||  expectedOpts.length  >  0)  {	  if(cmd!=    null    &&    expectedOpts.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
100	[BUG]  [BUGGY]  if(options.getOptions()  ==  null)  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getOptions()  ==  null)  {  cmd.addChangeListener(this);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getOptions()  ==  null)  {  cmd.addChangeListener(this);  }	  if(options.getOptions()!=    null)    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
101	[BUG]  [BUGGY]  if(options.getOptions()!=  null  ||  options.getOptions().length  ==  0)  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getOptions()!=  null  ||  options.getOptions().length  ==  0)  {  cmd.addChangeListener(this);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getOptions()!=  null  ||  options.getOptions().length  ==  0)  {  cmd.addChangeListener(this);  }	  if(options.getOptions()!=    null)    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
102	[BUG]  [BUGGY]  cmd.addChangeListener(this);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  cmd.addChangeListener(this);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	cmd.addChangeListener(this);	  if(options.getOptions()!=    null)    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
103	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  arguments.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts  ==  null  ||  arguments.size()  ==  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts  ==  null  ||  arguments.size()  ==  0)  {	  if(arguments    ==    null    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
104	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  Option  currentOption  =  cmd.getOption(options.getRequiredOptions());  expectedOpts.add(currentOption);  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  Option  currentOption  =  cmd.getOption(options.getRequiredOptions());  expectedOpts.add(currentOption);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getRequiredOptions()!=  null)  {  Option  currentOption  =  cmd.getOption(options.getRequiredOptions());  expectedOpts.add(currentOption);  }	  Option    currentOption    =    cmd.getOption(options.getRequiredOptions());    expectedOpts.add(currentOption);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
105	[BUG]  [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  Option  currentOption  =  cmd.getOption(options.getRequiredOptions());  expectedOpts.add(currentOption);  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  Option  currentOption  =  cmd.getOption(options.getRequiredOptions());  expectedOpts.add(currentOption);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getRequiredOptions()  ==  null)  {  Option  currentOption  =  cmd.getOption(options.getRequiredOptions());  expectedOpts.add(currentOption);  }	  Option    currentOption    =    cmd.getOption(options.getRequiredOptions());    expectedOpts.add(currentOption);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
106	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Option  currentOption  =  cmd.getOption(options.getRequiredOptions());  expectedOpts.add(currentOption);  }  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(stopAtNonOption)  {  Option  currentOption  =  cmd.getOption(options.getRequiredOptions());  expectedOpts.add(currentOption);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(stopAtNonOption)  {  Option  currentOption  =  cmd.getOption(options.getRequiredOptions());  expectedOpts.add(currentOption);  }	  Option    currentOption    =    cmd.getOption(options.getRequiredOptions());    expectedOpts.add(currentOption);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
107	[BUG]  [BUGGY]  Option  options  =(Option)options.getOptions();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  options  =(Option)options.getOptions();  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  options  =(Option)options.getOptions();	  Option    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
108	[BUG]  [BUGGY]  if(options.getOptions()!=  null  ||  options.getOptions().length  ==  0)  {  for(Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getOptions()!=  null  ||  options.getOptions().length  ==  0)  {  for(Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getOptions()!=  null  ||  options.getOptions().length  ==  0)  {  for(Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }	  if(options.getOptions()!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
109	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getOptions()!=  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }	  if(options.getOptions()!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
110	[BUG]  [BUGGY]  Option[]  arguments  =  cmd.getArguments();  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option[]  arguments  =  cmd.getArguments();  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option[]  arguments  =  cmd.getArguments();	  Option[]    arguments    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
111	[BUG]  [BUGGY]  Option[]  arguments  =  currentOption.getOptions();  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option[]  arguments  =  currentOption.getOptions();  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option[]  arguments  =  currentOption.getOptions();	  Option[]    arguments    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
112	[BUG]  [BUGGY]  Arrays.sort(currentToken,  cmd);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Arrays.sort(currentToken,  cmd);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Arrays.sort(currentToken,  cmd);	  Arrays.sort(cmd,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
113	[BUG]  [BUGGY]  Arrays.sort(cmd,  currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Arrays.sort(cmd,  currentToken,  expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Arrays.sort(cmd,  currentToken,  expectedOpts);	  Arrays.sort(cmd,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
114	[BUG]  [BUGGY]  Arrays.sort(currentOption,  cmd);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Arrays.sort(currentOption,  cmd);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Arrays.sort(currentOption,  cmd);	  Arrays.sort(cmd,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
115	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  stopAtNonOption,  expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd,  stopAtNonOption,  expectedOpts);	  Option    currentOption    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
116	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  blockAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd,  blockAtNonOption);	  Option    currentOption    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
117	[BUG]  [BUGGY]  Arrays.sort(cmd,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Arrays.sort(cmd,  expectedOpts,  stopAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Arrays.sort(cmd,  expectedOpts,  stopAtNonOption);	  Arrays.sort(cmd,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
118	[BUG]  [BUGGY]  Arrays.sort(expectedOpts,  cmd);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Arrays.sort(expectedOpts,  cmd);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Arrays.sort(expectedOpts,  cmd);	  Arrays.sort(cmd,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
119	[BUG]  [BUGGY]  Arrays.sort(cmd,  expectedOpts,  currentToken);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Arrays.sort(cmd,  expectedOpts,  currentToken);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Arrays.sort(cmd,  expectedOpts,  currentToken);	  Arrays.sort(cmd,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
120	[BUG]  [BUGGY]  Arrays.sort(options,  cmd,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Arrays.sort(options,  cmd,  expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Arrays.sort(options,  cmd,  expectedOpts);	  Arrays.sort(cmd,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
121	[BUG]  [BUGGY]  Option  option  =  options.getOption(group.getOptions());  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(group.getOptions());  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(group.getOptions());	  Option    option    =    options.getOption(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
122	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd.getOptions());  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(cmd.getOptions());  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(cmd.getOptions());	  Option    option    =    options.getOption(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
123	[BUG]  [BUGGY]  Option  option  =  options.getOption(options.getOptions(),  cmd);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(options.getOptions(),  cmd);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(options.getOptions(),  cmd);	  Option    option    =    options.getOption(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
124	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  options.getOptions());  [CE]  illegal  start  of  type  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(cmd,  options.getOptions());  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(cmd,  options.getOptions());	  Option    option    =    options.getOption(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
125	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentToken,  cmd);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(currentToken,  cmd);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(currentToken,  cmd);	  Option    option    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
126	[BUG]  [BUGGY]  Arrays.sort(this.expectedOpts);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Arrays.sort(this.expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Arrays.sort(this.expectedOpts);	  Arrays.sort(expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
127	[BUG]  [BUGGY]  Option[]  arguments  =  options.getParseArguments();  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option[]  arguments  =  options.getParseArguments();  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option[]  arguments  =  options.getParseArguments();	  Option[]    arguments    =    options.getParseOptions();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
128	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(options);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  cmd.getOption(options);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  cmd.getOption(options);	  Option    currentOption    =    cmd.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
129	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(null);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  cmd.getOption(null);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  cmd.getOption(null);	  Option    currentOption    =    cmd.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
130	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(group);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  cmd.getOption(group);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  cmd.getOption(group);	  Option    currentOption    =    cmd.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
131	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  cmd.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts  ==  null  ||  cmd.size()  ==  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts  ==  null  ||  cmd.size()  ==  0)  {	  if(cmd    ==    null    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
132	[BUG]  [BUGGY]  if(cmd  ==  null  ||  expectedOpts.size()!=  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd  ==  null  ||  expectedOpts.size()!=  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd  ==  null  ||  expectedOpts.size()!=  0)  {	  if(cmd    ==    null    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
133	[BUG]  [BUGGY]  if(options  ==  null  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options  ==  null  ||  expectedOpts.size()  ==  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options  ==  null  ||  expectedOpts.size()  ==  0)  {	  if(cmd    ==    null    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
134	[BUG]  [BUGGY]  Option[]  arguments  =  cmd.getParserOptions();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option[]  arguments  =  cmd.getParserOptions();  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option[]  arguments  =  cmd.getParserOptions();	  Option[]    arguments    =    options.getParserOptions();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
135	[BUG]  [BUGGY]  if(arguments  ==  null  ||  arguments.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(arguments  ==  null  ||  arguments.length  ==  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments  ==  null  ||  arguments.length  ==  0)  {	  if(arguments!=    null    ||    arguments.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
136	[BUG]  [BUGGY]  if(arguments  ==  null  ||  arguments.length!=  0)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(arguments  ==  null  ||  arguments.length!=  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments  ==  null  ||  arguments.length!=  0)  {	  if(arguments!=    null    ||    arguments.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
137	[BUG]  [BUGGY]  if(arguments!=  null  ||  arguments.length  >=  0)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(arguments!=  null  ||  arguments.length  >=  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments!=  null  ||  arguments.length  >=  0)  {	  if(arguments!=    null    ||    arguments.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
138	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group,  cmd);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(group,  cmd);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(group,  cmd);	  Option    currentOption    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
139	[BUG]  [BUGGY]  if(arguments!=  null  ||  arguments.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(arguments!=  null  ||  arguments.size()  ==  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments!=  null  ||  arguments.size()  ==  0)  {	  if(expectedOpts!=    null    ||    arguments.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
140	[BUG]  [BUGGY]  OptionGroup  argument  =  options.getOption(currentToken,  cmd);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  argument  =  options.getOption(currentToken,  cmd);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	OptionGroup  argument  =  options.getOption(currentToken,  cmd);	  OptionGroup    argument    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
141	[BUG]  [BUGGY]  OptionGroup  argument  =  options.getOption(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  argument  =  options.getOption(currentToken,  expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	OptionGroup  argument  =  options.getOption(currentToken,  expectedOpts);	  OptionGroup    argument    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
142	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(options.getCurrentOption(),  cmd);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(options.getCurrentOption(),  cmd);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(options.getCurrentOption(),  cmd);	  Option    currentOption    =    options.getOption(options.getCurrentOption());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
143	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group.getCurrentOption());  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(group.getCurrentOption());  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(group.getCurrentOption());	  Option    currentOption    =    options.getOption(options.getCurrentOption());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
144	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd.getCurrentOption());  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd.getCurrentOption());  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd.getCurrentOption());	  Option    currentOption    =    options.getOption(options.getCurrentOption());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
145	[BUG]  [BUGGY]  if(arguments!=  null  ||  expectedOpts.contains(argument))  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(arguments!=  null  ||  expectedOpts.contains(argument))  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments!=  null  ||  expectedOpts.contains(argument))  {	  if(arguments    ==    null    ||    expectedOpts.contains(argument))    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
146	[BUG]  [BUGGY]  if(cmd  ==  null  ||  expectedOpts.contains(argument))  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd  ==  null  ||  expectedOpts.contains(argument))  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd  ==  null  ||  expectedOpts.contains(argument))  {	  if(arguments    ==    null    ||    expectedOpts.contains(argument))    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
147	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  arguments.contains(argument))  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts  ==  null  ||  arguments.contains(argument))  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts  ==  null  ||  arguments.contains(argument))  {	  if(arguments    ==    null    ||    expectedOpts.contains(argument))    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
148	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
149	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.set  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.set  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.set	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
150	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
151	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.set  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.set  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.set	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
152	[BUG]  [BUGGY]  Options  options  =  options.getOptionOptions();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Options  options  =  options.getOptionOptions();  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Options  options  =  options.getOptionOptions();	  Options    options    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
153	[BUG]  [BUGGY]  Options  options  =  cmd.getOptionOptions();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Options  options  =  cmd.getOptionOptions();  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Options  options  =  cmd.getOptionOptions();	  Options    options    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
154	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  ||  stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	||  stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }	  if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
155	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(stopAtNonOption)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
156	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  cmd.setSelected(null);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  ||  stopAtNonOption)  {  cmd.setSelected(null);  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	||  stopAtNonOption)  {  cmd.setSelected(null);	  if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
157	[BUG]  [BUGGY]  Option  option  =  options.getOptions(),  cmd);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOptions(),  cmd);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOptions(),  cmd);	  Option    option    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
158	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOptionGroup();  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOptionGroup();	  Option    option    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
159	[BUG]  [BUGGY]  if(options!=  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options!=  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }	  if(options!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
160	[BUG]  [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(new  String[]  {  }  );  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(new  String[]  {  }  );  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(new  String[]  {  }  );  }	  if(options!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
161	[BUG]  [BUGGY]  if(arguments!=  null  &&  arguments.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(arguments!=  null  &&  arguments.size()  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments!=  null  &&  arguments.size()  >  0)  {	  if(expectedOpts!=    null    &&    arguments.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
162	[BUG]  [BUGGY]  if(options!=  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.removeChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options!=  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.removeChangeListener(this);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.removeChangeListener(this);  }	  if(options!=    null)    {    for(Option    Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
163	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
164	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd);  if(currentOption  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
165	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
166	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(String  argument  :  options.getRequiredArgs())  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(String  argument  :  options.getRequiredArgs())  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getRequiredOptions()!=  null)  {  for(String  argument  :  options.getRequiredArgs())  {  handleToken(argument);  }	  if(cmd!=    null)    {    for(String    argument    :    options.getRequiredArgs())    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
167	[BUG]  [BUGGY]  ||  cmd!=  null)  {  for(String  argument  :  options.getRequiredArgs())  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  ||  cmd!=  null)  {  for(String  argument  :  options.getRequiredArgs())  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	||  cmd!=  null)  {  for(String  argument  :  options.getRequiredArgs())  {  handleToken(argument);  }	  if(cmd!=    null)    {    for(String    argument    :    options.getRequiredArgs())    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
168	[BUG]  [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  for(String  argument  :  options.getRequiredArgs())  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  for(String  argument  :  options.getRequiredArgs())  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getRequiredOptions()  ==  null)  {  for(String  argument  :  options.getRequiredArgs())  {  handleToken(argument);  }	  if(cmd!=    null)    {    for(String    argument    :    options.getRequiredArgs())    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
169	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(options.getRequiredOptions(),  group);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(options.getRequiredOptions(),  group);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(options.getRequiredOptions(),  group);	  Option    currentOption    =    options.getOption(options.getRequiredOptions(),    cmd);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
170	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(options.getRequiredOptions(),  cmd,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(options.getRequiredOptions(),  cmd,  expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(options.getRequiredOptions(),  cmd,  expectedOpts);	  Option    currentOption    =    options.getOption(options.getRequiredOptions(),    cmd);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
171	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(options.getRequiredOptions(),  cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(options.getRequiredOptions(),  cmd,  stopAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(options.getRequiredOptions(),  cmd,  stopAtNonOption);	  Option    currentOption    =    options.getOption(options.getRequiredOptions(),    cmd);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
172	[BUG]  [BUGGY]  Argument[]  arguments  =  currentToken.toArray(new  Arguments);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Argument[]  arguments  =  currentToken.toArray(new  Arguments);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  currentToken.toArray(new  Arguments);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
173	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  currentToken,  expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  currentToken,  expectedOpts);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
174	[BUG]  [BUGGY]  Option[]  arguments  =  currentToken.toArray(new  Arguments);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option[]  arguments  =  currentToken.toArray(new  Arguments);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option[]  arguments  =  currentToken.toArray(new  Arguments);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
175	[BUG]  [BUGGY]  OptionGroup  argument  =  options.getOption(cmd,  currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  argument  =  options.getOption(cmd,  currentToken,  expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	OptionGroup  argument  =  options.getOption(cmd,  currentToken,  expectedOpts);	  OptionGroup    argument    =    options.getOption(cmd,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
176	[BUG]  [BUGGY]  OptionGroup  argument  =  currentOption.getOption(cmd,  options);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  argument  =  currentOption.getOption(cmd,  options);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	OptionGroup  argument  =  currentOption.getOption(cmd,  options);	  OptionGroup    argument    =    options.getOption(cmd,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
177	[BUG]  [BUGGY]  OptionGroup  argument  =  options.getOption(cmd,  currentToken,  null);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  argument  =  options.getOption(cmd,  currentToken,  null);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	OptionGroup  argument  =  options.getOption(cmd,  currentToken,  null);	  OptionGroup    argument    =    options.getOption(cmd,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
178	[BUG]  [BUGGY]  if(expectedOpts  ==  null)  {  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts  ==  null)  {  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts  ==  null)  {  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }	  if(expectedOpts!=    null)    {    for(String    argument    :    expectedOpts)    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
179	[BUG]  [BUGGY]  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	for(String  argument  :  expectedOpts)  {  handleToken(argument);  }	  if(expectedOpts!=    null)    {    for(String    argument    :    expectedOpts)    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
180	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group.getRequiredOptions(),  cmd);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(group.getRequiredOptions(),  cmd);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(group.getRequiredOptions(),  cmd);	  Option    currentOption    =    options.getOption(group.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
181	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group.getSelectedOption());  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(group.getSelectedOption());  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(group.getSelectedOption());	  Option    currentOption    =    options.getOption(group.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
182	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group.getSelectedOptions());  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(group.getSelectedOptions());  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(group.getSelectedOptions());	  Option    currentOption    =    options.getOption(group.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
183	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(options.getRequiredOptions(),  expectedOpts,  cmd);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(options.getRequiredOptions(),  expectedOpts,  cmd);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(options.getRequiredOptions(),  expectedOpts,  cmd);	  Option    currentOption    =    options.getOption(options.getRequiredOptions(),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
184	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(options.getRequiredOptions(),  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(options.getRequiredOptions(),  expectedOpts,  stopAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(options.getRequiredOptions(),  expectedOpts,  stopAtNonOption);	  Option    currentOption    =    options.getOption(options.getRequiredOptions(),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
185	[BUG]  [BUGGY]  Argument[]  arguments  =  new  Arguments(cmd.toArray(new  Arguments,  expectedOpts));  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Argument[]  arguments  =  new  Arguments(cmd.toArray(new  Arguments,  expectedOpts));  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  new  Arguments(cmd.toArray(new  Arguments,  expectedOpts));	  Argument[]    arguments    =    new    Arguments(cmd.toArray(new    Arguments));    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
186	[BUG]  [BUGGY]  Argument[]  arguments  =  new  Arguments(options.toArray(new  Arguments));  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Argument[]  arguments  =  new  Arguments(options.toArray(new  Arguments));  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  new  Arguments(options.toArray(new  Arguments));	  Argument[]    arguments    =    new    Arguments(cmd.toArray(new    Arguments));    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
187	[BUG]  [BUGGY]  Argument[]  arguments  =  new  Arguments(cmd.toArray(new  Arguments),  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Argument[]  arguments  =  new  Arguments(cmd.toArray(new  Arguments),  expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  new  Arguments(cmd.toArray(new  Arguments),  expectedOpts);	  Argument[]    arguments    =    new    Arguments(cmd.toArray(new    Arguments));    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
188	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  options,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  options,  expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  options,  expectedOpts);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    options);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
189	[BUG]  [BUGGY]  Option[]  arguments  =  options.toArray(new  Arguments,  cmd);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option[]  arguments  =  options.toArray(new  Arguments,  cmd);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option[]  arguments  =  options.toArray(new  Arguments,  cmd);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    options);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
190	[BUG]  [BUGGY]  Options  options  =  group.getOptions();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Options  options  =  group.getOptions();  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Options  options  =  group.getOptions();	  Options    options    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
191	[BUG]  [BUGGY]  OptionGroup  argument  =  options.getOption(group,  cmd);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  argument  =  options.getOption(group,  cmd);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	OptionGroup  argument  =  options.getOption(group,  cmd);	  OptionGroup    argument    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
192	[BUG]  [BUGGY]  OptionGroup  argument  =  cmd.getOption(group);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  argument  =  cmd.getOption(group);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	OptionGroup  argument  =  cmd.getOption(group);	  OptionGroup    argument    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
193	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(group.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  cmd  =  options.getOption(group.getRequiredOptions());  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  cmd  =  options.getOption(group.getRequiredOptions());	  Option    cmd    =    options.getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
194	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options.getRequiredOptions(),  expectedOpts);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  cmd  =  options.getOption(options.getRequiredOptions(),  expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  cmd  =  options.getOption(options.getRequiredOptions(),  expectedOpts);	  Option    cmd    =    options.getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
195	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options.getRequiredOptions(),  group);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  cmd  =  options.getOption(options.getRequiredOptions(),  group);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  cmd  =  options.getOption(options.getRequiredOptions(),  group);	  Option    cmd    =    options.getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
196	[BUG]  [BUGGY]  if(arguments  ==  null  ||  expectedOpts.size()  >=  0)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(arguments  ==  null  ||  expectedOpts.size()  >=  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments  ==  null  ||  expectedOpts.size()  >=  0)  {	  if(arguments    ==    null    ||    expectedOpts.size()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
197	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts.addAll(cmd);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts.addAll(cmd);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts.addAll(cmd);  }	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts.addAll(cmd);    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
198	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(cmd,  currentToken,  expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(cmd,  currentToken,  expectedOpts);	  Option    option    =    options.getOption(cmd,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
199	[BUG]  [BUGGY]  Option  option  =  currentOption.getOption(cmd,  options);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  currentOption.getOption(cmd,  options);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  currentOption.getOption(cmd,  options);	  Option    option    =    options.getOption(cmd,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
200	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getRequiredOptions()!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }	  if(options.getOptions()!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
201	[BUG]  [BUGGY]  if(options.getOptions()  ==  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getOptions()  ==  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getOptions()  ==  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }	  if(options.getOptions()!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
202	[BUG]  [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getRequiredOptions()  ==  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }	  if(options.getOptions()!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
203	[BUG]  [BUGGY]  Arrays.sort(options,  cmd);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Arrays.sort(options,  cmd);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Arrays.sort(options,  cmd);	  Arrays.sort(cmd,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
204	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts.add(currentOption);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts.add(currentOption);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts.add(currentOption);  }	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts.add(currentOption);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
205	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption  ==  null)  {  expectedOpts.add(currentOption);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption  ==  null)  {  expectedOpts.add(currentOption);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd);  if(currentOption  ==  null)  {  expectedOpts.add(currentOption);  }	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts.add(currentOption);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
206	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getRequiredOptions()!=  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }	  if(options.getOptions()!=    null)    {    for(Option    Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
207	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currToken,  cmd);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(currToken,  cmd);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currToken,  cmd);	  Option    currentOption    =    options.getOption(currToken);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
208	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(currToken,  expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currToken,  expectedOpts);	  Option    currentOption    =    options.getOption(currToken);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
209	[BUG]  [BUGGY]  if(cmd!=  null  ||  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd!=  null  ||  expectedOpts.size()  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd!=  null  ||  expectedOpts.size()  >  0)  {	  if(cmd!=    null    &&    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
210	[BUG]  [BUGGY]  if(cmd  ==  null  ||  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd  ==  null  ||  expectedOpts.size()  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd  ==  null  ||  expectedOpts.size()  >  0)  {	  if(cmd!=    null    &&    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
211	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(cmd,  currentToken,  stopAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(cmd,  currentToken,  stopAtNonOption);	  Option    option    =    options.getOption(cmd,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
212	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  currentToken,  null);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(cmd,  currentToken,  null);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(cmd,  currentToken,  null);	  Option    option    =    options.getOption(cmd,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
213	[BUG]  [BUGGY]  Option  options  =  options.getOptionOptions();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  options  =  options.getOptionOptions();  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  options  =  options.getOptionOptions();	  Options    options    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
214	[BUG]  [BUGGY]  Options  options  =  currentOption.getOptionOptions();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Options  options  =  currentOption.getOptionOptions();  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Options  options  =  currentOption.getOptionOptions();	  Options    options    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
215	[BUG]  [BUGGY]  OptionGroup  argument  =  options.getOption(cmd,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  argument  =  options.getOption(cmd,  currentToken,  stopAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	OptionGroup  argument  =  options.getOption(cmd,  currentToken,  stopAtNonOption);	  OptionGroup    argument    =    options.getOption(cmd,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
216	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(currentOption);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(currentOption);	  Option    option    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
217	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token);  if(currentOption!=  null)  {  expectedOpts.addAll(cmd);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(token);  if(currentOption!=  null)  {  expectedOpts.addAll(cmd);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(token);  if(currentOption!=  null)  {  expectedOpts.addAll(cmd);  }	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts.addAll(cmd);    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
218	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currToken);  if(currentOption!=  null)  {  expectedOpts.addAll(cmd);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(currToken);  if(currentOption!=  null)  {  expectedOpts.addAll(cmd);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currToken);  if(currentOption!=  null)  {  expectedOpts.addAll(cmd);  }	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts.addAll(cmd);    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
219	[BUG]  [BUGGY]  if(cmd!=  null  &&  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd!=  null  &&  expectedOpts.size()  ==  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd!=  null  &&  expectedOpts.size()  ==  0)  {	  if(arguments!=    null    &&    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
220	[BUG]  [BUGGY]  if(options!=  null  &&  options.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options!=  null  &&  options.size()  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null  &&  options.size()  >  0)  {	  if(options!=    null    &&    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
221	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(currToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
222	[BUG]  [BUGGY]  Arguments[]  arguments  =  cmd.toArray(newArguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Arguments[]  arguments  =  cmd.toArray(newArguments,  stopAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Arguments[]  arguments  =  cmd.toArray(newArguments,  stopAtNonOption);	  Arguments[]    arguments    =    cmd.toArray(newArguments);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
223	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  block);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  block);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd,  block);	  Option    currentOption    =    options.getOption(cmd,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
224	[BUG]  [BUGGY]  if(parameters!=  null  &&  arguments.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(parameters!=  null  &&  arguments.size()  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(parameters!=  null  &&  arguments.size()  >  0)  {	  if(expectedOpts!=    null    &&    arguments.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
225	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd.getRequiredOptions(),  null);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd.getRequiredOptions(),  null);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd.getRequiredOptions(),  null);	  Option    currentOption    =    options.getOption(cmd.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
226	[BUG]  [BUGGY]  OptionGroup  argument  =  options.getOption(currentOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  argument  =  options.getOption(currentOption);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	OptionGroup  argument  =  options.getOption(currentOption);	  OptionGroup    argument    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
227	[BUG]  [BUGGY]  OptionGroup  argument  =  options.getOptionArg(group);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  argument  =  options.getOptionArg(group);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	OptionGroup  argument  =  options.getOptionArg(group);	  OptionGroup    argument    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
228	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currToken);  if(currentOption!=  null)  {  expectedOpts.add(currentOption);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(currToken);  if(currentOption!=  null)  {  expectedOpts.add(currentOption);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currToken);  if(currentOption!=  null)  {  expectedOpts.add(currentOption);  }	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts.add(currentOption);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
229	[BUG]  [BUGGY]  if(options!=  null)  {  for(Option  Option  option  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options!=  null)  {  for(Option  Option  option  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null)  {  for(Option  Option  option  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(options!=    null)    {    for(Option    option    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
230	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOptionGroups();  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOptionGroups();	  if(options!=    null)    {    for(Option    option    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
231	[BUG]  [BUGGY]  if(currentToken!=  null  &&  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(currentToken!=  null  &&  expectedOpts.size()  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(currentToken!=  null  &&  expectedOpts.size()  >  0)  {	  if(expectedOpts!=    null    &&    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
232	[BUG]  [BUGGY]  if(cmd  ==  null)  {  for(String  argument  :  options.getArguments())  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd  ==  null)  {  for(String  argument  :  options.getArguments())  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd  ==  null)  {  for(String  argument  :  options.getArguments())  {  handleToken(argument);  }	  if(cmd!=    null)    {    for(String    argument    :    options.getArguments())    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
233	[BUG]  [BUGGY]  if(cmd!=  null)  {  for(String  argument  :  options.getOptionArgs())  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd!=  null)  {  for(String  argument  :  options.getOptionArgs())  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd!=  null)  {  for(String  argument  :  options.getOptionArgs())  {  handleToken(argument);  }	  if(cmd!=    null)    {    for(String    argument    :    options.getArguments())    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
234	[BUG]  [BUGGY]  Option  cmd  =  options.getArguments();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  cmd  =  options.getArguments();  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  cmd  =  options.getArguments();	  if(cmd!=    null)    {    for(String    argument    :    options.getArguments())    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
235	[BUG]  [BUGGY]  if(currentToken!=  null  &&  expectedOpts.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(currentToken!=  null  &&  expectedOpts.length  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(currentToken!=  null  &&  expectedOpts.length  >  0)  {	  if(expectedOpts!=    null    &&    expectedOpts.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
236	[BUG]  [BUGGY]  Options  currentOption  =  options.getOption(cmd);  expectedOpts.add(currentOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Options  currentOption  =  options.getOption(cmd);  expectedOpts.add(currentOption);  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Options  currentOption  =  options.getOption(cmd);  expectedOpts.add(currentOption);	  Option    currentOption    =    options.getOption(cmd);    expectedOpts.add(currentOption);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
237	[BUG]  [BUGGY]  if(expectedOpts!=  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts!=  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts!=  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }	  if(expectedOpts!=    null)    {    for(String    argument    :    expectedOpts)    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
238	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(currentToken,  stopAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(currentToken,  stopAtNonOption);	  Option    option    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
239	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(options.getRequiredOptions(),  null);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(options.getRequiredOptions(),  null);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(options.getRequiredOptions(),  null);	  Option    currentOption    =    options.getOption(options.getRequiredOptions(),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
240	[BUG]  [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setChangeListener(null);  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setChangeListener(null);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setChangeListener(null);  }	  if(options!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.setChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
241	[BUG]  [BUGGY]  if(cmd!=  null  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd!=  null  ||  expectedOpts.size()  ==  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd!=  null  ||  expectedOpts.size()  ==  0)  {	  if(cmd    ==    null    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
242	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  cmd.addChangeListener(this);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getRequiredOptions()!=  null)  {  cmd.addChangeListener(this);  }	  if(options.getOptions()!=    null)    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
243	[BUG]  [BUGGY]  Option[]  arguments  =  options.toArray(cmd);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option[]  arguments  =  options.toArray(cmd);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option[]  arguments  =  options.toArray(cmd);	  Argument[]    arguments    =    options.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
244	[BUG]  [BUGGY]  if(cmd  ==  null)  {  for(String  argument  :  options.getRequiredArgs())  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd  ==  null)  {  for(String  argument  :  options.getRequiredArgs())  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd  ==  null)  {  for(String  argument  :  options.getRequiredArgs())  {  handleToken(argument);  }	  if(cmd!=    null)    {    for(String    argument    :    options.getRequiredArgs())    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
245	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(String  argument  :  options.getRequiredArgs())  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(stopAtNonOption)  {  for(String  argument  :  options.getRequiredArgs())  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(stopAtNonOption)  {  for(String  argument  :  options.getRequiredArgs())  {  handleToken(argument);  }	  if(cmd!=    null)    {    for(String    argument    :    options.getRequiredArgs())    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
246	[BUG]  [BUGGY]  if(cmd!=  null)  {  for(String  argument  :  options.getRequiredOptions())  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd!=  null)  {  for(String  argument  :  options.getRequiredOptions())  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd!=  null)  {  for(String  argument  :  options.getRequiredOptions())  {  handleToken(argument);  }	  if(cmd!=    null)    {    for(String    argument    :    options.getRequiredArgs())    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
247	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
248	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setS  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setS  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currentToken);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setS	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
249	[BUG]  [BUGGY]  if(cmd  ==  null  &&  expectedOpts.length  >  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd  ==  null  &&  expectedOpts.length  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd  ==  null  &&  expectedOpts.length  >  0)  {	  if(cmd!=    null    &&    expectedOpts.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
250	[BUG]  [BUGGY]  Option  option  =  options.getOption(null);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(null);  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(null);	  if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
251	[BUG]  [BUGGY]  options.addChangeListener(this);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  options.addChangeListener(this);  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	options.addChangeListener(this);	  if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
252	[BUG]  [BUGGY]  if(arguments!=  null  &&  arguments.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(arguments!=  null  &&  arguments.length  ==  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments!=  null  &&  arguments.length  ==  0)  {	  if(arguments!=    null    ||    arguments.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
253	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options.getCurrentOption());  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  cmd  =  options.getOption(options.getCurrentOption());  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  cmd  =  options.getOption(options.getCurrentOption());	  Option    cmd    =    options.getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
254	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options.getArguments());  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  cmd  =  options.getOption(options.getArguments());  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  cmd  =  options.getOption(options.getArguments());	  Option    cmd    =    options.getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
255	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options.getRequiredOptions(),  null);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  cmd  =  options.getOption(options.getRequiredOptions(),  null);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  cmd  =  options.getOption(options.getRequiredOptions(),  null);	  Option    cmd    =    options.getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
256	[BUG]  [BUGGY]  Option  options  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  options  =  options.getOptionGroups();  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  options  =  options.getOptionGroups();	  Option    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
257	[BUG]  [BUGGY]  if(parameters!=  null)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(parameters!=  null)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(parameters!=  null)  {	  if(cmd!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
258	[BUG]  [BUGGY]  Option  option  =  options.getOption(options.getOptionGroups());  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(options.getOptionGroups());  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(options.getOptionGroups());	  Option    option    =    options.getOption(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
259	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getRequiredOptions())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getRequiredOptions())  {  cmd.setSelected(null);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(stopAtNonOption)  {  for(Option  option  :  options.getRequiredOptions())  {  cmd.setSelected(null);  }	  if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
260	[BUG]  [BUGGY]  OptionGroup  argument  =  options.getOptionArg(currentToken);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  argument  =  options.getOptionArg(currentToken);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	OptionGroup  argument  =  options.getOptionArg(currentToken);	  OptionGroup    argument    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
261	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(String  argument  :  values)  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(stopAtNonOption)  {  for(String  argument  :  values)  {  handleToken(argument);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(stopAtNonOption)  {  for(String  argument  :  values)  {  handleToken(argument);  }	  if(stopAtNonOption)    {    for(String    argument    :    arguments)    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
262	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getRequiredOptions()!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(options.getOptions()!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
263	[BUG]  [BUGGY]  if(options.getRequiredOptions()  >=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getRequiredOptions()  >=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getRequiredOptions()  >=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }	  if(options.getOptions()!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
264	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  cmd.getOption(options.getRequiredOptions());  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  cmd.getOption(options.getRequiredOptions());	  Option    currentOption    =    cmd.getOption(options.getRequiredOptions());    expectedOpts.add(currentOption);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
265	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(options.getRequiredOptions(),  null);  expectedOpts.add(currentOption);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  cmd.getOption(options.getRequiredOptions(),  null);  expectedOpts.add(currentOption);  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  cmd.getOption(options.getRequiredOptions(),  null);  expectedOpts.add(currentOption);	  Option    currentOption    =    cmd.getOption(options.getRequiredOptions());    expectedOpts.add(currentOption);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
266	[BUG]  [BUGGY]  &&  cmd!=  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  &&  cmd!=  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	&&  cmd!=  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }	  ||    cmd!=    null)    {    for(String    argument    :    arguments)    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
267	[BUG]  [BUGGY]  if(cmd  ==  null  &&  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd  ==  null  &&  expectedOpts.size()  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd  ==  null  &&  expectedOpts.size()  >  0)  {	  if(cmd!=    null    &&    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
268	[BUG]  [BUGGY]  Argument[]  arguments  =  new  Arguments(cmd.toArray(new  Arguments)+  1);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Argument[]  arguments  =  new  Arguments(cmd.toArray(new  Arguments)+  1);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  new  Arguments(cmd.toArray(new  Arguments)+  1);	  Argument[]    arguments    =    new    Arguments(cmd.toArray(new    Arguments));    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
269	[BUG]  [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getRequiredOptions()  ==  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }	  if(options.getOptions()!=    null)    {    for(Option    Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
270	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(options.getCurrentOption(),  expectedOpts);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(options.getCurrentOption(),  expectedOpts);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(options.getCurrentOption(),  expectedOpts);	  Option    currentOption    =    options.getOption(options.getCurrentOption());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
271	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(options.getRequiredOption());  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(options.getRequiredOption());  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(options.getRequiredOption());	  Option    currentOption    =    options.getOption(options.getCurrentOption());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
272	[BUG]  [BUGGY]  if(cmd!=  null  &&  expectedOpts.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd!=  null  &&  expectedOpts.length  ==  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd!=  null  &&  expectedOpts.length  ==  0)  {	  if(arguments!=    null    &&    expectedOpts.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
273	[BUG]  [BUGGY]  if(expectedOpts!=  null  &&  expectedOpts.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts!=  null  &&  expectedOpts.length  ==  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts!=  null  &&  expectedOpts.length  ==  0)  {	  if(arguments!=    null    &&    expectedOpts.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
274	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts.contains(argument))  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts.contains(argument))  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts  ==  null  ||  expectedOpts.contains(argument))  {	  if(arguments    ==    null    ||    expectedOpts.contains(argument))    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
275	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  cmd.getOption(currentToken,  stopAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  cmd.getOption(currentToken,  stopAtNonOption);	  Option    currentOption    =    cmd.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
276	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(defaultToken);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  cmd.getOption(defaultToken);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  cmd.getOption(defaultToken);	  Option    currentOption    =    cmd.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
277	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.set  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.set  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.set	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
278	[BUG]  [BUGGY]  if(arguments!=  null  ||  expectedOpts.size()!=  0)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(arguments!=  null  ||  expectedOpts.size()!=  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments!=  null  ||  expectedOpts.size()!=  0)  {	  if(arguments    ==    null    ||    expectedOpts.size()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
279	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts.size()!=  0)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts.size()!=  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts  ==  null  ||  expectedOpts.size()!=  0)  {	  if(arguments    ==    null    ||    expectedOpts.size()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
280	[BUG]  [BUGGY]  Arrays.sort(cmd,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Arrays.sort(cmd,  blockAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Arrays.sort(cmd,  blockAtNonOption);	  Arrays.sort(cmd,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
281	[BUG]  [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptionTools())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptionTools())  {  cmd.addChangeListener(this);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null)  {  for(Option  option  :  options.getOptionTools())  {  cmd.addChangeListener(this);  }	  if(options!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
282	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentToken,  currentToken);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(currentToken,  currentToken);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(currentToken,  currentToken);	  Option    option    =    options.getOption(cmd,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
283	[BUG]  [BUGGY]  if(cmd!=  null)  {  for(String  argument  :  options.getArgumentNames())  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd!=  null)  {  for(String  argument  :  options.getArgumentNames())  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd!=  null)  {  for(String  argument  :  options.getArgumentNames())  {  handleToken(argument);  }	  if(cmd!=    null)    {    for(String    argument    :    options.getArguments())    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
284	[BUG]  [BUGGY]  Option  currentOption  =  options.getOptionGroup(cmd);  if(currentOption!=  null)  {  expectedOpts.add(currentOption);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOptionGroup(cmd);  if(currentOption!=  null)  {  expectedOpts.add(currentOption);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOptionGroup(cmd);  if(currentOption!=  null)  {  expectedOpts.add(currentOption);  }	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts.add(currentOption);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
285	[BUG]  [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  currentToken);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  currentToken);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  options.toArray(new  Arguments,  currentToken);	  Argument[]    arguments    =    options.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
286	[BUG]  [BUGGY]  if(cmd!=  null  &&  cmd.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(cmd!=  null  &&  cmd.length()  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd!=  null  &&  cmd.length()  >  0)  {	  if(cmd!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
287	[BUG]  [BUGGY]  if(argument!=  null)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(argument!=  null)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(argument!=  null)  {	  if(cmd!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
288	[BUG]  [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(false);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(false);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(false);  }	  if(options!=    null)    {    for(Option    option    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
289	[BUG]  [BUGGY]  OptionGroup  argument  =  options.getOption(currentToken,  arguments);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  argument  =  options.getOption(currentToken,  arguments);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	OptionGroup  argument  =  options.getOption(currentToken,  arguments);	  OptionGroup    argument    =    options.getOption(cmd,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
290	[BUG]  [BUGGY]  Arrays.sort(this.cmd,  currentToken);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Arrays.sort(this.cmd,  currentToken);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Arrays.sort(this.cmd,  currentToken);	  Arrays.sort(cmd,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
291	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  options,  currentToken);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  options,  currentToken);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  options,  currentToken);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    options);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
292	[BUG]  [BUGGY]  if(expectedOpts  ==  null  &&  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts  ==  null  &&  expectedOpts.size()  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts  ==  null  &&  expectedOpts.size()  >  0)  {	  if(expectedOpts!=    null    &&    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
293	[BUG]  [BUGGY]  if(expectedOpts!=  null  &&  expectedOpts.size()  >  1)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts!=  null  &&  expectedOpts.size()  >  1)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts!=  null  &&  expectedOpts.size()  >  1)  {	  if(expectedOpts!=    null    &&    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
294	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  ||  stopAtNonOption)  {  cmd.setSelected(null);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	||  stopAtNonOption)  {  cmd.setSelected(null);  }	  if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
295	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  options  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  options  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getOptions()!=  null)  {  for(Option  options  :  options.getOptions())  {  cmd.addChangeListener(this);  }	  if(options.getOptions()    ==    null)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
296	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group.getImplicitRequiredOptions());  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(group.getImplicitRequiredOptions());  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(group.getImplicitRequiredOptions());	  Option    currentOption    =    options.getOption(group.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
297	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption();  expectedOpts.add(currentOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getRequiredOption();  expectedOpts.add(currentOption);  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getRequiredOption();  expectedOpts.add(currentOption);	  Option    currentOption    =    cmd.getOption(options.getRequiredOptions());    expectedOpts.add(currentOption);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
298	[BUG]  [BUGGY]  if(expectedOpts!=  null  ||  expectedOpts.contains(argument))  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts!=  null  ||  expectedOpts.contains(argument))  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts!=  null  ||  expectedOpts.contains(argument))  {	  if(arguments    ==    null    ||    expectedOpts.contains(argument))    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
299	[BUG]  [BUGGY]  if(arguments!=  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(arguments!=  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments!=  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }	  if(cmd    ==    null)    {    for(String    argument    :    arguments)    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
300	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(cmd,  blockAtNonOption);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(cmd,  blockAtNonOption);	  Option    option    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
301	[BUG]  [BUGGY]  Option  currentOption  =  options.getOptionGroup(cmd);  if(currentOption!=  null)  {  expectedOpts.addAll(cmd);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOptionGroup(cmd);  if(currentOption!=  null)  {  expectedOpts.addAll(cmd);  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOptionGroup(cmd);  if(currentOption!=  null)  {  expectedOpts.addAll(cmd);  }	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts.addAll(cmd);    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
302	[BUG]  [BUGGY]  if(expectedOpts  ==  null  &&  expectedOpts.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(expectedOpts  ==  null  &&  expectedOpts.length  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts  ==  null  &&  expectedOpts.length  >  0)  {	  if(expectedOpts!=    null    &&    expectedOpts.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
303	[BUG]  [BUGGY]  Options  options  =  options.getOptionOpts();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Options  options  =  options.getOptionOpts();  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Options  options  =  options.getOptionOpts();	  Options    options    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
304	[BUG]  [BUGGY]  Option[]  arguments  =  options.getOptionArguments(cmd);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option[]  arguments  =  options.getOptionArguments(cmd);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option[]  arguments  =  options.getOptionArguments(cmd);	  Option[]    arguments    =    options.getOptionArguments();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
305	[BUG]  [BUGGY]  if(options.getOptions()  ==  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getOptions()  ==  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getOptions()  ==  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }	  if(options.getOptions()!=    null)    {    for(Option    Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
306	[BUG]  [BUGGY]  Option[]  arguments  =  option.getArguments();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option[]  arguments  =  option.getArguments();  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option[]  arguments  =  option.getArguments();	  Option[]    arguments    =    options.getArguments();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
307	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(option);	  if(stopAtNonOption)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
308	[BUG]  [BUGGY]  Arguments[]  arguments  =  cmd.toArray(newArguments,  currentToken);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Arguments[]  arguments  =  cmd.toArray(newArguments,  currentToken);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Arguments[]  arguments  =  cmd.toArray(newArguments,  currentToken);	  Arguments[]    arguments    =    cmd.toArray(newArguments);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
309	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getOptions()!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(options.getOptions()!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
310	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
311	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  expectedOpts,  block);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  expectedOpts,  block);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd,  expectedOpts,  block);	  Option    currentOption    =    options.getOption(cmd,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
312	[BUG]  [BUGGY]  if(options.getOptions()!=  null  ||  expectedOpts.contains(options.getOptions()))  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options.getOptions()!=  null  ||  expectedOpts.contains(options.getOptions()))  {  cmd.addChangeListener(this);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getOptions()!=  null  ||  expectedOpts.contains(options.getOptions()))  {  cmd.addChangeListener(this);  }	  if(options.getOptions()!=    null)    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
313	[BUG]  [BUGGY]  if(exceptions!=  null)  {  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(exceptions!=  null)  {  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(exceptions!=  null)  {  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }	  if(expectedOpts!=    null)    {    for(String    argument    :    expectedOpts)    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
314	[BUG]  [BUGGY]  java.lang.ArrayList  expectedOpts  =  new  ArrayList(options.getRequiredOptions())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  java.lang.ArrayList  expectedOpts  =  new  ArrayList(options.getRequiredOptions())  {  cmd.setSelected(null);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	java.lang.ArrayList  expectedOpts  =  new  ArrayList(options.getRequiredOptions())  {  cmd.setSelected(null);  }	  if(expectedOpts!=    null)    {    for(String    argument    :    expectedOpts)    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
315	[BUG]  [BUGGY]  if(options!=  null  &&  options.getOptions().size()  >  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(options!=  null  &&  options.getOptions().size()  >  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null  &&  options.getOptions().size()  >  0)  {	  if(options!=    null    &&    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
316	[BUG]  [BUGGY]  ||  expectedOpts!=  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  ||  expectedOpts!=  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	||  expectedOpts!=  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }	  ||    cmd!=    null)    {    for(String    argument    :    arguments)    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
317	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  null,  0);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  null,  0);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  null,  0);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    null);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
318	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(options.getCurrentOption(),  group);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(options.getCurrentOption(),  group);  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(options.getCurrentOption(),  group);	  Option    currentOption    =    options.getOption(options.getCurrentOption());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
319	[BUG]  [BUGGY]  if(arguments!=  null  ||  expectedOpts.length!=  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  if(arguments!=  null  ||  expectedOpts.length!=  0)  {  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments!=  null  ||  expectedOpts.length!=  0)  {	  if(arguments    ==    null    ||    expectedOpts.length!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
320	[BUG]  [BUGGY]  Option  option  =  options.getOption(options.getOptionGroup());  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(options.getOptionGroup());  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(options.getOptionGroup());	  Option    option    =    options.getOption(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
321	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd.getImplicitRequiredOptions());  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOption(cmd.getImplicitRequiredOptions());  [BUGGY]      if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd.getImplicitRequiredOptions());	  Option    currentOption    =    options.getOption(cmd.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
322	[BUG]  [BUGGY]  Option  currentOption  =  options.getOptionGroup(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();      [BUGGY]  Option  currentOption  =  options.getOptionGroup(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOptionGroup(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	  Option    currentOption    =    options.getOption(cmd);    if(currentOption!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
