bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Options  options  =  cmd.getOptions();  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Options  options  =  cmd.getOptions();  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Options  options  =  cmd.getOptions();	      Options    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
2	[BUG]  [BUGGY]  Options  options  =  currentOption.getOptions();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Options  options  =  currentOption.getOptions();  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Options  options  =  currentOption.getOptions();	      Options    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
3	[BUG]  [BUGGY]  Option  options  =  cmd.getOptions();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  options  =  cmd.getOptions();  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  options  =  cmd.getOptions();	      Options    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
4	[BUG]  [BUGGY]  if(arguments  ==  null  ||  expectedOpts.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(arguments  ==  null  ||  expectedOpts.length  ==  0)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments  ==  null  ||  expectedOpts.length  ==  0)  {	  if(arguments!=    null    ||    expectedOpts.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
5	[BUG]  [BUGGY]  if(arguments  ==  null  ||  expectedOpts.length!=  0)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(arguments  ==  null  ||  expectedOpts.length!=  0)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments  ==  null  ||  expectedOpts.length!=  0)  {	  if(arguments!=    null    ||    expectedOpts.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
6	[BUG]  [BUGGY]  if(arguments!=  null  ||  arguments.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(arguments!=  null  ||  arguments.length  ==  0)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments!=  null  ||  arguments.length  ==  0)  {	  if(arguments!=    null    ||    expectedOpts.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
7	[BUG]  [BUGGY]  if(arguments!=  null  ||  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(arguments!=  null  ||  expectedOpts.size()  >  0)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments!=  null  ||  expectedOpts.size()  >  0)  {	  if(arguments!=    null    &&    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
8	[BUG]  [BUGGY]  if(expectedOpts!=  null  &&  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(expectedOpts!=  null  &&  expectedOpts.size()  >  0)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts!=  null  &&  expectedOpts.size()  >  0)  {	  if(arguments!=    null    &&    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
9	[BUG]  [BUGGY]  if(expectedOpts!=  null  &&  arguments.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(expectedOpts!=  null  &&  arguments.size()  >  0)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts!=  null  &&  arguments.size()  >  0)  {	  if(arguments!=    null    &&    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
10	[BUG]  [BUGGY]  Arrays.sort(cmd,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Arrays.sort(cmd,  expectedOpts);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Arrays.sort(cmd,  expectedOpts);	      Arrays.sort(cmd);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
11	[BUG]  [BUGGY]  Arrays.sort(expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Arrays.sort(expectedOpts);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Arrays.sort(expectedOpts);	      Arrays.sort(cmd);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
12	[BUG]  [BUGGY]  Arrays.sort(cmd,  currentToken);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Arrays.sort(cmd,  currentToken);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Arrays.sort(cmd,  currentToken);	      Arrays.sort(cmd);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
13	[BUG]  [BUGGY]  Option[]  arguments  =  options.getArguments();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option[]  arguments  =  options.getArguments();  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option[]  arguments  =  options.getArguments();	      Option[]    arguments    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
14	[BUG]  [BUGGY]  Option[]  arguments  =  cmd.getOptions();  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option[]  arguments  =  cmd.getOptions();  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option[]  arguments  =  cmd.getOptions();	      Option[]    arguments    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
15	[BUG]  [BUGGY]  Option[]  arguments  =  options.getParseOptions();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option[]  arguments  =  options.getParseOptions();  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option[]  arguments  =  options.getParseOptions();	      Option[]    arguments    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
16	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  cmd);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  cmd);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currentToken,  cmd);	      Option    currentOption    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
17	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  currentOption  =  cmd.getOption(currentToken);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  cmd.getOption(currentToken);	      Option    currentOption    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
18	[BUG]  [BUGGY]  OptionGroup  argument  =  options.getOption(group);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  OptionGroup  argument  =  options.getOption(group);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	OptionGroup  argument  =  options.getOption(group);	      OptionGroup    argument    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
19	[BUG]  [BUGGY]  OptionGroup  argument  =  options.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  OptionGroup  argument  =  options.getOption(currentToken);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	OptionGroup  argument  =  options.getOption(currentToken);	      OptionGroup    argument    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
20	[BUG]  [BUGGY]  OptionGroup  argument  =  options.getOption(cmd,  currentToken);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  OptionGroup  argument  =  options.getOption(cmd,  currentToken);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	OptionGroup  argument  =  options.getOption(cmd,  currentToken);	      OptionGroup    argument    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
21	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  currentOption  =  options.getOption(group);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(group);	      Option    currentOption    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
22	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  currentOption  =  options.getOption(cmd,  stopAtNonOption);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd,  stopAtNonOption);	      Option    currentOption    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
23	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  currentOption  =  options.getOption(cmd,  expectedOpts);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd,  expectedOpts);	      Option    currentOption    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  if(arguments  ==  null  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(arguments  ==  null  ||  expectedOpts.size()  ==  0)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments  ==  null  ||  expectedOpts.size()  ==  0)  {	  if(arguments!=    null    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
25	[BUG]  [BUGGY]  if(expectedOpts!=  null  ||  arguments.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(expectedOpts!=  null  ||  arguments.size()  ==  0)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts!=  null  ||  arguments.size()  ==  0)  {	  if(arguments!=    null    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
26	[BUG]  [BUGGY]  if(arguments  ==  null  ||  expectedOpts.size()!=  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(arguments  ==  null  ||  expectedOpts.size()!=  0)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments  ==  null  ||  expectedOpts.size()!=  0)  {	  if(arguments!=    null    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
27	[BUG]  [BUGGY]  if(expectedOpts!=  null)  {  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(expectedOpts!=  null)  {  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts!=  null)  {  for(String  argument  :  expectedOpts)  {  handleToken(argument);  }	      if(cmd!=    null)    {    for(String    argument    :    arguments)    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
28	[BUG]  [BUGGY]  ||  cmd!=  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  ||  cmd!=  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	||  cmd!=  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }	      if(cmd!=    null)    {    for(String    argument    :    arguments)    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
29	[BUG]  [BUGGY]  if(cmd  ==  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(cmd  ==  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd  ==  null)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }	      if(cmd!=    null)    {    for(String    argument    :    arguments)    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
30	[BUG]  [BUGGY]  if(arguments!=  null  ||  expectedOpts.length  >  0)  {  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(arguments!=  null  ||  expectedOpts.length  >  0)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments!=  null  ||  expectedOpts.length  >  0)  {	  if(arguments!=    null    &&    expectedOpts.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
31	[BUG]  [BUGGY]  if(expectedOpts!=  null  &&  expectedOpts.length  >  0)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(expectedOpts!=  null  &&  expectedOpts.length  >  0)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts!=  null  &&  expectedOpts.length  >  0)  {	  if(arguments!=    null    &&    expectedOpts.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
32	[BUG]  [BUGGY]  if(expectedOpts!=  null  &&  arguments.length  >  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(expectedOpts!=  null  &&  arguments.length  >  0)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts!=  null  &&  arguments.length  >  0)  {	  if(arguments!=    null    &&    expectedOpts.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
33	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(stopAtNonOption)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(stopAtNonOption)  {  for(String  argument  :  arguments)  {  handleToken(argument);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
34	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
35	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(stopAtNonOption)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
36	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(options.getRequiredOptions());  expectedOpts.add(currentOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  currentOption  =  cmd.getOption(options.getRequiredOptions());  expectedOpts.add(currentOption);  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  cmd.getOption(options.getRequiredOptions());  expectedOpts.add(currentOption);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
37	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts);	      Argument[]    arguments    =    cmd.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
38	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  currentToken);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  currentToken);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  currentToken);	      Argument[]    arguments    =    cmd.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
39	[BUG]  [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  options.toArray(new  Arguments);	      Argument[]    arguments    =    cmd.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
40	[BUG]  [BUGGY]  Arguments[]  arguments  =  cmd.toArray(newArguments);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Arguments[]  arguments  =  cmd.toArray(newArguments);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Arguments[]  arguments  =  cmd.toArray(newArguments);	      Argument[]    arguments    =    cmd.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
41	[BUG]  [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }	      if(cmd!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
42	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getOptions()!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }	      if(cmd!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
43	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getOptions()!=  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.setSelected(null);  }	      if(cmd!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
44	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  cmd  =  options.getOption(options.getRequiredOptions());  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  cmd  =  options.getOption(options.getRequiredOptions());	      if(cmd!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
45	[BUG]  [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }	      if(cmd!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
46	[BUG]  [BUGGY]  if(options!=  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(options!=  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null)  {  for(Option  Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }	      if(cmd!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
47	[BUG]  [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.removeChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.removeChangeListener(this);  }  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.removeChangeListener(this);  }	      if(cmd!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
48	[BUG]  [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setChangeListener(this);  }  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.setChangeListener(this);  }	      if(cmd!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
49	[BUG]  [BUGGY]  Option  option  =  options.getOption(group);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  option  =  options.getOption(group);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(group);	      Option    option    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
50	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  option  =  options.getOption(currentToken);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(currentToken);	      Option    option    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
51	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  currentToken);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  option  =  options.getOption(cmd,  currentToken);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(cmd,  currentToken);	      Option    option    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
52	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  option  =  options.getOption(cmd,  expectedOpts);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(cmd,  expectedOpts);	      Option    option    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
53	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(options.getRequiredOptions(),  cmd);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  currentOption  =  options.getOption(options.getRequiredOptions(),  cmd);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(options.getRequiredOptions(),  cmd);	      Option    currentOption    =    options.getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
54	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  currentOption  =  options.getOption(group.getRequiredOptions());  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(group.getRequiredOptions());	      Option    currentOption    =    options.getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
55	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  currentOption  =  options.getOption(cmd.getRequiredOptions());  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd.getRequiredOptions());	      Option    currentOption    =    options.getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
56	[BUG]  [BUGGY]  if(cmd  ==  null  ||  expectedOpts.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(cmd  ==  null  ||  expectedOpts.length  ==  0)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd  ==  null  ||  expectedOpts.length  ==  0)  {	  if(arguments!=    null    ||    expectedOpts.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
57	[BUG]  [BUGGY]  if(arguments!=  null  &&  expectedOpts.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(arguments!=  null  &&  expectedOpts.length  ==  0)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments!=  null  &&  expectedOpts.length  ==  0)  {	  if(arguments!=    null    ||    expectedOpts.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
58	[BUG]  [BUGGY]  if(arguments!=  null  &&  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(arguments!=  null  &&  expectedOpts.size()  ==  0)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments!=  null  &&  expectedOpts.size()  ==  0)  {	  if(arguments!=    null    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
59	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currToken);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  currentOption  =  options.getOption(currToken);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currToken);	      Option    currentOption    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
60	[BUG]  [BUGGY]  Option[]  arguments  =  options.getParserOptions();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option[]  arguments  =  options.getParserOptions();  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option[]  arguments  =  options.getParserOptions();	      Option[]    arguments    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
61	[BUG]  [BUGGY]  if(cmd!=  null  &&  expectedOpts.length  >  0)  {  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(cmd!=  null  &&  expectedOpts.length  >  0)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd!=  null  &&  expectedOpts.length  >  0)  {	  if(arguments!=    null    &&    expectedOpts.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
62	[BUG]  [BUGGY]  Option  options  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  options  =  options.getOptions();  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  options  =  options.getOptions();	      Options    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
63	[BUG]  [BUGGY]  if(cmd!=  null  &&  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(cmd!=  null  &&  expectedOpts.size()  >  0)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd!=  null  &&  expectedOpts.size()  >  0)  {	  if(arguments!=    null    &&    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
64	[BUG]  [BUGGY]  if(options!=  null  &&  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(options!=  null  &&  expectedOpts.size()  >  0)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null  &&  expectedOpts.size()  >  0)  {	  if(arguments!=    null    &&    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
65	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  option  =  options.getOption(cmd,  stopAtNonOption);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(cmd,  stopAtNonOption);	      Option    option    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
66	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(options.getCurrentOption());  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  currentOption  =  options.getOption(options.getCurrentOption());  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(options.getCurrentOption());	      Option    currentOption    =    options.getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
67	[BUG]  [BUGGY]  Arrays.sort(cmd,  currentOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Arrays.sort(cmd,  currentOption);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Arrays.sort(cmd,  currentOption);	      Arrays.sort(cmd);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
68	[BUG]  [BUGGY]  if(cmd!=  null)  {  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(cmd!=  null)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd!=  null)  {	  if(cmd    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
69	[BUG]  [BUGGY]  if(cmd  ==  null  ||!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(cmd  ==  null  ||!stopAtNonOption)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd  ==  null  ||!stopAtNonOption)  {	  if(cmd    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
70	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  options);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  options);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  options);	      Argument[]    arguments    =    cmd.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
71	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  null);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  null);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  null);	      Argument[]    arguments    =    cmd.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
72	[BUG]  [BUGGY]  OptionGroup  argument  =  options.getOption(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  OptionGroup  argument  =  options.getOption(cmd,  stopAtNonOption);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	OptionGroup  argument  =  options.getOption(cmd,  stopAtNonOption);	      OptionGroup    argument    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
73	[BUG]  [BUGGY]  if(cmd!=  null)  {  for(String  argument  :  options.getArguments())  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(cmd!=  null)  {  for(String  argument  :  options.getArguments())  {  handleToken(argument);  }  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd!=  null)  {  for(String  argument  :  options.getArguments())  {  handleToken(argument);  }	      if(cmd!=    null)    {    for(String    argument    :    arguments)    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
74	[BUG]  [BUGGY]  if(cmd!=  null)  {  for(String  argument  :  options.getRequiredArgs())  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(cmd!=  null)  {  for(String  argument  :  options.getRequiredArgs())  {  handleToken(argument);  }  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd!=  null)  {  for(String  argument  :  options.getRequiredArgs())  {  handleToken(argument);  }	      if(cmd!=    null)    {    for(String    argument    :    arguments)    {    handleToken(argument);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
75	[BUG]  [BUGGY]  Option  option  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  option  =  options.getOptions();  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOptions();	      if(cmd!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
76	[BUG]  [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }	      if(cmd!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
77	[BUG]  [BUGGY]  Option  option  =  options.getOption(options.getOptions());  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  option  =  options.getOption(options.getOptions());  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  option  =  options.getOption(options.getOptions());	      if(cmd!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
78	[BUG]  [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(options!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(cmd!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
79	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
80	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
81	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
82	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
83	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getOptions()!=  null)  {  for(Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }	      if(cmd!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
84	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(options.getOptions()!=  null)  {  cmd.addChangeListener(this);  }  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getOptions()!=  null)  {  cmd.addChangeListener(this);  }	      if(cmd!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
85	[BUG]  [BUGGY]  if(options.getOptions()  ==  null)  {  for(Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(options.getOptions()  ==  null)  {  for(Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(options.getOptions()  ==  null)  {  for(Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }	      if(cmd!=    null)    {    for(Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
86	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(options.getRequiredOptions(),  expectedOpts);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  currentOption  =  options.getOption(options.getRequiredOptions(),  expectedOpts);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(options.getRequiredOptions(),  expectedOpts);	      Option    currentOption    =    options.getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
87	[BUG]  [BUGGY]  if(expectedOpts!=  null  ||  expectedOpts.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(expectedOpts!=  null  ||  expectedOpts.length  ==  0)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts!=  null  ||  expectedOpts.length  ==  0)  {	  if(arguments!=    null    ||    expectedOpts.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
88	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  expectedOpts);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(currentToken,  expectedOpts);	      Option    currentOption    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
89	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  null);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  currentOption  =  options.getOption(cmd,  null);  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd,  null);	      Option    currentOption    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
90	[BUG]  [BUGGY]  if(expectedOpts!=  null  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(expectedOpts!=  null  ||  expectedOpts.size()  ==  0)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(expectedOpts!=  null  ||  expectedOpts.size()  ==  0)  {	  if(arguments!=    null    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
91	[BUG]  [BUGGY]  if(arguments  ==  null  ||  expectedOpts.contains(argument))  {  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(arguments  ==  null  ||  expectedOpts.contains(argument))  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments  ==  null  ||  expectedOpts.contains(argument))  {	  if(arguments    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
92	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts.add(currentOption);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts.add(currentOption);  }  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts.add(currentOption);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
93	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts.addAll(cmd);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts.addAll(cmd);  }  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd);  if(currentOption!=  null)  {  expectedOpts.addAll(cmd);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
94	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd);  expectedOpts.add(currentOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option  currentOption  =  options.getOption(cmd);  expectedOpts.add(currentOption);  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option  currentOption  =  options.getOption(cmd);  expectedOpts.add(currentOption);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
95	[BUG]  [BUGGY]  if(arguments  ==  null  &&  expectedOpts.length  >  0)  {  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(arguments  ==  null  &&  expectedOpts.length  >  0)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(arguments  ==  null  &&  expectedOpts.length  >  0)  {	  if(arguments!=    null    &&    expectedOpts.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
96	[BUG]  [BUGGY]  Option[]  arguments  =  options.getOptionArguments();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Option[]  arguments  =  options.getOptionArguments();  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Option[]  arguments  =  options.getOptionArguments();	      Option[]    arguments    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
97	[BUG]  [BUGGY]  if(cmd  ==  null  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  if(cmd  ==  null  ||  expectedOpts.size()  ==  0)  {  [BUGGY]    {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	if(cmd  ==  null  ||  expectedOpts.size()  ==  0)  {	  if(cmd    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
98	[BUG]  [BUGGY]  Options  options  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Options  options  =  options.getOptionGroups();  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Options  options  =  options.getOptionGroups();	      Options    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
99	[BUG]  [BUGGY]  Argument[]  arguments  =  new  Arguments(cmd.toArray(new  Arguments));  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();    [BUGGY]  Argument[]  arguments  =  new  Arguments(cmd.toArray(new  Arguments));  [BUGGY]    if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	116	117	1	replace	Argument[]  arguments  =  new  Arguments(cmd.toArray(new  Arguments));	      Argument[]    arguments    =    cmd.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
