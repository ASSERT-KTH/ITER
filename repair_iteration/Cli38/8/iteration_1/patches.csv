bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions();  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  Option  options  =  currentOption.getOptions();  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  currentOption.getOptions();	      Option    options    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
2	[BUG]  [BUGGY]  Option  options  =  option.getOptions(t);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  Option  options  =  option.getOptions(t);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  option.getOptions(t);	      Option    options    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
3	[BUG]  [BUGGY]  if(options.getOption(t)!=  null  &&  options.getOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  if(options.getOption(t)!=  null  &&  options.getOption(t).isEmpty())  {  [BUGGY]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t)!=  null  &&  options.getOption(t).isEmpty())  {	  if    (options.getOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
4	[BUG]  [BUGGY]  if(options.getOption(t).isEmpty()  ||  options.getOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  if(options.getOption(t).isEmpty()  ||  options.getOption(t).isEmpty())  {  [BUGGY]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t).isEmpty()  ||  options.getOption(t).isEmpty())  {	  if    (options.getOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
5	[BUG]  [BUGGY]  if  (!options.getMatchingOption(t).isEmpty()  ||!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  if  (!options.getMatchingOption(t).isEmpty()  ||!token.startsWith( "- "))  {  [BUGGY]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if  (!options.getMatchingOption(t).isEmpty()  ||!token.startsWith( "- "))  {	  if    (!options.getMatchingOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
6	[BUG]  [BUGGY]  if(options.getMatchingOption(t)!=  null  &&  options.getMatchingOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  if(options.getMatchingOption(t)!=  null  &&  options.getMatchingOption(t).isEmpty())  {  [BUGGY]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t)!=  null  &&  options.getMatchingOption(t).isEmpty())  {	  if    (options.getMatchingOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  if(options.getMatchingOption(t).isEmpty()  ||  token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  if(options.getMatchingOption(t).isEmpty()  ||  token.startsWith( "- "))  {  [BUGGY]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t).isEmpty()  ||  token.startsWith( "- "))  {	  if    (options.getMatchingOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  Options  options  =  options.getOptions(t,  pos);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  Options  options  =  options.getOptions(t,  pos);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Options  options  =  options.getOptions(t,  pos);	      Options    options    =    options.getOptions(t);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
9	[BUG]  [BUGGY]  Option  options  =  options.getOptions(t,  pos);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  Option  options  =  options.getOptions(t,  pos);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  options.getOptions(t,  pos);	      Options    options    =    options.getOptions(t);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
10	[BUG]  [BUGGY]  Option  options  =  option.getOption(t,  pos);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  Option  options  =  option.getOption(t,  pos);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  option.getOption(t,  pos);	      Option    options    =    option.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
11	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(t);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  Option  options  =  currentOption.getOption(t);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  currentOption.getOption(t);	      Option    options    =    option.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
12	[BUG]  [BUGGY]  if(!options.getMatchingOptions(t).isEmpty()  &&!token.startsWith( "-   "))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  if(!options.getMatchingOptions(t).isEmpty()  &&!token.startsWith( "-   "))  {  [BUGGY]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(!options.getMatchingOptions(t).isEmpty()  &&!token.startsWith( "-   "))  {	  if(!options.getMatchingOptions(t).isEmpty()    ||!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||!token.startsWith( "- "))  {  [BUGGY]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOptions(t).isEmpty()  ||!token.startsWith( "- "))  {	  if(!options.getMatchingOptions(t).isEmpty()    ||!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
14	[BUG]  [BUGGY]  Option  options  =  options.getOption(t,  pos);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  Option  options  =  options.getOption(t,  pos);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  options.getOption(t,  pos);	      Option    options    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
15	[BUG]  [BUGGY]  Option  options  =  options.getOption(t,  token);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  Option  options  =  options.getOption(t,  token);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  options.getOption(t,  token);	      Option    options    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
16	[BUG]  [BUGGY]  Option  options  =  options.getOptions(t,  value);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  Option  options  =  options.getOptions(t,  value);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  options.getOptions(t,  value);	      Option    options    =    options.getOptions(t);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
17	[BUG]  [BUGGY]  Option  options  =  options.getOptions(t,  token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  Option  options  =  options.getOptions(t,  token);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  options.getOptions(t,  token);	      Option    options    =    options.getOptions(t);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  Options  options  =  currentOption.getOptions();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  Options  options  =  currentOption.getOptions();  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Options  options  =  currentOption.getOptions();	      Options    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
19	[BUG]  [BUGGY]  if  (options.getMatchingOption(t)!=  null  &&!options.getMatchingOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  if  (options.getMatchingOption(t)!=  null  &&!options.getMatchingOption(t).isEmpty())  {  [BUGGY]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if  (options.getMatchingOption(t)!=  null  &&!options.getMatchingOption(t).isEmpty())  {	  if    (options.getMatchingOption(t)!=    null    &&!options.getMatchingOptions(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
20	[BUG]  [BUGGY]  if  (options.getMatchingOption(t)!=  null  ||!options.getMatchingOptions(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  if  (options.getMatchingOption(t)!=  null  ||!options.getMatchingOptions(t).isEmpty())  {  [BUGGY]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if  (options.getMatchingOption(t)!=  null  ||!options.getMatchingOptions(t).isEmpty())  {	  if    (options.getMatchingOption(t)!=    null    &&!options.getMatchingOptions(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
21	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  pos);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  Option  option  =  options.getOption(t,  pos);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  option  =  options.getOption(t,  pos);	      Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
22	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  token);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  Option  option  =  options.getOption(t,  token);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  option  =  options.getOption(t,  token);	      Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
23	[BUG]  [BUGGY]  Option  option  =  options.getOption(t  +  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  Option  option  =  options.getOption(t  +  1);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  option  =  options.getOption(t  +  1);	      Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
24	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOptions(t)!=  null  &&!token.startsWith( "- "))  {	  if(!options.getMatchingOptions(t).isEmpty()    ||!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
25	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  value);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  Option  option  =  options.getOption(t,  value);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  option  =  options.getOption(t,  value);	      Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
26	[BUG]  [BUGGY]  if(options.getOption(t).isEmpty()  ||  options.getOption(t)!=  null)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  if(options.getOption(t).isEmpty()  ||  options.getOption(t)!=  null)  {  [BUGGY]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t).isEmpty()  ||  options.getOption(t)!=  null)  {	  if    (options.getOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
27	[BUG]  [BUGGY]  if  (options.getMatchingOption(t).isEmpty()  &&  token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  if  (options.getMatchingOption(t).isEmpty()  &&  token.startsWith( "- "))  {  [BUGGY]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if  (options.getMatchingOption(t).isEmpty()  &&  token.startsWith( "- "))  {	  if    (options.getMatchingOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
28	[BUG]  [BUGGY]  if  (options.getOption(t)!=  null  &&!options.getMatchingOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  if  (options.getOption(t)!=  null  &&!options.getMatchingOption(t).isEmpty())  {  [BUGGY]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if  (options.getOption(t)!=  null  &&!options.getMatchingOption(t).isEmpty())  {	  if    (options.getMatchingOption(t)!=    null    &&!options.getMatchingOptions(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
29	[BUG]  [BUGGY]  if  (options.getMatchingOption(t).isEmpty()  ||  option.equals(t))  {  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  if  (options.getMatchingOption(t).isEmpty()  ||  option.equals(t))  {  [BUGGY]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if  (options.getMatchingOption(t).isEmpty()  ||  option.equals(t))  {	  if    (!options.getMatchingOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
30	[BUG]  [BUGGY]  if  (options.getMatchingOption(t).isEmpty()  ||  options.getLongPrefix(t)!=  null)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  if  (options.getMatchingOption(t).isEmpty()  ||  options.getLongPrefix(t)!=  null)  {  [BUGGY]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if  (options.getMatchingOption(t).isEmpty()  ||  options.getLongPrefix(t)!=  null)  {	  if    (!options.getMatchingOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
31	[BUG]  [BUGGY]  if  (!options.getMatchingOption(t).isEmpty()  ||  options.getLongPrefix(t)!=  null)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  if  (!options.getMatchingOption(t).isEmpty()  ||  options.getLongPrefix(t)!=  null)  {  [BUGGY]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if  (!options.getMatchingOption(t).isEmpty()  ||  options.getLongPrefix(t)!=  null)  {	  if    (!options.getMatchingOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
32	[BUG]  [BUGGY]  Option  options  =  options.getOption(t,  value);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  Option  options  =  options.getOption(t,  value);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  options.getOption(t,  value);	      Option    options    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
33	[BUG]  [BUGGY]  if(options.getMatchingOption(t)!=  null  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  if(options.getMatchingOption(t)!=  null  &&  options.isEmpty())  {  [BUGGY]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t)!=  null  &&  options.isEmpty())  {	  if    (options.getMatchingOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
34	[BUG]  [BUGGY]  if(options.getMatchingOption(t).isEmpty()  ||  options.getMatchingOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  if(options.getMatchingOption(t).isEmpty()  ||  options.getMatchingOption(t).isEmpty())  {  [BUGGY]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t).isEmpty()  ||  options.getMatchingOption(t).isEmpty())  {	  if    (options.getMatchingOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
35	[BUG]  [BUGGY]  if(!options.getMatchingOptions(t).isEmpty()  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  if(!options.getMatchingOptions(t).isEmpty()  &&!token.startsWith( "-- "))  {  [BUGGY]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(!options.getMatchingOptions(t).isEmpty()  &&!token.startsWith( "-- "))  {	  if(!options.getMatchingOptions(t).isEmpty()    ||!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
36	[BUG]  [BUGGY]  if(options.getOption(t).length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  if(options.getOption(t).length()  ==  0)  {  [BUGGY]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t).length()  ==  0)  {	  if    (options.getOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  if(options.getMatchingOption(t)!=  null  &&!options.getMatchingOption(t).isLong())  {  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  if(options.getMatchingOption(t)!=  null  &&!options.getMatchingOption(t).isLong())  {  [BUGGY]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t)!=  null  &&!options.getMatchingOption(t).isLong())  {	  if    (options.getMatchingOption(t)!=    null    &&!options.getMatchingOptions(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
38	[BUG]  [BUGGY]  if(!options.getMatchingOption(t).isEmpty()  ||!token.equals( "- "))  {  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  if(!options.getMatchingOption(t).isEmpty()  ||!token.equals( "- "))  {  [BUGGY]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(!options.getMatchingOption(t).isEmpty()  ||!token.equals( "- "))  {	  if    (!options.getMatchingOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
39	[BUG]  [BUGGY]  Option  options  =  options.getOptions(t  +  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);    [BUGGY]  Option  options  =  options.getOptions(t  +  1);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  options.getOptions(t  +  1);	      Option    options    =    options.getOptions(t);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
