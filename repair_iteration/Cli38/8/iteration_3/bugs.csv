bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (!options.getMatchingOption(t).isEmpty()  &&!token.startsWith( "-   "))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if  (!options.getMatchingOption(t).isEmpty()  &&!token.startsWith( "-   "))  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if  (!options.getMatchingOption(t).isEmpty()  &&!token.startsWith( "-   "))  {	  if    (!options.getMatchingOption(t).isEmpty()    ||!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  if(options.getMatchingOption(t)!=  null  ||  options.getMatchingOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t)!=  null  ||  options.getMatchingOption(t).isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t)!=  null  ||  options.getMatchingOption(t).isEmpty())  {	  if(options.getMatchingOption(t)!=    null    &&    options.getMatchingOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
3	[BUG]  [BUGGY]  if(options.getLongPrefix(t)!=  null  &&  options.getMatchingOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getLongPrefix(t)!=  null  &&  options.getMatchingOption(t).isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getLongPrefix(t)!=  null  &&  options.getMatchingOption(t).isEmpty())  {	  if(options.getMatchingOption(t)!=    null    &&    options.getMatchingOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
4	[BUG]  [BUGGY]  Option  options  =  options.getOption(t,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  options  =  options.getOption(t,  pos  +  1);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  options.getOption(t,  pos  +  1);	  Option    options    =    options.getOption(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
5	[BUG]  [BUGGY]  Option  options  =  options.getOption(t,  pos,  token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  options  =  options.getOption(t,  pos,  token);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  options.getOption(t,  pos,  token);	  Option    options    =    options.getOption(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
6	[BUG]  [BUGGY]  Options  options  =  options.getOption(t,  pos);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Options  options  =  options.getOption(t,  pos);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Options  options  =  options.getOption(t,  pos);	  Option    options    =    options.getOption(t,    value);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
7	[BUG]  [BUGGY]  if(options.getMatchingOption(t)!=  null  ||!options.getMatchingOption(t).isLong())  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t)!=  null  ||!options.getMatchingOption(t).isLong())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t)!=  null  ||!options.getMatchingOption(t).isLong())  {	  if(options.getMatchingOption(t)!=    null    &&!options.getMatchingOption(t).isLong())    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
8	[BUG]  [BUGGY]  if(options.getMatchingOption(t)!=  null  &&!options.getMatchingOption(t).isNumber())  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t)!=  null  &&!options.getMatchingOption(t).isNumber())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t)!=  null  &&!options.getMatchingOption(t).isNumber())  {	  if(options.getMatchingOption(t)!=    null    &&!options.getMatchingOption(t).isLong())    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
9	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  option  =  options.getOption(t,  pos  +  1);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  option  =  options.getOption(t,  pos  +  1);	  Option    option    =    options.getOption(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
10	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  pos,  token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  option  =  options.getOption(t,  pos,  token);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  option  =  options.getOption(t,  pos,  token);	  Option    option    =    options.getOption(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
11	[BUG]  [BUGGY]  Option  options  =  options.getOptions(t,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  options  =  options.getOptions(t,  pos  +  1);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  options.getOptions(t,  pos  +  1);	  Option    options    =    options.getOptions(t    +    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
12	[BUG]  [BUGGY]  Option  options  =  options.getOptions(t  +  pos);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  options  =  options.getOptions(t  +  pos);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  options.getOptions(t  +  pos);	  Option    options    =    options.getOptions(t    +    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
13	[BUG]  [BUGGY]  if  (options.getMatchingOption(t).isEmpty()  &&  options.getLongPrefix(t)!=  null)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if  (options.getMatchingOption(t).isEmpty()  &&  options.getLongPrefix(t)!=  null)  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if  (options.getMatchingOption(t).isEmpty()  &&  options.getLongPrefix(t)!=  null)  {	  if    (options.getMatchingOption(t).isEmpty()    ||    options.getLongPrefix(t)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
14	[BUG]  [BUGGY]  if  (options.getMatchingOption(t).isEmpty()  ||  options.getLongPrefix(t)  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if  (options.getMatchingOption(t).isEmpty()  ||  options.getLongPrefix(t)  ==  null)  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if  (options.getMatchingOption(t).isEmpty()  ||  options.getLongPrefix(t)  ==  null)  {	  if    (options.getMatchingOption(t).isEmpty()    ||    options.getLongPrefix(t)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
15	[BUG]  [BUGGY]  Option  options  =  options.getOptions(t,  value  -  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  options  =  options.getOptions(t,  value  -  1);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  options.getOptions(t,  value  -  1);	  Option    options    =    options.getOptions(t,    value);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
16	[BUG]  [BUGGY]  if  (!options.getMatchingOption(t).isEmpty()  &&  options.getLongPrefix(t)!=  null)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if  (!options.getMatchingOption(t).isEmpty()  &&  options.getLongPrefix(t)!=  null)  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if  (!options.getMatchingOption(t).isEmpty()  &&  options.getLongPrefix(t)!=  null)  {	  if    (!options.getMatchingOption(t).isEmpty()    ||    options.getLongPrefix(t)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
17	[BUG]  [BUGGY]  Option  options  =  option.getOptions(t,  pos);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  options  =  option.getOptions(t,  pos);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  option.getOptions(t,  pos);	  Option    options    =    option.getOptions(t);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions(t);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  options  =  currentOption.getOptions(t);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  currentOption.getOptions(t);	  Option    options    =    option.getOptions(t);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  option  =  options.getOption(pos  +  1);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  option  =  options.getOption(pos  +  1);	  Option    option    =    options.getOption(t    +    1);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
20	[BUG]  [BUGGY]  if  (options.getMatchingOption(t)!=  null  ||!options.getMatchingOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if  (options.getMatchingOption(t)!=  null  ||!options.getMatchingOption(t).isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if  (options.getMatchingOption(t)!=  null  ||!options.getMatchingOption(t).isEmpty())  {	  if    (options.getMatchingOption(t)!=    null    ||!options.getMatchingOptions(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
21	[BUG]  [BUGGY]  if(options.getMatchingOption(t).isNullOrUndefined()  ||  token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t).isNullOrUndefined()  ||  token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t).isNullOrUndefined()  ||  token.startsWith( "- "))  {	  if(options.getMatchingOption(t).isEmpty()    ||    token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
22	[BUG]  [BUGGY]  if(options.getMatchingOption(t).isEmpty()  ||  token.equals( "- "))  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t).isEmpty()  ||  token.equals( "- "))  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t).isEmpty()  ||  token.equals( "- "))  {	  if(options.getMatchingOption(t).isEmpty()    ||    token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  Option  options  =  options.getOptions(t,  pos,  token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  options  =  options.getOptions(t,  pos,  token);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  options.getOptions(t,  pos,  token);	  Option    options    =    options.getOptions(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
24	[BUG]  [BUGGY]  if(options.getMatchingOption(t)!=  null  ||  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t)!=  null  ||  options.isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t)!=  null  ||  options.isEmpty())  {	  if(options.getMatchingOption(t)!=    null    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
25	[BUG]  [BUGGY]  if(options.getMatchingOption(t)  ==  null  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t)  ==  null  &&  options.isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t)  ==  null  &&  options.isEmpty())  {	  if(options.getMatchingOption(t)!=    null    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
26	[BUG]  [BUGGY]  if(options.getMatchingOption(t)  ==  null  ||  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t)  ==  null  ||  options.isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t)  ==  null  ||  options.isEmpty())  {	  if(options.getMatchingOption(t)!=    null    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
27	[BUG]  [BUGGY]  Option  options  =  t.getOptions();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  options  =  t.getOptions();  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  t.getOptions();	  Option    options    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
28	[BUG]  [BUGGY]  if(options.getOption(t)!=  null  ||  options.getOption(t).length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t)!=  null  ||  options.getOption(t).length()  ==  0)  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t)!=  null  ||  options.getOption(t).length()  ==  0)  {	  if(options.getOption(t).length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
29	[BUG]  [BUGGY]  if(options.getOption(t).length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t).length()  ==  1)  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t).length()  ==  1)  {	  if(options.getOption(t).length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
30	[BUG]  [BUGGY]  if(options.getOption(t).length()  ==  0  ||  options.getOption(t).length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t).length()  ==  0  ||  options.getOption(t).length()  ==  0)  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t).length()  ==  0  ||  options.getOption(t).length()  ==  0)  {	  if(options.getOption(t).length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
31	[BUG]  [BUGGY]  if  (options.getMatchingOption(t).isEmpty()  &&  option.equals(t))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if  (options.getMatchingOption(t).isEmpty()  &&  option.equals(t))  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if  (options.getMatchingOption(t).isEmpty()  &&  option.equals(t))  {	  if    (options.getMatchingOption(t).isEmpty()    ||    option.equals(t))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
32	[BUG]  [BUGGY]  if  (options.getMatchingOption(t).isEmpty()  ||  option.equals(t)&&  token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if  (options.getMatchingOption(t).isEmpty()  ||  option.equals(t)&&  token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if  (options.getMatchingOption(t).isEmpty()  ||  option.equals(t)&&  token.startsWith( "- "))  {	  if    (options.getMatchingOption(t).isEmpty()    ||    option.equals(t))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
33	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  token,  pos);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  option  =  options.getOption(t,  token,  pos);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  option  =  options.getOption(t,  token,  pos);	  Option    option    =    options.getOption(t,    token);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
34	[BUG]  [BUGGY]  option  =  options.getOption(t,  pos);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  option  =  options.getOption(t,  pos);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	option  =  options.getOption(t,  pos);	  Option    option    =    options.getOption(t,    token);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
35	[BUG]  [BUGGY]  if(options.getOption(t)!=  null  ||!options.getMatchingOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t)!=  null  ||!options.getMatchingOption(t).isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t)!=  null  ||!options.getMatchingOption(t).isEmpty())  {	  if    (options.getOption(t)!=    null    &&!options.getMatchingOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
36	[BUG]  [BUGGY]  Option  options  =  option.getOption(t,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  options  =  option.getOption(t,  pos  +  1);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  option.getOption(t,  pos  +  1);	  Option    options    =    option.getOption(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
37	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(t,  pos);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  options  =  currentOption.getOption(t,  pos);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  currentOption.getOption(t,  pos);	  Option    options    =    option.getOption(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
38	[BUG]  [BUGGY]  Option  options  =  option.getOption(t,  token);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  options  =  option.getOption(t,  token);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  option.getOption(t,  token);	  Option    options    =    option.getOption(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
39	[BUG]  [BUGGY]  if(options.getOption(t).isEmpty()  ||  options.getOption(pos).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t).isEmpty()  ||  options.getOption(pos).isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t).isEmpty()  ||  options.getOption(pos).isEmpty())  {	  if(options.getOption(t).isEmpty()    ||    options.getOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
40	[BUG]  [BUGGY]  if(options.getOption(t).isNullOrEmpty()  ||  options.getOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t).isNullOrEmpty()  ||  options.getOption(t).isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t).isNullOrEmpty()  ||  options.getOption(t).isEmpty())  {	  if(options.getOption(t).isEmpty()    ||    options.getOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
41	[BUG]  [BUGGY]  if(options.getOption(t).isEmpty()  &&  options.getOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t).isEmpty()  &&  options.getOption(t).isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t).isEmpty()  &&  options.getOption(t).isEmpty())  {	  if(options.getOption(t).isEmpty()    ||    options.getOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
42	[BUG]  [BUGGY]  if(options.getMatchingOption(t)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t)!=  null  &&!token.startsWith( "- "))  {	  if(options.getMatchingOptions(t)!=    null    &&!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
43	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOptions(t)!=  null  &&!token.startsWith( "-- "))  {	  if(options.getMatchingOptions(t)!=    null    &&!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
44	[BUG]  [BUGGY]  if(options.getMatchingOption(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t)!=  null  &&!token.startsWith( "-- "))  {	  if(options.getMatchingOptions(t)!=    null    &&!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
45	[BUG]  [BUGGY]  if(options.getMatchingOption(t).isEmpty()  &&  options.getMatchingOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t).isEmpty()  &&  options.getMatchingOption(t).isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t).isEmpty()  &&  options.getMatchingOption(t).isEmpty())  {	  if(options.getMatchingOption(t).isEmpty()    ||    options.getMatchingOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
46	[BUG]  [BUGGY]  if(options.getMatchingOption(t).isNullOrEmpty()  ||  options.getMatchingOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t).isNullOrEmpty()  ||  options.getMatchingOption(t).isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t).isNullOrEmpty()  ||  options.getMatchingOption(t).isEmpty())  {	  if(options.getMatchingOption(t).isEmpty()    ||    options.getMatchingOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
47	[BUG]  [BUGGY]  Options  options  =  t.getOptions();  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Options  options  =  t.getOptions();  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Options  options  =  t.getOptions();	  Options    options    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
48	[BUG]  [BUGGY]  if(!options.getMatchingOptions(t).isEmpty()  ||!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(!options.getMatchingOptions(t).isEmpty()  ||!token.startsWith( "-- "))  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(!options.getMatchingOptions(t).isEmpty()  ||!token.startsWith( "-- "))  {	  if(!options.getMatchingOptions(t).isEmpty()    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
49	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||!token.startsWith( "-- "))  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOptions(t).isEmpty()  ||!token.startsWith( "-- "))  {	  if(!options.getMatchingOptions(t).isEmpty()    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
50	[BUG]  [BUGGY]  if(options.getOption(t)!=  null  ||  options.getOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t)!=  null  ||  options.getOption(t).isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t)!=  null  ||  options.getOption(t).isEmpty())  {	  if(options.getOption(t)!=    null    &&    options.getOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
51	[BUG]  [BUGGY]  if(options.getOption(t)!=  null  &&  options.getOption(t).isNullOrEmpty())  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t)!=  null  &&  options.getOption(t).isNullOrEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t)!=  null  &&  options.getOption(t).isNullOrEmpty())  {	  if(options.getOption(t)!=    null    &&    options.getOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
52	[BUG]  [BUGGY]  if(options.getOption(t)!=  null  &&  options.getOption(t).isLong())  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t)!=  null  &&  options.getOption(t).isLong())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t)!=  null  &&  options.getOption(t).isLong())  {	  if(options.getOption(t)!=    null    &&    options.getOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
53	[BUG]  [BUGGY]  if(!options.getMatchingOption(t).isEmpty()  &&!token.equals( "- "))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(!options.getMatchingOption(t).isEmpty()  &&!token.equals( "- "))  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(!options.getMatchingOption(t).isEmpty()  &&!token.equals( "- "))  {	  if(!options.getMatchingOption(t).isEmpty()    ||!token.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
54	[BUG]  [BUGGY]  if(options.getMatchingOption(t).isEmpty()  ||!token.equals( "- "))  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t).isEmpty()  ||!token.equals( "- "))  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t).isEmpty()  ||!token.equals( "- "))  {	  if(!options.getMatchingOption(t).isEmpty()    ||!token.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
55	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  value  -  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  option  =  options.getOption(t,  value  -  1);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  option  =  options.getOption(t,  value  -  1);	  Option    option    =    options.getOption(t,    value);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
56	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(t,  token);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  options  =  currentOption.getOption(t,  token);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  currentOption.getOption(t,  token);	  Option    options    =    currentOption.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
57	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(t,  value);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  options  =  currentOption.getOption(t,  value);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  currentOption.getOption(t,  value);	  Option    options    =    currentOption.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
58	[BUG]  [BUGGY]  if(options.getOption(t).isEmpty()  ||  options.getOption(t)  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t).isEmpty()  ||  options.getOption(t)  ==  null)  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t).isEmpty()  ||  options.getOption(t)  ==  null)  {	  if(options.getOption(t).isEmpty()    ||    options.getOption(t)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
59	[BUG]  [BUGGY]  if(options.getOption(t).isEmpty()  ||  options.getOption(pos)!=  null)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t).isEmpty()  ||  options.getOption(pos)!=  null)  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t).isEmpty()  ||  options.getOption(pos)!=  null)  {	  if(options.getOption(t).isEmpty()    ||    options.getOption(t)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
60	[BUG]  [BUGGY]  if(options.getOption(t).isEmpty()  &&  options.getOption(t)!=  null)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t).isEmpty()  &&  options.getOption(t)!=  null)  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t).isEmpty()  &&  options.getOption(t)!=  null)  {	  if(options.getOption(t).isEmpty()    ||    options.getOption(t)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
61	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  &&!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOptions(t).isEmpty()  &&!token.startsWith( "- "))  {	  if(options.getMatchingOptions(t).isEmpty()    ||!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
62	[BUG]  [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||!token.equals( "- "))  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOptions(t).isEmpty()  ||!token.equals( "- "))  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOptions(t).isEmpty()  ||!token.equals( "- "))  {	  if(options.getMatchingOptions(t).isEmpty()    ||!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
63	[BUG]  [BUGGY]  Options  options  =  options.getOptions(t,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Options  options  =  options.getOptions(t,  pos  +  1);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Options  options  =  options.getOptions(t,  pos  +  1);	  Options    options    =    options.getOptions(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
64	[BUG]  [BUGGY]  Options  options  =  options.getOptions(t,  token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Options  options  =  options.getOptions(t,  token);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Options  options  =  options.getOptions(t,  token);	  Options    options    =    options.getOptions(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
65	[BUG]  [BUGGY]  Options  options  =  options.getOptions(t,  pos,  token);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Options  options  =  options.getOptions(t,  pos,  token);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Options  options  =  options.getOptions(t,  pos,  token);	  Options    options    =    options.getOptions(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
66	[BUG]  [BUGGY]  Option  option  =  options.getOption(value,  t);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  option  =  options.getOption(value,  t);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  option  =  options.getOption(value,  t);	  Option    option    =    options.getOption(t,    value);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
67	[BUG]  [BUGGY]  if(options.getMatchingOption(t).isEmpty()  ||  token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t).isEmpty()  ||  token.startsWith( "-- "))  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t).isEmpty()  ||  token.startsWith( "-- "))  {	  if(options.getMatchingOption(t).isEmpty()    ||    token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
68	[BUG]  [BUGGY]  if(options.getMatchingOption(t)!=  null  &&  token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t)!=  null  &&  token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t)!=  null  &&  token.startsWith( "- "))  {	  if(options.getMatchingOption(t).isEmpty()    ||    token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
69	[BUG]  [BUGGY]  if(options.getOption(t).length()  ==  0  ||  options.getOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t).length()  ==  0  ||  options.getOption(t).isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t).length()  ==  0  ||  options.getOption(t).isEmpty())  {	  if(options.getOption(t).isEmpty()    ||    options.getOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
70	[BUG]  [BUGGY]  if(options.getMatchingOption(t)!=  null  &&  options.getMatchingOption(t).length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t)!=  null  &&  options.getMatchingOption(t).length()  ==  0)  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t)!=  null  &&  options.getMatchingOption(t).length()  ==  0)  {	  if(options.getMatchingOption(t)!=    null    &&    options.getMatchingOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
71	[BUG]  [BUGGY]  if(options.getOption(t)!=  null  &&  options.getMatchingOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t)!=  null  &&  options.getMatchingOption(t).isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t)!=  null  &&  options.getMatchingOption(t).isEmpty())  {	  if(options.getMatchingOption(t)!=    null    &&    options.getMatchingOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
72	[BUG]  [BUGGY]  Options  options  =  options.getOptions(t,  value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Options  options  =  options.getOptions(t,  value);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Options  options  =  options.getOptions(t,  value);	  Options    options    =    options.getOptions(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
73	[BUG]  [BUGGY]  Option  options  =  option.getOptions(t,  value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  options  =  option.getOptions(t,  value);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  option.getOptions(t,  value);	  Option    options    =    option.getOptions(t);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
74	[BUG]  [BUGGY]  if(options.getOption(t).length()  ==  0  ||  options.getOption(t)!=  null)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t).length()  ==  0  ||  options.getOption(t)!=  null)  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t).length()  ==  0  ||  options.getOption(t)!=  null)  {	  if(options.getOption(t).isEmpty()    ||    options.getOption(t)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
75	[BUG]  [BUGGY]  if(options.getOption(t)!=  null  &&  options.getOption(t).length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t)!=  null  &&  options.getOption(t).length()  ==  0)  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t)!=  null  &&  options.getOption(t).length()  ==  0)  {	  if(options.getOption(t)!=    null    &&    options.getOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
76	[BUG]  [BUGGY]  if(options.getOption(t)  ==  null  &&  options.getOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t)  ==  null  &&  options.getOption(t).isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t)  ==  null  &&  options.getOption(t).isEmpty())  {	  if(options.getOption(t)!=    null    &&    options.getOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
77	[BUG]  [BUGGY]  Option  option  =  options.getOption(t  -  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  option  =  options.getOption(t  -  1);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  option  =  options.getOption(t  -  1);	  Option    option    =    options.getOption(t    +    1);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
78	[BUG]  [BUGGY]  if(options.getOption(t)!=  null  &&!options.getMatchingOption(t).isLong())  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t)!=  null  &&!options.getMatchingOption(t).isLong())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t)!=  null  &&!options.getMatchingOption(t).isLong())  {	  if(options.getMatchingOption(t)!=    null    &&!options.getMatchingOption(t).isLong())    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
79	[BUG]  [BUGGY]  if(options.getOption(t)!=  null  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t)!=  null  &&  options.isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t)!=  null  &&  options.isEmpty())  {	  if(options.getMatchingOption(t)!=    null    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
80	[BUG]  [BUGGY]  if  (options.getMatchingOption(t).isEmpty()  ||!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if  (options.getMatchingOption(t).isEmpty()  ||!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if  (options.getMatchingOption(t).isEmpty()  ||!token.startsWith( "- "))  {	  if    (!options.getMatchingOption(t).isEmpty()    ||!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
81	[BUG]  [BUGGY]  if(options.getOption(t)!=  null)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t)!=  null)  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t)!=  null)  {	  if(options.getOption(t).length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
82	[BUG]  [BUGGY]  if(options.getOption(t).startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t).startsWith( "- "))  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t).startsWith( "- "))  {	  if(options.getOption(t).length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
83	[BUG]  [BUGGY]  if(options.getOption(t),  options.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t),  options.length()  ==  0)  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t),  options.length()  ==  0)  {	  if(options.getOption(t).length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
84	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  token  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  option  =  options.getOption(t,  token  +  1);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  option  =  options.getOption(t,  token  +  1);	  Option    option    =    options.getOption(t,    token);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
85	[BUG]  [BUGGY]  if(options.getOption(t).isEmpty()  ||  options.getMatchingOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t).isEmpty()  ||  options.getMatchingOption(t).isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t).isEmpty()  ||  options.getMatchingOption(t).isEmpty())  {	  if(options.getMatchingOption(t).isEmpty()    ||    options.getMatchingOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
86	[BUG]  [BUGGY]  if(options.getMatchingOption(t).length()  ==  0  ||  options.getMatchingOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t).length()  ==  0  ||  options.getMatchingOption(t).isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t).length()  ==  0  ||  options.getMatchingOption(t).isEmpty())  {	  if(options.getMatchingOption(t).isEmpty()    ||    options.getMatchingOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
87	[BUG]  [BUGGY]  Option  options  =  options.getOptions(t  -  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  options  =  options.getOptions(t  -  1);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  options.getOptions(t  -  1);	  Option    options    =    options.getOptions(t    +    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
88	[BUG]  [BUGGY]  Options  options  =  option.getOptions();  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Options  options  =  option.getOptions();  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Options  options  =  option.getOptions();	  Options    options    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
89	[BUG]  [BUGGY]  if(options.getOption(t).length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t).length()!=  0)  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t).length()!=  0)  {	  if(options.getOption(t).length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
90	[BUG]  [BUGGY]  Options  options  =  options.getOptions(t,  pos,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Options  options  =  options.getOptions(t,  pos,  expectedOpts);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Options  options  =  options.getOptions(t,  pos,  expectedOpts);	  Options    options    =    options.getOptions(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
91	[BUG]  [BUGGY]  if(options.getOption(t).isLong()  ||  options.getOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t).isLong()  ||  options.getOption(t).isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t).isLong()  ||  options.getOption(t).isEmpty())  {	  if(options.getOption(t).isEmpty()    ||    options.getOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
92	[BUG]  [BUGGY]  if(options.getOption(t).isNon()  ||  options.getOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t).isNon()  ||  options.getOption(t).isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t).isNon()  ||  options.getOption(t).isEmpty())  {	  if(options.getOption(t).isEmpty()    ||    options.getOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
93	[BUG]  [BUGGY]  if(t!=  null  &&!options.getMatchingOptions(t).isEmpty()  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(t!=  null  &&!options.getMatchingOptions(t).isEmpty()  &&!token.startsWith( "-- "))  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(t!=  null  &&!options.getMatchingOptions(t).isEmpty()  &&!token.startsWith( "-- "))  {	  if(!options.getMatchingOptions(t).isEmpty()    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
94	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  null);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  option  =  options.getOption(t,  null);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  option  =  options.getOption(t,  null);	  Option    option    =    options.getOption(t,    token);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
95	[BUG]  [BUGGY]  if(options.getMatchingOption(t)  ==  null  &&!options.getMatchingOption(t).isLong())  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t)  ==  null  &&!options.getMatchingOption(t).isLong())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t)  ==  null  &&!options.getMatchingOption(t).isLong())  {	  if(options.getMatchingOption(t)!=    null    &&!options.getMatchingOption(t).isLong())    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
96	[BUG]  [BUGGY]  Option  options  =  option.getOption(t,  pos,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  options  =  option.getOption(t,  pos,  expectedOpts);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  option.getOption(t,  pos,  expectedOpts);	  Option    options    =    option.getOption(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
97	[BUG]  [BUGGY]  Option  options  =  options.getOption(t,  pos,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  options  =  options.getOption(t,  pos,  expectedOpts);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  options.getOption(t,  pos,  expectedOpts);	  Option    options    =    options.getOption(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
98	[BUG]  [BUGGY]  if(options.getMatchingOption(t)  ==  null  &&  options.getMatchingOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t)  ==  null  &&  options.getMatchingOption(t).isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t)  ==  null  &&  options.getMatchingOption(t).isEmpty())  {	  if(options.getMatchingOption(t)!=    null    &&    options.getMatchingOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
99	[BUG]  [BUGGY]  if(options.getMatchingOption(t).isLong()  ||  token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t).isLong()  ||  token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t).isLong()  ||  token.startsWith( "- "))  {	  if(options.getMatchingOption(t).isEmpty()    ||    token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
100	[BUG]  [BUGGY]  if(options.getMatchingOption(t)!=  null  &&  token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t)!=  null  &&  token.startsWith( "-- "))  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t)!=  null  &&  token.startsWith( "-- "))  {	  if(options.getMatchingOption(t).isEmpty()    ||    token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
101	[BUG]  [BUGGY]  if(options.getOption(t).length()!=  0  ||  options.getOption(t)!=  null)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getOption(t).length()!=  0  ||  options.getOption(t)!=  null)  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getOption(t).length()!=  0  ||  options.getOption(t)!=  null)  {	  if(options.getOption(t).isEmpty()    ||    options.getOption(t)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
102	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  pos,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  option  =  options.getOption(t,  pos,  expectedOpts);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  option  =  options.getOption(t,  pos,  expectedOpts);	  Option    option    =    options.getOption(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
103	[BUG]  [BUGGY]  if(options.getMatchingOption(t).isEmpty()  ||  option.startsWith(t))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t).isEmpty()  ||  option.startsWith(t))  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t).isEmpty()  ||  option.startsWith(t))  {	  if    (options.getMatchingOption(t).isEmpty()    ||    option.equals(t))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
104	[BUG]  [BUGGY]  if(options.getMatchingOption(t)  ==  null  &&!options.getMatchingOption(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t)  ==  null  &&!options.getMatchingOption(t).isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t)  ==  null  &&!options.getMatchingOption(t).isEmpty())  {	  if    (options.getMatchingOption(t)!=    null    &&!options.getMatchingOption(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
105	[BUG]  [BUGGY]  if(options.getMatchingOption(t)  ==  null  ||!options.getMatchingOptions(t).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  if(options.getMatchingOption(t)  ==  null  ||!options.getMatchingOptions(t).isEmpty())  {  [BUGGY]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	if(options.getMatchingOption(t)  ==  null  ||!options.getMatchingOptions(t).isEmpty())  {	  if    (options.getMatchingOption(t)!=    null    ||!options.getMatchingOptions(t).isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
106	[BUG]  [BUGGY]  Option  options  =  options.getOptions(t,  pos,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  options  =  options.getOptions(t,  pos,  expectedOpts);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  options.getOptions(t,  pos,  expectedOpts);	  Option    options    =    options.getOptions(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
107	[BUG]  [BUGGY]  Option  option  =  options.getOption(t  +  pos);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  option  =  options.getOption(t  +  pos);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  option  =  options.getOption(t  +  pos);	  Option    option    =    options.getOption(t    +    1);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
108	[BUG]  [BUGGY]  Option  options  =  options.getOptions(t,  option);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);      [BUGGY]  Option  options  =  options.getOptions(t,  option);  [BUGGY]      if  (!options.getMatchingOptions(t).isEmpty())  {  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	329	330	1	replace	Option  options  =  options.getOptions(t,  option);	  Option    options    =    options.getOptions(t,    value);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
