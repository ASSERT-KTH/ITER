bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    String  value  =  Util.stripLeadingHyphens(token);  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [BUGGY]    String  value  =  Util.stripLeadingHyphens(token);  [BUGGY]  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	580	580	1	replace	    String  value  =  Util.stripLeadingHyphens(token);		non-compiled	[CE]  illegal  start  of  expression	24	None	add
2	[BUG]  [BUGGY]    String  optName  =  t.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [BUGGY]    String  optName  =  t.substring(0,  i);  [BUGGY]  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	580	580	1	replace	    String  optName  =  t.substring(0,  i);		non-compiled	[CE]  illegal  start  of  expression	24	None	add
3	[BUG]  [BUGGY]    String  value  =  t.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [BUGGY]    String  value  =  t.substring(0,  i);  [BUGGY]  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	580	580	1	replace	    String  value  =  t.substring(0,  i);		non-compiled	[CE]  illegal  start  of  expression	24	None	add
4	[BUG]  [BUGGY]    String  optName  =  t.substring(i  +  1);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [BUGGY]    String  optName  =  t.substring(i  +  1);  [BUGGY]  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	580	580	1	replace	    String  optName  =  t.substring(i  +  1);		non-compiled	[CE]  illegal  start  of  expression	24	None	add
5	[BUG]  [BUGGY]    String  value  =  Util.stripLeadingHyphens(token);  int  i  =  0;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [BUGGY]    String  value  =  Util.stripLeadingHyphens(token);  int  i  =  0;  [BUGGY]  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	580	580	1	replace	    String  value  =  Util.stripLeadingHyphens(token);  int  i  =  0;		non-compiled	[CE]  illegal  start  of  expression	24	None	add
6	[BUG]  [BUGGY]  String  opt  =  token;  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [BUGGY]  String  opt  =  token;  [BUGGY]  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	580	580	1	replace	String  opt  =  token;	String  opt  =  null;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
7	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(token);  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(token);  [BUGGY]  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	580	580	1	replace	String  opt  =  Util.stripLeadingHyphens(token);	String  opt  =  null;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
8	[BUG]  [BUGGY]  String  opt  =  t.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [BUGGY]  String  opt  =  t.substring(0,  i);  [BUGGY]  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	580	580	1	replace	String  opt  =  t.substring(0,  i);	String  opt  =  null;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
9	[BUG]  [BUGGY]  String  opt  =  t.toLowerCase();  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [BUGGY]  String  opt  =  t.toLowerCase();  [BUGGY]  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	580	580	1	replace	String  opt  =  t.toLowerCase();	String  opt  =  null;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
10	[BUG]  [BUGGY]    Option  option  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [BUGGY]    Option  option  =  options.getOption(token);  [BUGGY]  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	580	580	1	replace	    Option  option  =  options.getOption(token);		non-compiled	[CE]  illegal  start  of  expression	24	None	add
11	[BUG]  [BUGGY]    if(options.hasOption(opt))  {  expectedOpts.add(t);  }  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [BUGGY]    if(options.hasOption(opt))  {  expectedOpts.add(t);  }  [BUGGY]  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	580	580	1	replace	    if(options.hasOption(opt))  {  expectedOpts.add(t);  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
12	[BUG]  [BUGGY]    if(options.hasOption(opt))  {  opt  =  option;  break;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [BUGGY]    if(options.hasOption(opt))  {  opt  =  option;  break;  }  [BUGGY]  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	580	580	1	replace	    if(options.hasOption(opt))  {  opt  =  option;  break;  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
13	[BUG]  [BUGGY]    if(options.hasOption(opt))  {  opt  =  option;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [BUGGY]    if(options.hasOption(opt))  {  opt  =  option;  }  [BUGGY]  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	580	580	1	replace	    if(options.hasOption(opt))  {  opt  =  option;  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
14	[BUG]  [BUGGY]  String  opt  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [BUGGY]  String  opt  =  options.getOption(token);  [BUGGY]  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	580	580	1	replace	String  opt  =  options.getOption(token);	String  opt  =  null;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
15	[BUG]  [BUGGY]  String  opt  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [BUGGY]  String  opt  =  options.getOption(t);  [BUGGY]  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	580	580	1	replace	String  opt  =  options.getOption(t);	String  opt  =  null;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
16	[BUG]  [BUGGY]  String  opt  =  t;  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [BUGGY]  String  opt  =  t;  [BUGGY]  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	580	580	1	replace	String  opt  =  t;	String  opt  =  null;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
17	[BUG]  [BUGGY]    t  =  Util.stripLeadingHyphens(token);  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [BUGGY]    t  =  Util.stripLeadingHyphens(token);  [BUGGY]  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	580	580	1	replace	    t  =  Util.stripLeadingHyphens(token);		non-compiled	[CE]  illegal  start  of  expression	24	None	add
18	[BUG]  [BUGGY]    if(options.hasOption(t))  {  option  =  option.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [BUGGY]    if(options.hasOption(t))  {  option  =  option.substring(0,  i);  }  [BUGGY]  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	580	580	1	replace	    if(options.hasOption(t))  {  option  =  option.substring(0,  i);  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
19	[BUG]  [BUGGY]    if(options.hasOption(t))  {  opt  =  option;  break;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [BUGGY]    if(options.hasOption(t))  {  opt  =  option;  break;  }  [BUGGY]  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	580	580	1	replace	    if(options.hasOption(t))  {  opt  =  option;  break;  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
20	[BUG]  [BUGGY]    if(options.hasOption(t))  {  opt  =  option.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [BUGGY]    if(options.hasOption(t))  {  opt  =  option.substring(0,  i);  }  [BUGGY]  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	580	580	1	replace	    if(options.hasOption(t))  {  opt  =  option.substring(0,  i);  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
