bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  pos  =  token.indexOf('+',  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf('+',  1);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf('+',  1);	  int    pos    =    token.indexOf('+');    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
2	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf('+');  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf('+');  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf('+');	  int    pos    =    token.indexOf('+');    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
3	[BUG]  [BUGGY]  int  pos  =  token.indexOf('+')+  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf('+')+  1;  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf('+')+  1;	  int    pos    =    token.indexOf('+');    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
4	[BUG]  [BUGGY]  int  pos  =  token.indexOf('+',  value);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf('+',  value);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf('+',  value);	  int    pos    =    token.indexOf('+');    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
5	[BUG]  [BUGGY]  token  =  token.substring(0,  token.length());  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  token  =  token.substring(0,  token.length());  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	token  =  token.substring(0,  token.length());	  token    =    token.substring(0,    token.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
6	[BUG]  [BUGGY]  token  =  token.substring(0,  token.length()  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  token  =  token.substring(0,  token.length()  +  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	token  =  token.substring(0,  token.length()  +  1);	  token    =    token.substring(0,    token.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
7	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "= ".length()  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "= ".length()  +  1);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "= ".length()  +  1);	  int    pos    =    token.lastIndexOf(   "=   ".length());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
8	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "=   ",  token.length());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "=   ",  token.length());  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "=   ",  token.length());	  int    pos    =    token.lastIndexOf(   "=   ".length());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
9	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "= "  +  token.length());  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "= "  +  token.length());  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "= "  +  token.length());	  int    pos    =    token.lastIndexOf(   "=   ".length());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(token,  value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  currentOption.getOption(token,  value);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  currentOption.getOption(token,  value);	  Option    options    =    option.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
11	[BUG]  [BUGGY]  Option  options  =  option.getOption(token,  token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  option.getOption(token,  token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  option.getOption(token,  token);	  Option    options    =    option.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
12	[BUG]  [BUGGY]  Option  options  =  option.getOption(token,  value  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  option.getOption(token,  value  +  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  option.getOption(token,  value  +  1);	  Option    options    =    option.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
13	[BUG]  [BUGGY]  Option  options  =  option.getOption(token,  value,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  option.getOption(token,  value,  expectedOpts);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  option.getOption(token,  value,  expectedOpts);	  Option    options    =    option.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
14	[BUG]  [BUGGY]  Option  options  =  options.getOption(token,  token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  options.getOption(token,  token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  options.getOption(token,  token);	  Option    options    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
15	[BUG]  [BUGGY]  Option  options  =  options.getOption(token,  value  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  options.getOption(token,  value  +  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  options.getOption(token,  value  +  1);	  Option    options    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
16	[BUG]  [BUGGY]  Option  options  =  options.getOption(token,  option);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  options.getOption(token,  option);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  options.getOption(token,  option);	  Option    options    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
17	[BUG]  [BUGGY]  if(!token.startsWith( "- ")||  token.startsWith( "--))  {  token  =  token.substring(0,  token.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  if(!token.startsWith( "- ")||  token.startsWith( "--))  {  token  =  token.substring(0,  token.length()  -  1);  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	if(!token.startsWith( "- ")||  token.startsWith( "--))  {  token  =  token.substring(0,  token.length()  -  1);  }	  if(token.startsWith(   "-   ")||    token.startsWith(   "--))    {    token    =    token.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
18	[BUG]  [BUGGY]  ||  token.startsWith( "--))  {  token  =  token.substring(0,  token.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  ||  token.startsWith( "--))  {  token  =  token.substring(0,  token.length()  -  1);  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	||  token.startsWith( "--))  {  token  =  token.substring(0,  token.length()  -  1);  }	  if(token.startsWith(   "-   ")||    token.startsWith(   "--))    {    token    =    token.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
19	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions(token,  value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  currentOption.getOptions(token,  value);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  currentOption.getOptions(token,  value);	  Option    options    =    currentOption.getOptions(token);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions(token,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  currentOption.getOptions(token,  expectedOpts);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  currentOption.getOptions(token,  expectedOpts);	  Option    options    =    currentOption.getOptions(token);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( ": ").length();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( ": ").length();  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( ": ").length();	  int    pos    =    token.lastIndexOf(   ":   ");    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
22	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ",  0);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf( "- ",  0);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf( "- ",  0);	  int    pos    =    token.indexOf(   "-   ",    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
23	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "- ",  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "- ",  1);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "- ",  1);	  int    pos    =    token.indexOf(   "-   ",    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
24	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "- ")+  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "- ")+  1;  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "- ")+  1;	  int    pos    =    token.indexOf(   "-   ")+    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
25	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ")+  2;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf( "- ")+  2;  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf( "- ")+  2;	  int    pos    =    token.indexOf(   "-   ")+    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
26	[BUG]  [BUGGY]  if(!token.startsWith( "- ")&&  token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  if(!token.startsWith( "- ")&&  token.startsWith( "- "))  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	if(!token.startsWith( "- ")&&  token.startsWith( "- "))  {  return  false;  }	  if(!token.startsWith(   "-   ")||    token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
27	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( ":- ");  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( ":- ");  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( ":- ");	  int    pos    =    token.lastIndexOf(   "=-   ");    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
28	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "=- "  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "=- "  +  1);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "=- "  +  1);	  int    pos    =    token.lastIndexOf(   "=-   ");    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
29	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "=?   ",  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "=?   ",  1);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "=?   ",  1);	  int    pos    =    token.lastIndexOf(   "=?   ");    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
30	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "=?: ");  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "=?: ");  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "=?: ");	  int    pos    =    token.lastIndexOf(   "=?   ");    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
31	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "-+ ");  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "-+ ");  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "-+ ");	  int    pos    =    token.indexOf(   "-+   ");    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
32	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)/  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  option  =  options.getOption(token)/  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  option  =  options.getOption(token)/  1;	  Option    option    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
33	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)+  2;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  option  =  options.getOption(token)+  2;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  option  =  options.getOption(token)+  2;	  Option    option    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
34	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)+  0;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  option  =  options.getOption(token)+  0;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  option  =  options.getOption(token)+  0;	  Option    option    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
35	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "- "  +  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "- "  +  1);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "- "  +  1);	  int    pos    =    token.indexOf(   "-   "    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
36	[BUG]  [BUGGY]  int  pos  =  token.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.length()  +  1;  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.length()  +  1;	  int    pos    =    token.length();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
37	[BUG]  [BUGGY]  int  pos  =  token.length()  -  1;  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.length()  -  1;  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.length()  -  1;	  int    pos    =    token.length();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
38	[BUG]  [BUGGY]  int  pos  =  token.length()  *  2;  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.length()  *  2;  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.length()  *  2;	  int    pos    =    token.length();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
39	[BUG]  [BUGGY]  ||  token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  ||  token.startsWith( "- "))  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	||  token.startsWith( "- "))  {  return  true;  }	  ||    token.startsWith(   "-       "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
40	[BUG]  [BUGGY]  ||  token.equals( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  ||  token.equals( "- "))  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	||  token.equals( "- "))  {  return  false;  }	  ||    token.startsWith(   "-       "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
41	[BUG]  [BUGGY]  String  optName  =  token.substring(0,  pos  +  1,  token.length());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  String  optName  =  token.substring(0,  pos  +  1,  token.length());  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	String  optName  =  token.substring(0,  pos  +  1,  token.length());	  String    optName    =    token.substring(0,    pos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
42	[BUG]  [BUGGY]  String  optName  =  token.substring(0,  pos)+  2;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  String  optName  =  token.substring(0,  pos)+  2;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	String  optName  =  token.substring(0,  pos)+  2;	  String    optName    =    token.substring(0,    pos)+    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
43	[BUG]  [BUGGY]  String  optName  =  token.substring(0,  pos  +  1)+  1;  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  String  optName  =  token.substring(0,  pos  +  1)+  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	String  optName  =  token.substring(0,  pos  +  1)+  1;	  String    optName    =    token.substring(0,    pos)+    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
44	[BUG]  [BUGGY]  String  optName  =  token.substring(0,  pos)+  3;  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  String  optName  =  token.substring(0,  pos)+  3;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	String  optName  =  token.substring(0,  pos)+  3;	  String    optName    =    token.substring(0,    pos)+    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
45	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "- ").length();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "- ").length();  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "- ").length();	  int    pos    =    token.lastIndexOf(   "-   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
46	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(token,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  currentOption.getOption(token,  expectedOpts);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  currentOption.getOption(token,  expectedOpts);	  Option    options    =    options.getOption(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
47	[BUG]  [BUGGY]  Option  options  =  options.getOption(token,  expectedOpts,  token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  options.getOption(token,  expectedOpts,  token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  options.getOption(token,  expectedOpts,  token);	  Option    options    =    options.getOption(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
48	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "+ ")+  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "+ ")+  1;  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "+ ")+  1;	  int    pos    =    token.lastIndexOf(   "+   ");    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
49	[BUG]  [BUGGY]  ||!token.startsWith( "- "))  {  token  =  token.substring(0,  token.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  ||!token.startsWith( "- "))  {  token  =  token.substring(0,  token.length()  -  1);  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	||!token.startsWith( "- "))  {  token  =  token.substring(0,  token.length()  -  1);  }	  if(!token.startsWith(   "-   "))    {    token    =    token.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
50	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  option  =  options.getOption(token,  token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  option  =  options.getOption(token,  token);	  Option    option    =    options.getOption(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
51	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  pos);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  option  =  options.getOption(token,  pos);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  option  =  options.getOption(token,  pos);	  Option    option    =    options.getOption(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
52	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  expectedOpts,  token);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  option  =  options.getOption(token,  expectedOpts,  token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  option  =  options.getOption(token,  expectedOpts,  token);	  Option    option    =    options.getOption(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
53	[BUG]  [BUGGY]  int  pos  =  token.indexOf( ": ",  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf( ": ",  1);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf( ": ",  1);	  int    pos    =    token.indexOf(   ":   ",    -1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
54	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( ": ",  -1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( ": ",  -1);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( ": ",  -1);	  int    pos    =    token.indexOf(   ":   ",    -1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
55	[BUG]  [BUGGY]  if(!token.startsWith( "- ")||  token.startsWith( "-))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  if(!token.startsWith( "- ")||  token.startsWith( "-))  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	if(!token.startsWith( "- ")||  token.startsWith( "-))  {  return  false;  }	  if(token.startsWith(   "-   ")||    token.startsWith(   "-))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
56	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "- ",  -1);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "- ",  -1);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "- ",  -1);	  int    pos    =    token.indexOf(   "-   ",    -1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
57	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( ": ",  0);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( ": ",  0);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( ": ",  0);	  int    pos    =    token.indexOf(   ":   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
58	[BUG]  [BUGGY]  Options  options  =  currentOption.getOptions(token,  value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Options  options  =  currentOption.getOptions(token,  value);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Options  options  =  currentOption.getOptions(token,  value);	  Options    options    =    currentOption.getOptions(token);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
59	[BUG]  [BUGGY]  Options  options  =  currentOption.getOptions(token,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Options  options  =  currentOption.getOptions(token,  expectedOpts);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Options  options  =  currentOption.getOptions(token,  expectedOpts);	  Options    options    =    currentOption.getOptions(token);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
60	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "- ".length());  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "- ".length());  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "- ".length());	  int    pos    =    token.lastIndexOf(   "-=   ");    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
61	[BUG]  [BUGGY]  String  optName  =  token.substring(0,  pos).trim()  +  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  String  optName  =  token.substring(0,  pos).trim()  +  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	String  optName  =  token.substring(0,  pos).trim()  +  1;	  String    optName    =    token.substring(0,    pos).trim();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
62	[BUG]  [BUGGY]  String  optName  =  token.substring(0,  pos  +  1).trim();  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  String  optName  =  token.substring(0,  pos  +  1).trim();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	String  optName  =  token.substring(0,  pos  +  1).trim();	  String    optName    =    token.substring(0,    pos).trim();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
63	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- "  +  token.length());  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf( "- "  +  token.length());  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf( "- "  +  token.length());	  int    pos    =    token.indexOf(   "-   ".length());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
64	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ").length()  +  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf( "- ").length()  +  1;  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf( "- ").length()  +  1;	  int    pos    =    token.indexOf(   "-   ".length());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
65	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ",  token.length());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf( "- ",  token.length());  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf( "- ",  token.length());	  int    pos    =    token.indexOf(   "-   ".length());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
66	[BUG]  [BUGGY]  if(!token.startsWith( "- ")||  token.startsWith( "-- "))  {  token  =  token.substring(0,  token.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  if(!token.startsWith( "- ")||  token.startsWith( "-- "))  {  token  =  token.substring(0,  token.length()  -  1);  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	if(!token.startsWith( "- ")||  token.startsWith( "-- "))  {  token  =  token.substring(0,  token.length()  -  1);  }	  if(token.startsWith(   "-   ")||    token.startsWith(   "--   "))    {    token    =    token.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
67	[BUG]  [BUGGY]  ||  token.startsWith( "-- "))  {  token  =  token.substring(0,  token.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  ||  token.startsWith( "-- "))  {  token  =  token.substring(0,  token.length()  -  1);  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	||  token.startsWith( "-- "))  {  token  =  token.substring(0,  token.length()  -  1);  }	  if(token.startsWith(   "-   ")||    token.startsWith(   "--   "))    {    token    =    token.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
68	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)&&  token.indexOf( "- ");  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  option  =  options.hasOption(token)&&  token.indexOf( "- ");  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  option  =  options.hasOption(token)&&  token.indexOf( "- ");	  Option    option    =    options.hasOption(token);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
69	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)&&  token.startsWith( "- "));  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  option  =  options.hasOption(token)&&  token.startsWith( "- "));  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  option  =  options.hasOption(token)&&  token.startsWith( "- "));	  Option    option    =    options.hasOption(token);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
70	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  value  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  option  =  options.getOption(token,  value  +  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  option  =  options.getOption(token,  value  +  1);	  Option    option    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
71	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  value  -  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  option  =  options.getOption(token,  value  -  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  option  =  options.getOption(token,  value  -  1);	  Option    option    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
72	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "-? ");  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "-? ");  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "-? ");	  int    pos    =    token.indexOf(   "-?   ");    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
73	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf(':');  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf(':');  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf(':');	  int    pos    =    token.indexOf(':');    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
74	[BUG]  [BUGGY]  int  pos  =  token.indexOf(':',  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf(':',  1);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf(':',  1);	  int    pos    =    token.indexOf(':');    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
75	[BUG]  [BUGGY]  int  pos  =  token.indexOf(':',  0);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf(':',  0);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf(':',  0);	  int    pos    =    token.indexOf(':');    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
76	[BUG]  [BUGGY]  int  pos  =  token.indexOf(':')+  1;  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf(':')+  1;  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf(':')+  1;	  int    pos    =    token.indexOf(':');    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
77	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf('-');  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf('-');  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf('-');	  int    pos    =    token.indexOf('-');    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
78	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-',  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf('-',  1);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf('-',  1);	  int    pos    =    token.indexOf('-');    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
79	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-')+  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf('-')+  1;  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf('-')+  1;	  int    pos    =    token.indexOf('-');    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
80	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-',  0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf('-',  0);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf('-',  0);	  int    pos    =    token.indexOf('-');    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
81	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  options.getOptions(token,  token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  options.getOptions(token,  token);	  Option    options    =    options.getOptions(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
82	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  pos);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  options.getOptions(token,  pos);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  options.getOptions(token,  pos);	  Option    options    =    options.getOptions(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
83	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "null ");  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf( "null ");  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf( "null ");	  int    pos    =    token.lastIndexOf(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
84	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "-null ");  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "-null ");  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "-null ");	  int    pos    =    token.lastIndexOf(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
85	[BUG]  [BUGGY]  Option  options  =  option.getOption(token,  expectedOpts,  token);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  option.getOption(token,  expectedOpts,  token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  option.getOption(token,  expectedOpts,  token);	  Option    options    =    option.getOption(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
86	[BUG]  [BUGGY]  if(token.startsWith( "- ")||  token.length()  ==  1)  {  token  =  token.substring(0,  token.length());  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  if(token.startsWith( "- ")||  token.length()  ==  1)  {  token  =  token.substring(0,  token.length());  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	if(token.startsWith( "- ")||  token.length()  ==  1)  {  token  =  token.substring(0,  token.length());  }	  if(token.startsWith(   "-   "))    {    token    =    token.substring(0,    token.length());    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
87	[BUG]  [BUGGY]  if(!token.startsWith( "- "))  {  token  =  token.substring(0,  token.length());  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  if(!token.startsWith( "- "))  {  token  =  token.substring(0,  token.length());  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	if(!token.startsWith( "- "))  {  token  =  token.substring(0,  token.length());  }	  if(token.startsWith(   "-   "))    {    token    =    token.substring(0,    token.length());    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
88	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  value,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  options.getOptions(token,  value,  expectedOpts);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  options.getOptions(token,  value,  expectedOpts);	  Option    options    =    options.getOptions(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
89	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  option);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  options.getOptions(token,  option);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  options.getOptions(token,  option);	  Option    options    =    options.getOptions(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
90	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(token)+  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  currentOption.getOption(token)+  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  currentOption.getOption(token)+  1;	  Option    options    =    currentOption.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
91	[BUG]  [BUGGY]  Option  options  =  options.getOption(token)/  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  options.getOption(token)/  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  options.getOption(token)/  1;	  Option    options    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
92	[BUG]  [BUGGY]  Option  options  =  options.getOption(token)+  2;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  options.getOption(token)+  2;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  options.getOption(token)+  2;	  Option    options    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
93	[BUG]  [BUGGY]  ||  token.startsWith( "- "))  {  token  =  token.substring(0,  token.length());  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  ||  token.startsWith( "- "))  {  token  =  token.substring(0,  token.length());  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	||  token.startsWith( "- "))  {  token  =  token.substring(0,  token.length());  }	  ||    token.startsWith(   "-   "))    {    token    =    token.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
94	[BUG]  [BUGGY]  ||  token.startsWith( "- "))  {  token  =  token.substring(0,  token.length()  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  ||  token.startsWith( "- "))  {  token  =  token.substring(0,  token.length()  +  1);  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	||  token.startsWith( "- "))  {  token  =  token.substring(0,  token.length()  +  1);  }	  ||    token.startsWith(   "-   "))    {    token    =    token.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
95	[BUG]  [BUGGY]  Option  options  =  option.getOption(token,  value  -  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  option.getOption(token,  value  -  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  option.getOption(token,  value  -  1);	  Option    options    =    option.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
96	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(option);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  currentOption.getOption(option);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  currentOption.getOption(option);	  Option    options    =    currentOption.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
97	[BUG]  [BUGGY]  int  pos  =  token.indexOf('+',  0);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf('+',  0);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf('+',  0);	  int    pos    =    token.indexOf('+');    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
98	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)-  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  option  =  options.getOption(token)-  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  option  =  options.getOption(token)-  1;	  Option    option    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
99	[BUG]  [BUGGY]  if(token.startsWith( "- ")&&  token.startsWith( "-))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  if(token.startsWith( "- ")&&  token.startsWith( "-))  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	if(token.startsWith( "- ")&&  token.startsWith( "-))  {  return  false;  }	  if(token.startsWith(   "-   ")||    token.startsWith(   "-))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
100	[BUG]  [BUGGY]  token  =  token.substring(0,  token.length())+  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  token  =  token.substring(0,  token.length())+  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	token  =  token.substring(0,  token.length())+  1;	  token    =    token.substring(0,    token.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
101	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "-+ ")+  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf( "-+ ")+  1;  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf( "-+ ")+  1;	  int    pos    =    token.indexOf(   "+   ")+    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
102	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "/+ ");  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "/+ ");  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "/+ ");	  int    pos    =    token.lastIndexOf(   "+   ");    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
103	[BUG]  [BUGGY]  int  pos  =  token.indexOf('?');  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf('?');  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf('?');	  int    pos    =    token.indexOf(   "-?   ");    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
104	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "-?   ",  -1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf( "-?   ",  -1);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf( "-?   ",  -1);	  int    pos    =    token.indexOf(   "-?   ");    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
105	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "-= ",  -1);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "-= ",  -1);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "-= ",  -1);	  int    pos    =    token.lastIndexOf(   "-=   ");    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
106	[BUG]  [BUGGY]  int  pos  =  token.indexOf(':',  -1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf(':',  -1);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf(':',  -1);	  int    pos    =    token.indexOf(   ":   ",    -1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
107	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- "  +  1)+  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf( "- "  +  1)+  1;  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf( "- "  +  1)+  1;	  int    pos    =    token.indexOf(   "-   "    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
108	[BUG]  [BUGGY]  Option  options  =  option.getOption(token,  null);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  option.getOption(token,  null);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  option.getOption(token,  null);	  Option    options    =    option.getOption(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
109	[BUG]  [BUGGY]  if(token.length()  ==  1)  {  token  =  token.substring(0,  token.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  if(token.length()  ==  1)  {  token  =  token.substring(0,  token.length()  -  1);  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	if(token.length()  ==  1)  {  token  =  token.substring(0,  token.length()  -  1);  }	  if(!token.startsWith(   "-   "))    {    token    =    token.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
110	[BUG]  [BUGGY]  Option  options  =  options.getOptions(value,  token);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  options.getOptions(value,  token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  options.getOptions(value,  token);	  Option    options    =    options.getOptions(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
111	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "=? ".length());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "=? ".length());  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "=? ".length());	  int    pos    =    token.lastIndexOf(   "=   ".length());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
112	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "..length());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "..length());  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "..length());	  int    pos    =    token.lastIndexOf(   "=   ".length());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
113	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-',  -1);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf('-',  -1);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf('-',  -1);	  int    pos    =    token.indexOf(   "-   ",    -1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
114	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "=- ");  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf( "=- ");  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf( "=- ");	  int    pos    =    token.lastIndexOf(   "=-   ");    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
115	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "=- ").length();  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "=- ").length();  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "=- ").length();	  int    pos    =    token.lastIndexOf(   "=-   ");    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
116	[BUG]  [BUGGY]  Option  options  =  options.getOption(token,  pos);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  options.getOption(token,  pos);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  options.getOption(token,  pos);	  Option    options    =    options.getOption(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
117	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions(option);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  currentOption.getOptions(option);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  currentOption.getOptions(option);	  Option    options    =    currentOption.getOptions(token);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
118	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  null);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  option  =  options.getOption(token,  null);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  option  =  options.getOption(token,  null);	  Option    option    =    options.getOption(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
119	[BUG]  [BUGGY]  String  optName  =  token.substring(0,  pos)+  4;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  String  optName  =  token.substring(0,  pos)+  4;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	String  optName  =  token.substring(0,  pos)+  4;	  String    optName    =    token.substring(0,    pos)+    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
120	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  options.getOption(token):  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  option  =  options.hasOption(token)?  options.getOption(token):  options.getOption(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  option  =  options.hasOption(token)?  options.getOption(token):  options.getOption(token);	  Option    option    =    options.hasOption(token);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
121	[BUG]  [BUGGY]  if(options.hasOption(optName))  {  if(!token.startsWith( "-   ")||  token.startsWith( "-   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  if(options.hasOption(optName))  {  if(!token.startsWith( "-   ")||  token.startsWith( "-   "))  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	if(options.hasOption(optName))  {  if(!token.startsWith( "-   ")||  token.startsWith( "-   "))  {  return  false;  }	  if(!token.startsWith(   "-   ")||    token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
122	[BUG]  [BUGGY]  &&  token.startsWith( "-   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  &&  token.startsWith( "-   "))  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	&&  token.startsWith( "-   "))  {  return  false;  }	  ||    token.startsWith(   "-       "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
123	[BUG]  [BUGGY]  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  token  =  token.substring(0,  token.length());  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  token  =  token.substring(0,  token.length());  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  token  =  token.substring(0,  token.length());  }	  if(token.startsWith(   "-   "))    {    token    =    token.substring(0,    token.length());    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
124	[BUG]  [BUGGY]  String  optName  =  token.substring(0,  pos).toLowerCase();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  String  optName  =  token.substring(0,  pos).toLowerCase();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	String  optName  =  token.substring(0,  pos).toLowerCase();	  String    optName    =    token.substring(0,    pos).trim();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
125	[BUG]  [BUGGY]  String  optName  =  token.substring(1,  pos).trim();  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  String  optName  =  token.substring(1,  pos).trim();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	String  optName  =  token.substring(1,  pos).trim();	  String    optName    =    token.substring(0,    pos).trim();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
126	[BUG]  [BUGGY]  if(token.startsWith( "- ")||  token.startsWith( "-1))  {  token  =  token.substring(0,  token.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  if(token.startsWith( "- ")||  token.startsWith( "-1))  {  token  =  token.substring(0,  token.length()  -  1);  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	if(token.startsWith( "- ")||  token.startsWith( "-1))  {  token  =  token.substring(0,  token.length()  -  1);  }	  if(token.startsWith(   "-   ")||    token.startsWith(   "--))    {    token    =    token.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
127	[BUG]  [BUGGY]  ||  token.startsWith( "- "))  {  token  =  token.substring(1,  token.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  ||  token.startsWith( "- "))  {  token  =  token.substring(1,  token.length()  -  1);  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	||  token.startsWith( "- "))  {  token  =  token.substring(1,  token.length()  -  1);  }	  ||    token.startsWith(   "-   "))    {    token    =    token.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
128	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "=?   ",  -1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "=?   ",  -1);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "=?   ",  -1);	  int    pos    =    token.lastIndexOf(   "=?   ");    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
129	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "=?   ",  0);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "=?   ",  0);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "=?   ",  0);	  int    pos    =    token.lastIndexOf(   "=?   ");    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
130	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  null);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  options.getOptions(token,  null);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  options.getOptions(token,  null);	  Option    options    =    options.getOptions(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
131	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- "  +  2);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.indexOf( "- "  +  2);  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.indexOf( "- "  +  2);	  int    pos    =    token.indexOf(   "-   "    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
132	[BUG]  [BUGGY]  Option  options  =  options.getOption(token,  null);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  options.getOption(token,  null);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  options.getOption(token,  null);	  Option    options    =    options.getOption(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
133	[BUG]  [BUGGY]  Option  options  =  options.getOption(token)-  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  options.getOption(token)-  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  options.getOption(token)-  1;	  Option    options    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
134	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "/null ");  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "/null ");  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "/null ");	  int    pos    =    token.lastIndexOf(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
135	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  value  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  options.getOptions(token,  value  +  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  options.getOptions(token,  value  +  1);	  Option    options    =    options.getOptions(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
136	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  value  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  options.getOptions(token,  value  -  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  options.getOptions(token,  value  -  1);	  Option    options    =    options.getOptions(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
137	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "/.* "));  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "/.* "));  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "/.* "));	  int    pos    =    token.lastIndexOf(   "=-   ");    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
138	[BUG]  [BUGGY]  Option  options  =  options.getOption(token,  value  -  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  options.getOption(token,  value  -  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  options.getOption(token,  value  -  1);	  Option    options    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
139	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( ".+ ");  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( ".+ ");  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( ".+ ");	  int    pos    =    token.lastIndexOf(   "+   ");    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
140	[BUG]  [BUGGY]  ||  token.startsWith( "- "))  {  token  =  token.substring(1,  token.length());  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  ||  token.startsWith( "- "))  {  token  =  token.substring(1,  token.length());  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	||  token.startsWith( "- "))  {  token  =  token.substring(1,  token.length());  }	  ||    token.startsWith(   "-   "))    {    token    =    token.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
141	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "/.length());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  int  pos  =  token.lastIndexOf( "/.length());  [BUGGY]      String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	int  pos  =  token.lastIndexOf( "/.length());	  int    pos    =    token.lastIndexOf(   "=   ".length());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
142	[BUG]  [BUGGY]  ||  token.endsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  ||  token.endsWith( "- "))  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	||  token.endsWith( "- "))  {  return  false;  }	  ||    token.startsWith(   "-       "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
143	[BUG]  [BUGGY]  Option  option  =  currentOption.getOption(token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  option  =  currentOption.getOption(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  option  =  currentOption.getOption(token);	  Options    options    =    currentOption.getOptions(token);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
144	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  expectedOpts,  value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  options.getOptions(token,  expectedOpts,  value);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  options.getOptions(token,  expectedOpts,  value);	  Option    options    =    options.getOptions(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
145	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  currentToken);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  option  =  options.getOption(token,  currentToken);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  option  =  options.getOption(token,  currentToken);	  Option    option    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
146	[BUG]  [BUGGY]  if(token.startsWith( "- ")&&  token.startsWith( "--))  {  token  =  token.substring(0,  token.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  if(token.startsWith( "- ")&&  token.startsWith( "--))  {  token  =  token.substring(0,  token.length()  -  1);  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	if(token.startsWith( "- ")&&  token.startsWith( "--))  {  token  =  token.substring(0,  token.length()  -  1);  }	  if(token.startsWith(   "-   ")||    token.startsWith(   "--))    {    token    =    token.substring(0,    token.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
147	[BUG]  [BUGGY]  Option  options  =  option.getOption(token,  expectedOpts,  value);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  options  =  option.getOption(token,  expectedOpts,  value);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  options  =  option.getOption(token,  expectedOpts,  value);	  Option    options    =    option.getOption(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
148	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  options.getOption(token):  token;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  option  =  options.hasOption(token)?  options.getOption(token):  token;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  option  =  options.hasOption(token)?  options.getOption(token):  token;	  Option    option    =    options.hasOption(token);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
149	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token)?  options.getOption(token):  null;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isShortOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }        [BUGGY]  Option  option  =  options.hasOption(token)?  options.getOption(token):  null;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  optName  =  pos  ==  -1  ?  token.substring(1)  :  token.substring(1,  pos);  return  options.hasShortOption(optName);  }  [CLASS]  DefaultParser  [METHOD]  isShortOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	308	308	1	replace	Option  option  =  options.hasOption(token)?  options.getOption(token):  null;	  Option    option    =    options.hasOption(token);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
