projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125checkRequiredArgs();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!stopAtNonOption){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!skipParsing){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(currentToken!=null){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.getOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.getOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(currentOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredArgs();}else{cmd=newCommandLine();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.parseOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentToken.parseOption(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parse(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parse(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){CheckRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkProperties();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkProperties();}else{cmd=newCommandLine();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkParsing();}else{cmd=newCommandLine();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(currentToken==null){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null){checkRequiredOptions();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){checkRequiredOptions();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.getOption(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.getOption(currentToken,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,currentOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.getOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!stopAtNonOption){checkRequiredParsing();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!stopAtNonOption){checkProperties();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredParsing();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkParsing();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.getOption(currentToken,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){checkRequiredParsers();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parse(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(currentToken,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parse(arguments);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption&&cmd!=null){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(skipParsing){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.getOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(arguments[currentOption]);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(currentToken!=null){checkRequiredOptions();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,group);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){handleProperties(properties);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){handleRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,group);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(currentToken,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(skipParsing){checkRequiredArgs();}else{cmd=newCommandLine();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOptionGroup(true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOptionGroup(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,arguments);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(arguments,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup(currentOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup(true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getGroup(currentOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getGroup(true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){handleProperties(properties);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125||stopAtNonOption){handleRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){handleProperties();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredArguments();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=optionGroup.parseOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=group.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.getOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(argument,group);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(argument,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(argument,true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(currentOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(arguments);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=optionGroup.parseOption(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.parseOption(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(arguments[currentToken]);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(arguments[0]);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=optionGroup.parse(arguments[currentOption]);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,stopAtNonOption,group);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){thrownewIllegalStateException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption("stopParsing");
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.getOption(currentToken,arguments);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,expectedOpts,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.getOption(currentToken,expectedOpts,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125||stopAtNonOption){checkProperties();}else{cmd=newCommandLine();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125||stopAtNonOption){checkProperties();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(currentToken,arguments);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(currentToken,expectedOpts,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(currentToken,argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(currentOption,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=group.parseOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,currentOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125optionGroup.checkRequiredArgs();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125options.add(cmd);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOptionCmd();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(group);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption||skipParsing){checkParsing();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption&&cmd.length()>0){checkParsing();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption&&cmd!=null){checkParsing();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parse(arguments,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parse(arguments[0]);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parse(arguments,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!stopAtNonOption){checkRequiredOptions();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredOptions();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null){handleProperties(properties);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125||cmd!=null){handleProperties(properties);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null){handleRequiredOptions(properties);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parse(argument,options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,currentOption,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.getOption(currentToken,argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.getOption(argument,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkState();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.getOption(currentOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(argument,options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentToken.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,currentToken,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=group.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(argument,group);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=groups.getOption(argument,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing||stopAtNonOption){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing){checkRequiredOptions();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125parse){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkParsing();}else{cmd.clear();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getParser();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getCurrentOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getArgumentOpts();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=optionGroup.getOption(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(argument,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(argument,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption||cmd!=null){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption&&cmd==null){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,block);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,stopAtNonOption,group);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.getOption(argument,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.getOption(argument,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.getOption(argument,0);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentToken.parse(currentOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parse(arguments[currentToken]);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(currentToken,arguments);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(currentToken,expectedOpts,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(currentToken,argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(currentToken,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parse(argument,group);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parse(argument,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parse(argument,true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null){checkRequiredParsers();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null||cmd.length()==0){checkRequiredParsers();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null||cmd.length()!=0){checkRequiredParsers();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.getParser();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(argument,options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentToken.parseOption(argument,options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentToken.parseOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,group);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentToken.parse(argument,options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentToken.parse(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=stopAtNonOption?CheckRequiredArgs():null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=stopAtNonOption?checkRequiredArgs():null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup(true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.getOption(arguments);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.getOption(currentToken,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkProperties(properties);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption&&cmd!=null){checkProperties();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredOptions();}else{cmd=newCommandLine();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null){checkProperties();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup(defaultToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,currentToken,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){handleSkipParsing();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=group.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){handleRequiredOptions(properties);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(token);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption("cmd");
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){checkProperties();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,currentToken,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOptionGroup(defaultToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,group);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(argument,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption&&cmd.isEnabled(Feature.QUOTE_FIELD_NAMES)){checkParsing();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(skipParsing){checkParsing();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,nextToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(options,group);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption&&options.hasOption(argument)){checkProperties();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption&&cmd!=null){checkRequiredParsing();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.getOption(currentToken,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOption("group");
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOptionGroup(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(currentToken,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.getOption(argument,startAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,stopAtNonOption,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,block);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parse(argument,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=optionGroup.parse(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing){checkRequiredParsers();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing){checkRequiredParser();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(currentOption!=null){checkRequiredOptions();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(currentToken!=null){checkRequiredParsers();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.getArguments();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing){thrownewIllegalArgumentException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getGroup(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption&&cmd!=null){CheckRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){CheckRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null&&cmd.length()>0){checkRequiredParsers();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){checkParsers();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,currentToken,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){handleToken(argument);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)){checkRequiredArgs();}else{cmd=newCommandLine();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125foundOption(true,false){checkRequiredArgs();}else{cmd=newCommandLine();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){checkRequiredArgs();}else{cmd=newCommandLine();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption&&options.hasOption(argument)){checkParsing();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){handleParsing();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,this.stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption||expectedOpts){CheckRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!stopAtNonOption){checkProperties(properties);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,group,currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,group,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null||cmd.length()==0){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(skipParsing){checkParsing();}else{cmd=newCommandLine();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null||cmd.length()==0){checkRequiredOptions();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parse(currentToken,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(options,options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(options,group);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){handleRequiredParsing();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(skipParsing){checkRequiredParsing();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing,group){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing){checkParsing();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,currentToken,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,preferredOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,currentToken,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.parseOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.parseOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentToken=options.parseOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,block);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,group,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,group,currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(group,argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,blockAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parse(arguments,group);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(arguments[currentOption+1]);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getArguments();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getArgument();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){handleToken(cmd);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(argument,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.getOption(argument,group);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing(){checkRequiredArgs();}
